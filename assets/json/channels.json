[
  {
    "_id" : "52f97d3c0db568444400040e",
    "application" : {
      "base" : "http://vimeo.com/api/v2",
      "resources" : [
        {
          "curl" : "curl http://vimeo.com/api/v2/sunnythaper/info.json",
          "authentication" : {
            "required" : "false"
          },
          "path" : "/{username}/info.json",
          "displayName" : "User Info_GET",
          "httpMethod" : "GET",
          "doc" : {
            "t" : "User info. Contains full URLs for the avatar and other user resources."
          },
          "category" : "User Info",
          "url" : "http://vimeo.com/api/v2/{username}/info.json"
        },
        {
          "curl" : "curl http://vimeo.com/api/v2/sunnythaper/videos.json",
          "authentication" : {
            "required" : "false"
          },
          "path" : "/{username}/videos.json",
          "displayName" : "Videos_GET",
          "httpMethod" : "GET",
          "doc" : {
            "t" : "Returns up to 20 videos from a given user, starting with the most recent. The root object is an array."
          },
          "category" : "Videos",
          "url" : "http://vimeo.com/api/v2/{username}/videos.json"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "logo" : "http://octoblu-api-logos.s3.amazonaws.com/color/vimeo.png",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/vimeo.png",
    "name" : "Vimeo",
    "enabled" : true,
    "useCustom" : true,
    "oauth" : {
      "version" : "1.0",
      "key" : "450b10e7d2abf68021beb0c7a584175c93064729",
      "secret" : "dcee7ecfc313c5fb8f7a59498a123c1ff6a9d4d8",
      "accessTokenURL" : "https://vimeo.com/oauth/access_token",
      "requestTokenURL" : "https://vimeo.com/oauth/request_token",
      "authTokenURL" : "https://vimeo.com/oauth/authorize",
      "tokenMethod" : "",
      "scope" : ""
    },
    "type" : "channel:vimeo"
  },
  {
    "_id" : "53126ef041f677811a8ba9b4",
    "__v" : 0,
    "application" : {
      "base" : "http://nodester.com",
      "resources" : [ ]
    },
    "auth_strategy" : "simple",
    "custom_tokens" : [ ],
    "description" : "nodejs paas",
    "documentation" : "http://nodester.com/docs",
    "enabled" : false,
    "logo" : "http://fc01.deviantart.net/images/large/indyart/vector/Rocketeer_WIP.gif",
    "name" : "nodester",
    "owner" : "5d6e9c91-820e-11e3-a399-f5b85b6b9fd0",
    "type" : "channel:nodester"
  },
  {
    "_id" : "53237a18008a7b6623c66e81",
    "owner" : "d31d1861-abb0-11e3-b70b-e5c6606573a1",
    "auth_strategy" : "none",
    "logo" : "blah",
    "name" : "new api",
    "description" : "its cool",
    "documentation" : "blah",
    "enabled" : true,
    "application" : {
      "base" : "blah",
      "resources" : [ ]
    },
    "custom_tokens" : [ ],
    "__v" : 0,
    "type" : "channel:new_api"
  },
  {
    "_id" : "53237a38008a7b6623c66e82",
    "__v" : 0,
    "application" : {
      "base" : "test2",
      "resources" : [ ]
    },
    "auth_strategy" : "none",
    "custom_tokens" : [ ],
    "description" : "blah blah2",
    "documentation" : "test2",
    "enabled" : true,
    "logo" : "test2",
    "name" : "new api2",
    "owner" : "d31d1861-abb0-11e3-b70b-e5c6606573a1",
    "type" : "channel:new_api2"
  },
  {
    "_id" : "53275d4841da719147d9e36a",
    "logo" : "http://media.idownloadblog.com/wp-content/uploads/2013/11/Yahoo-Finance-2.0-for-iOS-app-icon-small.png",
    "name" : "StockPrice",
    "auth_strategy" : "none",
    "description" : "Get YAHOO! Finance stock price",
    "documentation" : "http://developer.yahoo.com/",
    "enabled" : true,
    "useCustom" : true,
    "oauth" : {

    },
    "custom_tokens" : [ ],
    "application" : {
      "base" : "http://download.finance.yahoo.com/",
      "resources" : [
        {
          "params" : [
            {
              "doc" : {
                "t" : "YAHOO! Stock symbol",
                "url" : "http://finance.yahoo.com/lookup"
              },
              "name" : "s",
              "style" : "query",
              "type" : "string",
              "value" : "none",
              "required" : "true"
            },
            {
              "doc" : {
                "t" : "YAHOO! Stock format option",
                "url" : "http://www.gummy-stuff.org/Yahoo-data.htm"
              },
              "name" : "f",
              "style" : "query",
              "type" : "string",
              "value" : "none",
              "required" : "true"
            }
          ],
          "curl" : "curl -s 'http://download.finance.yahoo.com/d/quotes.csv?s=MSFT&f=l1'",
          "path" : "/d/quotes.csv",
          "displayName" : "/d/quotes.csv",
          "doc" : {
            "t" : "YAHOO! Finance Stock price",
            "url" : "http://www.gummy-stuff.org/Yahoo-data.htm"
          },
          "httpMethod" : "GET",
          "url" : "http://download.finance.yahoo.com//d/quotes.csv"
        }
      ]
    },
    "type" : "channel:stock_price"
  },
  {
    "_id" : "532b67e598a9690b58864078",
    "application" : {
      "resources" : [ ]
    },
    "custom_tokens" : [ ],
    "__v" : 0,
    "type" : "channel:"
  },
  {
    "_id" : "532b67ec98a9690b58864079",
    "application" : {
      "resources" : [ ]
    },
    "custom_tokens" : [ ],
    "__v" : 0,
    "type" : "channel:"
  },
  {
    "_id" : "532e2798035334f02fa4ca5c",
    "owner" : "d31d1861-abb0-11e3-b70b-e5c6606573a1",
    "auth_strategy" : "none",
    "logo" : "test",
    "name" : "test",
    "description" : "test",
    "documentation" : "test",
    "enabled" : true,
    "application" : {
      "base" : "zz",
      "resources" : [ ]
    },
    "custom_tokens" : [ ],
    "__v" : 0,
    "type" : "channel:test"
  },
  {
    "_id" : "53a754bc0fb5a6cb083a15fe",
    "owner" : "52e761b0-d9f4-11e3-a065-0b9815260ada",
    "auth_strategy" : "",
    "logo" : "http://localhost:8889/assets/images/octoblu.png",
    "name" : "octoblu-test",
    "description" : "",
    "documentation" : "",
    "enabled" : true,
    "application" : {
      "base" : "",
      "resources" : [ ]
    },
    "custom_tokens" : [ ],
    "__v" : 0,
    "type" : "channel:octoblu_test"
  },
  {
    "_id" : "52f9b382e641dbb25d000001",
    "application" : {
      "base" : "http://ws.spotify.com",
      "resources" : [
        {
          "path" : "/lookup/1/.json",
          "params" : [
            {
              "name" : "uri",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "spotify:album:6G9fHYDCoyEErUkHrFYfs4",
              "required" : "true",
              "doc" : {
                "t" : "A Spotify URI. Either album."
              }
            },
            {
              "name" : "extras",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "trackdetail",
              "required" : "true",
              "doc" : {
                "t" : "A comma-separated list of words that defines the detail level expected in the response. Options: - Track: Returns basic information about all tracks in the album. - Trackdetail: Returns detailed information about all tracks in the album."
              }
            }
          ],
          "doc" : {
            "t" : "Lookup data related to a Spotify album URI.A Spotify URI. Either album.A comma-separated list of words that defines the detail level expected in the response. Options: - Track: Returns basic information about all tracks in the album. - Trackdetail: Returns detailed information about all tracks in the album.",
            "url" : "http://developer.spotify.com/en/metadata-api/lookup/album/"
          },
          "curl" : "curl -X GET  -d 'uri=spotify:album:6G9fHYDCoyEErUkHrFYfs4&extras=trackdetail' http://ws.spotify.com/lookup/1/?uri=spotify:album:{albumId}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Album",
          "displayName" : "Album_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.spotify.com/lookup/1/.json"
        },
        {
          "path" : "/search/1/album.json",
          "doc" : {
            "t" : "Search for Spotify metadata by album.",
            "url" : "http://developer.spotify.com/en/metadata-api/search/album/"
          },
          "curl" : "curl -X GET  http://ws.spotify.com/search/1/album?q={q}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Album",
          "displayName" : "Album_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.spotify.com/search/1/album.json"
        },
        {
          "path" : "/lookup/1/.json",
          "params" : [
            {
              "name" : "uri",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "spotify:artist:4YrKBkKSVeqDamzBPWVnSJ",
              "required" : "true",
              "doc" : {
                "t" : "A Spotify URI. Either artist."
              }
            },
            {
              "name" : "extras",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "albumdetail",
              "required" : "true",
              "doc" : {
                "t" : "A comma-separated list of words that defines the detail level expected in the response. Options: - Album: Returns basic information about all the albums the artist is featured in. - Albumdetail: Returns detailed information about all the albums the artist is featured in."
              }
            }
          ],
          "doc" : {
            "t" : "Lookup data related to a Spotify artist URI.A Spotify URI. Either artist.A comma-separated list of words that defines the detail level expected in the response. Options: - Album: Returns basic information about all the albums the artist is featured in. - Albumdetail: Returns detailed information about all the albums the artist is featured in.",
            "url" : "http://developer.spotify.com/en/metadata-api/lookup/artist/"
          },
          "curl" : "curl -X GET  -d 'uri=spotify:artist:4YrKBkKSVeqDamzBPWVnSJ&extras=albumdetail' http://ws.spotify.com/lookup/1/?uri=spotify:artist:{artistId}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.spotify.com/lookup/1/.json"
        },
        {
          "path" : "/search/1/artist.json",
          "doc" : {
            "t" : "Search for Spotify metadata by artist.",
            "url" : "http://developer.spotify.com/en/metadata-api/search/artist/"
          },
          "curl" : "curl -X GET  http://ws.spotify.com/search/1/artist?q={q}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.spotify.com/search/1/artist.json"
        },
        {
          "path" : "/lookup/1/.json",
          "params" : [
            {
              "name" : "uri",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "spotify:track:6NmXV4o6bmp704aPGyTVVG",
              "required" : "true",
              "doc" : {
                "t" : "A Spotify URI. Either track."
              }
            }
          ],
          "doc" : {
            "t" : "Lookup data related to a Spotify track URI.A Spotify URI. Either track.",
            "url" : "http://developer.spotify.com/en/metadata-api/lookup/track/"
          },
          "curl" : "curl -X GET  -d 'uri=spotify:track:6NmXV4o6bmp704aPGyTVVG' http://ws.spotify.com/lookup/1/?uri=spotify:track:{trackId}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.spotify.com/lookup/1/.json"
        },
        {
          "path" : "/search/1/track.json",
          "doc" : {
            "t" : "Search for Spotify metadata by track.",
            "url" : "http://developer.spotify.com/en/metadata-api/search/track/"
          },
          "curl" : "curl -X GET  http://ws.spotify.com/search/1/track?q={q}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.spotify.com/search/1/track.json"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "logo" : "https://lh3.ggpht.com/eeTyBW3zE2RE63KcXwHdaC1eM6oL70vArWu_JAQ-uuDBujPvB3XUocy2nXMj42eXG0nd=w300",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/spotify.png",
    "name" : "Spotify",
    "enabled" : true,
    "type" : "channel:spotify",
    "useCustom" : true,
    "oauth" : {
      "clientId" : "ce58f538d0c84a3e9a449661c7109d1f",
      "secret" : "930959d63d2148d0b9a8574478f89b27",
      "accessTokenPath" : "/api/token",
      "authTokenURL" : "https://accounts.spotify.com/authorize",
      "baseURL" : "https://accounts.spotify.com",
      "tokenMethod" : "access_token_query",
      "version" : "2.0"
    }
  },
  {
    "_id" : "52f97c5ba990930c8c0003ca",
    "application" : {
      "base" : "https://api.linkedin.com/v1",
      "resources" : [
        {
          "httpMethod" : "GET",
          "displayName" : "1. Profile_GET",
          "category" : "1. Profile",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/id={id}",
          "doc" : {
            "t" : "The Profile API returns a member's LinkedIn profile. If you know the member token of the profile you want to display, you can use it as the key value for this API call. You should include id= to indicate that you are using a member token. Requesting by member token only returns a profile from the logged in person's three degree network and doesn't return any out-of-network profiles. You cannot use a member token to get a public profile. To see just a thumbnail version of the profile, do not include anything after the profile key value. To select your own fields, use the field selector notation- :(field1,field2,field3...). When using field selectors, all fields must be at the same level of depth in the XML",
            "url" : "http://developer.linkedin.com/docs/DOC-1002"
          },
          "path" : "/people/id={id}",
          "url" : "https://api.linkedin.com/v1/people/id={id}"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "1. Profile_GET",
          "category" : "1. Profile",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/~",
          "doc" : {
            "t" : "The Profile API returns a member's LinkedIn profile. Use the tilde character to indicate that you want the profile of the current user. The access token will be used to determine the profile to return.",
            "url" : "http://developer.linkedin.com/docs/DOC-1002"
          },
          "path" : "/people/~",
          "url" : "https://api.linkedin.com/v1/people/~"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "1. Profile_GET",
          "category" : "1. Profile",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/url={public-profile-url}",
          "doc" : {
            "t" : "The Profile API returns a member's LinkedIn profile. Using the Public Profile URL will return a profile from inside or outside the logged in member's three degree network. The Public Profile URL must be URL escaped.The URL to retrieve the standard and public profiles are the same. To return a public profile, simply add :public to the end of the profile. Without that, the call will return a standard profile.",
            "url" : "http://developer.linkedin.com/docs/DOC-1002"
          },
          "path" : "/people/url",
          "url" : "https://api.linkedin.com/v1/people/url"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "2. People Search_GET",
          "category" : "2. People Search",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people-search",
          "doc" : {
            "t" : "The People Search API returns information about people.",
            "url" : "http://developer.linkedin.com/docs/DOC-1191"
          },
          "path" : "/people-search",
          "url" : "https://api.linkedin.com/v1/people-search"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "3. Connections_GET",
          "category" : "3. Connections",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/url={public-profile-url}/connections",
          "doc" : {
            "t" : "The Connections API returns a list of connections for a user who has granted access to his/her account. You can control the fields you want to have returned and the number of connections returned for each call.You can use any of three ways of identifying the user: ~, member ID, or public profile URL.If you don't specify any parameters in the URL, you get full details of all connections.",
            "url" : "http://developer.linkedin.com/docs/DOC-1004"
          },
          "path" : "/people/url/connections",
          "url" : "https://api.linkedin.com/v1/people/url/connections"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "3. Connections_GET",
          "category" : "3. Connections",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/~/connections",
          "doc" : {
            "t" : "The Connections API returns a list of connections for a user who has granted access to his/her account. You can control the fields you want to have returned and the number of connections returned for each call.You can use any of three ways of identifying the user: ~, member ID, or public profile URL.If you don't specify any parameters in the URL, you get full details of all connections. If your application iteratively polls to find the latest set of a member's connections, please make a call like: http://api.linkedin.com/v1/people/~/connections?modified=new&modified-since=1267401600000",
            "url" : "http://developer.linkedin.com/docs/DOC-1004"
          },
          "path" : "/people/~/connections",
          "url" : "https://api.linkedin.com/v1/people/~/connections"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "3. Connections_GET",
          "category" : "3. Connections",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/id={id}/connections",
          "doc" : {
            "t" : "The Connections API returns a list of connections for a user who has granted access to his/her account. You can control the fields you want to have returned and the number of connections returned for each call.You can use any of three ways of identifying the user: ~, member ID, or public profile URL.If you don't specify any parameters in the URL, you get full details of all connections.",
            "url" : "http://developer.linkedin.com/docs/DOC-1004"
          },
          "path" : "/people/id={id}/connections",
          "url" : "https://api.linkedin.com/v1/people/id={id}/connections"
        },
        {
          "httpMethod" : "POST",
          "displayName" : "4. Mailbox_POST",
          "category" : "4. Mailbox",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X POST -u 'username:password' -d '<mailbox-item> <recipients> <recipient> <person path='/people/~'/> </recipient> <recipient> <person path=\"/people/abcdefg\" /> </recipient> </recipients> <subject>Congratulations on your new position.</subject> <body>You're certainly the best person for the job!</body> </mailbox-item>' http://api.linkedin.com/v1/people/~/mailbox",
          "doc" : {
            "t" : "LinkedIn offers a simple API for sending messages via LinkedIn between two or more individuals connected to the member sending the message. A 201 Created HTTP status indicates successful creation of a message.Message will be represented as XML POST Body, given a sample.",
            "url" : "http://developer.linkedin.com/docs/DOC-1044"
          },
          "path" : "/people/~/mailbox",
          "url" : "https://api.linkedin.com/v1/people/~/mailbox"
        },
        {
          "httpMethod" : "POST",
          "displayName" : "4. Mailbox_POST",
          "category" : "4. Mailbox",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X POST -u 'username:password' -d '<mailbox-item> <recipients> <recipient> <person path=\"/people/email=a_user@domain.com\"> <first-name>Richard</first-name> <last-name>Brautigan</last-name> </person> </recipient> </recipients> <subject>Invitation to Connect</subject> <body>Please join my professional network on LinkedIn.</body> <item-content> <invitation-request> <connect-type>friend</connect-type> </invitation-request> </item-content> </mailbox-item>' http://api.linkedin.com/v1/people/~/mailbox",
          "doc" : {
            "t" : "The Invitation API allows your users to invite people they find in your application to their LinkedIn network. To send an invitation, you POST the invitation XML. You have control over the message subject and text and can invite people by email or member id. Sample XML is given.",
            "url" : "http://developer.linkedin.com/docs/DOC-1012"
          },
          "path" : "/people/~/mailbox",
          "url" : "https://api.linkedin.com/v1/people/~/mailbox"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "5. Network Updates_GET",
          "category" : "5. Network Updates",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/~/network/updates",
          "doc" : {
            "t" : "The Get Network Updates API returns the users network updates, which is the LinkedIn term for the user's feed. This call returns most of what shows up in the middle column of the LinkedIn.com home page, either for the member or the member's connections.Returns a feed of event items. Each item contains a core set of information, such as when it occured, what type of event took place, and whether you can comment and like the item.However, the format of the event's information can vary widely from type to type. Information about changing a profile is not similar to the status published by an application. Each event type needs to be parsed differently.We may perodically add new event types to this feed, or deprecate old ones.",
            "url" : "http://developer.linkedin.com/docs/DOC-1006"
          },
          "path" : "/people/~/network/updates",
          "url" : "https://api.linkedin.com/v1/people/~/network/updates"
        },
        {
          "httpMethod" : "POST",
          "displayName" : "5. Network Updates_POST",
          "category" : "5. Network Updates",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X POST -u 'username:password' -d '<activity locale=\"en_US\"> <content-type>linkedin-html</content-type> <body>&lt;a href=&quot;http://www.linkedin.com/profile?viewProfile=&amp;key=ABCDEFG&quot;&gt;Richard Brautigan&lt;/a&gt; is reading about &lt;a href=&quot;http://www.tigers.com&quot;&gt;Tigers&lt;/a&gt;http://www.tigers.com&gt;Tigers&lt;/a&gt;.</body> </activity>' http://api.linkedin.com/v1/people/~/person-activities",
          "doc" : {
            "t" : "The Post Network Update API allows you to send in an activity from your site to be posted to the first degree connections of the LinkedIn user. Network updates are the LinkedIn term for news feed activities. Once a network update is posted, it cannot be removed or deleted. A successful response will be indicated by a 201 Created HTTP status code and an empty response body. Invitation should be of POST XML Body, given a sample.",
            "url" : "http://developer.linkedin.com/docs/DOC-1009"
          },
          "path" : "/people/~/person-activities",
          "url" : "https://api.linkedin.com/v1/people/~/person-activities"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "6. Comments, Likes and Shares_GET",
          "category" : "6. Comments, Likes and Shares",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/~/network?type=SHAR",
          "doc" : {
            "t" : "To retrieve a stream of shares for the member or their member first degree network, use the Get Network Updates API resource requesting the SHAR update type. For the specified member also use a query parameter of scope=self.Omit the scope for their first degree network.",
            "url" : "http://developer.linkedin.com/docs/DOC-1212"
          },
          "path" : "/people/~/network",
          "url" : "https://api.linkedin.com/v1/people/~/network"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "6. Comments, Likes and Shares_GET",
          "category" : "6. Comments, Likes and Shares",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/~/network/updates/key={NETWORK-UPDATE-KEY}/update-comments",
          "doc" : {
            "t" : "Some Network Updates may have comments attached to them. These kind of updates are called commentable network updates. They are indicated by the presence of the string \"true\" within the node of update/is-commentable. By default, a network update containing more than 5 comments will only return you the most recent five. This API is used to retrieve all comments for a given network update,where NETWORK UPDATE KEY is a update/update-key representing an update.",
            "url" : "http://developer.linkedin.com/docs/DOC-1043"
          },
          "path" : "/people/~/network/updates/update-comments",
          "url" : "https://api.linkedin.com/v1/people/~/network/updates/update-comments"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "6. Comments, Likes and Shares_GET",
          "category" : "6. Comments, Likes and Shares",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/~/network/updates/key={NETWORK-UPDATE-KEY}/likes",
          "doc" : {
            "t" : "Some Network Updates may have likes attached to them. These kind of updates are called likeable network updates. They are indicated by the presence of the string \"true\" within the node of update/is-likeable. This API is used to retrive the complete list of people who liked an update, where NETWORK UPDATE KEY is a update/update-key representing an update.",
            "url" : "http://developer.linkedin.com/docs/DOC-1043"
          },
          "path" : "/people/~/network/updates/likes",
          "url" : "https://api.linkedin.com/v1/people/~/network/updates/likes"
        },
        {
          "httpMethod" : "POST",
          "displayName" : "6. Comments, Likes and Shares_POST",
          "category" : "6. Comments, Likes and Shares",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X POST -u 'username:password' -d '<update-comment> <comment>Save me a trout, Richard!</comment> </update-comment>' http://api.linkedin.com/v1/people/~/network/updates/key={NETWORK-UPDATE-KEY}/update-comments",
          "doc" : {
            "t" : "When you want to post a new comment to an existing update,1. Ensure the node update/is-commentable in Network Update Comment XML POST Body is set to true 2. Take the update/update-key from an existing update and POST to the URL structure. A successful comment POST will return a 201 Content Created status code. Comments have a maximum length of 700 characters.",
            "url" : "http://developer.linkedin.com/docs/DOC-1043"
          },
          "path" : "/people/~/network/updates/update-comments",
          "url" : "https://api.linkedin.com/v1/people/~/network/updates/update-comments"
        },
        {
          "httpMethod" : "PUT",
          "displayName" : "6. Comments, Likes and Shares_PUT",
          "category" : "6. Comments, Likes and Shares",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X PUT -u 'username:password' -d '<is-liked>true</is-liked>' http://api.linkedin.com/v1/people/~/network/updates/key={NETWORK-UPDATE-KEY}/is-liked",
          "doc" : {
            "t" : "When you want to Like or Unlike an existing update, 1. Ensure the node update/is-likeable in Network Update Like XML POST Body is set to true 2. Use the same update/update-key and PUT to the URL. A successful comment PUT will return a 201 Content Created status code.",
            "url" : "http://developer.linkedin.com/docs/DOC-1043"
          },
          "path" : "/people/~/network/updates/is-liked",
          "url" : "https://api.linkedin.com/v1/people/~/network/updates/is-liked"
        },
        {
          "httpMethod" : "POST",
          "displayName" : "6. Comments, Likes and Shares_POST",
          "category" : "6. Comments, Likes and Shares",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X POST -u 'username:password' -d '<share> <comment>83% of employers will use social media to hire: 78% LinkedIn, 55% Facebook, 45% Twitter [SF Biz Times] http://bit.ly/cCpeOD</comment> <content> <title>Survey: Social networks top hiring tool - San Francisco Business Times</title> <submitted-url>http://sanfrancisco.bizjournals.com/sanfrancisco/stories/2010/06/28/daily34.html</submitted-url> <submitted-image-url>http://images.bizjournals.com/travel/cityscapes/thumbs/sm_sanfrancisco.jpg</submitted-image-url> </content> <visibility> <code>anyone</code> </visibility> </share>' http://api.linkedin.com/v1/people/~/shares",
          "doc" : {
            "t" : "Use the Share API to have a member share content with their network or with all of LinkedIn. This can be a simple short text update, similar to Twitter. Or a URL with a title and optional photo. Or both. You can also forward the shared content to Twitter and reshare another member's share. To add a new share, you markup the content in XML and issue a HTTP POST to this API.To have LinkedIn pass the status message along to a member's tethered Twitter account, if they have one, modify the URL to include a query string of twitter-post=true.Returns 201 Created on success. It will also provide a Location HTTP header with a URL for the created resource. However, at this time, you cannot retrieve the Share from that location. It's there for future compatibility.",
            "url" : "http://developer.linkedin.com/docs/DOC-1212"
          },
          "path" : "/people/~/shares",
          "url" : "https://api.linkedin.com/v1/people/~/shares"
        },
        {
          "httpMethod" : "POST",
          "displayName" : "6. Comments, Likes and Shares_POST",
          "category" : "6. Comments, Likes and Shares",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X POST -u 'username:password' -d '<share> <comment>Check out this story! I can't believe it.</comment> <attribution> <share> <id>s24681357</id> </share> </attribution> <visibility> <code>connections-only</code> </visibility> </share>' http://api.linkedin.com/v1/people/~/shares",
          "doc" : {
            "t" : "When a member does a reshare, they can pass along a previously shared item to their network. This can either be as-is, or they can annotate the share to provide their own thoughts. The process is similar to creating a new share, but you provide an attribution/id value instead of a content block. You can only reshare a share with a content block. If this block is empty, you will get a 400 error saying \"Specified share {s28311617} has no content\". Read Retrieving Share Information for instructions to retrieve these value using the API.Returns 201 Created on success. It will also provide a Location HTTP header with a URL for the created resource. However, at this time, you cannot retrieve the Share from that location. It's there for future compatibility. To reshare, you markup the content in XML and issue a HTTP POST to this API.",
            "url" : "http://developer.linkedin.com/docs/DOC-1212"
          },
          "path" : "/people/~/shares",
          "url" : "https://api.linkedin.com/v1/people/~/shares"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "6. Comments, Likes and Shares_GET",
          "category" : "6. Comments, Likes and Shares",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/~:(current-share)",
          "doc" : {
            "t" : "A particular member's current share is detailed in their Profile API, so you can get a member's current share by requesting this API.Use the ~, id, or public profile URL to identify the user.",
            "url" : "http://developer.linkedin.com/docs/DOC-1212"
          },
          "path" : "/people/~:(current-share)",
          "url" : "https://api.linkedin.com/v1/people/~:(current-share)"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "7. Company_GET",
          "category" : "7. Company",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/companies/1337",
          "doc" : {
            "t" : "Use the Company Profile API to find companies using a company ID, a universal name, or an email domain. You can retrieve data for individual or multiple companies. The API returns a list of companies with matching profiles. Each entry can contain the basic company information available in the company profile (such as company ID, logo, site URL, and more) and handles to additional company content (such as RSS stream or Twitter feed). 2 Legged Authentication works for this call.",
            "url" : "https://developer.linkedin.com/documents/company-lookup-api-and-fields"
          },
          "path" : "/companies/id={id}",
          "url" : "https://api.linkedin.com/v1/companies/id={id}"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "7. Company_GET",
          "category" : "7. Company",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/companies::(162479,universal-name=linkedin)",
          "doc" : {
            "t" : "Use the Company Profile API to find companies using a company ID, a universal name, or an email domain. You can retrieve data for individual or multiple companies. The API returns a list of companies with matching profiles. Each entry can contain the basic company information available in the company profile (such as company ID, logo, site URL, and more) and handles to additional company content (such as RSS stream or Twitter feed).",
            "url" : "https://developer.linkedin.com/documents/company-lookup-api-and-fields"
          },
          "path" : "/companies/bulk",
          "url" : "https://api.linkedin.com/v1/companies/bulk"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "7. Company_GET",
          "category" : "7. Company",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/company-search?keywords=LinkedIn",
          "doc" : {
            "t" : "Use the Company Search API to find companies using keywords, industry, location, or some other criteria. It returns a collection of matching companies. Each entry can contain much of the information available on the company page.",
            "url" : "https://developer.linkedin.com/documents/company-search"
          },
          "path" : "/company-search",
          "url" : "https://api.linkedin.com/v1/company-search"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "7. Company_GET",
          "category" : "7. Company",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/~/following/companies",
          "doc" : {
            "t" : "Retrieve a list of companies the member is following.",
            "url" : "https://developer.linkedin.com/documents/company-follow-and-suggestions"
          },
          "path" : "/people/~/following/companies",
          "url" : "https://api.linkedin.com/v1/people/~/following/companies"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "7. Company_GET",
          "category" : "7. Company",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/~/suggestions/to-follow/companies",
          "doc" : {
            "t" : "Retrieve a list of recommendations for the member to follow.",
            "url" : "https://developer.linkedin.com/documents/company-follow-and-suggestions"
          },
          "path" : "/people/~/suggestions/to-follow/companies",
          "url" : "https://api.linkedin.com/v1/people/~/suggestions/to-follow/companies"
        },
        {
          "httpMethod" : "POST",
          "displayName" : "7. Company_POST",
          "category" : "7. Company",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X POST -u 'username:password' -d '<company> <id>1337</id> </company>' http://api.linkedin.com/v1/people/~/following/companies",
          "doc" : {
            "t" : "Start following a company.",
            "url" : "https://developer.linkedin.com/documents/company-follow-and-suggestions"
          },
          "path" : "/people/~/following/companies",
          "url" : "https://api.linkedin.com/v1/people/~/following/companies"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "7. Company_GET",
          "category" : "7. Company",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/companies?email-domain=linkedin.com",
          "doc" : {
            "t" : "Use the Company Profile API to find companies using a company ID, a universal name, or an email domain. You can retrieve data for individual or multiple companies. The API returns a list of companies with matching profiles. Each entry can contain the basic company information available in the company profile (such as company ID, logo, site URL, and more) and handles to additional company content (such as RSS stream or Twitter feed). 2 Legged Authentication works for this call.",
            "url" : "https://developer.linkedin.com/documents/company-lookup-api-and-fields"
          },
          "path" : "/companies/email-domain",
          "url" : "https://api.linkedin.com/v1/companies/email-domain"
        },
        {
          "httpMethod" : "PUT",
          "displayName" : "8. Groups_PUT",
          "category" : "8. Groups",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X PUT -u 'username:password' -d '<is-liked>true</is-liked>' http://api.linkedin.com/v1/posts/g-4058745-S-67686308/relation-to-viewer/is-liked",
          "doc" : {
            "t" : "Like a post in a group (this is the first post in the Groups API Test Group.)",
            "url" : "https://developer.linkedin.com/documents/groups-api"
          },
          "path" : "/posts/{id}/relation-to-viewer/is-liked",
          "url" : "https://api.linkedin.com/v1/posts/{id}/relation-to-viewer/is-liked"
        },
        {
          "httpMethod" : "POST",
          "displayName" : "8. Groups_POST",
          "category" : "8. Groups",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X POST -u 'username:password' -d '<comment> <text>This is a comment on the post from the Apigee Console.</text> </comment>' http://api.linkedin.com/v1/posts/g-4058745-S-67686308/comments",
          "doc" : {
            "t" : "Comment on a post in a group (this is the first post in the Groups API Test Group.)",
            "url" : "https://developer.linkedin.com/documents/groups-api"
          },
          "path" : "/posts/{id}/comments",
          "url" : "https://api.linkedin.com/v1/posts/{id}/comments"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "8. Groups_GET",
          "category" : "8. Groups",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/~/group-memberships",
          "doc" : {
            "t" : "Get groups the member belongs to.",
            "url" : "https://developer.linkedin.com/documents/groups-api"
          },
          "path" : "/people/~/group-memberships",
          "url" : "https://api.linkedin.com/v1/people/~/group-memberships"
        },
        {
          "httpMethod" : "PUT",
          "displayName" : "8. Groups_PUT",
          "category" : "8. Groups",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X PUT -u 'username:password' -d '<group-membership> <membership-state> <code>member</code> </membership-state> </group-membership>' http://api.linkedin.com/v1/people/~/group-memberships/4058745",
          "doc" : {
            "t" : "Join a group - this is the test group for people using the Groups API. Joining it will make the other calls work.",
            "url" : "https://developer.linkedin.com/documents/groups-api"
          },
          "path" : "/people/~/group-memberships/{id}",
          "url" : "https://api.linkedin.com/v1/people/~/group-memberships/{id}"
        },
        {
          "httpMethod" : "DELETE",
          "displayName" : "8. Groups_DELETE",
          "category" : "8. Groups",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://api.linkedin.com/v1/people/~/group-memberships/4058745",
          "doc" : {
            "t" : "Leave the API Groups Test Group.",
            "url" : "https://developer.linkedin.com/documents/groups-api"
          },
          "path" : "/people/~/group-memberships/{id}",
          "url" : "https://api.linkedin.com/v1/people/~/group-memberships/{id}"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "8. Groups_GET",
          "category" : "8. Groups",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/~/suggestions/groups",
          "doc" : {
            "t" : "Get suggested groups for the member.",
            "url" : "https://developer.linkedin.com/documents/groups-api"
          },
          "path" : "/people/~/suggestions/groups",
          "url" : "https://api.linkedin.com/v1/people/~/suggestions/groups"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "8. Groups_GET",
          "category" : "8. Groups",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/~/group-memberships/4058745:(show-group-logo-in-profile,contact-email,email-digest-frequency,email-announcements-from-managers,allow-messages-from-members,email-for-every-new-post)",
          "doc" : {
            "t" : "Get groups the member belongs to.",
            "url" : "https://developer.linkedin.com/documents/groups-api"
          },
          "path" : "/people/~/group-memberships/{id}:{settings}",
          "url" : "https://api.linkedin.com/v1/people/~/group-memberships/{id}:{settings}"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "8. Groups_GET",
          "category" : "8. Groups",
          "authentication" : {
            "required" : "false"
          },
          "curl" : "curl -X GET  http://api.linkedin.com/v1/groups/4058745/posts:(creation-timestamp,title,summary,creator:(first-name,last-name,picture-url,headline),likes,attachment:(image-url,content-domain,content-url,title,summary),relation-to-viewer)",
          "doc" : {
            "t" : "Get posts for this group. 2 Legged Authentication works for this call when looking at open groups.",
            "url" : "https://developer.linkedin.com/documents/groups-api"
          },
          "path" : "/groups/{id}/posts",
          "url" : "https://api.linkedin.com/v1/groups/{id}/posts"
        },
        {
          "httpMethod" : "POST",
          "displayName" : "8. Groups_POST",
          "category" : "8. Groups",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X POST -u 'username:password' -d '<post> <title>Posting from the Apigee Console</title> <summary>This post was made from the Apigee console at http://developer.linkedin.com/rest-console</summary> </post>' http://api.linkedin.com/v1/groups/4058745/posts",
          "doc" : {
            "t" : "Create a post in a group.",
            "url" : "https://developer.linkedin.com/documents/groups-api"
          },
          "path" : "/groups/{id}/posts",
          "url" : "https://api.linkedin.com/v1/groups/{id}/posts"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "9. Jobs_GET",
          "category" : "9. Jobs",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/job-search?distance=10",
          "doc" : {
            "t" : "Search for jobs - by default it searches for jobs near the logged in member. Other parameters can be found on the job search documentation page on the developer portal.",
            "url" : "https://developer.linkedin.com/documents/job-search-api"
          },
          "path" : "/job-search",
          "url" : "https://api.linkedin.com/v1/job-search"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "9. Jobs_GET",
          "category" : "9. Jobs",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/people/~/suggestions/job-suggestions",
          "doc" : {
            "t" : "Get recommended jobs for this member.",
            "url" : "https://developer.linkedin.com/documents/job-bookmarks-and-suggestions"
          },
          "path" : "/people/~/suggestions/job-suggestions",
          "url" : "https://api.linkedin.com/v1/people/~/suggestions/job-suggestions"
        },
        {
          "httpMethod" : "GET",
          "displayName" : "9. Jobs_GET",
          "category" : "9. Jobs",
          "authentication" : {
            "required" : "true"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.linkedin.com/v1/jobs/{JOB-ID}",
          "doc" : {
            "t" : "Retrieve information about a specific job. You need to input the ID for the job in the URL for this to work. Use the job search or recommended jobs calls above to get a job ID to use for this call.",
            "url" : "https://developer.linkedin.com/documents/job-lookup-api-and-fields"
          },
          "path" : "/jobs/{id}",
          "url" : "https://api.linkedin.com/v1/jobs/{id}"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "logo" : "http://www.ekaterinawalter.com/wp-content/uploads/2013/07/linkedinblog.png",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/linkedin.png",
    "name" : "LinkedIn",
    "enabled" : true,
    "oauth" : {
      "isManual" : true,
      "version" : "2.0",
      "clientId" : "75athujre0gp76",
      "secret" : "hwApG57HKsQrBYAL",
      "baseURL" : "https://www.linkedin.com/uas",
      "accessTokenURL" : "https://api.linkedin.com/uas/oauth2/accessToken",
      "requestTokenURL" : "https://api.linkedin.com/uas/oauth2/requestToken",
      "authTokenURL" : "https://www.linkedin.com/uas/oauth2/authorization",
      "tokenMethod" : "",
      "authTokenPath" : "/uas/oauth2/authorization",
      "accessTokenIncludeClientInfo" : true,
      "grant_type" : "authorization_code",
      "scope" : "",
      "protocol" : "https",
      "host" : "www.linkedin.com",
      "passTokenInQuery" : true,
      "tokenQueryParam" : "oauth2_access_token"
    },
    "useCustom" : true,
    "type" : "channel:linked_in"
  },
  {
    "_id" : "52f97e4366f76866b600051d",
    "application" : {
      "base" : "https://api.tumblr.com/v2",
      "resources" : [
        {
          "path" : "/blog/{base-hostname}/info",
          "doc" : {
            "t" : "This method returns general information about the blog, such as the title, number of posts, and other high-level data.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#blog-info"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.tumblr.com/v2/blog/{base-hostname}/info",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_GET",
          "httpMethod" : "GET",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/info"
        },
        {
          "path" : "/blog/{base-hostname}/avatar/{size}",
          "doc" : {
            "t" : "Retrieves a blog's avatar in one of 9 different sizes.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#blog-avatar"
          },
          "curl" : "curl -X GET  http://api.tumblr.com/v2/blog/{base-hostname}/avatar/{size}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Blog",
          "displayName" : "Blog_GET",
          "httpMethod" : "GET",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/avatar/{size}"
        },
        {
          "path" : "/blog/{base-hostname}/followers",
          "params" : [
            {
              "name" : "limit",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "default" : "20",
              "required" : "true",
              "doc" : {
                "t" : "The number of results to return: 1–20, inclusive"
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "default" : "0",
              "required" : "true",
              "doc" : {
                "t" : "Result to start at."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves a blog's followers. The number of results to return: 1–20, inclusive Result to start at.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#blog-followers"
          },
          "curl" : "curl -X GET -u 'username:password' -d 'limit=20&offset=0' http://api.tumblr.com/v2/blog/{base-hostname}/followers",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_GET",
          "httpMethod" : "GET",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/followers"
        },
        {
          "path" : "/blog/{base-hostname}/posts/{type}",
          "params" : [
            {
              "name" : "id",
              "type" : "xsd:integer",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "A specific post ID. Returns the single post specified or (if not found) a 404 error."
              }
            },
            {
              "name" : "tag",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the response to posts with the specified tag"
              }
            },
            {
              "name" : "limit",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "default" : "20",
              "required" : "true",
              "doc" : {
                "t" : "The number of posts to return: 1–20, inclusive"
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "default" : "0",
              "required" : "true",
              "doc" : {
                "t" : "Post number to start at."
              }
            },
            {
              "name" : "reblog_info",
              "type" : "xsd:boolean",
              "style" : "query",
              "default" : "false",
              "required" : "true",
              "doc" : {
                "t" : "Indicates whether to return reblog information (specify true or false). Returns the various reblogged_ fields."
              }
            },
            {
              "name" : "notes_info",
              "type" : "xsd:boolean",
              "style" : "query",
              "default" : "false",
              "required" : "true",
              "doc" : {
                "t" : "Indicates whether to return notes information (specify true or false). Returns note count and note metadata."
              }
            },
            {
              "name" : "format",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Specifies the post format to return, other than HTML. Plain text, no HTMLAs entered by the user (no post-processing); if the user writes in Markdown, the Markdown will be returned rather than HTML"
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves published posts. A specific post ID. Returns the single post specified or (if not found) a 404 error. Limits the response to posts with the specified tag The number of posts to return: 1–20, inclusive Post number to start at. Indicates whether to return reblog information (specify true or false). Returns the various reblogged_ fields. Indicates whether to return notes information (specify true or false). Returns note count and note metadata. Specifies the post format to return, other than HTML. Plain text, no HTMLAs entered by the user (no post-processing); if the user writes in Markdown, the Markdown will be returned rather than HTML",
            "url" : "http://www.tumblr.com/docs/en/api/v2#posts"
          },
          "curl" : "curl -X GET -u 'username:password' -d 'limit=20&offset=0&reblog_info=false&notes_info=false' http://api.tumblr.com/v2/blog/{base-hostname}/posts/{type}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_GET",
          "httpMethod" : "GET",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/posts/{type}"
        },
        {
          "path" : "/blog/{base-hostname}/posts/queue",
          "doc" : {
            "t" : "Retrieves queued posts.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#blog-queue"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.tumblr.com/v2/blog/{base-hostname}/posts/queue",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_GET",
          "httpMethod" : "GET",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/posts/queue"
        },
        {
          "path" : "/blog/{base-hostname}/posts/draft",
          "doc" : {
            "t" : "Retrieves draft posts.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#blog-drafts"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.tumblr.com/v2/blog/{base-hostname}/posts/drafts",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_GET",
          "httpMethod" : "GET",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/posts/draft"
        },
        {
          "path" : "/blog/{base-hostname}/posts/submission",
          "doc" : {
            "t" : "Retrieves submission posts.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#blog-submissions"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.tumblr.com/v2/blog/{base-hostname}/posts/submission",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_GET",
          "httpMethod" : "GET",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/posts/submission"
        },
        {
          "path" : "/blog/{base-hostname}/post",
          "params" : [
            {
              "name" : "type",
              "style" : "query",
              "default" : "text",
              "required" : "true",
              "doc" : {
                "t" : "The type of post to create."
              }
            },
            {
              "name" : "tags",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Comma-separated tags for this post."
              }
            },
            {
              "name" : "tweet",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet"
              }
            },
            {
              "name" : "date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The GMT date and time of the post, as a string. Default is the date and time of the POST request."
              }
            },
            {
              "name" : "markdown",
              "type" : "xsd:boolean",
              "style" : "query",
              "default" : "false",
              "required" : "true",
              "doc" : {
                "t" : "Indicates whether the post uses markdown syntax."
              }
            },
            {
              "name" : "title",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The optional title of the post. HTML entities must be escaped."
              }
            },
            {
              "name" : "body",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The full post body, HTML allowed."
              }
            }
          ],
          "doc" : {
            "t" : "Creates a new text blog post. The type of post to create. Comma-separated tags for this post. Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet The GMT date and time of the post, as a string. Default is the date and time of the POST request. Indicates whether the post uses markdown syntax. The optional title of the post. HTML entities must be escaped. The full post body, HTML allowed.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#posting"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'type=text&markdown=false' http://api.tumblr.com/v2/blog/{base-hostname}/post",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/post"
        },
        {
          "path" : "/blog/{base-hostname}/post",
          "params" : [
            {
              "name" : "type",
              "style" : "query",
              "default" : "photo",
              "required" : "true",
              "doc" : {
                "t" : "The type of post to create."
              }
            },
            {
              "name" : "tags",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Comma-separated tags for this post."
              }
            },
            {
              "name" : "tweet",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet"
              }
            },
            {
              "name" : "date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The GMT date and time of the post, as a string. Default is the date and time of the POST request."
              }
            },
            {
              "name" : "markdown",
              "type" : "xsd:boolean",
              "style" : "query",
              "default" : "false",
              "required" : "true",
              "doc" : {
                "t" : "Indicates whether the post uses markdown syntax."
              }
            },
            {
              "name" : "caption",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The user-supplied caption. HTML allowed."
              }
            },
            {
              "name" : "link",
              "type" : "xsd:anyURI",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The \"click-through URL\" for the photo."
              }
            },
            {
              "name" : "source",
              "type" : "xsd:anyURI",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The photo source URL. Either the source or data parameter is required."
              }
            },
            {
              "name" : "data",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "One or more image files (as an array) (submit multiple times to create a slide show) Either the source or data parameter is required."
              }
            }
          ],
          "doc" : {
            "t" : "Creates a new photo blog post. The type of post to create. Comma-separated tags for this post. Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet The GMT date and time of the post, as a string. Default is the date and time of the POST request. Indicates whether the post uses markdown syntax. The user-supplied caption. HTML allowed. The \"click-through URL\" for the photo. The photo source URL. Either the source or data parameter is required. One or more image files (as an array) (submit multiple times to create a slide show) Either the source or data parameter is required.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#posting"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'type=photo&markdown=false' http://api.tumblr.com/v2/blog/{base-hostname}/post",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/post"
        },
        {
          "path" : "/blog/{base-hostname}/post",
          "params" : [
            {
              "name" : "type",
              "style" : "query",
              "default" : "quote",
              "required" : "true",
              "doc" : {
                "t" : "The type of post to create."
              }
            },
            {
              "name" : "tags",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Comma-separated tags for this post."
              }
            },
            {
              "name" : "tweet",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet"
              }
            },
            {
              "name" : "date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The GMT date and time of the post, as a string. Default is the date and time of the POST request."
              }
            },
            {
              "name" : "markdown",
              "type" : "xsd:boolean",
              "style" : "query",
              "default" : "false",
              "required" : "true",
              "doc" : {
                "t" : "Indicates whether the post uses markdown syntax."
              }
            },
            {
              "name" : "quote",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The full text of the quote. HTML entities must be escaped."
              }
            },
            {
              "name" : "source",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Cited source. HTML allowed."
              }
            }
          ],
          "doc" : {
            "t" : "Creates a new quote blog post. The type of post to create. Comma-separated tags for this post. Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet The GMT date and time of the post, as a string. Default is the date and time of the POST request. Indicates whether the post uses markdown syntax. The full text of the quote. HTML entities must be escaped. Cited source. HTML allowed.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#posting"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'type=quote&markdown=false' http://api.tumblr.com/v2/blog/{base-hostname}/post",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/post"
        },
        {
          "path" : "/blog/{base-hostname}/post",
          "params" : [
            {
              "name" : "type",
              "style" : "query",
              "default" : "link",
              "required" : "true",
              "doc" : {
                "t" : "The type of post to create."
              }
            },
            {
              "name" : "tags",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Comma-separated tags for this post."
              }
            },
            {
              "name" : "tweet",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet"
              }
            },
            {
              "name" : "date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The GMT date and time of the post, as a string. Default is the date and time of the POST request."
              }
            },
            {
              "name" : "markdown",
              "type" : "xsd:boolean",
              "style" : "query",
              "default" : "false",
              "required" : "true",
              "doc" : {
                "t" : "Indicates whether the post uses markdown syntax."
              }
            },
            {
              "name" : "title",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The title of the page the link points to. HTML entities should be escaped."
              }
            },
            {
              "name" : "url",
              "type" : "xsd:anyURI",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The link."
              }
            },
            {
              "name" : "description",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "A user-supplied description. HTML allowed."
              }
            }
          ],
          "doc" : {
            "t" : "Creates a new link blog post. The type of post to create. Comma-separated tags for this post. Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet The GMT date and time of the post, as a string. Default is the date and time of the POST request. Indicates whether the post uses markdown syntax. The title of the page the link points to. HTML entities should be escaped. The link. A user-supplied description. HTML allowed.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#posting"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'type=link&markdown=false' http://api.tumblr.com/v2/blog/{base-hostname}/post",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/post"
        },
        {
          "path" : "/blog/{base-hostname}/post",
          "params" : [
            {
              "name" : "type",
              "style" : "query",
              "default" : "chat",
              "required" : "true",
              "doc" : {
                "t" : "The type of post to create."
              }
            },
            {
              "name" : "tags",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Comma-separated tags for this post."
              }
            },
            {
              "name" : "tweet",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet"
              }
            },
            {
              "name" : "date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The GMT date and time of the post, as a string. Default is the date and time of the POST request."
              }
            },
            {
              "name" : "markdown",
              "type" : "xsd:boolean",
              "style" : "query",
              "default" : "false",
              "required" : "true",
              "doc" : {
                "t" : "Indicates whether the post uses markdown syntax."
              }
            },
            {
              "name" : "title",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The title of the chat."
              }
            },
            {
              "name" : "conversation",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The text of the conversation/chat, with dialogue labels (no HTML)"
              }
            }
          ],
          "doc" : {
            "t" : "Creates a new chat blog post. The type of post to create. Comma-separated tags for this post. Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet The GMT date and time of the post, as a string. Default is the date and time of the POST request. Indicates whether the post uses markdown syntax. The title of the chat. The text of the conversation/chat, with dialogue labels (no HTML)",
            "url" : "http://www.tumblr.com/docs/en/api/v2#posting"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'type=chat&markdown=false' http://api.tumblr.com/v2/blog/{base-hostname}/post",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/post"
        },
        {
          "path" : "/blog/{base-hostname}/post",
          "params" : [
            {
              "name" : "type",
              "style" : "query",
              "default" : "audio",
              "required" : "true",
              "doc" : {
                "t" : "The type of post to create."
              }
            },
            {
              "name" : "tags",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Comma-separated tags for this post."
              }
            },
            {
              "name" : "tweet",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet"
              }
            },
            {
              "name" : "date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The GMT date and time of the post, as a string. Default is the date and time of the POST request."
              }
            },
            {
              "name" : "markdown",
              "type" : "xsd:boolean",
              "style" : "query",
              "default" : "false",
              "required" : "true",
              "doc" : {
                "t" : "Indicates whether the post uses markdown syntax."
              }
            },
            {
              "name" : "caption",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The user-supplied caption."
              }
            },
            {
              "name" : "external_url",
              "type" : "xsd:anyURI",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The URL of the site that hosts the audio file (not tumblr). Either the external_url or data parameter is required."
              }
            },
            {
              "name" : "data",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The audio file, as URL-encoded binary. Either the external_url or data parameter is required."
              }
            }
          ],
          "doc" : {
            "t" : "Creates a new audio blog post. The type of post to create. Comma-separated tags for this post. Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet The GMT date and time of the post, as a string. Default is the date and time of the POST request. Indicates whether the post uses markdown syntax. The user-supplied caption. The URL of the site that hosts the audio file (not tumblr). Either the external_url or data parameter is required. The audio file, as URL-encoded binary. Either the external_url or data parameter is required.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#posting"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'type=audio&markdown=false' http://api.tumblr.com/v2/blog/{base-hostname}/post",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/post"
        },
        {
          "path" : "/blog/{base-hostname}/post",
          "params" : [
            {
              "name" : "type",
              "style" : "query",
              "default" : "video",
              "required" : "true",
              "doc" : {
                "t" : "The type of post to create."
              }
            },
            {
              "name" : "tags",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Comma-separated tags for this post."
              }
            },
            {
              "name" : "tweet",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet"
              }
            },
            {
              "name" : "date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The GMT date and time of the post, as a string. Default is the date and time of the POST request."
              }
            },
            {
              "name" : "markdown",
              "type" : "xsd:boolean",
              "style" : "query",
              "default" : "false",
              "required" : "true",
              "doc" : {
                "t" : "Indicates whether the post uses markdown syntax."
              }
            },
            {
              "name" : "caption",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The user-supplied caption."
              }
            },
            {
              "name" : "embed",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "HTML embed code for the video. Either the embed or data parameter is required."
              }
            },
            {
              "name" : "data",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "A video file, as URL-encoded binary. Either the embed or data parameter is required."
              }
            }
          ],
          "doc" : {
            "t" : "Creates a new video blog post. The type of post to create. Comma-separated tags for this post. Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet The GMT date and time of the post, as a string. Default is the date and time of the POST request. Indicates whether the post uses markdown syntax. The user-supplied caption. HTML embed code for the video. Either the embed or data parameter is required. A video file, as URL-encoded binary. Either the embed or data parameter is required.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#posting"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'type=video&markdown=false' http://api.tumblr.com/v2/blog/{base-hostname}/post",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/post"
        },
        {
          "path" : "/blog/{base-hostname}/post/edit",
          "params" : [
            {
              "name" : "type",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The post type."
              }
            },
            {
              "name" : "tags",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Comma-separated tags for this post."
              }
            },
            {
              "name" : "tweet",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet"
              }
            },
            {
              "name" : "date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The GMT date and time of the post, as a string. Default is the date and time of the POST request."
              }
            },
            {
              "name" : "markdown",
              "type" : "xsd:boolean",
              "style" : "query",
              "default" : "false",
              "required" : "true",
              "doc" : {
                "t" : "Indicates whether the post uses markdown syntax."
              }
            },
            {
              "name" : "id",
              "type" : "xsd:integer",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The ID of the post to edit."
              }
            }
          ],
          "doc" : {
            "t" : "Edits a blog post. The post type. Comma-separated tags for this post. Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet The GMT date and time of the post, as a string. Default is the date and time of the POST request. Indicates whether the post uses markdown syntax. The ID of the post to edit.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#editing"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'markdown=false' http://api.tumblr.com/v2/blog/{base-hostname}/post/edit",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/post/edit"
        },
        {
          "path" : "/blog/{base-hostname}/post/reblog",
          "params" : [
            {
              "name" : "type",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The post type."
              }
            },
            {
              "name" : "tags",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Comma-separated tags for this post."
              }
            },
            {
              "name" : "tweet",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet"
              }
            },
            {
              "name" : "date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The GMT date and time of the post, as a string. Default is the date and time of the POST request."
              }
            },
            {
              "name" : "markdown",
              "type" : "xsd:boolean",
              "style" : "query",
              "default" : "false",
              "required" : "true",
              "doc" : {
                "t" : "Indicates whether the post uses markdown syntax."
              }
            },
            {
              "name" : "id",
              "type" : "xsd:integer",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The ID of the reblogged post on tumblelog. Default is the next available ID."
              }
            },
            {
              "name" : "reblog_key",
              "type" : "xsd:integer",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The reblog key for the reblogged post – get the reblog key with a /posts request"
              }
            },
            {
              "name" : "comment",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "A comment added to the reblogged post."
              }
            }
          ],
          "doc" : {
            "t" : "Reblogs a post. The post type. Comma-separated tags for this post. Manages the autotweet (if enabled) for this post: set to off for no tweet, or enter text to override the default tweet The GMT date and time of the post, as a string. Default is the date and time of the POST request. Indicates whether the post uses markdown syntax. The ID of the reblogged post on tumblelog. Default is the next available ID. The reblog key for the reblogged post – get the reblog key with a /posts request A comment added to the reblogged post.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#reblogging"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'markdown=false' http://api.tumblr.com/v2/blog/{base-hostname}/post/reblog",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/post/reblog"
        },
        {
          "path" : "/blog/{base-hostname}/post/delete",
          "params" : [
            {
              "name" : "id",
              "type" : "xsd:integer",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The ID of the post to delete."
              }
            }
          ],
          "doc" : {
            "t" : "Deletes a post. The ID of the post to delete.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#deleting-posts"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.tumblr.com/v2/blog/{base-hostname}/post/delete",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Blog",
          "displayName" : "Blog_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tumblr.com/v2/blog/{base-hostname}/post/delete"
        },
        {
          "path" : "/user/dashboard",
          "params" : [
            {
              "name" : "limit",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "default" : "20",
              "required" : "true",
              "doc" : {
                "t" : "The number of results to return: 1–20, inclusive"
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "default" : "0",
              "required" : "true",
              "doc" : {
                "t" : "Post number to start at."
              }
            },
            {
              "name" : "type",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The type of post to return."
              }
            },
            {
              "name" : "since_id",
              "type" : "xsd:integer",
              "style" : "query",
              "default" : "0",
              "required" : "true",
              "doc" : {
                "t" : "Return posts that have appeared after this ID. Use this parameter to page through the results: first get a set of posts, and then get posts since the last ID of the previous set."
              }
            }
          ],
          "doc" : {
            "t" : "Use this method to retrieve the dashboard that matches the OAuth credentials submitted with the request. The number of results to return: 1–20, inclusive Post number to start at. The type of post to return. Return posts that have appeared after this ID. Use this parameter to page through the results: first get a set of posts, and then get posts since the last ID of the previous set.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#m-ug-dashboard"
          },
          "curl" : "curl -X GET -u 'username:password' -d 'limit=20&offset=0&since_id=0' http://api.tumblr.com/v2/user/dashboard",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "https://api.tumblr.com/v2/user/dashboard"
        },
        {
          "path" : "/user/likes",
          "params" : [
            {
              "name" : "limit",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "default" : "20",
              "required" : "true",
              "doc" : {
                "t" : "The number of results to return: 1–20, inclusive"
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "default" : "0",
              "required" : "true",
              "doc" : {
                "t" : "Liked post number to start at."
              }
            }
          ],
          "doc" : {
            "t" : "Use this method to retrieve the liked posts that match the OAuth credentials submitted with the request. The number of results to return: 1–20, inclusive Liked post number to start at.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#m-ug-likes"
          },
          "curl" : "curl -X GET -u 'username:password' -d 'limit=20&offset=0' http://api.tumblr.com/v2/user/likes",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "https://api.tumblr.com/v2/user/likes"
        },
        {
          "path" : "/user/following",
          "params" : [
            {
              "name" : "limit",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "default" : "20",
              "required" : "true",
              "doc" : {
                "t" : "The number of results to return: 1–20, inclusive"
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "default" : "0",
              "required" : "true",
              "doc" : {
                "t" : "Result number to start at."
              }
            }
          ],
          "doc" : {
            "t" : "Use this method to retrieve the blogs followed by the user whose OAuth credentials are submitted with the request. The number of results to return: 1–20, inclusive Result number to start at.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#m-ug-following"
          },
          "curl" : "curl -X GET -u 'username:password' -d 'limit=20&offset=0' http://api.tumblr.com/v2/user/following",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "https://api.tumblr.com/v2/user/following"
        },
        {
          "path" : "/user/follow",
          "params" : [
            {
              "name" : "url",
              "type" : "xsd:anyURI",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The URL of the blog to follow."
              }
            }
          ],
          "doc" : {
            "t" : "Follow a blog. The URL of the blog to follow.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#m-up-follow"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.tumblr.com/v2/user/follow",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tumblr.com/v2/user/follow"
        },
        {
          "path" : "/user/unfollow",
          "params" : [
            {
              "name" : "url",
              "type" : "xsd:anyURI",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The URL of the blog to unfollow."
              }
            }
          ],
          "doc" : {
            "t" : "Unfollow a blog. The URL of the blog to unfollow.",
            "url" : "http://www.tumblr.com/docs/en/api/v2#m-up-unfollow"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.tumblr.com/v2/user/unfollow",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tumblr.com/v2/user/unfollow"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "enabled" : true,
    "logo" : "http://zachis.it/wp-content/themes/zachisit/images/tumblr-icon.png",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/tumblr.png",
    "name" : "Tumblr",
    "oauth" : {
      "accessTokenURL" : "http://www.tumblr.com/oauth/access_token",
      "authTokenURL" : "http://www.tumblr.com/oauth/authorize",
      "key" : "XbAAewbcTCBuTulBPksJRwgH4ESS0B87051HK3OhTnmDI73Pbb",
      "requestTokenURL" : "http://www.tumblr.com/oauth/request_token",
      "scope" : "",
      "secret" : "1XKq2MgOZTWBC5me8NAvZyVQxkgn7xSMOM1YWaa2LG8XQV2sqs",
      "tokenMethod" : "oauth_signed",
      "version" : "1.0"
    },
    "useCustom" : true,
    "type" : "channel:tumblr"
  },
  {
    "_id" : "52f97e98a9909344830004f7",
    "application" : {
      "base" : "https://api.tropo.com/v1/",
      "resources" : [
        {
          "path" : "/applications/{AppId}/addresses",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/json",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "This method will show how to add an IM account to your application - we'll use AIM as our example. The same method can be used to add YAHOO, MSN, JABBER, GTALK and SKYPE - just change the value in type.",
            "url" : "https://www.tropo.com/docs/rest/prov_add_im.htm"
          },
          "curl" : "curl -X POST -u 'username:password' -d '{ \"type\":\"aim\", \"username\":\"tropocloud\", \"password\":\"password01\" }' -h 'Content-Type: application/json' http://api.tropo.com/applications/{AppId}/addresses",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Addresses",
          "displayName" : "Addresses_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tropo.com/v1//applications/{AppId}/addresses"
        },
        {
          "path" : "/applications/{AppId}/addresses",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/json",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "This example will add a voice token to your application; you can add a messaging token just by changing the channel to \"messaging\" instead of \"voice\".",
            "url" : "https://www.tropo.com/docs/rest/prov_add_token.htm"
          },
          "curl" : "curl -X POST -u 'username:password' -d '{ \"type\":\"token\", \"channel\":\"voice\" }' -h 'Content-Type: application/json' http://api.tropo.com/applications/{AppId}/addresses",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Addresses",
          "displayName" : "Addresses_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tropo.com/v1//applications/{AppId}/addresses"
        },
        {
          "path" : "/applications/{AppId}/addresses",
          "doc" : {
            "t" : "Sometimes you'll need to view all the addresses associated with a specific application. Using a GET on the addresses folder will provide you with the information you need; running a GET on a specific address type folder, such as addresses/number or addresses/aim, will get you a list of all the addresses that match that type for this application.",
            "url" : "https://www.tropo.com/docs/rest/prov_view_app_addresses.htm"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.tropo.com/applications/{AppId}/addresses",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Addresses",
          "displayName" : "Addresses_GET",
          "httpMethod" : "GET",
          "url" : "https://api.tropo.com/v1//applications/{AppId}/addresses"
        },
        {
          "path" : "/applications/{AppId}/addresses",
          "doc" : {
            "t" : "Sometimes you'll need to view all the addresses associated with a specific application. Using a GET on the addresses folder will provide you with the information you need; running a GET on a specific address type folder, such as addresses/number or addresses/aim, will get you a list of all the addresses that match that type for this application.",
            "url" : "https://www.tropo.com/docs/rest/prov_view_app_addresses.htm"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.tropo.com/applications/{AppId}/addresses/number/{AddressId}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Addresses",
          "displayName" : "Addresses_GET",
          "httpMethod" : "GET",
          "url" : "https://api.tropo.com/v1//applications/{AppId}/addresses"
        },
        {
          "path" : "/applications/{AppId}/addresses",
          "doc" : {
            "t" : "You can remove a phone number, IM account or token from an application. If you remove a phone number, it will become available for use by someone else, so it's not recommended to delete a phone number unless you're absolutely sure you have no further need for it. If you want to move a phone number between applications, there's an easier way. Check out the Adding a Specific Number/Moving a Number> example for more info.",
            "url" : "https://www.tropo.com/docs/rest/prov_delete_address.htm"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://api.tropo.com/applications/{AppId}/addresses/number/{AddressId}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Addresses",
          "displayName" : "Addresses_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://api.tropo.com/v1//applications/{AppId}/addresses"
        },
        {
          "path" : "/applications/{AppId}/addresses",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/json",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "This method will add a number to the application, based on a specified prefix. While the prefix is not necessary, if it's omitted you will be provisioned a randomly selected U.S. number.",
            "url" : "https://www.tropo.com/docs/rest/prov_add_number.htm"
          },
          "curl" : "curl -X POST -u 'username:password' -d '{ \"type\":\"number\", \"prefix\":\"1407\" }' -h 'Content-Type: application/json' http://api.tropo.com/applications/{AppId}/addresses",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Addresses",
          "displayName" : "Addresses_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tropo.com/v1//applications/{AppId}/addresses"
        },
        {
          "path" : "/applications/{AppId}/addresses",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/json",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "This method will add a toll free number to the application, based on a specified prefix. This is essentially the same process as the one you would use to add a standard U.S. phone number , however you must already having billing setup for Tropo or you will receive a 400 response code, as all toll free numbers require a production account. Possible values include 855, 866, 877 and 888; if there are no available numbers with the prefix specified, you will receive a 503 response code, at which point you can try one of the other options.",
            "url" : "https://www.tropo.com/docs/rest/prov_add_toll_free.htm"
          },
          "curl" : "curl -X POST -u 'username:password' -d '{ \"type\":\"number\", \"prefix\":\"1866\" }' -h 'Content-Type: application/json' http://api.tropo.com/applications/{AppId}/addresses",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Addresses",
          "displayName" : "Addresses_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tropo.com/v1//applications/{AppId}/addresses"
        },
        {
          "path" : "/applications/{AppId}/addresses",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/json",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "This method will add an international number, based on a specified country code prefix. Currently, you cannot select a specific area code prefix for International numbers, just the country code (so you can't select 31+20 for Amsterdam - you might get 31+10 for Rotterdam instead). If there are no available numbers with the prefix specified, you will receive a 503 response code.",
            "url" : "https://www.tropo.com/docs/rest/prov_add_international.htm"
          },
          "curl" : "curl -X POST -u 'username:password' -d '{ \"type\":\"number\", \"prefix\":\"31\" }' -h 'Content-Type: application/json' http://api.tropo.com/applications/{AppId}/addresses",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Addresses",
          "displayName" : "Addresses_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tropo.com/v1//applications/{AppId}/addresses"
        },
        {
          "path" : "/applications/{AppId}/addresses",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/json",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "The ability to add a specific number is really only used when you need to move a number from one application to another. You would use this method on the destination application - the one where you want the phone number to go. You don't need to do anything to the original application. The two applications do need to exist on the same account - you can't use this method to move a phone number between two different accounts.",
            "url" : "https://www.tropo.com/docs/rest/prov_add_specific_num.htm"
          },
          "curl" : "curl -X POST -u 'username:password' -d '{ \"type\":\"number\", \"number\":\"4075551235\" }' -h 'Content-Type: application/json' http://api.tropo.com/applications/{AppId}/addresses",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Addresses",
          "displayName" : "Addresses_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tropo.com/v1//applications/{AppId}/addresses"
        },
        {
          "path" : "/applications",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/json",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Use this method to add a brand new application. You can define a voice and messaging URL in the Request Body, but this method won't assign any addresses. You'll need to update the application once it's created to add a phone number or IM account.",
            "url" : "https://www.tropo.com/docs/rest/prov_new_app.htm"
          },
          "curl" : "curl -X POST -u 'username:password' -d '{ \"name\":\"new app\", \"voiceUrl\":\"http://website.com\", \"messagingUrl\":\"http://website2.com\", \"platform\":\"scripting\", \"partition\":\"staging\" }' -h 'Content-Type: application/json' http://api.tropo.com/applications",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Applications",
          "displayName" : "Applications_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tropo.com/v1//applications"
        },
        {
          "path" : "/applications",
          "doc" : {
            "t" : "Sometimes you need to access a list of the applications associated with your account; maybe you need to find a particular application's ID number or need to verify whether it's a Scripting or WebAPI application. Using a GET on the applications folder will provide you with the information you need.",
            "url" : "https://www.tropo.com/docs/rest/prov_view_apps.htm"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.tropo.com/applications",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Applications",
          "displayName" : "Applications_GET",
          "httpMethod" : "GET",
          "url" : "https://api.tropo.com/v1//applications"
        },
        {
          "path" : "/applications",
          "doc" : {
            "t" : "Sometimes you need to access a list a specific application.",
            "url" : "https://www.tropo.com/docs/rest/prov_view_apps.htm"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.tropo.com/applications/{AppId}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Applications",
          "displayName" : "Applications_GET",
          "httpMethod" : "GET",
          "url" : "https://api.tropo.com/v1//applications"
        },
        {
          "path" : "/applications",
          "doc" : {
            "t" : "Use this method to remove an application. This cannot be undone; once an application has been deleted, it cannot be restored without recreating it from scratch.",
            "url" : "https://www.tropo.com/docs/rest/prov_deleting_app.htm"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://api.tropo.com/applications/{AppId}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Applications",
          "displayName" : "Applications_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://api.tropo.com/v1//applications"
        },
        {
          "path" : "/applications",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/json",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "When you want to change the name, platform or partition of an application, just run a PUT on the application specific folder and specify the new details. The old information will be removed and the new information entered in its place. Note that if you do not have a production Tropo account, you will not be able to change the partition to production.",
            "url" : "https://www.tropo.com/docs/rest/prov_update_name.htm"
          },
          "curl" : "curl -X PUT -u 'username:password' -d '{ \"name\":\"new app updated\", \"platform\":\"webapi\", \"partition\":\"production\" }' -h 'Content-Type: application/json' http://api.tropo.com/applications/{AppId}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Applications",
          "displayName" : "Applications_PUT",
          "httpMethod" : "PUT",
          "url" : "https://api.tropo.com/v1//applications"
        },
        {
          "path" : "/exchanges",
          "doc" : {
            "t" : "Exchanges identify the locations and prefixes for phone numbers; using the following method will allow you to view the exchanges available to you (e.g., if you're still in staging, toll free numbers won't be displayed). The results are abbreviated for ease of viewing; there's typically many, many more available.",
            "url" : "https://www.tropo.com/docs/rest/prov_view_exchanges.htm"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.tropo.com/exchanges",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Exchanges",
          "displayName" : "Exchanges_GET",
          "httpMethod" : "GET",
          "url" : "https://api.tropo.com/v1//exchanges"
        },
        {
          "path" : "/sessions",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/json",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "The following example shows how to kick off an \"outbound session\" using a token and the REST API, which then launches the application, makes a call and plays a message. It will also show how to pass additional parameters into your application when initiating the Tropo Scripting session. To find your token, login to your Tropo account, display the application configuration screen, and look down under the phone numbers",
            "url" : "https://www.tropo.com/docs/rest/starting_session.htm"
          },
          "curl" : "curl -X POST -u 'username:password' -d '{ \"token\":\"TOKEN\", \"customerName\":\"Chris Matthieu\", \"numberToDial\":\"4075551212\", \"msg\":\"hello superman.\" }' -h 'Content-Type: application/json' http://api.tropo.com/sessions",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Sessions",
          "displayName" : "Sessions_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tropo.com/v1//sessions"
        },
        {
          "path" : "/sessions",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/json",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Say you want to play some hold music, then interrupt it later. In order to interrupt, you would give a the say that's playing the hold music a signal using the allowSignals parameter. You can then make a web service call using that name and Tropo will stop running that function. If the function has already run and completed, your interrupt request will be ignored. If it has not run yet, it will be queued until the function runs. Note: transfer and conference must include the terminator parameter for signaling to work.",
            "url" : "https://www.tropo.com/docs/rest/interrupting_code_one_signal.htm"
          },
          "curl" : "curl -X POST -u 'username:password' -d '{ \"value\":\"exit\" }' -h 'Content-Type: application/json' http://api.tropo.com/sessions/{session-id}/signals",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Sessions",
          "displayName" : "Sessions_POST",
          "httpMethod" : "POST",
          "url" : "https://api.tropo.com/v1//sessions"
        }
      ]
    },
    "auth_strategy" : "simple",
    "enabled" : false,
    "logo" : "https://pbs.twimg.com/profile_images/1635826227/tropo-glyph.png",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/tropo.png",
    "name" : "Tropo",
    "type" : "channel:tropo"
  },
  {
    "_id" : "5337a38d76a65b9693bc2a9f",
    "application" : {
      "base" : "http://api.openweathermap.org/",
      "resources" : [
        {
          "doc" : {
            "t" : "current weather by city",
            "url" : "http://openweathermap.org/API#weather"
          },
          "displayName" : "current weather by city",
          "path" : "/data/2.5/weather",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "q",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "city, country parameter"
              }
            },
            {
              "name" : "unit",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "units"
              }
            }
          ],
          "url" : "http://api.openweathermap.org//data/2.5/weather"
        },
        {
          "doc" : {
            "t" : "current weather by lat/long",
            "url" : "http://openweathermap.org/API#weather"
          },
          "displayName" : "current weather by lat,lon",
          "path" : "/data/2.5/weather",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "lat",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "lattitude parameter"
              }
            },
            {
              "name" : "lon",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "longitude parameter"
              }
            },
            {
              "name" : "unit",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "units"
              }
            }
          ],
          "url" : "http://api.openweathermap.org//data/2.5/weather"
        },
        {
          "doc" : {
            "t" : "current weather by CityID",
            "url" : "http://openweathermap.org/API#weather"
          },
          "displayName" : "current weather by city id",
          "path" : "/data/2.5/weather",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "city id parameter"
              }
            },
            {
              "name" : "unit",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "units"
              }
            }
          ],
          "url" : "http://api.openweathermap.org//data/2.5/weather"
        },
        {
          "doc" : {
            "t" : "weather forecast by city",
            "url" : "http://openweathermap.org/API#forecast"
          },
          "displayName" : "weather forecast by city",
          "path" : "/data/2.5/forecast",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "q",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "city, country parameter"
              }
            },
            {
              "name" : "unit",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "units"
              }
            }
          ],
          "url" : "http://api.openweathermap.org//data/2.5/forecast"
        },
        {
          "doc" : {
            "t" : "weather forecast by lat/long",
            "url" : "http://openweathermap.org/API#forecast"
          },
          "displayName" : "weather forecast by lat,lon",
          "path" : "/data/2.5/forecast",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "lat",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "lattitude parameter"
              }
            },
            {
              "name" : "lon",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "longitude parameter"
              }
            },
            {
              "name" : "unit",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "units"
              }
            }
          ],
          "url" : "http://api.openweathermap.org//data/2.5/forecast"
        },
        {
          "doc" : {
            "t" : "weather forecast by CityId",
            "url" : "http://openweathermap.org/API#forecast"
          },
          "displayName" : "weather forecast by city id",
          "path" : "/data/2.5/forecast",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "city id parameter"
              }
            },
            {
              "name" : "unit",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "units"
              }
            }
          ],
          "url" : "http://api.openweathermap.org//data/2.5/forecast"
        }
      ]
    },
    "auth_strategy" : "none",
    "documentation" : "http://openweathermap.org/API",
    "enabled" : true,
    "logo" : "http://icons.iconarchive.com/icons/custom-icon-design/weather/256/Sunny-Interval-icon.png",
    "name" : "Weather",
    "type" : "channel:weather"
  },
  {
    "_id" : "533b504c57090ef0e5cc350f",
    "application" : {
      "base" : "https://www.evernote.com",
      "resources" : [ ]
    },
    "auth_strategy" : "oauth",
    "documentation" : "http://dev.evernote.com/doc/reference/",
    "enabled" : false,
    "logo" : "http://icons.iconarchive.com/icons/emey87/social-button/256/evernote-icon.png",
    "name" : "Evernote",
    "oauth" : {
      "accessTokenURL" : "https://www.evernote.com/oauth",
      "apiKey" : "",
      "authTokenPath" : "/oauth",
      "authTokenURL" : "https://www.evernote.com/oauth",
      "baseURL" : "https://www.evernote.com",
      "clientId" : "joshcoffman",
      "grant_type" : "",
      "host" : "www.evernote.com",
      "isManual" : true,
      "key" : "joshcoffman",
      "protocol" : "https",
      "requestTokenURL" : "https://www.evernote.com/oauth",
      "scope" : "",
      "secret" : "5fcd3cce95107325",
      "useOAuthParams" : true,
      "version" : "1.0"
    },
    "useCustom" : true,
    "type" : "channel:evernote"
  },
  {
    "_id" : "53e3a09113c57e0267403a86",
    "__v" : 0,
    "application" : {
      "base" : "https://zenpayroll.com/api/v1/",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.zenpayroll.com/v1/current_user"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "Current User",
          "path" : "/api/v1/me",
          "params" : [
            {
              "name" : "email",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "roles",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "companies",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://zenpayroll.com/api/v1//api/v1/me"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.zenpayroll.com/v1/employees"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "Employees",
          "path" : "/api/v1/companies/:company_id/employees",
          "params" : [
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "first_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "middle_initial",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "last_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "email",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date_of_birth",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "jobs",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "title",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "rate",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "payment_unit",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "location_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "eligible_paid_time_off",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "terminated",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "terminations",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "active",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "effective_date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "run_termination_payroll",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://zenpayroll.com/api/v1//api/v1/companies/:company_id/employees"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.zenpayroll.com/v1/companies"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "Companies",
          "path" : "/api/v1/companies/:company_id",
          "params" : [
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "trade_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "locations",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "street_1",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "street_2",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "city",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "state",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "zip",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "compensations",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "hourly",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "multiple",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fixed",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "paid_time_off",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://zenpayroll.com/api/v1//api/v1/companies/:company_id"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.zenpayroll.com/v1/pay_periods/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "Pay Periods",
          "path" : "/api/v1/companies/:company_id/pay_periods",
          "params" : [
            {
              "name" : "start_date & end_date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "payroll",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "payroll_deadline",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "processed",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "eligible_employees",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "job_ids",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://zenpayroll.com/api/v1//api/v1/companies/:company_id/pay_periods"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.zenpayroll.com/v1/payrolls/"
          },
          "authentication" : {
            "required" : "true"
          },
          "params" : [
            {
              "name" : "version",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pay_period",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "payroll_deadline",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "processed",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "employee_compensations",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "employee_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fixed_compensations",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "amount",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "hourly_compensations",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "hours",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "job_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "compensation_multiplier",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "paid_time_off",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "hours",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "path" : "/api/v1/companies/:company_id/payrolls",
          "displayName" : "Payrolls",
          "url" : "https://zenpayroll.com/api/v1//api/v1/companies/:company_id/payrolls"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://docs.zenpayroll.com/v1/payrolls/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "Update Payroll",
          "path" : "/api/v1/companies/:company_id/payrolls/:pay_period_start_date/:pay_period_start_date",
          "url" : "https://zenpayroll.com/api/v1//api/v1/companies/:company_id/payrolls/:pay_period_start_date/:pay_period_start_date"
        }
      ]
    },
    "auth_strategy" : "basic",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "http://docs.zenpayroll.com",
    "enabled" : true,
    "logo" : "http://cloudsourcedaccounting.com/wp-content/uploads/2013/06/ZenPayrollLogo.png",
    "name" : "ZenPayroll",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:zen_payroll"
  },
  {
    "_id" : "52f97e6fa9a4bfec5e0003cc",
    "application" : {
      "base" : "https://api.twilio.com/2010-04-01",
      "resources" : [
        {
          "path" : "/Accounts/{AccountSid}.json",
          "doc" : {
            "t" : "Returns the account details for the {AccountSid}.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/account"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Accounts",
          "displayName" : "Accounts_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}.json",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Allows you to modify the 'FriendlyName' for the {AccountSid} via POST.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/account"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Accounts",
          "displayName" : "Accounts_POST",
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}.json",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            },
            {
              "name" : "FriendlyName",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Allows you to modify the 'FriendlyName' for the {AccountSid} via PUT.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/account"
          },
          "curl" : "curl -X PUT -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' -d 'FriendlyName=' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Accounts",
          "displayName" : "Accounts_PUT",
          "httpMethod" : "PUT",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}.json"
        },
        {
          "path" : "/Accounts",
          "doc" : {
            "t" : "Right now, your credentials are tied to one and only one account, so the list resource only contains your single account.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/account"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Accounts",
          "displayName" : "Accounts_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts"
        },
        {
          "path" : "/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/TollFree.json",
          "doc" : {
            "t" : "Returns a list of toll-free AvailablePhoneNumber resource representations, each representing a phone number that is currently available for provisioning within your account.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/available-phone-numbers"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/TollFree",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Available Phone Numbers",
          "displayName" : "Available Phone Numbers_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/TollFree.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/Local.json",
          "doc" : {
            "t" : "Returns a list of local AvailablePhoneNumber resource representations, each representing a phone number that is currently available for provisioning within your account.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/available-phone-numbers"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/Local",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Available Phone Numbers",
          "displayName" : "Available Phone Numbers_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/Local.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Calls.json",
          "doc" : {
            "t" : "Returns a list of phone calls made to and from the account identified by {AccountSid}, sorted by DateUpdated with most-recent calls first.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/call"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Calls",
          "displayName" : "Calls_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Calls/{CallSid}/Recordings.json",
          "doc" : {
            "t" : "Returns a recording list for the {CallSid}",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/call"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Calls",
          "displayName" : "Calls_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Calls/{CallSid}/Notifications.json",
          "doc" : {
            "t" : "Returns a notification list",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/notification"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Notifications",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Calls",
          "displayName" : "Calls_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Notifications.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Calls/{CallSid}.json",
          "doc" : {
            "t" : "Returns the single Call resource identified by {CallSid}.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/call"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Calls",
          "displayName" : "Calls_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json",
          "doc" : {
            "t" : "Returns the list of participants in the conference identified by {ConferenceSid}.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/conference"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Conferences",
          "displayName" : "Conferences_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}.json",
          "doc" : {
            "t" : "Returns a representation of the conference identified by {ConferenceSid}.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/conference"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Conferences",
          "displayName" : "Conferences_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Conferences.json",
          "doc" : {
            "t" : "Returns a list of conferences within an account identified by {AccountSid}.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/conference"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Conferences",
          "displayName" : "Conferences_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers.json",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            },
            {
              "name" : "PhoneNumber",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "FriendlyName",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceFallbackUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "StatusCallback",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "StatusCallbackMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceCallerIdLookup",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceApplicationSid",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsFallbackUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsFallbackMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsApplicationSid",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "AccountSid",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Adds a new phone number to your account. If a phone number is found for your request, Twilio will add it to your account",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/incoming-phone-numbers"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' -d 'PhoneNumber=&FriendlyName=&VoiceUrl=&VoiceMethod=&VoiceFallbackUrl=&StatusCallback=&StatusCallbackMethod=&VoiceCallerIdLookup=&VoiceApplicationSid=&SmsUrl=&SmsMethod=&SmsFallbackUrl=&SmsFallbackMethod=&SmsApplicationSid=&AccountSid=' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Incoming Phone Numbers",
          "displayName" : "Incoming Phone Numbers_POST",
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json",
          "doc" : {
            "t" : "Fetches the details of a phone number purchased from Twilio",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/incoming-phone-numbers"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Incoming Phone Numbers",
          "displayName" : "Incoming Phone Numbers_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            },
            {
              "name" : "FriendlyName",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "ApiVersion",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceFallbackUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "StatusCallback",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "StatusCallbackMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceCallerIdLookup",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceApplicationSid",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsFallbackUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsFallbackMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsApplicationSid",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "AccountSid",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Update an incoming phone number obtained from Twilio via POST.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/incoming-phone-numbers"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' -d 'FriendlyName=&ApiVersion=&VoiceUrl=&VoiceMethod=&VoiceFallbackUrl=&StatusCallback=&StatusCallbackMethod=&VoiceCallerIdLookup=&VoiceApplicationSid=&SmsUrl=&SmsMethod=&SmsFallbackUrl=&SmsFallbackMethod=&SmsApplicationSid=&AccountSid=' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Incoming Phone Numbers",
          "displayName" : "Incoming Phone Numbers_POST",
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            },
            {
              "name" : "FriendlyName",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "ApiVersion",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceFallbackUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "StatusCallback",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "StatusCallbackMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceCallerIdLookup",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceApplicationSid",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsFallbackUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsFallbackMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsApplicationSid",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "AccountSid",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Update an incoming phone number obtained from Twilio via PUT.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/incoming-phone-numbers"
          },
          "curl" : "curl -X PUT -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' -d 'FriendlyName=&ApiVersion=&VoiceUrl=&VoiceMethod=&VoiceFallbackUrl=&StatusCallback=&StatusCallbackMethod=&VoiceCallerIdLookup=&VoiceApplicationSid=&SmsUrl=&SmsMethod=&SmsFallbackUrl=&SmsFallbackMethod=&SmsApplicationSid=&AccountSid=' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Incoming Phone Numbers",
          "displayName" : "Incoming Phone Numbers_PUT",
          "httpMethod" : "PUT",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json",
          "doc" : {
            "t" : "Deletes a phone number purchased from Twilio",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/incoming-phone-numbers"
          },
          "curl" : "curl -X DELETE -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Incoming Phone Numbers",
          "displayName" : "Incoming Phone Numbers_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers.json",
          "doc" : {
            "t" : "Returns a list of incoming phone number resources, each representing a phone number given to your account",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/incoming-phone-numbers"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Incoming Phone Numbers",
          "displayName" : "Incoming Phone Numbers_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers.json",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            },
            {
              "name" : "AreaCode",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "FriendlyName",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceFallbackUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "StatusCallback",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "StatusCallbackMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceCallerIdLookup",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceApplicationSid",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsFallbackUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsFallbackMethod",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsApplicationSid",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "AccountSid",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Adds a random phone number available for the area depending on the Area Code provided",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/incoming-phone-numbers"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' -d 'AreaCode=&FriendlyName=&VoiceUrl=&VoiceMethod=&VoiceFallbackUrl=&StatusCallback=&StatusCallbackMethod=&VoiceCallerIdLookup=&VoiceApplicationSid=&SmsUrl=&SmsMethod=&SmsFallbackUrl=&SmsFallbackMethod=&SmsApplicationSid=&AccountSid=' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Incoming Phone Numbers",
          "displayName" : "Incoming Phone Numbers_POST",
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Calls.json",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            },
            {
              "name" : "From",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "To",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "Url",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Make a call.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/making_calls"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' -d 'From=&To=&Url=' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Making Calls",
          "displayName" : "Making Calls_POST",
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Calls/{CallSid}.json",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            },
            {
              "name" : "Url",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "Method",
              "type" : "string",
              "style" : "query",
              "default" : "POST",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "Status",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Modifies a live call. Modification could be redirection or termination of the call.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/change-call-state"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' -d 'Url=&Method=POST&Status=' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Modify Live Call",
          "displayName" : "Modify Live Call_POST",
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Notifications/{NotificationSid}.json",
          "doc" : {
            "t" : "Deletes a notification",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/notification"
          },
          "curl" : "curl -X DELETE -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Notifications/{NotificationSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Notifications",
          "displayName" : "Notifications_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Notifications/{NotificationSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Notifications.json",
          "doc" : {
            "t" : "Returns a notification list",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/notification"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Notifications",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Notifications",
          "displayName" : "Notifications_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Notifications.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Notifications/{NotificationSid}.json",
          "doc" : {
            "t" : "Returns a notification",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/notification"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Notifications/{NotificationSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Notifications",
          "displayName" : "Notifications_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Notifications/{NotificationSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            },
            {
              "name" : "FriendlyName",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Updates the outgoing caller id specified by the provided {OutgoingCallerIdSid} and returns the updated resource if successful via POST.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/outgoing-caller-ids"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' -d 'FriendlyName=' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Outgoing Caller ID",
          "displayName" : "Outgoing Caller ID_POST",
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/OutgoingCallerIds.json",
          "doc" : {
            "t" : "Returns the list of outgoing caller ids for this account",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/outgoing-caller-ids"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Outgoing Caller ID",
          "displayName" : "Outgoing Caller ID_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/OutgoingCallerIds.json",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            },
            {
              "name" : "PhoneNumber",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "FriendlyName",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "CallDelay",
              "type" : "string",
              "style" : "query",
              "default" : "0",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "Extension",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Adds a new caller id to your account",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/outgoing-caller-ids"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' -d 'PhoneNumber=&FriendlyName=&CallDelay=0&Extension=' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Outgoing Caller ID",
          "displayName" : "Outgoing Caller ID_POST",
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json",
          "doc" : {
            "t" : "Returns a single outgoing caller id specified by the provided {OutgoingCallerIdSid}",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/outgoing-caller-ids"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Outgoing Caller ID",
          "displayName" : "Outgoing Caller ID_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            },
            {
              "name" : "FriendlyName",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Updates the outgoing caller id specified by the provided {OutgoingCallerIdSid} and returns the updated resource if successful via PUT.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/outgoing-caller-ids"
          },
          "curl" : "curl -X PUT -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' -d 'FriendlyName=' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Outgoing Caller ID",
          "displayName" : "Outgoing Caller ID_PUT",
          "httpMethod" : "PUT",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json",
          "doc" : {
            "t" : "Deletes the outgoing caller id specified by the provided {OutgoingCallerIdSid}",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/outgoing-caller-ids"
          },
          "curl" : "curl -X DELETE -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Outgoing Caller ID",
          "displayName" : "Outgoing Caller ID_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            },
            {
              "name" : "Muted",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Mute a participant.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/participant"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' -d 'Muted=' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Participants",
          "displayName" : "Participants_POST",
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json",
          "doc" : {
            "t" : "Kick a participant from a conference.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/participant"
          },
          "curl" : "curl -X DELETE -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Participants",
          "displayName" : "Participants_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json",
          "doc" : {
            "t" : "Returns the list of participants in the conference identified by {ConferenceSid}.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/participant"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Participants",
          "displayName" : "Participants_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json",
          "doc" : {
            "t" : "Returns a representation of this participant.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/participant"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Participants",
          "displayName" : "Participants_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Recordings/{RecordingSid}.json",
          "doc" : {
            "t" : "Returns a recording",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/recording"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Recordings",
          "displayName" : "Recordings_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Recordings.json",
          "doc" : {
            "t" : "Returns a recording list associated with this {AccountSid}",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/recording"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Recordings",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Recordings",
          "displayName" : "Recordings_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Recordings.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions.json",
          "doc" : {
            "t" : "Each Recording instance resource has a Transcriptions subresource which represents the set of transcriptions generated from the recording (if any). Represents the set of transcriptions available for the recording identified by {RecordingSid}.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/recording"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Recordings",
          "displayName" : "Recordings_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Recordings/{RecordingSid}.json",
          "doc" : {
            "t" : "Deletes a recording",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/recording"
          },
          "curl" : "curl -X DELETE -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Recordings",
          "displayName" : "Recordings_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Sandbox.json",
          "doc" : {
            "t" : "Returns the Sandbox resource associated with the account identified by {AccountSid}.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/sandbox"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Sandbox",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Sandbox",
          "displayName" : "Sandbox_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Sandbox.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Sandbox.json",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            },
            {
              "name" : "VoiceUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceMethod",
              "type" : "string",
              "style" : "query",
              "default" : "POST",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsMethod",
              "type" : "string",
              "style" : "query",
              "default" : "POST",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Updates the Sandbox resource via POST.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/sandbox"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' -d 'VoiceUrl=&VoiceMethod=POST&SmsUrl=&SmsMethod=POST' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Sandbox",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Sandbox",
          "displayName" : "Sandbox_POST",
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Sandbox.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Sandbox.json",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            },
            {
              "name" : "VoiceUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "VoiceMethod",
              "type" : "string",
              "style" : "query",
              "default" : "POST",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsUrl",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "SmsMethod",
              "type" : "string",
              "style" : "query",
              "default" : "POST",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Updates the Sandbox resource via PUT.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/sandbox"
          },
          "curl" : "curl -X PUT -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' -d 'VoiceUrl=&VoiceMethod=POST&SmsUrl=&SmsMethod=POST' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Sandbox",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Sandbox",
          "displayName" : "Sandbox_PUT",
          "httpMethod" : "PUT",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Sandbox.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SMS/Messages.json",
          "doc" : {
            "t" : "Returns a list of SMS messages associated with your account identified by {AccountSid}.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/sms"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SMS/Messages",
          "authentication" : {
            "required" : "true"
          },
          "category" : "SMS Messages",
          "displayName" : "SMS Messages_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SMS/Messages.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SMS/Messages/{SMSMessageSid}.json",
          "doc" : {
            "t" : "Returns a single SMS message specified by the provided {SMSMessageSid}.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/sms"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SMS/Messages/{SMSMessageSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "SMS Messages",
          "displayName" : "SMS Messages_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SMS/Messages/{SMSMessageSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SMS/Messages.json",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            },
            {
              "name" : "From",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "To",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "Body",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Send a new outgoing message.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/sending-sms"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' -d 'From=&To=&Body=' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SMS/Messages",
          "authentication" : {
            "required" : "true"
          },
          "category" : "SMS Messages",
          "displayName" : "SMS Messages_POST",
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SMS/Messages.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Transcriptions.json",
          "doc" : {
            "t" : "Returns a set of Transcription resource representations that includes paging information, sorted by 'DateUpdated', with most recent transcripts first.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/transcription"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Transcriptions",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Transcriptions",
          "displayName" : "Transcriptions_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Transcriptions.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}.json",
          "doc" : {
            "t" : "Returns a single Transcription resource representation identified by the given {TranscriptionSid}.",
            "url" : "http://www.twilio.com/docs/api/2010-04-01/rest/transcription"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Transcriptions",
          "displayName" : "Transcriptions_GET",
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}.json"
        }
      ]
    },
    "auth_strategy" : "simple",
    "enabled" : false,
    "logo" : "http://i1.wp.com/expandedramblings.com/wp-content/uploads/2013/11/twilio-logo.jpg?resize=175%2C175",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/twilio.png",
    "name" : "Twilio",
    "type" : "channel:twilio"
  },
  {
    "_id" : "52f9b35c9f713b92e5000001",
    "application" : {
      "base" : "http://api.stackoverflow.com/1.1",
      "resources" : [
        {
          "path" : "/answers/{ids}/comments",
          "doc" : {
            "t" : "Get comments on the answers identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/answer-comments-by-ids"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/answers/{ids}/comments",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Answers",
          "displayName" : "Answers_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/answers/{ids}/comments"
        },
        {
          "path" : "/answers",
          "doc" : {
            "t" : "Get all answers on the site.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/answers"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/answers",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Answers",
          "displayName" : "Answers_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/answers"
        },
        {
          "path" : "/answers/{ids}",
          "doc" : {
            "t" : "Get answers identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/answers-by-ids"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/answers/{ids}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Answers",
          "displayName" : "Answers_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/answers/{ids}"
        },
        {
          "path" : "/badges/name",
          "doc" : {
            "t" : "Get all non-tagged-based badges in alphabetical order.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/badges-by-name"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/badges/name",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Badges",
          "displayName" : "Badges_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/badges/name"
        },
        {
          "path" : "/badges/tags",
          "doc" : {
            "t" : "Get all tagged-based badges in alphabetical order.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/tag-badges"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/badges/tags",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Badges",
          "displayName" : "Badges_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/badges/tags"
        },
        {
          "path" : "/badges",
          "doc" : {
            "t" : "Get all badges on the site, in alphabetical order.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/badges"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/badges",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Badges",
          "displayName" : "Badges_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/badges"
        },
        {
          "path" : "/badges/{ids}",
          "doc" : {
            "t" : "Get all users who have been awarded the badges identified by ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/badge-recipients"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/badges/{ids}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Badges",
          "displayName" : "Badges_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/badges/{ids}"
        },
        {
          "path" : "/comments",
          "doc" : {
            "t" : "Get all comments on the site.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/comments"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/comments",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Comments",
          "displayName" : "Comments_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/comments"
        },
        {
          "path" : "/comments/{ids}",
          "doc" : {
            "t" : "Get comments identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/comments-by-ids"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/comments/{ids}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Comments",
          "displayName" : "Comments_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/comments/{ids}"
        },
        {
          "path" : "/posts/{ids}/comments",
          "doc" : {
            "t" : "Get comments on the posts (question or answer) identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/comments-on-posts"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/posts/{ids}/comments",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Comments",
          "displayName" : "Comments_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/posts/{ids}/comments"
        },
        {
          "path" : "/errors/{id}",
          "doc" : {
            "t" : "Simulate an API error for testing purposes.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/errors"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/errors/{id}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Errors",
          "displayName" : "Errors_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/errors/{id}"
        },
        {
          "path" : "/privileges",
          "doc" : {
            "t" : "Get all the privileges available on the site.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/privileges"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/privileges",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Privileges",
          "displayName" : "Privileges_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/privileges"
        },
        {
          "path" : "/questions/unanswered",
          "doc" : {
            "t" : "Get all questions the site considers unanswered.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/unanswered-questions"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/questions/unanswered",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Questions",
          "displayName" : "Questions_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/questions/unanswered"
        },
        {
          "path" : "/questions",
          "doc" : {
            "t" : "Get all questions on the site.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/questions"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/questions",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Questions",
          "displayName" : "Questions_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/questions"
        },
        {
          "path" : "/questions/{ids}",
          "doc" : {
            "t" : "Get the questions identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/questions-by-ids"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/questions/{ids}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Questions",
          "displayName" : "Questions_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/questions/{ids}"
        },
        {
          "path" : "/questions/{ids}/answers",
          "doc" : {
            "t" : "Get the answers to the questions identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/question-answers"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/questions/{ids}/answers",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Questions",
          "displayName" : "Questions_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/questions/{ids}/answers"
        },
        {
          "path" : "/questions/{ids}/comments",
          "doc" : {
            "t" : "Get the comments on the questions identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/question-comments"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/questions/{ids}/comments",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Questions",
          "displayName" : "Questions_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/questions/{ids}/comments"
        },
        {
          "path" : "/questions/{ids}/linked",
          "doc" : {
            "t" : "Get the questions that link to the questions identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/linked-questions"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/questions/{ids}/linked",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Questions",
          "displayName" : "Questions_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/questions/{ids}/linked"
        },
        {
          "path" : "/questions/{ids}/related",
          "doc" : {
            "t" : "Get the questions that are related to the questions identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/related-questions"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/questions/{ids}/related",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Questions",
          "displayName" : "Questions_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/questions/{ids}/related"
        },
        {
          "path" : "/questions/{ids}/timeline",
          "doc" : {
            "t" : "Get the timelines of the questions identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/question-timelines"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/questions/{ids}/timeline",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Questions",
          "displayName" : "Questions_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/questions/{ids}/timeline"
        },
        {
          "path" : "/questions/no-answers",
          "doc" : {
            "t" : "Get all questions on the site with no answers.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/questions-with-no-answers"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/questions/no-answers",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Questions",
          "displayName" : "Questions_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/questions/no-answers"
        },
        {
          "path" : "/revisions/{ids}",
          "doc" : {
            "t" : "Get all revisions for posts identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/revisions"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/revisions/{ids}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Revisions",
          "displayName" : "Revisions_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/revisions/{ids}"
        },
        {
          "path" : "/revisions/{id}/{revisionguid}",
          "doc" : {
            "t" : "Get a specific revision identified by a post id and a revision guid.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/specific-revision"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/revisions/{ids}/{revisionguid}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Revisions",
          "displayName" : "Revisions_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/revisions/{id}/{revisionguid}"
        },
        {
          "path" : "/search",
          "doc" : {
            "t" : "Search the site for questions meeting certain criteria.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/search"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/search?tagged={tags}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Search",
          "displayName" : "Search_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/search"
        },
        {
          "path" : "/similar",
          "doc" : {
            "t" : "Search the site based on similarity to a title.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/similar"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/similar",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Search",
          "displayName" : "Search_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/similar"
        },
        {
          "path" : "/stats",
          "doc" : {
            "t" : "Get a set of statistics for the entire site.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/stats"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/stats",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Stats",
          "displayName" : "Stats_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/stats"
        },
        {
          "path" : "/tags/synonyms",
          "doc" : {
            "t" : "Get all the tag synonyms on the site.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/tag-synonyms"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/tags/synonyms",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tags",
          "displayName" : "Tags_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/tags/synonyms"
        },
        {
          "path" : "/tags/{tags}/synonyms",
          "doc" : {
            "t" : "Get the synonyms for a specific set of tags.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/synonyms-for-tags"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/tags/{tags}/synonyms",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tags",
          "displayName" : "Tags_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/tags/{tags}/synonyms"
        },
        {
          "path" : "/tags/{tags}/wikis",
          "doc" : {
            "t" : "Get the wiki entries for a set of tags.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/wikis-for-tags"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/tags/{tags}/wikis",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tags",
          "displayName" : "Tags_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/tags/{tags}/wikis"
        },
        {
          "path" : "/tags/{tag}/top-answerers/{period}",
          "doc" : {
            "t" : "Get the top answer posters in a specific tag, either in the last month or for all time. Returns the top 30 answerers.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/top-answerers-in-tag"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/tags/{tag}/top-answerers/{period}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tags",
          "displayName" : "Tags_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/tags/{tag}/top-answerers/{period}"
        },
        {
          "path" : "/tags/{tag}/top-askers/{period}",
          "doc" : {
            "t" : "Get the top question askers in a specific tag, either in the last month or for all time. Returns the top 30 question askers.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/top-askers-in-tag"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/tags/{tag}/top-askers/{period}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tags",
          "displayName" : "Tags_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/tags/{tag}/top-askers/{period}"
        },
        {
          "path" : "/tags",
          "doc" : {
            "t" : "Get the tags on the site.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/tags"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/tags",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tags",
          "displayName" : "Tags_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/tags"
        },
        {
          "path" : "/users/{ids}/comments/{toid}",
          "doc" : {
            "t" : "Get the comments posted by a set of users in reply to another user.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-comments-to-user"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{ids}/comments",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{ids}/comments/{toid}"
        },
        {
          "path" : "/users/{ids}/favorites",
          "doc" : {
            "t" : "Get the questions favorited by users identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-favorites"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{ids}/favorites",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{ids}/favorites"
        },
        {
          "path" : "/users/{ids}/favorites",
          "doc" : {
            "t" : "Get the comments that mention one of the users identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-mentioned"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{ids}/mentioned",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{ids}/favorites"
        },
        {
          "path" : "/users/{ids}/questions",
          "doc" : {
            "t" : "Get the questions asked by the users identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-questions"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{ids}/questions",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{ids}/questions"
        },
        {
          "path" : "/users/{ids}/questions/no-answers",
          "doc" : {
            "t" : "Get the questions asked by a set of users, which have no answers.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-questions-no-answers"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{ids}/questions/no-answers",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{ids}/questions/no-answers"
        },
        {
          "path" : "/users/{ids}/questions/unaccepted",
          "doc" : {
            "t" : "Get the questions asked by a set of users, which have at least one answer but no accepted answer.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-questions-unaccepted"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{ids}/questions/unaccepted",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{ids}/questions/unaccepted"
        },
        {
          "path" : "/users/{ids}/questions/unanswered",
          "doc" : {
            "t" : "Get the questions asked by a set of users, which are not considered to be adequately answered.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-questions-unanswered"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{ids}/questions/unanswered",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{ids}/questions/unanswered"
        },
        {
          "path" : "/users/{ids}/reputation",
          "doc" : {
            "t" : "Get a subset of the reputation changes experienced by the users identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-reputation-changes"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{ids}/reputation",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{ids}/reputation"
        },
        {
          "path" : "/users/{ids}/tags",
          "doc" : {
            "t" : "Get the tags that the users (identified by a set of ids) have been active in.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-tags"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{ids}/tags",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{ids}/tags"
        },
        {
          "path" : "/users/{id}/tags/{tags}/top-answers",
          "doc" : {
            "t" : "Get the top answers a user has posted on questions with a set of tags.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-top-tagged-answers"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{id}/tags/{tags}/top-answers",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{id}/tags/{tags}/top-answers"
        },
        {
          "path" : "/users/{id}/tags/{tags}/top-questions",
          "doc" : {
            "t" : "Get the top questions a user has posted on questions with a set of tags.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-top-tagged-questions"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{id}/tags/{tags}/top-questions",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{id}/tags/{tags}/top-questions"
        },
        {
          "path" : "/users/{ids}/timeline",
          "doc" : {
            "t" : "Get a subset of the actions of that have been taken by the users identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-timelines"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{ids}/timeline",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{ids}/timeline"
        },
        {
          "path" : "/users/{id}/top-answer-tags",
          "doc" : {
            "t" : "Get the top 30 tags (by score) a single user has posted answers in.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-top-answer-tags"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{id}/top-answer-tags",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{id}/top-answer-tags"
        },
        {
          "path" : "/users/moderators",
          "doc" : {
            "t" : "Get the users who have moderation powers on the site.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/moderators"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/moderators",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/moderators"
        },
        {
          "path" : "/users/{id}/top-question-tags",
          "doc" : {
            "t" : "Get the top 30 tags (by score) a single user has asked questions in.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-top-question-tags"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{id}/top-question-tags",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{id}/top-question-tags"
        },
        {
          "path" : "/users",
          "doc" : {
            "t" : "Get all users on the site.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/users"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users"
        },
        {
          "path" : "/users/{ids}",
          "doc" : {
            "t" : "Get the users identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/users-by-ids"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{ids}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{ids}"
        },
        {
          "path" : "/users/{ids}/answers",
          "doc" : {
            "t" : "Get the answers posted by the users identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-answers"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{ids}/answers",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{ids}/answers"
        },
        {
          "path" : "/users/{ids}/badges",
          "doc" : {
            "t" : "Get the badges earned by the users identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-badges"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{ids}/badges",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{ids}/badges"
        },
        {
          "path" : "/users/{ids}/comments",
          "doc" : {
            "t" : "Get the comments posted by the users identified by a set of ids.",
            "url" : "http://api.stackoverflow.com/1.1/usage/methods/user-comments"
          },
          "curl" : "curl -X GET  http://api.stackoverflow.com/1.1/users/{ids}/comments",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "url" : "http://api.stackoverflow.com/1.1/users/{ids}/comments"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "enabled" : false,
    "logo" : "https://fbcdn-profile-a.akamaihd.net/hprofile-ak-frc1/t5/372919_11239244970_618032642_n.jpg",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/stackoverflow.png",
    "name" : "StackOverflow",
    "type" : "channel:stack_overflow"
  },
  {
    "_id" : "52f9b3b66970a8d041000001",
    "application" : {
      "base" : "https://www.readability.com/api/rest/v1",
      "resources" : [
        {
          "doc" : {
            "url" : "https://www.readability.com/api/rest/v1/articles/{article_id}",
            "t" : "Retrieve a single Article, including its content. Accessible by any authenticated user."
          },
          "curl" : "curl -X GET -u 'username:password' https://www.readability.com/api/rest/v1/articles/1234abcd",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Articles",
          "displayName" : "Articles_GET",
          "httpMethod" : "GET",
          "path" : "/articles/{articleId}",
          "url" : "https://www.readability.com/api/rest/v1/articles/{articleId}"
        },
        {
          "doc" : {
            "url" : "https://www.readability.com/api/rest/v1/bookmarks",
            "t" : "Retrieve the bookmarks collection. Automatically filtered to the current user. Only administrators may change the user filter."
          },
          "curl" : "curl -X GET -u 'username:password' https://www.readability.com/api/rest/v1/bookmarks",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Bookmarks",
          "displayName" : "Bookmarks_GET",
          "httpMethod" : "GET",
          "path" : "/bookmarks",
          "url" : "https://www.readability.com/api/rest/v1/bookmarks"
        },
        {
          "doc" : {
            "url" : "https://www.readability.com/api/rest/v1/bookmarks",
            "t" : "Add a bookmark to a URL for this user."
          },
          "curl" : "curl -X POST -u 'username:password' https://www.readability.com/api/rest/v1/bookmarks",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Bookmarks",
          "displayName" : "Bookmarks_POST",
          "httpMethod" : "POST",
          "path" : "/bookmarks",
          "url" : "https://www.readability.com/api/rest/v1/bookmarks"
        },
        {
          "doc" : {
            "url" : "https://www.readability.com/api/rest/v1/bookmarks/{bookmark_id}",
            "t" : "Retrieve a single Article, including its content. Accessible by any authenticated user."
          },
          "curl" : "curl -X GET -u 'username:password' https://www.readability.com/api/rest/v1/bookmarks/2332",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Bookmarks",
          "displayName" : "Bookmarks_GET",
          "httpMethod" : "GET",
          "path" : "/bookmarks/{bookmark_id}",
          "url" : "https://www.readability.com/api/rest/v1/bookmarks/{bookmark_id}"
        },
        {
          "doc" : {
            "url" : "https://www.readability.com/api/rest/v1/bookmarks/{bookmark_id}",
            "t" : "Update a single article."
          },
          "curl" : "curl -X POST -u 'username:password' https://www.readability.com/api/rest/v1/bookmarks/2332",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Bookmarks",
          "displayName" : "Bookmarks_POST",
          "httpMethod" : "POST",
          "path" : "/bookmarks/{bookmark_id}",
          "url" : "https://www.readability.com/api/rest/v1/bookmarks/{bookmark_id}"
        },
        {
          "doc" : {
            "url" : "https://www.readability.com/api/rest/v1/bookmarks/{bookmark_id}",
            "t" : "Remove a single bookmark from this user's history. NOTE: THIS IS PROBABLY NOT WHAT YOU WANT. This is particularly for the case where a user accidentally bookmarks something they have no intention of reading or supporting. In almost all cases, you'll probably want to use archive by POSTing archive=1 to this bookmark. If you use DELETE and this months bookmarks have not yet been tallied, the site associated with this bookmark will not receive any contributions for this bookmark. Use archive! It's better. Returns a 204 on successful remove."
          },
          "curl" : "curl -X DELETE -u 'username:password' https://www.readability.com/api/rest/v1/bookmarks/2332",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Bookmarks",
          "displayName" : "Bookmarks_DELETE",
          "httpMethod" : "DELETE",
          "path" : "/bookmarks/{bookmark_id}",
          "url" : "https://www.readability.com/api/rest/v1/bookmarks/{bookmark_id}"
        },
        {
          "doc" : {
            "url" : "https://www.readability.com/api/rest/v1/contributions",
            "t" : "Retrieve the contributions collection, which is a set of payments by a user to a specific domain. Automatically filtered to the current user. Only administrators may change the user filter."
          },
          "curl" : "curl -X GET -u 'username:password' https://www.readability.com/api/rest/v1/contributions",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Contributions",
          "displayName" : "Contributions_GET",
          "httpMethod" : "GET",
          "path" : "/contributions",
          "url" : "https://www.readability.com/api/rest/v1/contributions"
        },
        {
          "doc" : {
            "url" : "https://www.readability.com/api/rest/v1/domains",
            "t" : "Retrieve the domains collection. Only admins may access this collection."
          },
          "curl" : "curl -X GET -u 'username:password' https://www.readability.com/api/rest/v1/domains",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Domains",
          "displayName" : "Domains_GET",
          "httpMethod" : "GET",
          "path" : "/domains",
          "url" : "https://www.readability.com/api/rest/v1/domains"
        },
        {
          "doc" : {
            "url" : "https://www.readability.com/api/rest/v1/domains/{domain}",
            "t" : "Retrieve a specific domain. Only admins may access this resource."
          },
          "curl" : "curl -X GET -u 'username:password' https://www.readability.com/api/rest/v1/domains/blog.arc90.com",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Domains",
          "displayName" : "Domains_GET",
          "httpMethod" : "GET",
          "path" : "/domains/{domain}",
          "url" : "https://www.readability.com/api/rest/v1/domains/{domain}"
        },
        {
          "doc" : {
            "url" : "https://www.readability.com/api/rest/v1/users",
            "t" : "Retrieve the users collection. Only admins may access this collection."
          },
          "curl" : "curl -X GET -u 'username:password' https://www.readability.com/api/rest/v1/users",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "path" : "/users",
          "url" : "https://www.readability.com/api/rest/v1/users"
        },
        {
          "doc" : {
            "url" : "https://www.readability.com/api/rest/v1/users/{user}",
            "t" : "Retrieve the currently logged in user."
          },
          "curl" : "curl -X GET -u 'username:password' https://www.readability.com/api/rest/v1/users/_current",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "path" : "/users/_current",
          "url" : "https://www.readability.com/api/rest/v1/users/_current"
        },
        {
          "doc" : {
            "url" : "https://www.readability.com/api/rest/v1/users/{user}",
            "t" : "Retrieve a user. Only admins or the current user may access this resource."
          },
          "curl" : "curl -X GET -u 'username:password' https://www.readability.com/api/rest/v1/users/chrisdary",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Users",
          "displayName" : "Users_GET",
          "httpMethod" : "GET",
          "path" : "/users/{username}",
          "url" : "https://www.readability.com/api/rest/v1/users/{username}"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "disabled" : true,
    "enabled" : true,
    "logo" : "http://octoblu-api-logos.s3.amazonaws.com/color/readability.png",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/readability.png",
    "name" : "Readability",
    "oauth" : {
      "accessTokenURL" : "https://www.readability.com/api/rest/v1/oauth/access_token",
      "authTokenURL" : "https://www.readability.com/api/rest/v1/oauth/authorize",
      "key" : "rebootd",
      "requestTokenURL" : "https://www.readability.com/api/rest/v1/oauth/request_token",
      "scope" : "",
      "secret" : "gDeFYD5BXbzrPvv36NbS7DmCAWRurzRF",
      "tokenMethod" : "",
      "version" : "1.0"
    },
    "useCustom" : true,
    "type" : "channel:readability"
  },
  {
    "_id" : "52f9b454e641dbb25d00000c",
    "application" : {
      "base" : "http://api.nytimes.com/svc",
      "resources" : [
        {
          "path" : "/search/v1/article",
          "params" : [
            {
              "name" : "query",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Search keywords (optionally applied to specific fields) and/or facets. Keywords can be specified with or without a limiting \"field:\" label. Facets must be specified in the format \"facet-field:[facet-value]\". See \"Constructing a Search Query\" in the API docs for more information and examples."
              }
            },
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "629a39d0768609d31fee424b52fbb704:5:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Article Search API."
              }
            },
            {
              "name" : "begin_date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the starting point (inclusive) of the range of publication dates to return. Must be used with end_date. Format: YYYYMMDD"
              }
            },
            {
              "name" : "end_date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the end point (inclusive) of the range of publication dates to return. Must be used with begin_date. Format: YYYYMMDD"
              }
            },
            {
              "name" : "facets",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Comma-delimited list of up to 5 facets. Specifies the sets of facet values to include in the facets array at the beginning of response, which collects the facet values from all the search results. See API docs for more info."
              }
            },
            {
              "name" : "fields",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Comma-delimited list of fields (no limit). Specifies the fields (including facets) you want return for each search result. By default (unless you include a fields list in your request), the following fields are returned for each result: body, byline, date, title, url. To return only the array of facet values (no search results), set fields to a blank space (encoded: fields=+) and include the facets parameter. See API docs for more info."
              }
            },
            {
              "name" : "format",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "json",
              "required" : "true",
              "doc" : {
                "t" : "Response format. Currently, only JSON is supported. Default: json"
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:integer",
              "style" : "query",
              "default" : "0",
              "required" : "true",
              "doc" : {
                "t" : "The value of offset corresponds to a set of 10 results (it does not indicate the starting number of the result set). For example, offset=0 corresponds to records 0-9. To return records 10-19, set offset to 1, not 10. Range: 0 to last set of ten. Default: 0"
              }
            },
            {
              "name" : "rank",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "newest",
              "required" : "true",
              "doc" : {
                "t" : "Use the rank parameter to set the order of the results. Accepted values: newest (default), oldest, closest"
              }
            }
          ],
          "doc" : {
            "t" : "With the Article Search API, you can search New York Times articles from 1981 to today, retrieving headlines, abstracts, lead paragraphs, links to associated multimedia and other article metadata. Along with standard keyword searching, the API also offers faceted searching. The available facets include Times-specific fields such as sections, taxonomic classifiers and controlled vocabulary terms (names of people, organizations and geographic locations). Search keywords (optionally applied to specific fields) and/or facets. Keywords can be specified with or without a limiting \"field:\" label. Facets must be specified in the format \"facet-field:[facet-value]\". See \"Constructing a Search Query\" in the API docs for more information and examples. API Key for Article Search API. Sets the starting point (inclusive) of the range of publication dates to return. Must be used with end_date. Format: YYYYMMDD Sets the end point (inclusive) of the range of publication dates to return. Must be used with begin_date. Format: YYYYMMDD Comma-delimited list of up to 5 facets. Specifies the sets of facet values to include in the facets array at the beginning of response, which collects the facet values from all the search results. See API docs for more info. Comma-delimited list of fields (no limit). Specifies the fields (including facets) you want return for each search result. By default (unless you include a fields list in your request), the following fields are returned for each result: body, byline, date, title, url. To return only the array of facet values (no search results), set fields to a blank space (encoded: fields=+) and include the facets parameter. See API docs for more info. Response format. Currently, only JSON is supported. Default: json The value of offset corresponds to a set of 10 results (it does not indicate the starting number of the result set). For example, offset=0 corresponds to records 0-9. To return records 10-19, set offset to 1, not 10. Range: 0 to last set of ten. Default: 0 Use the rank parameter to set the order of the results. Accepted values: newest (default), oldest, closest",
            "url" : "http://developer.nytimes.com/docs/article_search_api/"
          },
          "curl" : "curl -X GET  -d 'api-key=629a39d0768609d31fee424b52fbb704:5:64325990&format=json&offset=0&rank=newest' http://api.nytimes.com/svc/search/v1/article",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Article Search API",
          "displayName" : "Article Search API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/search/v1/article"
        },
        {
          "path" : "/books/{version}/lists.{response-format}",
          "params" : [
            {
              "name" : "list",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Optional search parameter. See API docs for more info."
              }
            },
            {
              "name" : "list-name",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Required list name search parameter. be sure to replace spaces with hyphens (e.g., \"e-book-fiction\" or \"hardcover-fiction\", not \"E-Book Fiction\" or \"Hardcover Fiction\"). (The parameter is not case sensitive.) Can also be passed as list; the two labels are provided for ease of use."
              }
            },
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "d28cb3126eae332c6279f9dedf4bb830:10:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Best Sellers API."
              }
            },
            {
              "name" : "bestsellers-date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Optional search parameter. See API docs for more info."
              }
            },
            {
              "name" : "date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Optional search parameter. See API docs for more info."
              }
            },
            {
              "name" : "isbn",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Optional search parameter. See API docs for more info."
              }
            },
            {
              "name" : "list-name",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Optional search parameter. See API docs for more info."
              }
            },
            {
              "name" : "published-date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Optional search parameter. See API docs for more info."
              }
            },
            {
              "name" : "rank",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Optional search parameter. See API docs for more info."
              }
            },
            {
              "name" : "rank-last-week",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Optional search parameter. See API docs for more info."
              }
            },
            {
              "name" : "weeks-on-list",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Optional search parameter. See API docs for more info."
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "default" : "0",
              "required" : "true",
              "doc" : {
                "t" : "Sets the starting point of the result set. The first 20 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=20 displays results 21–40). Accepted values: positive integer, multiple of 20"
              }
            },
            {
              "name" : "sort-by",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "rank",
              "required" : "true",
              "doc" : {
                "t" : "For details on the available sort options, see API docs. If you do not specify a sort-by value, the results will be sorted by best-seller rank. Accepted values: bestsellers-date, date, isbn, list, list-name, published-date, rank, rank-last-week, weeks-on-list"
              }
            },
            {
              "name" : "sort-order",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "ASC",
              "required" : "true",
              "doc" : {
                "t" : "Sets the sort order of the result set. The default is ASC (ascending). The sort-order parameter is used with the sort-by parameter — for details, see each request type. Accepted values: ASC (ascending), DESC (descending)"
              }
            }
          ],
          "doc" : {
            "t" : "Searches for best-seller list data. See API docs for more information about search parameters. Required list name search parameter. be sure to replace spaces with hyphens (e.g., \"e-book-fiction\" or \"hardcover-fiction\", not \"E-Book Fiction\" or \"Hardcover Fiction\"). (The parameter is not case sensitive.) Can also be passed as list; the two labels are provided for ease of use. API Key for Best Sellers API. Optional search parameter. See API docs for more info. Optional search parameter. See API docs for more info. Optional search parameter. See API docs for more info. Optional search parameter. See API docs for more info. Optional search parameter. See API docs for more info. Optional search parameter. See API docs for more info. Optional search parameter. See API docs for more info. Optional search parameter. See API docs for more info. Optional search parameter. See API docs for more info. Sets the starting point of the result set. The first 20 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=20 displays results 21–40). Accepted values: positive integer, multiple of 20 For details on the available sort options, see API docs. If you do not specify a sort-by value, the results will be sorted by best-seller rank. Accepted values: bestsellers-date, date, isbn, list, list-name, published-date, rank, rank-last-week, weeks-on-list Sets the sort order of the result set. The default is ASC (ascending). The sort-order parameter is used with the sort-by parameter — for details, see each request type. Accepted values: ASC (ascending), DESC (descending)",
            "url" : "http://developer.nytimes.com/docs/best_sellers_api/#h3-list-search"
          },
          "curl" : "curl -X GET  -d 'api-key=d28cb3126eae332c6279f9dedf4bb830:10:64325990&offset=0&sort-by=rank&sort-order=ASC' http://api.nytimes.com/svc/books/v2/lists",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Best Sellers API",
          "displayName" : "Best Sellers API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/books/{version}/lists.{response-format}"
        },
        {
          "path" : "/books/{version}/lists/names.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "d28cb3126eae332c6279f9dedf4bb830:10:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Best Sellers API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns the complete set of Times best-seller list names. API Key for Best Sellers API.",
            "url" : "http://developer.nytimes.com/docs/best_sellers_api/#h3-list-names"
          },
          "curl" : "curl -X GET  -d 'api-key=d28cb3126eae332c6279f9dedf4bb830:10:64325990' http://api.nytimes.com/svc/books/v2/lists/names",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Best Sellers API",
          "displayName" : "Best Sellers API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/books/{version}/lists/names.{response-format}"
        },
        {
          "path" : "/books/{version}/lists/best-sellers/history.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "d28cb3126eae332c6279f9dedf4bb830:10:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Best Sellers API."
              }
            },
            {
              "name" : "age-group",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Search parameter; at least one is required. See API docs for more info."
              }
            },
            {
              "name" : "author",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Search parameter; at least one is required. See API docs for more info."
              }
            },
            {
              "name" : "contributor",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Search parameter; at least one is required. See API docs for more info."
              }
            },
            {
              "name" : "isbn",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Search parameter; at least one is required. See API docs for more info."
              }
            },
            {
              "name" : "price",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Search parameter; at least one is required. See API docs for more info."
              }
            },
            {
              "name" : "publisher",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Search parameter; at least one is required. See API docs for more info."
              }
            },
            {
              "name" : "title",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Search parameter; at least one is required. See API docs for more info."
              }
            },
            {
              "name" : "sort-by",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "rank",
              "required" : "true",
              "doc" : {
                "t" : "For details on the available sort options, see API docs. If you do not specify a sort-by value, the results will be sorted by title (exception: if you are searching by ISBN, the results will be sorted by ISBN). Accepted values: age-group, author, contributor, isbn, price, publisher, title"
              }
            },
            {
              "name" : "sort-order",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "ASC",
              "required" : "true",
              "doc" : {
                "t" : "Sets the sort order of the result set. The default is ASC (ascending). The sort-order parameter is used with the sort-by parameter — for details, see each request type. Accepted values: ASC (ascending), DESC (descending)"
              }
            }
          ],
          "doc" : {
            "t" : "Returns the history of a best seller (its rank and number of weeks on the various Times best-seller lists). API Key for Best Sellers API. Search parameter; at least one is required. See API docs for more info. Search parameter; at least one is required. See API docs for more info. Search parameter; at least one is required. See API docs for more info. Search parameter; at least one is required. See API docs for more info. Search parameter; at least one is required. See API docs for more info. Search parameter; at least one is required. See API docs for more info. Search parameter; at least one is required. See API docs for more info. For details on the available sort options, see API docs. If you do not specify a sort-by value, the results will be sorted by title (exception: if you are searching by ISBN, the results will be sorted by ISBN). Accepted values: age-group, author, contributor, isbn, price, publisher, title Sets the sort order of the result set. The default is ASC (ascending). The sort-order parameter is used with the sort-by parameter — for details, see each request type. Accepted values: ASC (ascending), DESC (descending)",
            "url" : "http://developer.nytimes.com/docs/best_sellers_api/#h3-history"
          },
          "curl" : "curl -X GET  -d 'api-key=d28cb3126eae332c6279f9dedf4bb830:10:64325990&sort-by=rank&sort-order=ASC' http://api.nytimes.com/svc/books/v2/lists/best-sellers/history",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Best Sellers API",
          "displayName" : "Best Sellers API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/books/{version}/lists/best-sellers/history.{response-format}"
        },
        {
          "path" : "/books/{version}/lists",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "d28cb3126eae332c6279f9dedf4bb830:10:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Best Sellers API."
              }
            },
            {
              "name" : "date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The best-seller list publication date. You do not have to specify the exact date the list was published. The service will search forward (into the future) for the closest publication date to the date you specify. For example, a request for \"lists/2008-10-01/hardcover-nonfiction.xml\" will retrieve the list that was published on 10-05. If you do not include a date, the current list-name will be returned. Format: YYYY-MM-DD"
              }
            },
            {
              "name" : "list-name",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The Times best-seller list to retrieve. To get all valid best-seller list names, use the Best-Seller List Names request type. Be sure to replace spaces with hyphens (e.g., e-book-fiction or hardcover-fiction, not E-Book Fiction or Hardcover Fiction). (The parameter is not case sensitive.) Note: This parameter can be passed as list-name or list. Format: string, hyphenated"
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "default" : "0",
              "required" : "true",
              "doc" : {
                "t" : "Sets the starting point of the result set. The first 20 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=20 displays results 21–40). Accepted values: positive integer, multiple of 20"
              }
            },
            {
              "name" : "sort-by",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "rank",
              "required" : "true",
              "doc" : {
                "t" : "For details on the available sort options, see API docs. If you do not specify a sort-by value, the results will be sorted by best-seller rank. Accepted values: bestsellers-date, date, isbn, list, list-name, published-date, rank, rank-last-week, weeks-on-list"
              }
            },
            {
              "name" : "sort-order",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "ASC",
              "required" : "true",
              "doc" : {
                "t" : "Sets the sort order of the result set. The default is ASC (ascending). The sort-order parameter is used with the sort-by parameter — for details, see each request type. Accepted values: ASC (ascending), DESC (descending)"
              }
            }
          ],
          "doc" : {
            "t" : "Returns a Times best-seller list. API Key for Best Sellers API. The best-seller list publication date. You do not have to specify the exact date the list was published. The service will search forward (into the future) for the closest publication date to the date you specify. For example, a request for \"lists/2008-10-01/hardcover-nonfiction.xml\" will retrieve the list that was published on 10-05. If you do not include a date, the current list-name will be returned. Format: YYYY-MM-DD The Times best-seller list to retrieve. To get all valid best-seller list names, use the Best-Seller List Names request type. Be sure to replace spaces with hyphens (e.g., e-book-fiction or hardcover-fiction, not E-Book Fiction or Hardcover Fiction). (The parameter is not case sensitive.) Note: This parameter can be passed as list-name or list. Format: string, hyphenated Sets the starting point of the result set. The first 20 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=20 displays results 21–40). Accepted values: positive integer, multiple of 20 For details on the available sort options, see API docs. If you do not specify a sort-by value, the results will be sorted by best-seller rank. Accepted values: bestsellers-date, date, isbn, list, list-name, published-date, rank, rank-last-week, weeks-on-list Sets the sort order of the result set. The default is ASC (ascending). The sort-order parameter is used with the sort-by parameter — for details, see each request type. Accepted values: ASC (ascending), DESC (descending)",
            "url" : "http://developer.nytimes.com/docs/best_sellers_api/#h3-list"
          },
          "curl" : "curl -X GET  -d 'api-key=d28cb3126eae332c6279f9dedf4bb830:10:64325990&offset=0&sort-by=rank&sort-order=ASC' http://api.nytimes.com/svc/books/v2/lists/",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Best Sellers API",
          "displayName" : "Best Sellers API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/books/{version}/lists"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/filings/types/{form-type-id}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves FEC electronic filings by form type. API Key for Campaign Finance API. JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-electronic-filings-by-type"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/filings/types/{form-type-id}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/filings/types/{form-type-id}.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/president/candidates/{candidate-name-or-committeeID}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves campaign finance details for a particular presidential candidate. This request type is for presidential candidates only, and is provided for backward compatibility with version 2 of the Campaign Finance API. Responses vary slightly from the main version 3 Candidate Details response. API Key for Campaign Finance API. JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-pres-candidate-details"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/president/candidates/{candidate-name-or-committeeID}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/president/candidates/{candidate-name-or-committeeID}.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/president/{resource-type}/{location}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves totals (donations to all presidential candidates) for a particular location. API Key for Campaign Finance API. JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-pres-state-zip"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/president/{resource-type}/{location}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/president/{resource-type}/{location}.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/president/contributions/donorsearch.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "lname",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "A donor's last name. Specify either this or both (with zip), but not neither. Example: paley"
              }
            },
            {
              "name" : "zip",
              "type" : "xsd:integer",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "A donor's ZIP code location. Specify either this or both (with lname), but not neither. Example: 11797"
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves information about an individual donor to a presidential campaign or get a summary of donors in a particular location. API Key for Campaign Finance API. A donor's last name. Specify either this or both (with zip), but not neither. Example: paley A donor's ZIP code location. Specify either this or both (with lname), but not neither. Example: 11797 JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-donor"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/president/contributions/donorsearch",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/president/contributions/donorsearch.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/filings/{year}/{month}/{day}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Returns metadata for FEC reports filed electronically on a specific date. Electronic filings are available back to 2001. Paper filings by Senate candidate committees and senatorial party committees go back to 1999. API Key for Campaign Finance API. JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-electronic-filings-by-date"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/filings/{year}/{month}/{day}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/filings/{year}/{month}/{day}.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/filings/types.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Returns a list of available form types for FEC electronic filings. API Key for Campaign Finance API. JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-electronic-filing-form-types"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/filings/types",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/filings/types.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/candidates/search.{response-format}",
          "params" : [
            {
              "name" : "lname",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The candidate last name or partial last name. Examples: Greene (retrieves Greene), Robin (retrieves both Robin and Robinson)"
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            },
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            }
          ],
          "doc" : {
            "t" : "Searches for Congressional and presidential candidates by last name. The candidate last name or partial last name. Examples: Greene (retrieves Greene), Robin (retrieves both Robin and Robinson) JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests. API Key for Campaign Finance API.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-candidate-search"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/candidates/search",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/candidates/search.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/candidates/{fec-id}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves campaign finance details for a particular candidate (presidential or Congressional) API Key for Campaign Finance API. JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-candidate-details"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/candidates/{fec-id}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/candidates/{fec-id}.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/candidates/leaders/{category}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves the top 20 candidates in a specific category (such as contribution total or debts owed) API Key for Campaign Finance API. JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-candidate-details"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/candidates/leaders/{category}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/candidates/leaders/{category}.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/seats/{state}/{chamber}/{district}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves House and Senate candidates for a particular state (and optional chamber and district) API Key for Campaign Finance API. JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-state-candidates"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/seats/{state}/{chamber}/{district}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/seats/{state}/{chamber}/{district}.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/candidates/new.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves the 20 most recently added candidates. API Key for Campaign Finance API. JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-new-candidates"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/candidates/new",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/candidates/new.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/committees/search.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "name",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The committee name or partial name. Examples: medicare, viacom"
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Searches for political committee by full or partiatl name. API Key for Campaign Finance API. The committee name or partial name. Examples: medicare, viacom JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-committee-search"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/committees/search",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/committees/search.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/committees/{fec-id}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Returns details about a committee by FEC ID. API Key for Campaign Finance API. JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-committee-details"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/committees/{fec-id}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/committees/{fec-id}.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/committees/new.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves the 20 most recently added committees. API Key for Campaign Finance API. JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-new-committees"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/committees/new",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/committees/new.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/committees/{fec-id}/contributions/.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:integer",
              "style" : "query",
              "default" : "0",
              "required" : "true",
              "doc" : {
                "t" : "The value of offset corresponds to a set of 10 results (it does not indicate the starting number of the result set). For example, offset=0 corresponds to records 0-9. To return records 10-19, set offset to 1, not 10. Range: 0 to last set of ten. Default: 0"
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves all available data about a particular committee's contributions to candidates. API Key for Campaign Finance API. The value of offset corresponds to a set of 10 results (it does not indicate the starting number of the result set). For example, offset=0 corresponds to records 0-9. To return records 10-19, set offset to 1, not 10. Range: 0 to last set of ten. Default: 0 JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-committee-contributions"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990&offset=0' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/committees/{fec-id}/contributions",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/committees/{fec-id}/contributions/.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/committees/{fec-id}/contributions/candidates/{candidate-id}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves committee contributions to a particular candidate. API Key for Campaign Finance API. JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-committee-contributions"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/committees/{fec-id}/contributions/candidates/{candidate-id}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/committees/{fec-id}/contributions/candidates/{candidate-id}.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/committees/{fec-id}/filings.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves a committee's electronic filings. Electronic filings are available back to 2001. Paper filings by Senate candidate committees and senatorial party committees go back to 1999. API Key for Campaign Finance API. JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-committee-filings"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/committees/{fec-id}/filings",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/committees/{fec-id}/filings.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/committees/leadership.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves committees designated as \"leadership PACs\" by the FEC. API Key for Campaign Finance API. JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-leadership-committees"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/committees/leadership",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/committees/leadership.{response-format}"
        },
        {
          "path" : "/elections/us/{version}/finances/{campaign-cycle}/president/totals.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "9746e90579a5e13719708aceb37ad848:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Campaign Finance API."
              }
            },
            {
              "name" : "callback",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves totals (receipts and disbursements) for all presidential candidates for a particular campaign cycle. API Key for Campaign Finance API. JSONP callback function. As of February 2011, the Campaign Finance API supports JSONP requests.",
            "url" : "http://developer.nytimes.com/docs/campaign_finance_api/#h3-pres-candidate-totals"
          },
          "curl" : "curl -X GET  -d 'api-key=9746e90579a5e13719708aceb37ad848:0:64325990' http://api.nytimes.com/svc/elections/us/v3/finances/{campaign-cycle}/president/totals",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Campaign Finance API",
          "displayName" : "Campaign Finance API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/elections/us/{version}/finances/{campaign-cycle}/president/totals.{response-format}"
        },
        {
          "path" : "/community/{version}/comments/user/id/{user-id}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "ffd13be0b6e879f3cee1075d3c05a59f:11:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Community API."
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the starting point of the result set. The first 25 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=25 displays results 26-50). Format: positive integer, multiple of 25"
              }
            },
            {
              "name" : "sort",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the sort order of the result set. See API docs for more details. Accepted values: newest, oldest, recommended, replied, editors-selection"
              }
            }
          ],
          "doc" : {
            "t" : "Retrieve comments posted by a specific NYTimes.com user. API Key for Community API. Sets the starting point of the result set. The first 25 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=25 displays results 26-50). Format: positive integer, multiple of 25 Sets the sort order of the result set. See API docs for more details. Accepted values: newest, oldest, recommended, replied, editors-selection",
            "url" : "http://developer.nytimes.com/docs/community_api/#commentsUser"
          },
          "curl" : "curl -X GET  -d 'api-key=ffd13be0b6e879f3cee1075d3c05a59f:11:64325990' http://api.nytimes.com/svc/community/v2/comments/user/id/{user-id}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Community API",
          "displayName" : "Community API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/community/{version}/comments/user/id/{user-id}.{response-format}"
        },
        {
          "path" : "/community/{version}/comments/url/{match-type}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "ffd13be0b6e879f3cee1075d3c05a59f:11:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Community API."
              }
            },
            {
              "name" : "url",
              "type" : "xsd:anyURI",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The URL to search for."
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the starting point of the result set. The first 25 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=25 displays results 26-50). Format: positive integer, multiple of 25"
              }
            },
            {
              "name" : "sort",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the sort order of the result set. See API docs for more details. Accepted values: newest, oldest, recommended, replied, editors-selection"
              }
            }
          ],
          "doc" : {
            "t" : "Retrieve comments posted by a specific NYTimes.com user. API Key for Community API. The URL to search for. Sets the starting point of the result set. The first 25 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=25 displays results 26-50). Format: positive integer, multiple of 25 Sets the sort order of the result set. See API docs for more details. Accepted values: newest, oldest, recommended, replied, editors-selection",
            "url" : "http://developer.nytimes.com/docs/community_api/#commentsURL"
          },
          "curl" : "curl -X GET  -d 'api-key=ffd13be0b6e879f3cee1075d3c05a59f:11:64325990' http://api.nytimes.com/svc/community/v2/comments/url/{match-type}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Community API",
          "displayName" : "Community API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/community/{version}/comments/url/{match-type}.{response-format}"
        },
        {
          "path" : "/community/{version}/comments/by-date/{date}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "ffd13be0b6e879f3cee1075d3c05a59f:11:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Community API."
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the starting point of the result set. The first 25 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=25 displays results 26-50). Format: positive integer, multiple of 25"
              }
            },
            {
              "name" : "sort",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the sort order of the result set. See API docs for more details. Accepted values: newest, oldest, recommended, replied, editors-selection"
              }
            }
          ],
          "doc" : {
            "t" : "Retrieve comments posted on a specific date. API Key for Community API. Sets the starting point of the result set. The first 25 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=25 displays results 26-50). Format: positive integer, multiple of 25 Sets the sort order of the result set. See API docs for more details. Accepted values: newest, oldest, recommended, replied, editors-selection",
            "url" : "http://developer.nytimes.com/docs/community_api/#commentsDate"
          },
          "curl" : "curl -X GET  -d 'api-key=ffd13be0b6e879f3cee1075d3c05a59f:11:64325990' http://api.nytimes.com/svc/community/v2/comments/by-date/{date}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Community API",
          "displayName" : "Community API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/community/{version}/comments/by-date/{date}.{response-format}"
        },
        {
          "path" : "/community/{version}/comments/random.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "ffd13be0b6e879f3cee1075d3c05a59f:11:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Community API."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieve a random set of user comments (50 records) API Key for Community API.",
            "url" : "http://developer.nytimes.com/docs/community_api/#commentsRandom"
          },
          "curl" : "curl -X GET  -d 'api-key=ffd13be0b6e879f3cee1075d3c05a59f:11:64325990' http://api.nytimes.com/svc/community/v2/comments/random",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Community API",
          "displayName" : "Community API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/community/{version}/comments/random.{response-format}"
        },
        {
          "path" : "/community/{version}/comments/recent.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "ffd13be0b6e879f3cee1075d3c05a59f:11:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Community API."
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the starting point of the result set. The first 25 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=25 displays results 26-50). Format: positive integer, multiple of 25"
              }
            },
            {
              "name" : "force-replies",
              "type" : "xsd:boolean",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the results to comments that have been replied to. Accepted values: 1 (limit is set), 0 (limit is not set)"
              }
            },
            {
              "name" : "sort",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the sort order of the result set. See API docs for more details. Accepted values: newest, oldest, recommended, replied, editors-selection"
              }
            }
          ],
          "doc" : {
            "t" : "Retrieve the most recent user comments. API Key for Community API. Sets the starting point of the result set. The first 25 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=25 displays results 26-50). Format: positive integer, multiple of 25 Limits the results to comments that have been replied to. Accepted values: 1 (limit is set), 0 (limit is not set) Sets the sort order of the result set. See API docs for more details. Accepted values: newest, oldest, recommended, replied, editors-selection",
            "url" : "http://developer.nytimes.com/docs/community_api/#commentsRecent"
          },
          "curl" : "curl -X GET  -d 'api-key=ffd13be0b6e879f3cee1075d3c05a59f:11:64325990' http://api.nytimes.com/svc/community/v2/comments/recent",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Community API",
          "displayName" : "Community API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/community/{version}/comments/recent.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{congress-number}/bills/{bill-id}/cosponsors.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns information about the cosponsors of a particular bill. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-bill-cosponsors"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/{congress-number}/bills/{bill-id}/cosponsors",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{congress-number}/bills/{bill-id}/cosponsors.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/members/{member-id}/floor_appearances.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns information about a particular member's appearances on the House or Senate floor. Responses provide data from the C-SPAN Congressional Chronicle, including transcripts and (where available) video of the speech. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-member-floor-appearances"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/members/{member-id}/floor_appearances",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/members/{member-id}/floor_appearances.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{congress-number}/{chamber}/sessions/{session-number}/votes/{roll-call-number}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns a specific roll-call vote, including a complete list of member positions. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-votes"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/{congress-number}/{chamber}/sessions/{session-number}/votes/{roll-call-number}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{congress-number}/{chamber}/sessions/{session-number}/votes/{roll-call-number}.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{congress-number}/{chamber}/votes/{vote-type}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns vote information in four categories: missed votes, party votes, lone no votes and perfect votes. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-votes-by-type"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/{congress-number}/{chamber}/votes/{vote-type}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{congress-number}/{chamber}/votes/{vote-type}.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{chamber}/votes/{year}/{month}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns all votes in a particular month. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-votes-by-date"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/{chamber}/votes/{year}/{month}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{chamber}/votes/{year}/{month}.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{chamber}/votes/{start-date}/{end-date}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns all votes in a in a particular date range (fewer than 30 days). API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-votes-by-date"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/{chamber}/votes/{start-date}/{end-date}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{chamber}/votes/{start-date}/{end-date}.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{congress-number}/nominations.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns Senate votes on presidential nominations. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-nom-votes"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/{congress-number}/nominations",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{congress-number}/nominations.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{congress-number}/{chamber}/bills/{type}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns 20 most recent bills by type. For the current Congress, \"recent bills\" can be one of four types (see the descriptions below). For previous Congresses, \"recent bills\" means the last 20 bills of that Congress. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-bills"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/{congress-number}/{chamber}/bills/{type}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{congress-number}/{chamber}/bills/{type}.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{congress-number}/{chamber}/members.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            },
            {
              "name" : "state",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the list of members by state. Format: Two-letter state code (e.g., CA)"
              }
            },
            {
              "name" : "district",
              "type" : "xsd:integer",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the list of members by district (House only). If you specify a district, you must also specify a state. If the district number you specify is higher than the total number of districts for that state, a 404 response will be returned. Note: Member list responses include district numbers. Format: House of Representatives district number"
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves a list of members of a particular chamber in a particular Congress. API Key for Congress API. Limits the list of members by state. Format: Two-letter state code (e.g., CA) Limits the list of members by district (House only). If you specify a district, you must also specify a state. If the district number you specify is higher than the total number of districts for that state, a 404 response will be returned. Note: Member list responses include district numbers. Format: House of Representatives district number",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-members"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/{congress-number}/{chamber}/members",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{congress-number}/{chamber}/members.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/members/{member-id}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves biographical and Congressional role information for a particular member of Congress. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-member-roles"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/members/{member-id}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/members/{member-id}.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/members/new.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns a list of the most recent new members of the current Congress. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-new-members"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/members/new",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/members/new.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/members/{chamber}/{state}/{district}/current.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns the current members of Congress for a particular chamber. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-current-member"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/members/{chamber}/{state}/{district}/current",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/members/{chamber}/{state}/{district}/current.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{congress-number}/{chamber}/members/leaving.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns a list of members who have left the Senate or House or have announced plans to do so. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-members-leaving"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/{congress-number}/{chamber}/members/leaving",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{congress-number}/{chamber}/members/leaving.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/members/{member-id}/votes.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieves the most recent vote positions for a specific member of the House of Representatives or Senate. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-member-positions"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/members/{member-id}/votes",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/members/{member-id}/votes.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/members/{first-member-id}/votes/{second-member-id}/{congress-number}/{chamber}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Compares two members' vote positions in a particular Congress and chamber. Responses include four calculated values, showing the number and percentage of votes in which the members took the same position or opposing positions. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-compare-members"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/members/{first-member-id}/votes/{second-member-id}/{congress-number}/{chamber}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/members/{first-member-id}/votes/{second-member-id}/{congress-number}/{chamber}.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/members/{member-id}/bills/{type}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns bill cosponsorship data for a particular member. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-cosponsor-bills"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/members/{member-id}/bills/{type}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/members/{member-id}/bills/{type}.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/members/{member-id-1}/bills/{member-id-2}/{congress-number}/{chamber}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Compares bill sponsorship between two members who served in the same Congress and chamber. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-member-sponsorship-comparison"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/members/{member-id-1}/bills/{member-id-2}/{congress-number}/{chamber}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/members/{member-id-1}/bills/{member-id-2}/{congress-number}/{chamber}.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/members/{member-id}/bills/{type}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns the 20 bills most recently introduced or updated by a particular member. Results can include more than one Congress. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-bills-by-member"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/members/{member-id}/bills/{type}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/members/{member-id}/bills/{type}.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{congress-number}/bills/{bill-id}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns additional details about a particular bill, including actions taken. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-bill-details"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/{congress-number}/bills/{bill-id}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{congress-number}/bills/{bill-id}.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{congress-number}/bills/{bill-id}/{resource}.{response-format}",
          "doc" : {
            "t" : "Returns bill subject terms, amendments or related bills.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-bill-subjects"
          },
          "curl" : "curl -X GET  http://api.nytimes.com/svc/politics/v3/us/legislative/congress/{congress-number}/bills/{bill-id}/{resource}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{congress-number}/bills/{bill-id}/{resource}.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{chamber}/schedule.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns today's schedule for the House or Senate. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-chamber-schedule"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/{chamber}/schedule",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{chamber}/schedule.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{congress-number}/nominees/{nomination-category}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns lists of presidential nominations for civilian positions. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-nominees"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/{congress-number}/nominees/{nomination-category}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{congress-number}/nominees/{nomination-category}.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{congress-number}/nominees/{nominee-id}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns details about a particular presidential civilian nomination. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-nominee-details"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/{congress-number}/nominees/{nominee-id}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{congress-number}/nominees/{nominee-id}.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{congress-number}/nominees/state/{state}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns the 20 most recent nominees from a particular state. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-nominees-by-state"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/{congress-number}/nominees/state/{state}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{congress-number}/nominees/state/{state}.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/states/members/party.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns party membership counts for all states (current Congress only). API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-state-parties"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/states/members/party",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/states/members/party.{response-format}"
        },
        {
          "path" : "/politics/{version}/us/legislative/congress/{congress-number}/{chamber}/committees/{committee-id}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "65551def4f298d7b18824aca7ebe3b75:1:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Congress API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns a list of Senate or House committees or the members of a particular committee. API Key for Congress API.",
            "url" : "http://developer.nytimes.com/docs/congress_api/#h3-committees"
          },
          "curl" : "curl -X GET  -d 'api-key=65551def4f298d7b18824aca7ebe3b75:1:64325990' http://api.nytimes.com/svc/politics/v3/us/legislative/congress/states/members/party",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Congress API",
          "displayName" : "Congress API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/us/legislative/congress/{congress-number}/{chamber}/committees/{committee-id}.{response-format}"
        },
        {
          "path" : "/politics/{version}/districts.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "32a5e84812bc2d9a9b04ef4c00aa1557:9:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for District API."
              }
            },
            {
              "name" : "lat",
              "type" : "xsd:double",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the response to political districts that contain the specified point. Specify a latitude and longitude to retrieve districts (at all levels) for a particular location in NYC. If you include one of these parameters, you must include the other; you cannot specify only latitude or only longitude. If you do not specify a lat and lng, a complete list of New York City districts will be returned."
              }
            },
            {
              "name" : "lng",
              "type" : "xsd:double",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the response to political districts that contain the specified point. Specify a latitude and longitude to retrieve districts (at all levels) for a particular location in NYC. If you include one of these parameters, you must include the other; you cannot specify only latitude or only longitude. If you do not specify a lat and lng, a complete list of New York City districts will be returned."
              }
            }
          ],
          "doc" : {
            "t" : "Returns New York City political districts. API Key for District API. Limits the response to political districts that contain the specified point. Specify a latitude and longitude to retrieve districts (at all levels) for a particular location in NYC. If you include one of these parameters, you must include the other; you cannot specify only latitude or only longitude. If you do not specify a lat and lng, a complete list of New York City districts will be returned. Limits the response to political districts that contain the specified point. Specify a latitude and longitude to retrieve districts (at all levels) for a particular location in NYC. If you include one of these parameters, you must include the other; you cannot specify only latitude or only longitude. If you do not specify a lat and lng, a complete list of New York City districts will be returned.",
            "url" : "http://developer.nytimes.com/docs/district_api/"
          },
          "curl" : "curl -X GET  -d 'api-key=32a5e84812bc2d9a9b04ef4c00aa1557:9:64325990' http://api.nytimes.com/svc/politics/v2/districts",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Districts API",
          "displayName" : "Districts API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/districts.{response-format}"
        },
        {
          "path" : "/mostpopular/{version}/{resource-type}/{section}/{share-types}/{time-period}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "4413ed4c9a09a153cf6f31083183f7d6:8:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Most Popular API."
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the starting point of the result set. The first 20 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=20 displays results 21–40). Format: positive integer, multiple of 20"
              }
            }
          ],
          "doc" : {
            "t" : "Returns New York City political most_popular. API Key for Most Popular API. Sets the starting point of the result set. The first 20 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=20 displays results 21–40). Format: positive integer, multiple of 20",
            "url" : "http://developer.nytimes.com/docs/district_api/"
          },
          "curl" : "curl -X GET  -d 'api-key=4413ed4c9a09a153cf6f31083183f7d6:8:64325990' http://api.nytimes.com/svc/most_popular/{version}/{resource-type}/{section}/{time-period}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Most Popular API",
          "displayName" : "Most Popular API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/mostpopular/{version}/{resource-type}/{section}/{share-types}/{time-period}.{response-format}"
        },
        {
          "path" : "/movies/{version}/reviews/search.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "887a8ea540f1b1c44a32584e84ee9383:9:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Movie Reviews API."
              }
            },
            {
              "name" : "query",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Search keywords; matches movie title and indexed terms. See API docs for more details."
              }
            },
            {
              "name" : "critics-pick",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits by NYT Critics' Picks status. Set this parameter to Y to limt the results to NYT Critics' Picks. To get only those movies that have not been highlighted by Times critics, specify critics-pick=N. (To get all reviews regardless of critics-pick status, simply omit this parameter.) Accepted values: Y, N"
              }
            },
            {
              "name" : "thousand-best",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits by Best 1,000 Movies status. Set this parameter to Y to limit the results to movies on the Times list of The Best 1,000 Movies Ever Made. To get only those movies that are not on the list, specify thousand-best=N. (To get all reviews regardless of thousand-best status, simply omit this parameter.) Accepted values: Y, N"
              }
            },
            {
              "name" : "dvds",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits by format. Set this parameter to Y to limit the results to movies that have been released on DVD. To get only those movies that have not been released on DVD, specify dvd=N. (To get all reviews regardless of format, simply omit this parameter.) Accepted values: Y, N"
              }
            },
            {
              "name" : "reviewer",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits by a specific NYT critic. Include this parameter to limit your results to reviews by a specific critic. Reviewer names should be hyphenated or concatenated with dots (e.g., manohla-dargis or manohla.dargis)."
              }
            },
            {
              "name" : "publication-date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits by date or range of dates. The publication-date is the date the review was first published in The Times. Format: Single date: YYYY-MM-DD, or Start and end date: YYYY-MM-DD;YYYY-MM-DD"
              }
            },
            {
              "name" : "opening-date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits by date or range of dates. The publication-date is the movie's opening date in the New York region. Format: Single date: YYYY-MM-DD, or Start and end date: YYYY-MM-DD;YYYY-MM-DD"
              }
            },
            {
              "name" : "opening-date",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits by date or range of dates. The publication-date is the movie's opening date in the New York region. Format: Single date: YYYY-MM-DD, or Start and end date: YYYY-MM-DD;YYYY-MM-DD"
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the starting point of the result set. The first 20 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=20 displays results 21–40). Format: Positive integer, multiple of 20"
              }
            },
            {
              "name" : "order",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the sort order of the results. Accepted values: by-title, by-publication-date, by-opening-date, by-dvd-release-date. See API docs for more details."
              }
            }
          ],
          "doc" : {
            "t" : "Returns movie reviews by keyword. API Key for Movie Reviews API. Search keywords; matches movie title and indexed terms. See API docs for more details. Limits by NYT Critics' Picks status. Set this parameter to Y to limt the results to NYT Critics' Picks. To get only those movies that have not been highlighted by Times critics, specify critics-pick=N. (To get all reviews regardless of critics-pick status, simply omit this parameter.) Accepted values: Y, N Limits by Best 1,000 Movies status. Set this parameter to Y to limit the results to movies on the Times list of The Best 1,000 Movies Ever Made. To get only those movies that are not on the list, specify thousand-best=N. (To get all reviews regardless of thousand-best status, simply omit this parameter.) Accepted values: Y, N Limits by format. Set this parameter to Y to limit the results to movies that have been released on DVD. To get only those movies that have not been released on DVD, specify dvd=N. (To get all reviews regardless of format, simply omit this parameter.) Accepted values: Y, N Limits by a specific NYT critic. Include this parameter to limit your results to reviews by a specific critic. Reviewer names should be hyphenated or concatenated with dots (e.g., manohla-dargis or manohla.dargis). Limits by date or range of dates. The publication-date is the date the review was first published in The Times. Format: Single date: YYYY-MM-DD, or Start and end date: YYYY-MM-DD;YYYY-MM-DD Limits by date or range of dates. The publication-date is the movie's opening date in the New York region. Format: Single date: YYYY-MM-DD, or Start and end date: YYYY-MM-DD;YYYY-MM-DD Limits by date or range of dates. The publication-date is the movie's opening date in the New York region. Format: Single date: YYYY-MM-DD, or Start and end date: YYYY-MM-DD;YYYY-MM-DD Sets the starting point of the result set. The first 20 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=20 displays results 21–40). Format: Positive integer, multiple of 20 Sets the sort order of the results. Accepted values: by-title, by-publication-date, by-opening-date, by-dvd-release-date. See API docs for more details.",
            "url" : "http://developer.nytimes.com/docs/movie_reviews_api/#h3-search"
          },
          "curl" : "curl -X GET  -d 'api-key=887a8ea540f1b1c44a32584e84ee9383:9:64325990' http://api.nytimes.com/svc/movies/v2/reviews/search",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Movie Reviews API",
          "displayName" : "Movie Reviews API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/movies/{version}/reviews/search.{response-format}"
        },
        {
          "path" : "/movies/{version}/reviews/{resource-path}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "887a8ea540f1b1c44a32584e84ee9383:9:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Movie Reviews API."
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the starting point of the result set. The first 20 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=20 displays results 21–40). Format: Positive integer, multiple of 20"
              }
            },
            {
              "name" : "order",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the sort order of the results. Accepted values: by-title, by-publication-date, by-opening-date, by-dvd-release-date. See API docs for more details."
              }
            }
          ],
          "doc" : {
            "t" : "Returns movie reviews by keyword. API Key for Movie Reviews API. Sets the starting point of the result set. The first 20 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=20 displays results 21–40). Format: Positive integer, multiple of 20 Sets the sort order of the results. Accepted values: by-title, by-publication-date, by-opening-date, by-dvd-release-date. See API docs for more details.",
            "url" : "http://developer.nytimes.com/docs/movie_reviews_api/#h3-reviews"
          },
          "curl" : "curl -X GET  -d 'api-key=887a8ea540f1b1c44a32584e84ee9383:9:64325990' http://api.nytimes.com/svc/movies/v2/reviews/{resource-path}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Movie Reviews API",
          "displayName" : "Movie Reviews API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/movies/{version}/reviews/{resource-path}.{response-format}"
        },
        {
          "path" : "/movies/{version}/reviews/reviewer/{reviewer-name}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "887a8ea540f1b1c44a32584e84ee9383:9:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Movie Reviews API."
              }
            },
            {
              "name" : "critics-pick",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Set this parameter to Y to get movies selected by reviewer-name as an NYT Critics' Pick. To get only those movies that have not been highlighted by this critic, specify critics-pick=N. (To get all reviews regardless of critics-pick status, simply omit this parameter.) Accepted values: Y, N"
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the starting point of the result set. The first 20 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=20 displays results 21–40). Format: Positive integer, multiple of 20"
              }
            },
            {
              "name" : "order",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the sort order of the results. Accepted values: by-title, by-publication-date, by-opening-date, by-dvd-release-date. See API docs for more details."
              }
            }
          ],
          "doc" : {
            "t" : "Returns movie reviews by a specific Times reviewer. API Key for Movie Reviews API. Set this parameter to Y to get movies selected by reviewer-name as an NYT Critics' Pick. To get only those movies that have not been highlighted by this critic, specify critics-pick=N. (To get all reviews regardless of critics-pick status, simply omit this parameter.) Accepted values: Y, N Sets the starting point of the result set. The first 20 results are shown by default. To page through the results, set offset to the appropriate value (e.g., offset=20 displays results 21–40). Format: Positive integer, multiple of 20 Sets the sort order of the results. Accepted values: by-title, by-publication-date, by-opening-date, by-dvd-release-date. See API docs for more details.",
            "url" : "http://developer.nytimes.com/docs/movie_reviews_api/#h3-reviews-reviewers"
          },
          "curl" : "curl -X GET  -d 'api-key=887a8ea540f1b1c44a32584e84ee9383:9:64325990' http://api.nytimes.com/svc/movies/v2/reviews/reviewer/{reviewer-name}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Movie Reviews API",
          "displayName" : "Movie Reviews API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/movies/{version}/reviews/reviewer/{reviewer-name}.{response-format}"
        },
        {
          "path" : "/movies/{version}/critics/{resource-type}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "887a8ea540f1b1c44a32584e84ee9383:9:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Movie Reviews API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns biographical information about reviewers. API Key for Movie Reviews API.",
            "url" : "http://developer.nytimes.com/docs/movie_reviews_api/#h3-reviewers"
          },
          "curl" : "curl -X GET  -d 'api-key=887a8ea540f1b1c44a32584e84ee9383:9:64325990' http://api.nytimes.com/svc/movies/v2/critics/{resource-type}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Movie Reviews API",
          "displayName" : "Movie Reviews API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/movies/{version}/critics/{resource-type}.{response-format}"
        },
        {
          "path" : "/politics/{version}/ny/legislative/{year}/{chamber}/committees/{committee-name}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "a700c2a580b06029a22fa4898b24c682:9:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for NY State Legislature API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns details about a particular committee. API Key for NY State Legislature API.",
            "url" : "http://developer.nytimes.com/docs/ny_state_leg_api/#h3-cmte-details"
          },
          "curl" : "curl -X GET  -d 'api-key=a700c2a580b06029a22fa4898b24c682:9:64325990' http://api.nytimes.com/svc/politics/v2/ny/legislative/{year}/{chamber}/committees/{committee-name}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "NY State Legislature API",
          "displayName" : "NY State Legislature API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/ny/legislative/{year}/{chamber}/committees/{committee-name}.{response-format}"
        },
        {
          "path" : "/politics/{version}/ny/legislative/members/{member-name}/bills/{type}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "a700c2a580b06029a22fa4898b24c682:9:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for NY State Legislature API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns the 20 bills that were most recently introduced or updated by a particular member. API Key for NY State Legislature API.",
            "url" : "http://developer.nytimes.com/docs/ny_state_leg_api/#h3-bills-by-member"
          },
          "curl" : "curl -X GET  -d 'api-key=a700c2a580b06029a22fa4898b24c682:9:64325990' http://api.nytimes.com/svc/politics/v2/ny/legislative/members/{member-name}/bills/{type}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "NY State Legislature API",
          "displayName" : "NY State Legislature API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/ny/legislative/members/{member-name}/bills/{type}.{response-format}"
        },
        {
          "path" : "/politics/{version}/ny/legislative/{year}/{chamber}/bills/{type}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "a700c2a580b06029a22fa4898b24c682:9:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for NY State Legislature API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns the 20 bills that were most recently introduced or updated (by chamber) API Key for NY State Legislature API.",
            "url" : "http://developer.nytimes.com/docs/ny_state_leg_api/#h3-bills"
          },
          "curl" : "curl -X GET  -d 'api-key=a700c2a580b06029a22fa4898b24c682:9:64325990' http://api.nytimes.com/svc/politics/v2/ny/legislative/{year}/{chamber}/bills/{type}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "NY State Legislature API",
          "displayName" : "NY State Legislature API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/ny/legislative/{year}/{chamber}/bills/{type}.{response-format}"
        },
        {
          "path" : "/politics/{version}/ny/legislative/{year}/bills/{bill-id}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "a700c2a580b06029a22fa4898b24c682:9:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for NY State Legislature API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns additional details about a particular bill. API Key for NY State Legislature API.",
            "url" : "http://developer.nytimes.com/docs/ny_state_leg_api/#h3-bill-details"
          },
          "curl" : "curl -X GET  -d 'api-key=a700c2a580b06029a22fa4898b24c682:9:64325990' http://api.nytimes.com/svc/politics/v2/ny/legislative/{year}/bills/{bill-id}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "NY State Legislature API",
          "displayName" : "NY State Legislature API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/ny/legislative/{year}/bills/{bill-id}.{response-format}"
        },
        {
          "path" : "/politics/{version}/ny/legislative/{year}/{chamber}/members.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "a700c2a580b06029a22fa4898b24c682:9:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for NY State Legislature API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns a list of members by chapter. API Key for NY State Legislature API.",
            "url" : "http://developer.nytimes.com/docs/ny_state_leg_api/#h3-member-lists"
          },
          "curl" : "curl -X GET  -d 'api-key=a700c2a580b06029a22fa4898b24c682:9:64325990' http://api.nytimes.com/svc/politics/v2/ny/legislative/{year}/{chamber}/members",
          "authentication" : {
            "required" : "false"
          },
          "category" : "NY State Legislature API",
          "displayName" : "NY State Legislature API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/ny/legislative/{year}/{chamber}/members.{response-format}"
        },
        {
          "path" : "/politics/{version}/ny/legislative/members/{member-name}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "a700c2a580b06029a22fa4898b24c682:9:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for NY State Legislature API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns details about a particular member of the Senate or Assembly. API Key for NY State Legislature API.",
            "url" : "http://developer.nytimes.com/docs/ny_state_leg_api/#h3-member-details"
          },
          "curl" : "curl -X GET  -d 'api-key=a700c2a580b06029a22fa4898b24c682:9:64325990' http://api.nytimes.com/svc/politics/v2/ny/legislative/members/{member-name}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "NY State Legislature API",
          "displayName" : "NY State Legislature API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/ny/legislative/members/{member-name}.{response-format}"
        },
        {
          "path" : "/politics/{version}/ny/legislative/{chamber}/{district}/current.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "a700c2a580b06029a22fa4898b24c682:9:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for NY State Legislature API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns the current member of the Assembly or Senate for a particular district. API Key for NY State Legislature API.",
            "url" : "http://developer.nytimes.com/docs/ny_state_leg_api/#h3-current-by-district"
          },
          "curl" : "curl -X GET  -d 'api-key=a700c2a580b06029a22fa4898b24c682:9:64325990' http://api.nytimes.com/svc/politics/v2/ny/legislative/{chamber}/{district}/current",
          "authentication" : {
            "required" : "false"
          },
          "category" : "NY State Legislature API",
          "displayName" : "NY State Legislature API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/ny/legislative/{chamber}/{district}/current.{response-format}"
        },
        {
          "path" : "/politics/{version}/ny/legislative/{year}/{chamber}/committees.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "a700c2a580b06029a22fa4898b24c682:9:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for NY State Legislature API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns a list of committees by chamber. API Key for NY State Legislature API.",
            "url" : "http://developer.nytimes.com/docs/ny_state_leg_api/#h3-cmte-lists"
          },
          "curl" : "curl -X GET  -d 'api-key=a700c2a580b06029a22fa4898b24c682:9:64325990' http://api.nytimes.com/svc/politics/v2/ny/legislative/{year}/{chamber}/committees",
          "authentication" : {
            "required" : "false"
          },
          "category" : "NY State Legislature API",
          "displayName" : "NY State Legislature API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/politics/{version}/ny/legislative/{year}/{chamber}/committees.{response-format}"
        },
        {
          "path" : "/real-estate/{version}/sales/count.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Real Estate API."
              }
            },
            {
              "name" : "building-built-year",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the results by the year the property was built. Format: YYYY"
              }
            },
            {
              "name" : "building-type-id",
              "type" : "xsd:integer",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the results to a type of building (e.g., condo). To get a list of a valid building-type-id values, issue a building-types request. Note: Use type 2 (\"Rental\") for apartments."
              }
            },
            {
              "name" : "date-range",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the quarter, month, week or day for the results. Format: quarter: YYYY-Qq, month: YYYY-MM, week: YYYY-Www, day: YYYY-MM-DD. Quarters and weeks are specified by number (e.g., 2008-Q1, 2008-W52) in ISO 8601 format. For listings requests, listings that were active (on the market) during the specified date range are returned. For sales requests, recorded sales within the specified date range are returned."
              }
            },
            {
              "name" : "geo-extent-level",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the geographic unit for the results. This parameter sets the unit (not the value) for the geographic extent of the results. Specify the value (the actual borough, neighborhood or ZIP code) with the geo-extent-value parameter. Accepted values: borough, neighborhood, zip"
              }
            },
            {
              "name" : "geo-extent-value",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the results to a particular area (New York City only). Use geo-extent-level to specify a geographic unit, and then specify a borough, neighborhood or ZIP code with geo-extent-value. To get a list of a valid neighborhood values, use the neighborhoods method."
              }
            },
            {
              "name" : "geo-summary-level",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the geographic unit for grouping the results. Within the extent you specify (with geo-extent-level and geo-extent-value), results are grouped by the geo-summary-level value. Accepted values: borough, neighborhood, zip."
              }
            }
          ],
          "doc" : {
            "t" : "Returns sales counts (for example, the total number of properties sold in the Bronx in the first month of 2008) API Key for Real Estate API. Limits the results by the year the property was built. Format: YYYY Limits the results to a type of building (e.g., condo). To get a list of a valid building-type-id values, issue a building-types request. Note: Use type 2 (\"Rental\") for apartments. Sets the quarter, month, week or day for the results. Format: quarter: YYYY-Qq, month: YYYY-MM, week: YYYY-Www, day: YYYY-MM-DD. Quarters and weeks are specified by number (e.g., 2008-Q1, 2008-W52) in ISO 8601 format. For listings requests, listings that were active (on the market) during the specified date range are returned. For sales requests, recorded sales within the specified date range are returned. Sets the geographic unit for the results. This parameter sets the unit (not the value) for the geographic extent of the results. Specify the value (the actual borough, neighborhood or ZIP code) with the geo-extent-value parameter. Accepted values: borough, neighborhood, zip Limits the results to a particular area (New York City only). Use geo-extent-level to specify a geographic unit, and then specify a borough, neighborhood or ZIP code with geo-extent-value. To get a list of a valid neighborhood values, use the neighborhoods method. Sets the geographic unit for grouping the results. Within the extent you specify (with geo-extent-level and geo-extent-value), results are grouped by the geo-summary-level value. Accepted values: borough, neighborhood, zip.",
            "url" : "http://developer.nytimes.com/docs/real_estate_api/#h3-sales-count"
          },
          "curl" : "curl -X GET  -d 'api-key=86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990' http://api.nytimes.com/svc/real-estate/v2/sales/count",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Real Estate API",
          "displayName" : "Real Estate API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/real-estate/{version}/sales/count.{response-format}"
        },
        {
          "path" : "/real-estate/v2/neighborhoods.{response-format}",
          "params" : [
            {
              "name" : "borough",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Optional limit by NYC borough. Accepted values: Bronx, Brooklyn, Manhattan, Queens, Staten Island"
              }
            },
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Real Estate API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns valid neighborhood values. Optional limit by NYC borough. Accepted values: Bronx, Brooklyn, Manhattan, Queens, Staten Island API Key for Real Estate API.",
            "url" : "http://developer.nytimes.com/docs/real_estate_api/"
          },
          "curl" : "curl -X GET  -d 'api-key=86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990' http://api.nytimes.com/svc/real-estate/v2/neighborhoods",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Real Estate API",
          "displayName" : "Real Estate API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/real-estate/v2/neighborhoods.{response-format}"
        },
        {
          "path" : "/real-estate/{version}/listings/percentile/{percentile-value}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Real Estate API."
              }
            },
            {
              "name" : "bedrooms",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "default" : "1",
              "required" : "true",
              "doc" : {
                "t" : "Limits the results by number of bedrooms. Default: 1 or more"
              }
            },
            {
              "name" : "building-type-id",
              "type" : "xsd:integer",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the results to a type of building (e.g., condo). To get a list of a valid building-type-id values, issue a building-types request. Note: Use type 2 (\"Rental\") for apartments."
              }
            },
            {
              "name" : "date-range",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the quarter, month, week or day for the results. Format: quarter: YYYY-Qq, month: YYYY-MM, week: YYYY-Www, day: YYYY-MM-DD. Quarters and weeks are specified by number (e.g., 2008-Q1, 2008-W52) in ISO 8601 format. For listings requests, listings that were active (on the market) during the specified date range are returned. For sales requests, recorded sales within the specified date range are returned."
              }
            },
            {
              "name" : "geo-extent-level",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the geographic unit for the results. This parameter sets the unit (not the value) for the geographic extent of the results. Specify the value (the actual borough, neighborhood or ZIP code) with the geo-extent-value parameter. Accepted values: borough, neighborhood, zip"
              }
            },
            {
              "name" : "geo-extent-value",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the results to a particular area (New York City only). Use geo-extent-level to specify a geographic unit, and then specify a borough, neighborhood or ZIP code with geo-extent-value. To get a list of a valid neighborhood values, use the neighborhoods method."
              }
            }
          ],
          "doc" : {
            "t" : "Returns listings percentiles (for example, the 50th percentile price for condo listings in Manhattan in July 2007) API Key for Real Estate API. Limits the results by number of bedrooms. Default: 1 or more Limits the results to a type of building (e.g., condo). To get a list of a valid building-type-id values, issue a building-types request. Note: Use type 2 (\"Rental\") for apartments. Sets the quarter, month, week or day for the results. Format: quarter: YYYY-Qq, month: YYYY-MM, week: YYYY-Www, day: YYYY-MM-DD. Quarters and weeks are specified by number (e.g., 2008-Q1, 2008-W52) in ISO 8601 format. For listings requests, listings that were active (on the market) during the specified date range are returned. For sales requests, recorded sales within the specified date range are returned. Sets the geographic unit for the results. This parameter sets the unit (not the value) for the geographic extent of the results. Specify the value (the actual borough, neighborhood or ZIP code) with the geo-extent-value parameter. Accepted values: borough, neighborhood, zip Limits the results to a particular area (New York City only). Use geo-extent-level to specify a geographic unit, and then specify a borough, neighborhood or ZIP code with geo-extent-value. To get a list of a valid neighborhood values, use the neighborhoods method.",
            "url" : "http://developer.nytimes.com/docs/real_estate_api/#h3-listings-percentile"
          },
          "curl" : "curl -X GET  -d 'api-key=86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990&bedrooms=1' http://api.nytimes.com/svc/real-estate/v2/listings/percentile/{percentile-value}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Real Estate API",
          "displayName" : "Real Estate API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/real-estate/{version}/listings/percentile/{percentile-value}.{response-format}"
        },
        {
          "path" : "/real-estate/{version}/listings/count.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Real Estate API."
              }
            },
            {
              "name" : "bedrooms",
              "type" : "xsd:positiveInteger",
              "style" : "query",
              "default" : "1",
              "required" : "true",
              "doc" : {
                "t" : "Limits the results by number of bedrooms. Default: 1 or more"
              }
            },
            {
              "name" : "building-built-year",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the results by the year the property was built. Format: YYYY"
              }
            },
            {
              "name" : "building-type-id",
              "type" : "xsd:integer",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the results to a type of building (e.g., condo). To get a list of a valid building-type-id values, issue a building-types request. Note: Use type 2 (\"Rental\") for apartments."
              }
            },
            {
              "name" : "date-range",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the quarter, month, week or day for the results. Format: quarter: YYYY-Qq, month: YYYY-MM, week: YYYY-Www, day: YYYY-MM-DD. Quarters and weeks are specified by number (e.g., 2008-Q1, 2008-W52) in ISO 8601 format. For listings requests, listings that were active (on the market) during the specified date range are returned. For sales requests, recorded sales within the specified date range are returned."
              }
            },
            {
              "name" : "geo-extent-level",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the geographic unit for the results. This parameter sets the unit (not the value) for the geographic extent of the results. Specify the value (the actual borough, neighborhood or ZIP code) with the geo-extent-value parameter. Accepted values: borough, neighborhood, zip"
              }
            },
            {
              "name" : "geo-extent-value",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the results to a particular area (New York City only). Use geo-extent-level to specify a geographic unit, and then specify a borough, neighborhood or ZIP code with geo-extent-value. To get a list of a valid neighborhood values, use the neighborhoods method."
              }
            },
            {
              "name" : "geo-summary-level",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the geographic unit for grouping the results. Within the extent you specify (with geo-extent-level and geo-extent-value), results are grouped by the geo-summary-level value. Accepted values: borough, neighborhood, zip."
              }
            },
            {
              "name" : "loft",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "N",
              "required" : "true",
              "doc" : {
                "t" : "Limits the results to lofts. Lofts are defined as properties with zero bedrooms, priced at under $5 million. Accepted values: Y, N. Default: N"
              }
            }
          ],
          "doc" : {
            "t" : "Returns listings counts (for example, the total number of two-bedroom apartments listed in 10025 in September 2008) API Key for Real Estate API. Limits the results by number of bedrooms. Default: 1 or more Limits the results by the year the property was built. Format: YYYY Limits the results to a type of building (e.g., condo). To get a list of a valid building-type-id values, issue a building-types request. Note: Use type 2 (\"Rental\") for apartments. Sets the quarter, month, week or day for the results. Format: quarter: YYYY-Qq, month: YYYY-MM, week: YYYY-Www, day: YYYY-MM-DD. Quarters and weeks are specified by number (e.g., 2008-Q1, 2008-W52) in ISO 8601 format. For listings requests, listings that were active (on the market) during the specified date range are returned. For sales requests, recorded sales within the specified date range are returned. Sets the geographic unit for the results. This parameter sets the unit (not the value) for the geographic extent of the results. Specify the value (the actual borough, neighborhood or ZIP code) with the geo-extent-value parameter. Accepted values: borough, neighborhood, zip Limits the results to a particular area (New York City only). Use geo-extent-level to specify a geographic unit, and then specify a borough, neighborhood or ZIP code with geo-extent-value. To get a list of a valid neighborhood values, use the neighborhoods method. Sets the geographic unit for grouping the results. Within the extent you specify (with geo-extent-level and geo-extent-value), results are grouped by the geo-summary-level value. Accepted values: borough, neighborhood, zip. Limits the results to lofts. Lofts are defined as properties with zero bedrooms, priced at under $5 million. Accepted values: Y, N. Default: N",
            "url" : "http://developer.nytimes.com/docs/real_estate_api/#h3-listings-count"
          },
          "curl" : "curl -X GET  -d 'api-key=86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990&bedrooms=1&loft=N' http://api.nytimes.com/svc/real-estate/v2/listings/count",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Real Estate API",
          "displayName" : "Real Estate API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/real-estate/{version}/listings/count.{response-format}"
        },
        {
          "path" : "/real-estate/{version}/sales/percentile/{percentile-value}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Real Estate API."
              }
            },
            {
              "name" : "building-type-id",
              "type" : "xsd:integer",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the results to a type of building (e.g., condo). To get a list of a valid building-type-id values, issue a building-types request. Note: Use type 2 (\"Rental\") for apartments."
              }
            },
            {
              "name" : "date-range",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the quarter, month, week or day for the results. Format: quarter: YYYY-Qq, month: YYYY-MM, week: YYYY-Www, day: YYYY-MM-DD. Quarters and weeks are specified by number (e.g., 2008-Q1, 2008-W52) in ISO 8601 format. For listings requests, listings that were active (on the market) during the specified date range are returned. For sales requests, recorded sales within the specified date range are returned."
              }
            },
            {
              "name" : "geo-extent-level",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Sets the geographic unit for the results. This parameter sets the unit (not the value) for the geographic extent of the results. Specify the value (the actual borough, neighborhood or ZIP code) with the geo-extent-value parameter. Accepted values: borough, neighborhood, zip"
              }
            },
            {
              "name" : "geo-extent-value",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the results to a particular area (New York City only). Use geo-extent-level to specify a geographic unit, and then specify a borough, neighborhood or ZIP code with geo-extent-value. To get a list of a valid neighborhood values, use the neighborhoods method."
              }
            }
          ],
          "doc" : {
            "t" : "Returns sales percentiles (for example, the 90th percentile price of town houses sold on the Upper East Side in the last quarter of 2008) API Key for Real Estate API. Limits the results to a type of building (e.g., condo). To get a list of a valid building-type-id values, issue a building-types request. Note: Use type 2 (\"Rental\") for apartments. Sets the quarter, month, week or day for the results. Format: quarter: YYYY-Qq, month: YYYY-MM, week: YYYY-Www, day: YYYY-MM-DD. Quarters and weeks are specified by number (e.g., 2008-Q1, 2008-W52) in ISO 8601 format. For listings requests, listings that were active (on the market) during the specified date range are returned. For sales requests, recorded sales within the specified date range are returned. Sets the geographic unit for the results. This parameter sets the unit (not the value) for the geographic extent of the results. Specify the value (the actual borough, neighborhood or ZIP code) with the geo-extent-value parameter. Accepted values: borough, neighborhood, zip Limits the results to a particular area (New York City only). Use geo-extent-level to specify a geographic unit, and then specify a borough, neighborhood or ZIP code with geo-extent-value. To get a list of a valid neighborhood values, use the neighborhoods method.",
            "url" : "http://developer.nytimes.com/docs/real_estate_api/#h3-sales-percentile"
          },
          "curl" : "curl -X GET  -d 'api-key=86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990' http://api.nytimes.com/svc/real-estate/v2/sales/percentile/{percentile-value}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Real Estate API",
          "displayName" : "Real Estate API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/real-estate/{version}/sales/percentile/{percentile-value}.{response-format}"
        },
        {
          "path" : "/real-estate/v2/building-types.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Real Estate API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns valid building-type-id values. API Key for Real Estate API.",
            "url" : "http://developer.nytimes.com/docs/real_estate_api/"
          },
          "curl" : "curl -X GET  -d 'api-key=86ddd05d3b2a50a1c94ebcc93550d11f:16:64325990' http://api.nytimes.com/svc/real-estate/v2/building-types",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Real Estate API",
          "displayName" : "Real Estate API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/real-estate/v2/building-types.{response-format}"
        },
        {
          "path" : "/news/{version}/content.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "718e9c614a4e157613c18ea201dca81c:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Times Newswire API."
              }
            },
            {
              "name" : "url",
              "type" : "xsd:anyURI",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The complete URL of a specific news item, URL-encoded or backslash-escaped."
              }
            }
          ],
          "doc" : {
            "t" : "Returns a specific news item. The response will be a standard Newswire response, but for that item only. Note: The Newswire cache is cleared regularly, so only recent news items can be retrieved with this request type. Use the Article Search API to get older items. API Key for Times Newswire API. The complete URL of a specific news item, URL-encoded or backslash-escaped.",
            "url" : "http://developer.nytimes.com/docs/times_newswire_api/#h3-specific-item"
          },
          "curl" : "curl -X GET  -d 'api-key=718e9c614a4e157613c18ea201dca81c:0:64325990' http://api.nytimes.com/svc/news/v3/content",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Times Newswire API",
          "displayName" : "Times Newswire API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/news/{version}/content.{response-format}"
        },
        {
          "path" : "/news/{version}/content/{source}/{section}/{time-period}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "718e9c614a4e157613c18ea201dca81c:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Times Newswire API."
              }
            },
            {
              "name" : "limit",
              "type" : "xsd:integer",
              "style" : "query",
              "default" : "20",
              "required" : "true",
              "doc" : {
                "t" : "Limits the number of results. Format: Integer, 1–20. Default: 20"
              }
            },
            {
              "name" : "offset",
              "type" : "xsd:integer",
              "style" : "query",
              "default" : "0",
              "required" : "true",
              "doc" : {
                "t" : "Sets the starting point of the result set. Format: Integer, 0-[number of available records]. Default: 0 (first record)"
              }
            }
          ],
          "doc" : {
            "t" : "Returns recent news items. API Key for Times Newswire API. Limits the number of results. Format: Integer, 1–20. Default: 20 Sets the starting point of the result set. Format: Integer, 0-[number of available records]. Default: 0 (first record)",
            "url" : "http://developer.nytimes.com/docs/times_newswire_api/#h3-items"
          },
          "curl" : "curl -X GET  -d 'api-key=718e9c614a4e157613c18ea201dca81c:0:64325990&limit=20&offset=0' http://api.nytimes.com/svc/news/v3/content/{source}/{section}/{time-period}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Times Newswire API",
          "displayName" : "Times Newswire API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/news/{version}/content/{source}/{section}/{time-period}.{response-format}"
        },
        {
          "path" : "/news/{version}/content/section-list.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "718e9c614a4e157613c18ea201dca81c:0:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Times Newswire API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns list of valid section names. API Key for Times Newswire API.",
            "url" : "http://developer.nytimes.com/docs/times_newswire_api/"
          },
          "curl" : "curl -X GET  -d 'api-key=718e9c614a4e157613c18ea201dca81c:0:64325990' http://api.nytimes.com/svc/news/v3/content/section-list",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Times Newswire API",
          "displayName" : "Times Newswire API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/news/{version}/content/section-list.{response-format}"
        },
        {
          "path" : "/timespeople/api/{version}/user/{hash}/id.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "f681165acece8375403e96ae5e6650c6:13:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Times People API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns the user ID of a TimesPeople user given a hash of their email address. API Key for Times People API.",
            "url" : "http://developer.nytimes.com/docs/timespeople_api/#h3-id-hash"
          },
          "curl" : "curl -X GET  -d 'api-key=f681165acece8375403e96ae5e6650c6:13:64325990' http://api.nytimes.com/svc/timespeople/api/v1/user/{hash}/id.js",
          "authentication" : {
            "required" : "false"
          },
          "category" : "TimesPeople API",
          "displayName" : "TimesPeople API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/timespeople/api/{version}/user/{hash}/id.{response-format}"
        },
        {
          "path" : "/timespeople/api/{version}/user/{user-id}/{data-type}.{response-format}",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "f681165acece8375403e96ae5e6650c6:13:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Times People API."
              }
            }
          ],
          "doc" : {
            "t" : "Returns a user's profile, activity, news feed or followers/following lists. API Key for Times People API.",
            "url" : "http://developer.nytimes.com/docs/timespeople_api/#h3-id-data"
          },
          "curl" : "curl -X GET  -d 'api-key=f681165acece8375403e96ae5e6650c6:13:64325990' http://api.nytimes.com/svc/timespeople/api/v1/user/{user-id}/{data-type}.js",
          "authentication" : {
            "required" : "false"
          },
          "category" : "TimesPeople API",
          "displayName" : "TimesPeople API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/timespeople/api/{version}/user/{user-id}/{data-type}.{response-format}"
        },
        {
          "path" : "/timestags/suggest",
          "params" : [
            {
              "name" : "api-key",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "c28274f6569da85ddee578fdea6886bb:10:64325990",
              "required" : "true",
              "doc" : {
                "t" : "API Key for Times People API."
              }
            },
            {
              "name" : "query",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Your search query. If you do not specify a value for \"filter\", your query will be matched to tags in all four Times dictionaries: subject, geographic location, organization and person. See API docs for more info."
              }
            },
            {
              "name" : "filter",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Limits the results to the specified Times dictionaries. See API docs for more info. Format: Comma-delimited list (case-sensitive)"
              }
            },
            {
              "name" : "max",
              "type" : "xsd:integer",
              "style" : "query",
              "default" : "10",
              "required" : "true",
              "doc" : {
                "t" : "Sets the maximum number of results. If you do not specify a value for max, 10 results will be returned."
              }
            }
          ],
          "doc" : {
            "t" : "With the TimesTags API, you can mine the riches of the New York Times tag set. The TimesTags service matches your query to the controlled vocabularies that fuel NYTimes.com metadata. You supply a string of characters, and the service returns a ranked list of suggested terms. API Key for Times People API. Your search query. If you do not specify a value for \"filter\", your query will be matched to tags in all four Times dictionaries: subject, geographic location, organization and person. See API docs for more info. Limits the results to the specified Times dictionaries. See API docs for more info. Format: Comma-delimited list (case-sensitive) Sets the maximum number of results. If you do not specify a value for max, 10 results will be returned.",
            "url" : "http://developer.nytimes.com/docs/timestags_api/"
          },
          "curl" : "curl -X GET  -d 'api-key=c28274f6569da85ddee578fdea6886bb:10:64325990&max=10' http://api.nytimes.com/svc/timestags/suggest",
          "authentication" : {
            "required" : "false"
          },
          "category" : "TimesTags API",
          "displayName" : "TimesTags API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.nytimes.com/svc/timestags/suggest"
        }
      ]
    },
    "auth_strategy" : "custom",
    "custom_tokens" : [
      {
        "name" : "Articles API key"
      },
      {
        "name" : "Best Sellers API key"
      },
      {
        "name" : "Campaign Finance API key"
      },
      {
        "name" : "Community API key"
      },
      {
        "name" : "Congress API key"
      },
      {
        "name" : "Districts API key"
      },
      {
        "name" : "Event Listings API key"
      },
      {
        "name" : "Geo API API key"
      },
      {
        "name" : "Most Popular API key"
      },
      {
        "name" : "Movie Reviews API key"
      },
      {
        "name" : "Real Estate API key"
      },
      {
        "name" : "Semantic API key"
      },
      {
        "name" : "Newswire API key"
      },
      {
        "name" : "Times Tags API key"
      }
    ],
    "enabled" : false,
    "logo" : "http://octoblu-api-logos.s3.amazonaws.com/color/nytimes.png",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/nytimes.png",
    "name" : "NewYorkTimes",
    "type" : "channel:new_york_times"
  },
  {
    "_id" : "52f9b53cebbb407a9400000b",
    "application" : {
      "base" : "http://api.musixmatch.com/ws/1.1",
      "resources" : [
        {
          "path" : "/album.get",
          "params" : [
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            }
          ],
          "doc" : {
            "t" : "Get an album from our database: name, release_date, release_type, cover art.Signup for an API Key here https://developer.musixmatch.com/signup",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/album-get"
          },
          "curl" : "curl -X GET  -d 'apikey=' http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/album.get",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Album",
          "displayName" : "Album_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/album.get"
        },
        {
          "path" : "/album.tracks.get",
          "params" : [
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            }
          ],
          "doc" : {
            "t" : "This api provides you the list of the songs of an album.Signup for an API Key here https://developer.musixmatch.com/signup",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/album-tracks-get"
          },
          "curl" : "curl -X GET  -d 'apikey=' http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/album.tracks.get",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Album",
          "displayName" : "Album_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/album.tracks.get"
        },
        {
          "path" : "/artist.get",
          "params" : [
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            }
          ],
          "doc" : {
            "t" : "Get the artist data from our database.Signup for an API Key here https://developer.musixmatch.com/signup",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/artist-get"
          },
          "curl" : "curl -X GET  -d 'apikey=' http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/artist.get",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/artist.get"
        },
        {
          "path" : "/artist.albums.get",
          "params" : [
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            }
          ],
          "doc" : {
            "t" : "Get the album discography of an artist.Signup for an API Key here https://developer.musixmatch.com/signup",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/artist-albums-get"
          },
          "curl" : "curl -X GET  -d 'apikey=' http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/artist.get",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/artist.albums.get"
        },
        {
          "path" : "/chart.artists.get",
          "params" : [
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            }
          ],
          "doc" : {
            "t" : "This api provides you the list of the top artists of a given country.Signup for an API Key here https://developer.musixmatch.com/signup",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/artist-chart-get"
          },
          "curl" : "curl -X GET  -d 'apikey=' http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/chart.tracks.get",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Chart",
          "displayName" : "Chart_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/chart.artists.get"
        },
        {
          "path" : "/chart.tracks.get",
          "params" : [
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            }
          ],
          "doc" : {
            "t" : "This api provides you the list of the top songs of a given country.Signup for an API Key here https://developer.musixmatch.com/signup",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/track-chart-get"
          },
          "curl" : "curl -X GET  -d 'apikey=' http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/chart.tracks.get",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Chart",
          "displayName" : "Chart_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/chart.tracks.get"
        },
        {
          "path" : "/track.lyrics.get",
          "params" : [
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            }
          ],
          "doc" : {
            "t" : "Get the lyrics of a track.Signup for an API Key here https://developer.musixmatch.com/signup",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/track-lyrics-get"
          },
          "curl" : "curl -X GET  -d 'apikey=' http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/track.lyrics.get",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Lyrics",
          "displayName" : "Lyrics_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/track.lyrics.get"
        },
        {
          "path" : "/matcher.track.get",
          "params" : [
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            }
          ],
          "doc" : {
            "t" : "Match your song against our database.Signup for an API Key here https://developer.musixmatch.com/signup",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/matcher-track-get"
          },
          "curl" : "curl -X GET  -d 'apikey=' http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/matcher.track.get",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Matcher",
          "displayName" : "Matcher_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/matcher.track.get"
        },
        {
          "path" : "/matcher.subtitle.get",
          "doc" : {
            "t" : "Get the subtitles for a song given his title,artist and duration. You can use the f_subtitle_length_max_deviation to fetch subtitles within a given duration range.",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/matcher-subtitle-get"
          },
          "curl" : "curl -X GET  http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/matcher.subtitle.get",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Matcher",
          "displayName" : "Matcher_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/matcher.subtitle.get"
        },
        {
          "path" : "/artist.search",
          "params" : [
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            }
          ],
          "doc" : {
            "t" : "Search for artists in our database.Signup for an API Key here https://developer.musixmatch.com/signup",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/artist-search"
          },
          "curl" : "curl -X GET  -d 'apikey=' http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/artist.search",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Search",
          "displayName" : "Search_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/artist.search"
        },
        {
          "path" : "/track.search",
          "params" : [
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            },
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            }
          ],
          "doc" : {
            "t" : "Search for a track in our database.Signup for an API Key here https://developer.musixmatch.com/signupRetreive the subtitle of a track. Return the subtitle of a track in LRC or DFXP format.Signup for an API Key here https://developer.musixmatch.com/signupGet a track info from our database: title, artist, instrumental flag and cover art.Signup for an API Key here https://developer.musixmatch.com/signup",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/track-search"
          },
          "curl" : "curl -X GET  -d 'apikey=&apikey=' http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/track.search",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/track.search"
        },
        {
          "path" : "/track.search",
          "params" : [
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            }
          ],
          "doc" : {
            "t" : "Retreive the subtitle of a track. Return the subtitle of a track in LRC or DFXP format.Signup for an API Key here https://developer.musixmatch.com/signupGet a track info from our database: title, artist, instrumental flag and cover art.Signup for an API Key here https://developer.musixmatch.com/signup",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/track-subtitle-get"
          },
          "curl" : "curl -X GET  -d 'apikey=' http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/track.subtitles.get",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/track.search"
        },
        {
          "path" : "/track.search",
          "params" : [
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            }
          ],
          "doc" : {
            "t" : "Get a track info from our database: title, artist, instrumental flag and cover art.Signup for an API Key here https://developer.musixmatch.com/signup",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/track-get"
          },
          "curl" : "curl -X GET  -d 'apikey=' http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/track.get",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/track.search"
        },
        {
          "path" : "/track.subtitles.get",
          "params" : [
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            }
          ],
          "doc" : {
            "t" : "Retreive the subtitle of a track. Return the subtitle of a track in LRC or DFXP format.Signup for an API Key here https://developer.musixmatch.com/signupGet a track info from our database: title, artist, instrumental flag and cover art.Signup for an API Key here https://developer.musixmatch.com/signup",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/track-subtitle-get"
          },
          "curl" : "curl -X GET  -d 'apikey=' http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/track.subtitles.get",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/track.subtitles.get"
        },
        {
          "path" : "/track.subtitles.get",
          "params" : [
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            }
          ],
          "doc" : {
            "t" : "Get a track info from our database: title, artist, instrumental flag and cover art.Signup for an API Key here https://developer.musixmatch.com/signup",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/track-get"
          },
          "curl" : "curl -X GET  -d 'apikey=' http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/track.get",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/track.subtitles.get"
        },
        {
          "path" : "/track.get",
          "params" : [
            {
              "name" : "apikey",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Signup for an API Key here https://developer.musixmatch.com/signup"
              }
            }
          ],
          "doc" : {
            "t" : "Get a track info from our database: title, artist, instrumental flag and cover art.Signup for an API Key here https://developer.musixmatch.com/signup",
            "url" : "https://developer.musixmatch.com/documentation/api-reference/track-get"
          },
          "curl" : "curl -X GET  -d 'apikey=' http://api.musixmatch.com/ws/1.1/curl -X GET  http://api.musixmatch.com/ws/1.1/track.get",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://api.musixmatch.com/ws/1.1/track.get"
        }
      ]
    },
    "auth_strategy" : "simple",
    "logo" : "https://lh4.ggpht.com/tNQz5tVEyZi9QGNVh--pPohvsvf-VT-EgeLdkkwt7WsQnLxZjUuPUtTamop_YfgEj8w=w300",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/musixmatch.png",
    "name" : "MusixMatch",
    "enabled" : true,
    "oauth" : {
      "tokenMethod" : "apikey_query"
    },
    "type" : "channel:musix_match"
  },
  {
    "_id" : "52f9b59edfeb5678c700000b",
    "application" : {
      "base" : "http://ws.audioscrobbler.com/2.0",
      "resources" : [
        {
          "path" : "/?method=album.search",
          "doc" : {
            "t" : "Search for an album by name. Returns album matches sorted by relevance.",
            "url" : "http://www.last.fm/api/show?service=357"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=album.search&album={album}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Album",
          "displayName" : "Album_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=album.search"
        },
        {
          "path" : "/?method=album.getTopTags",
          "doc" : {
            "t" : "Get the top tags for an album on Last.fm, ordered by popularity.",
            "url" : "http://www.last.fm/api/show?service=438"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=album.gettoptags&artist={artist}&album={album}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Album",
          "displayName" : "Album_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=album.getTopTags"
        },
        {
          "path" : "/?method=album.getShouts",
          "doc" : {
            "t" : "Get shouts for this album. Also available as an rss feed.",
            "url" : "http://www.last.fm/api/show?service=450"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=album.getshouts&artist={artist}&album={album}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Album",
          "displayName" : "Album_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=album.getShouts"
        },
        {
          "path" : "/?method=album.getInfo",
          "doc" : {
            "t" : "Get the metadata for an album on Last.fm using the album name or a musicbrainz id. See playlist.fetch on how to get the album playlist.",
            "url" : "http://www.last.fm/api/show?service=290"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=album.getinfo&artist={artist}&album={album}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Album",
          "displayName" : "Album_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=album.getInfo"
        },
        {
          "path" : "/?method=album.getBuyLinks",
          "doc" : {
            "t" : "Get a list of Buy Links for a particular Album. It is required that you supply either the artist and track params or the mbid param.",
            "url" : "http://www.last.fm/api/show?service=429"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=album.getbuylinks&artist={artist}&album={album}&country={country}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Album",
          "displayName" : "Album_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=album.getBuyLinks"
        },
        {
          "path" : "/?method=artist.getEvents",
          "doc" : {
            "t" : "Get a list of upcoming events for this artist. Easily integratable into calendars, using the ical standards.",
            "url" : "http://www.last.fm/api/show?service=117"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=artist.getevents&artist={artist}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=artist.getEvents"
        },
        {
          "path" : "/?method=artist.getShouts",
          "doc" : {
            "t" : "Get shouts for this artist. Also available as an rss feed.",
            "url" : "http://www.last.fm/api/show?service=397"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=artist.getshouts&artist={artist}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=artist.getShouts"
        },
        {
          "path" : "/?method=artist.getPodcast",
          "doc" : {
            "t" : "Get a podcast of free mp3s based on an artist.",
            "url" : "http://www.last.fm/api/show?service=118"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=artist.getpodcast&artist={artist}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=artist.getPodcast"
        },
        {
          "path" : "/?method=artist.getPastEvents",
          "doc" : {
            "t" : "Get a paginated list of all the events this artist has played at in the past.",
            "url" : "http://www.last.fm/api/show?service=428"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=artist.getpastevents&artist={artist}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=artist.getPastEvents"
        },
        {
          "path" : "/?method=artist.getInfo",
          "doc" : {
            "t" : "Get the metadata for an artist. Includes biography.",
            "url" : "http://www.last.fm/api/show?service=267"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist={artist}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=artist.getInfo"
        },
        {
          "path" : "/?method=artist.getCorrection",
          "doc" : {
            "t" : "Use the last.fm corrections data to check whether the supplied artist has a correction to a canonical artist.",
            "url" : "http://www.last.fm/api/show?service=446"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=artist.getcorrection&artist={artist}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=artist.getCorrection"
        },
        {
          "path" : "/?method=artist.getImages",
          "doc" : {
            "t" : "Get Images for this artist in a variety of sizes.",
            "url" : "http://www.last.fm/api/show?service=407"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=artist.getimages&artist={artist}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=artist.getImages"
        },
        {
          "path" : "/?method=artist.search",
          "doc" : {
            "t" : "Search for an artist by name. Returns artist matches sorted by relevance.",
            "url" : "http://www.last.fm/api/show?service=272"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=artist.search&artist={artist}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=artist.search"
        },
        {
          "path" : "/?method=artist.getTopTracks",
          "doc" : {
            "t" : "Get the top tracks by an artist on Last.fm, ordered by popularity.",
            "url" : "http://www.last.fm/api/show?service=277"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=artist.gettoptracks&artist={artist}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=artist.getTopTracks"
        },
        {
          "path" : "/?method=artist.getTopTags",
          "doc" : {
            "t" : "Get the top tags for an artist on Last.fm, ordered by popularity.",
            "url" : "http://www.last.fm/api/show?service=288"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=artist.gettoptags&artist={artist}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=artist.getTopTags"
        },
        {
          "path" : "/?method=artist.getTopFans",
          "doc" : {
            "t" : "Get the top fans for an artist on Last.fm, based on listening data.",
            "url" : "http://www.last.fm/api/show?service=310"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=artist.gettopfans&artist={artist}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=artist.getTopFans"
        },
        {
          "path" : "/?method=artist.getTopAlbums",
          "doc" : {
            "t" : "Get the top albums for an artist on Last.fm, ordered by popularity.",
            "url" : "http://www.last.fm/api/show?service=287"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=artist.gettopalbums&artist={artist}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=artist.getTopAlbums"
        },
        {
          "path" : "/?method=artist.getSimilar",
          "doc" : {
            "t" : "Get all the artists similar to this artist.",
            "url" : "http://www.last.fm/api/show?service=119"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=artist.getsimilar&artist={artist}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Artist",
          "displayName" : "Artist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=artist.getSimilar"
        },
        {
          "path" : "/?method=chart.getHypedArtists",
          "doc" : {
            "t" : "Get the hyped artists chart.",
            "url" : "http://www.last.fm/api/show?service=493"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=chart.gethypedartists&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Chart",
          "displayName" : "Chart_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=chart.getHypedArtists"
        },
        {
          "path" : "/?method=chart.getHypedTracks",
          "doc" : {
            "t" : "Get the hyped tracks chart.",
            "url" : "http://www.last.fm/api/show?service=494"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=chart.gethypedtracks&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Chart",
          "displayName" : "Chart_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=chart.getHypedTracks"
        },
        {
          "path" : "/?method=chart.getLovedTracks",
          "doc" : {
            "t" : "Get the most loved tracks chart.",
            "url" : "http://www.last.fm/api/show?service=495"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=chart.getlovedtracks&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Chart",
          "displayName" : "Chart_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=chart.getLovedTracks"
        },
        {
          "path" : "/?method=chart.getTopArtists",
          "doc" : {
            "t" : "Get the top artists chart.",
            "url" : "http://www.last.fm/api/show?service=496"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=chart.gettopartists&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Chart",
          "displayName" : "Chart_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=chart.getTopArtists"
        },
        {
          "path" : "/?method=chart.getTopTags",
          "doc" : {
            "t" : "Get the top tags chart.",
            "url" : "http://www.last.fm/api/show?service=497"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=chart.gettoptags&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Chart",
          "displayName" : "Chart_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=chart.getTopTags"
        },
        {
          "path" : "/?method=chart.getTopTracks",
          "doc" : {
            "t" : "Get the top tracks chart.",
            "url" : "http://www.last.fm/api/show?service=498"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Chart",
          "displayName" : "Chart_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=chart.getTopTracks"
        },
        {
          "path" : "/?method=event.getInfo",
          "doc" : {
            "t" : "Get the metadata for an event on Last.fm. Includes attendance and lineup information.",
            "url" : "http://www.last.fm/api/show?service=292"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=event.getinfo&event={event}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Event",
          "displayName" : "Event_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=event.getInfo"
        },
        {
          "path" : "/?method=event.getAttendees",
          "doc" : {
            "t" : "Get a list of attendees for an event.",
            "url" : "http://www.last.fm/api/show?service=391"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=event.getattendees&event={event}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Event",
          "displayName" : "Event_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=event.getAttendees"
        },
        {
          "path" : "/?method=event.getShouts",
          "doc" : {
            "t" : "Get shouts for this event. Also available as an rss feed.",
            "url" : "http://www.last.fm/api/show?service=399"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=event.getshouts&event={event}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Event",
          "displayName" : "Event_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=event.getShouts"
        },
        {
          "path" : "/?method=geo.getMetroWeeklyChartList",
          "doc" : {
            "t" : "Get a list of available chart periods for this metro, expressed as date ranges which can be sent to the chart services.",
            "url" : "http://www.last.fm/api/show?service=426"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=geo.getmetroweeklychartlist&metro={metro}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Geo",
          "displayName" : "Geo_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=geo.getMetroWeeklyChartList"
        },
        {
          "path" : "/?method=geo.getMetros",
          "doc" : {
            "t" : "Get a list of valid countries and metros for use in the other webservices.",
            "url" : "http://www.last.fm/api/show?service=435"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=geo.getmetros&country={country}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Geo",
          "displayName" : "Geo_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=geo.getMetros"
        },
        {
          "path" : "/?method=geo.getTopArtists",
          "doc" : {
            "t" : "Get the most popular artists on Last.fm by country.",
            "url" : "http://www.last.fm/api/show?service=297"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=geo.gettopartists&country={country}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Geo",
          "displayName" : "Geo_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=geo.getTopArtists"
        },
        {
          "path" : "/?method=geo.getTopTracks",
          "doc" : {
            "t" : "Get the most popular tracks on Last.fm last week by country.",
            "url" : "http://www.last.fm/api/show?service=298"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=geo.gettoptracks&country={country}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Geo",
          "displayName" : "Geo_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=geo.getTopTracks"
        },
        {
          "path" : "/?method=geo.getMetroHypeTrackChart",
          "doc" : {
            "t" : "Get a chart of hyped tracks for a metro.",
            "url" : "http://www.last.fm/api/show?service=422"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=geo.getmetrohypetrackchart&country={country}&metro={metro}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Geo",
          "displayName" : "Geo_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=geo.getMetroHypeTrackChart"
        },
        {
          "path" : "/?method=geo.getMetroTrackChart",
          "doc" : {
            "t" : "Get a chart of tracks for a metro.",
            "url" : "http://www.last.fm/api/show?service=423"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=geo.getmetrotrackchart&country={country}&metro={metro}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Geo",
          "displayName" : "Geo_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=geo.getMetroTrackChart"
        },
        {
          "path" : "/?method=geo.getEvents",
          "doc" : {
            "t" : "Get all events in a specific location by country or city name.",
            "url" : "http://www.last.fm/api/show?service=270"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=geo.getevents&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Geo",
          "displayName" : "Geo_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=geo.getEvents"
        },
        {
          "path" : "/?method=geo.getMetroArtistChart",
          "doc" : {
            "t" : "Get a chart of artists for a metro.",
            "url" : "http://www.last.fm/api/show?service=421"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=geo.getmetroartistchart&country={country}&metro={metro}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Geo",
          "displayName" : "Geo_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=geo.getMetroArtistChart"
        },
        {
          "path" : "/?method=geo.getMetroHypeArtistChart",
          "doc" : {
            "t" : "Get a chart of hyped (up and coming) artists for a metro.",
            "url" : "http://www.last.fm/api/show?service=420"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=geo.getmetrohypeartistchart&country={country}&metro={metro}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Geo",
          "displayName" : "Geo_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=geo.getMetroHypeArtistChart"
        },
        {
          "path" : "/?method=geo.getMetroUniqueArtistChart",
          "doc" : {
            "t" : "Get a chart of the artists which make that metro unique.",
            "url" : "http://www.last.fm/api/show?service=424"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=geo.getmetrouniqueartistchart&country={country}&metro={metro}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Geo",
          "displayName" : "Geo_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=geo.getMetroUniqueArtistChart"
        },
        {
          "path" : "/?method=geo.getMetroUniqueTrackChart",
          "doc" : {
            "t" : "Get a chart of tracks for a metro.",
            "url" : "http://www.last.fm/api/show?service=425"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=geo.getmetrouniquetrackchart&country={country}&metro={metro}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Geo",
          "displayName" : "Geo_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=geo.getMetroUniqueTrackChart"
        },
        {
          "path" : "/?method=group.getWeeklyArtistChart",
          "doc" : {
            "t" : "Get an artist chart for a group, for a given date range. If no date range is supplied, it will return the most recent album chart for this group.",
            "url" : "http://www.last.fm/api/show?service=294"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=group.getweeklyartistchart&group={group}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Group",
          "displayName" : "Group_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=group.getWeeklyArtistChart"
        },
        {
          "path" : "/?method=group.getWeeklyTrackChart",
          "doc" : {
            "t" : "Get a track chart for a group, for a given date range. If no date range is supplied, it will return the most recent album chart for this group.",
            "url" : "http://www.last.fm/api/show?service=296"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=group.getweeklytrackchart&group={group}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Group",
          "displayName" : "Group_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=group.getWeeklyTrackChart"
        },
        {
          "path" : "/?method=group.getWeeklyChartList",
          "doc" : {
            "t" : "Get a list of available charts for this group, expressed as date ranges which can be sent to the chart services.",
            "url" : "http://www.last.fm/api/show?service=295"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=group.getweeklychartlist&group={group}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Group",
          "displayName" : "Group_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=group.getWeeklyChartList"
        },
        {
          "path" : "/?method=group.getMembers",
          "doc" : {
            "t" : "Get a list of members for this group.",
            "url" : "http://www.last.fm/api/show?service=379"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=group.getmembers&group={group}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Group",
          "displayName" : "Group_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=group.getMembers"
        },
        {
          "path" : "/?method=group.getHype",
          "doc" : {
            "t" : "Get the hype list for a group.",
            "url" : "http://www.last.fm/api/show?service=259"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=group.gethype&group={group}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Group",
          "displayName" : "Group_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=group.getHype"
        },
        {
          "path" : "/?method=group.getWeeklyAlbumChart",
          "doc" : {
            "t" : "Get a list of members for this group.",
            "url" : "http://www.last.fm/api/show?service=293"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=group.getweeklyalbumchart&group={group}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Group",
          "displayName" : "Group_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=group.getWeeklyAlbumChart"
        },
        {
          "path" : "/?method=library.getArtists",
          "doc" : {
            "t" : "A paginated list of all the artists in a user's library, with play counts and tag counts.",
            "url" : "http://www.last.fm/api/show?service=322"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=library.getartists&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Library",
          "displayName" : "Library_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=library.getArtists"
        },
        {
          "path" : "/?method=library.getAlbums",
          "doc" : {
            "t" : "A paginated list of all the albums in a user's library, with play counts and tag counts.",
            "url" : "http://www.last.fm/api/show?service=321"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=library.getalbums&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Library",
          "displayName" : "Library_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=library.getAlbums"
        },
        {
          "path" : "/?method=library.getTracks",
          "doc" : {
            "t" : "A paginated list of all the tracks in a user's library, with play counts and tag counts.",
            "url" : "http://www.last.fm/api/show?service=323"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=library.gettracks&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Library",
          "displayName" : "Library_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=library.getTracks"
        },
        {
          "path" : "/?method=playlist.fetch",
          "doc" : {
            "t" : "Fetch XSPF playlists using a lastfm playlist url.",
            "url" : "http://www.last.fm/api/show?service=271"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=playlist.fetch&playlistURL={playlistURL}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Playlist",
          "displayName" : "Playlist_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=playlist.fetch"
        },
        {
          "path" : "/?method=radio.search",
          "doc" : {
            "t" : "Resolve the name of a resource into a station depending on which resource it is most likely to represent.",
            "url" : "http://www.last.fm/api/show?service=418"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=radio.search&name={name}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Radio",
          "displayName" : "Radio_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=radio.search"
        },
        {
          "path" : "/?method=tag.getWeeklyChartList",
          "doc" : {
            "t" : "Get a list of available charts for this tag, expressed as date ranges which can be sent to the chart services.",
            "url" : "http://www.last.fm/api/show?service=359"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=tag.getweeklychartlist&tag={tag}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tag",
          "displayName" : "Tag_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=tag.getWeeklyChartList"
        },
        {
          "path" : "/?method=tag.getInfo",
          "doc" : {
            "t" : "Get the metadata for a tag.",
            "url" : "http://www.last.fm/api/show?service=452"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=tag.getinfo&tag={tag}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tag",
          "displayName" : "Tag_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=tag.getInfo"
        },
        {
          "path" : "/?method=tag.getSimilar",
          "doc" : {
            "t" : "Search for tags similar to this one. Returns tags ranked by similarity, based on listening data.",
            "url" : "http://www.last.fm/api/show?service=311"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=tag.getsimilar&tag={tag}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tag",
          "displayName" : "Tag_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=tag.getSimilar"
        },
        {
          "path" : "/?method=tag.getTopAlbums",
          "doc" : {
            "t" : "Get the top albums tagged by this tag, ordered by tag count.",
            "url" : "http://www.last.fm/api/show?service=283"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=tag.gettopalbums&tag={tag}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tag",
          "displayName" : "Tag_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=tag.getTopAlbums"
        },
        {
          "path" : "/?method=tag.getTopArtists",
          "doc" : {
            "t" : "Get the top artists tagged by this tag, ordered by tag count.",
            "url" : "http://www.last.fm/api/show?service=284"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=tag.gettopartists&tag={tag}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tag",
          "displayName" : "Tag_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=tag.getTopArtists"
        },
        {
          "path" : "/?method=tag.getTopTags",
          "doc" : {
            "t" : "Fetches the top global tags on Last.fm, sorted by popularity (number of times used).",
            "url" : "http://www.last.fm/api/show?service=276"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=tag.gettoptags&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tag",
          "displayName" : "Tag_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=tag.getTopTags"
        },
        {
          "path" : "/?method=tag.getTopTracks",
          "doc" : {
            "t" : "Get the top tracks tagged by this tag, ordered by tag count.",
            "url" : "http://www.last.fm/api/show?service=285"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=tag.gettoptracks&tag={tag}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tag",
          "displayName" : "Tag_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=tag.getTopTracks"
        },
        {
          "path" : "/?method=tag.getWeeklyArtistChart",
          "doc" : {
            "t" : "Get an artist chart for a tag, for a given date range. If no date range is supplied, it will return the most recent artist chart for this tag.",
            "url" : "http://www.last.fm/api/show?service=358"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=tag.getweeklyartistchart&tag={tag}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tag",
          "displayName" : "Tag_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=tag.getWeeklyArtistChart"
        },
        {
          "path" : "/?method=tag.search",
          "doc" : {
            "t" : "Search for a tag by name. Returns matches sorted by relevance.",
            "url" : "http://www.last.fm/api/show?service=273"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=tag.search&tag={tag}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tag",
          "displayName" : "Tag_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=tag.search"
        },
        {
          "path" : "/?method=track.getBuyLinks",
          "doc" : {
            "t" : "Get a list of Buy Links for a particular Track. It is required that you supply either the artist and track params or the mbid param.",
            "url" : "http://www.last.fm/api/show?service=431"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=track.getbuylinks&artist={artist}&track={track}&country={country}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=track.getBuyLinks"
        },
        {
          "path" : "/?method=track.getFingerprintMetadata",
          "doc" : {
            "t" : "Retrieve track metadata associated with a fingerprint id generated by the Last.fm Fingerprinter. Returns track elements, along with a 'rank' value between 0 and 1 reflecting the confidence for each match. See this blog post for more info.",
            "url" : "http://www.last.fm/api/show?service=441"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=track.getfingerprintmetadata&fingerprintid={fingerprintid}&track={track}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=track.getFingerprintMetadata"
        },
        {
          "path" : "/?method=track.getInfo",
          "doc" : {
            "t" : "Get the metadata for a track on Last.fm using the artist/track name or a musicbrainz id.",
            "url" : "http://www.last.fm/api/show?service=356"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=track.getinfo&artist={artist}&track={track}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=track.getInfo"
        },
        {
          "path" : "/?method=track.getShouts",
          "doc" : {
            "t" : "Get shouts for this track. Also available as an rss feed.",
            "url" : "http://www.last.fm/api/show?service=453"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=track.getshouts&artist={artist}&track={track}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=track.getShouts"
        },
        {
          "path" : "/?method=track.getSimilar",
          "doc" : {
            "t" : "Get the similar tracks for this track on Last.fm, based on listening data.",
            "url" : "http://www.last.fm/api/show?service=319"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=track.getsimilar&artist={artist}&track={track}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=track.getSimilar"
        },
        {
          "path" : "/?method=track.getTopFans",
          "doc" : {
            "t" : "Get the top fans for this track on Last.fm, based on listening data. Supply either track and artist name or musicbrainz id.",
            "url" : "http://www.last.fm/api/show?service=312"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=track.gettopfans&artist={artist}&track={track}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=track.getTopFans"
        },
        {
          "path" : "/?method=track.getTopTags",
          "doc" : {
            "t" : "Get the top tags for this track on Last.fm, ordered by tag count. Supply either track and artist name or musicbrainz id.",
            "url" : "http://www.last.fm/api/show?service=289"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=track.gettoptags&artist={artist}&track={track}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=track.getTopTags"
        },
        {
          "path" : "/?method=track.getCorrection",
          "doc" : {
            "t" : "Use the last.fm corrections data to check whether the supplied track has a correction to a canonical track.",
            "url" : "http://www.last.fm/api/show?service=447"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=track.getcorrection&artist={artist}&track={track}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=track.getCorrection"
        },
        {
          "path" : "/?method=track.search",
          "doc" : {
            "t" : "Search for a track by track name. Returns track matches sorted by relevance.",
            "url" : "http://www.last.fm/api/show?service=286"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=track.search&track={track}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Track",
          "displayName" : "Track_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=track.search"
        },
        {
          "path" : "/?method=user.getWeeklyAlbumChart",
          "doc" : {
            "t" : "Get an album chart for a user profile, for a given date range. If no date range is supplied, it will return the most recent album chart for this user.",
            "url" : "http://www.last.fm/api/show?service=300"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.getweeklyalbumchart&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getWeeklyAlbumChart"
        },
        {
          "path" : "/?method=user.getTopTracks",
          "doc" : {
            "t" : "Get the top tracks listened to by a user. You can stipulate a time period. Sends the overall chart by default.",
            "url" : "http://www.last.fm/api/show?service=300"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.gettoptracks&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getTopTracks"
        },
        {
          "path" : "/?method=user.getTopTags",
          "doc" : {
            "t" : "Get the top tags used by this user.",
            "url" : "http://www.last.fm/api/show?service=123"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.gettoptags&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getTopTags"
        },
        {
          "path" : "/?method=user.getTopArtists",
          "doc" : {
            "t" : "Get the top artists listened to by a user. You can stipulate a time period. Sends the overall chart by default.",
            "url" : "http://www.last.fm/api/show?service=300"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.gettopartists&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getTopArtists"
        },
        {
          "path" : "/?method=user.getTopAlbums",
          "doc" : {
            "t" : "Get the top albums listened to by a user. You can stipulate a time period. Sends the overall chart by default.",
            "url" : "http://www.last.fm/api/show?service=401"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.gettopalbums&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getTopAlbums"
        },
        {
          "path" : "/?method=user.getShouts",
          "doc" : {
            "t" : "Get shouts for this user. Also available as an rss feed.",
            "url" : "http://www.last.fm/api/show?service=401"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.getshouts&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getShouts"
        },
        {
          "path" : "/?method=user.getRecentTracks",
          "doc" : {
            "t" : "Get a list of the recent tracks listened to by this user. Also includes the currently playing track with the nowplaying=\"true\" attribute if the user is currently listening.",
            "url" : "http://www.last.fm/api/show?service=278"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getRecentTracks"
        },
        {
          "path" : "/?method=user.getPastEvents",
          "doc" : {
            "t" : "Get a paginated list of all events a user has attended in the past.",
            "url" : "http://www.last.fm/api/show?service=329"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.getpastevents&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getPastEvents"
        },
        {
          "path" : "/?method=user.getPlaylists",
          "doc" : {
            "t" : "Get a list of a user's playlists on Last.fm.",
            "url" : "http://www.last.fm/api/show?service=313"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.getplaylists&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getPlaylists"
        },
        {
          "path" : "/?method=user.getNewReleases",
          "doc" : {
            "t" : "Get a list of a user's neighbours on Last.fm.",
            "url" : "http://www.last.fm/api/show?service=444"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.getnewreleases&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getNewReleases"
        },
        {
          "path" : "/?method=user.getNeighbours",
          "doc" : {
            "t" : "Get a list of a user's neighbours on Last.fm.",
            "url" : "http://www.last.fm/api/show?service=264"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.getneighbours&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getNeighbours"
        },
        {
          "path" : "/?method=user.getLovedTracks",
          "doc" : {
            "t" : "Get the last 50 tracks loved by a user.",
            "url" : "http://www.last.fm/api/show?service=329"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.getlovedtracks&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getLovedTracks"
        },
        {
          "path" : "/?method=user.getInfo",
          "doc" : {
            "t" : "Get information about a user profile.",
            "url" : "http://www.last.fm/api/show?service=344"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.getinfo&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getInfo"
        },
        {
          "path" : "/?method=user.getFriends",
          "doc" : {
            "t" : "Get a list of the user's friends on Last.fm.",
            "url" : "http://www.last.fm/api/show?service=263"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.getfriends&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getFriends"
        },
        {
          "path" : "/?method=user.getEvents",
          "doc" : {
            "t" : "Get a list of upcoming events that this user is attending. Easily integratable into calendars, using the ical standard.",
            "url" : "http://www.last.fm/api/show?service=291"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.getevents&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getEvents"
        },
        {
          "path" : "/?method=user.getBannedTracks",
          "doc" : {
            "t" : "Returns the tracks banned by the user.",
            "url" : "http://www.last.fm/api/show?service=448"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.getbannedtracks&user={user}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getBannedTracks"
        },
        {
          "path" : "/?method=user.getArtistTracks",
          "doc" : {
            "t" : "Get a list of tracks by a given artist scrobbled by this user, including scrobble time. Can be limited to specific timeranges, defaults to all time.",
            "url" : "http://www.last.fm/api/show?service=432"
          },
          "curl" : "curl -X GET  http://ws.audioscrobbler.com/2.0/?method=user.getartisttracks&user={user}&artist={artist}&api_key=9b6009eca365ded3a03c2b9673d54eb9",
          "authentication" : {
            "required" : "false"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "http://ws.audioscrobbler.com/2.0/?method=user.getArtistTracks"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "enabled" : false,
    "logo" : "http://octoblu-api-logos.s3.amazonaws.com/color/lastfm.png",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/lastfm.png",
    "name" : "LastFM",
    "oauth" : {
      "key" : "c034d4839dfa3e855f610145d1ecb819",
      "tokenMethod" : "apikey_app_query"
    },
    "type" : "channel:last_fm"
  },
  {
    "_id" : "52f9b628ebbb409983000001",
    "application" : {
      "base" : "https://api.foursquare.com/v2",
      "resources" : [
        {
          "path" : "/checkins/recent",
          "doc" : {
            "t" : "Returns a list of recent checkins from friends.",
            "url" : "http://developer.foursquare.com/docs/checkins/recent.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/checkins/recent",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Checkin",
          "displayName" : "Checkin_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/checkins/recent"
        },
        {
          "path" : "/checkins/{CHECKIN_ID}",
          "doc" : {
            "t" : "Get details of a checkin.",
            "url" : "http://developer.foursquare.com/docs/checkins/checkins.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/checkins/{CHECKIN_ID}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Checkin",
          "displayName" : "Checkin_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/checkins/{CHECKIN_ID}"
        },
        {
          "path" : "/checkins/{CHECKIN_ID}/deletecomment",
          "doc" : {
            "t" : "Remove a comment from a checkin, if the acting user is the author or the owner of the checkin.",
            "url" : "http://developer.foursquare.com/docs/checkins/deletecomment.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/checkins/{CHECKIN_ID}/deletecomment?commentId={commentId}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Checkin",
          "displayName" : "Checkin_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/checkins/{CHECKIN_ID}/deletecomment"
        },
        {
          "path" : "/checkins/{CHECKIN_ID}/addcomment",
          "doc" : {
            "t" : "Comment on a checkin-in",
            "url" : "http://developer.foursquare.com/docs/checkins/addcomment.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/checkins/{CHECKIN_ID}/addcomment?text={text}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Checkin",
          "displayName" : "Checkin_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/checkins/{CHECKIN_ID}/addcomment"
        },
        {
          "path" : "/checkins/add",
          "doc" : {
            "t" : "Allows you to check in to a place.",
            "url" : "http://developer.foursquare.com/docs/checkins/add.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/checkins/add?broadcast={broadcast}&venueId={venueId}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Checkin",
          "displayName" : "Checkin_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/checkins/add"
        },
        {
          "path" : "/multi",
          "doc" : {
            "t" : "Does multiple requests at once.",
            "url" : "http://developer.foursquare.com/docs/multi/multi.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/multi?requests={request1},{request2},...{requestN}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Multiple Request",
          "displayName" : "Multiple Request_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/multi"
        },
        {
          "path" : "/photos/add",
          "doc" : {
            "t" : "Allows users to add a new photo to a checkin, tip, or a venue in general.",
            "url" : "http://developer.foursquare.com/docs/photos/add.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/photos/add",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Photo",
          "displayName" : "Photo_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/photos/add"
        },
        {
          "path" : "/photos/{PHOTO_ID}",
          "doc" : {
            "t" : "Get details of a photo.",
            "url" : "http://developer.foursquare.com/docs/photos/photos.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/photos/{PHOTO_ID}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Photo",
          "displayName" : "Photo_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/photos/{PHOTO_ID}"
        },
        {
          "path" : "/settings/{SETTING_ID}",
          "doc" : {
            "t" : "Returns a setting for the acting user. SETTING_ID can be any of the three: receivePings, sendToTwitter, sendToFacebook",
            "url" : "http://developer.foursquare.com/docs/settings/settings.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/settings/{SETTING_ID}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Setting",
          "displayName" : "Setting_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/settings/{SETTING_ID}"
        },
        {
          "path" : "/settings/all",
          "doc" : {
            "t" : "Returns the settings of the acting user.",
            "url" : "http://developer.foursquare.com/docs/settings/all.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/settings/all",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Setting",
          "displayName" : "Setting_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/settings/all"
        },
        {
          "path" : "/settings/{SETTING_ID}/set",
          "doc" : {
            "t" : "Change a setting for the given user.",
            "url" : "http://developer.foursquare.com/docs/settings/set.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/settings/{SETTING_ID}/set?value={value}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Setting",
          "displayName" : "Setting_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/settings/{SETTING_ID}/set"
        },
        {
          "path" : "/specials/search",
          "doc" : {
            "t" : "Returns a list of specials near the current location.",
            "url" : "http://developer.foursquare.com/docs/specials/specials.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/specials/search?ll={lat},{long}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Special",
          "displayName" : "Special_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/specials/search"
        },
        {
          "path" : "/specials/{SPECIAL_ID}",
          "doc" : {
            "t" : "Gives details about a special, including text and unlock rules.",
            "url" : "http://developer.foursquare.com/docs/specials/specials.html"
          },
          "curl" : "curl -X GET  https://api.foursquare.com/v2/specials/{SPECIAL_ID}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Special",
          "displayName" : "Special_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/specials/{SPECIAL_ID}"
        },
        {
          "path" : "/tips/{TIP_ID}/unmark",
          "doc" : {
            "t" : "Allows you to remove a tip from your to-do list or done list.",
            "url" : "http://developer.foursquare.com/docs/tips/unmark.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/tips/{TIP_ID}/unmark",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Tip",
          "displayName" : "Tip_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/tips/{TIP_ID}/unmark"
        },
        {
          "path" : "/tips/{TIP_ID}/markdone",
          "doc" : {
            "t" : "Allows the acting user to mark a tip done.",
            "url" : "http://developer.foursquare.com/docs/tips/markdone.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/tips/{TIP_ID}/markdone",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Tip",
          "displayName" : "Tip_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/tips/{TIP_ID}/markdone"
        },
        {
          "path" : "/tips/{TIP_ID}/marktodo",
          "doc" : {
            "t" : "Allows you to mark a tip to-do.",
            "url" : "http://developer.foursquare.com/docs/tips/marktodo.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/tips/{TIP_ID}/marktodo",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Tip",
          "displayName" : "Tip_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/tips/{TIP_ID}/marktodo"
        },
        {
          "path" : "/tips/search",
          "doc" : {
            "t" : "Returns a list of tips near the area secified.",
            "url" : "http://developer.foursquare.com/docs/tips/search.html"
          },
          "curl" : "curl -X GET  https://api.foursquare.com/v2/tips/search?ll={lat},{long}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tip",
          "displayName" : "Tip_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/tips/search"
        },
        {
          "path" : "/tips/add",
          "doc" : {
            "t" : "Allows you to add a new tip at a venue.",
            "url" : "http://developer.foursquare.com/docs/tips/add.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/tips/add?venueId={venueId}&text={text}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Tip",
          "displayName" : "Tip_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/tips/add"
        },
        {
          "path" : "/tips/{TIP_ID}",
          "doc" : {
            "t" : "Gives details about a tip, including which users (especially friends) have marked the tip to-do or done.",
            "url" : "http://developer.foursquare.com/docs/tips/tips.html"
          },
          "curl" : "curl -X GET  https://api.foursquare.com/v2/tips/{TIP_ID}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Tip",
          "displayName" : "Tip_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/tips/{TIP_ID}"
        },
        {
          "path" : "/users/{USER_ID}/request",
          "doc" : {
            "t" : "Sends a friend request to another user.",
            "url" : "http://developer.foursquare.com/docs/users/request.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/users/{USER_ID}/request",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/users/{USER_ID}/request"
        },
        {
          "path" : "/users/search",
          "doc" : {
            "t" : "Returns an array of compact user objects with Twitter or Facebook information and friend status.",
            "url" : "http://developer.foursquare.com/docs/users/search.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/users/search?email={email_address}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/users/search"
        },
        {
          "path" : "/users/search",
          "doc" : {
            "t" : "Returns an array of compact user objects with Twitter or Facebook information and friend status.",
            "url" : "http://developer.foursquare.com/docs/users/search.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/users/search?email={email_address}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/users/search"
        },
        {
          "path" : "/users/requests",
          "doc" : {
            "t" : "Shows a user the list of users with whom they have a pending friend request (i.e., someone tried to add the acting user as a friend, but the acting user has not accepted).",
            "url" : "http://developer.foursquare.com/docs/users/requests.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/users/requests",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/users/requests"
        },
        {
          "path" : "/users/{USER_ID}/badges",
          "doc" : {
            "t" : "Returns badges for a given user.",
            "url" : "http://developer.foursquare.com/docs/users/badges.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/users/{USER_ID}/badges",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/users/{USER_ID}/badges"
        },
        {
          "path" : "/users/{USER_ID}/checkins",
          "doc" : {
            "t" : "Returns a history of checkins for the authenticated user.",
            "url" : "http://developer.foursquare.com/docs/users/checkins.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/users/{USER_ID}/checkins",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/users/{USER_ID}/checkins"
        },
        {
          "path" : "/users/{USER_ID}/friends",
          "doc" : {
            "t" : "Returns an array of a user's friends.",
            "url" : "http://developer.foursquare.com/docs/users/friends.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/users/{USER_ID}/friends",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/users/{USER_ID}/friends"
        },
        {
          "path" : "/users/{USER_ID}/tips",
          "doc" : {
            "t" : "Returns tips from a user.",
            "url" : "http://developer.foursquare.com/docs/users/tips.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/users/{USER_ID}/tips",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/users/{USER_ID}/tips"
        },
        {
          "path" : "/users/{USER_ID}/todos",
          "doc" : {
            "t" : "Returns todos from a user.",
            "url" : "http://developer.foursquare.com/docs/users/todos.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/users/{USER_ID}/todos?ll={lat},{long}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/users/{USER_ID}/todos"
        },
        {
          "path" : "/users/{USER_ID}/venuehistory",
          "doc" : {
            "t" : "Returns a list of all venues visited by the specified user, along with how many visits and when they were last there.",
            "url" : "http://developer.foursquare.com/docs/users/venuehistory.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/users/{USER_ID}/venuehistory",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/users/{USER_ID}/venuehistory"
        },
        {
          "path" : "/users/{USER_ID}",
          "doc" : {
            "t" : "Returns profile information for a given user, including selected badges and mayorships. If the user is a friend, contact information, Facebook ID, and Twitter handle and the user's last checkin may also be present.In addition, the pings field will indicate whether checkins from this user will trigger a ping (notifications to mobile devices). This setting can be changed via setpings. Note that this setting is overriden if pings is false in settings (no pings will be sent, even if this user is set to true).",
            "url" : "http://developer.foursquare.com/docs/users/users.html"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.foursquare.com/v2/users/{USER_ID}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/users/{USER_ID}"
        },
        {
          "path" : "/users/{USER_ID}/unfriend",
          "doc" : {
            "t" : "Cancels any relationship between the acting user and the specified user. Removes a friend, unfollows a celebrity, or cancels a pending friend request.",
            "url" : "http://developer.foursquare.com/docs/users/unfriend.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/users/{USER_ID}/unfriend",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/users/{USER_ID}/unfriend"
        },
        {
          "path" : "/users/{USER_ID}/approve",
          "doc" : {
            "t" : "Approves a pending friend request from another user.",
            "url" : "http://developer.foursquare.com/docs/users/approve.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/users/{USER_ID}/approve",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/users/{USER_ID}/approve"
        },
        {
          "path" : "/users/{USER_ID}/deny",
          "doc" : {
            "t" : "Denies a pending friend request from another user.",
            "url" : "http://developer.foursquare.com/docs/users/deny.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/users/{USER_ID}/deny",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/users/{USER_ID}/deny"
        },
        {
          "path" : "/users/{USER_ID}/setpings",
          "doc" : {
            "t" : "Changes whether the acting user will receive pings (phone notifications) when the specified user checks in.",
            "url" : "http://developer.foursquare.com/docs/users/setpings.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/users/{USER_ID}/setpings?value={value}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/users/{USER_ID}/setpings"
        },
        {
          "path" : "/venues/{VENUE_ID}/proposeedit",
          "doc" : {
            "t" : "Allows you to propose a change to a venue.If the user knows a correct address, use this method to save it. Otherwise, use flag to flag the venue instead (you need not specify a new address or geolat/geolong in that case).",
            "url" : "http://developer.foursquare.com/docs/venues/proposeedit.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/venues/{VENUE_ID}/proposeedit?name={name}&address={address}&city={city}&state={state}&ll={lat},{long}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Venue",
          "displayName" : "Venue_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/venues/{VENUE_ID}/proposeedit"
        },
        {
          "path" : "/venues/{VENUE_ID}/flag",
          "doc" : {
            "t" : "Allows users to indicate a venue is incorrect in some way. Flags are pushed into a moderation queue. If a closed flag is approved, the venue will no longer show up in search results. Moderators will attempt to correct cases of mislocated or duplicate venues as appropriate. If the user has the correct address for a mislocated venue, use proposeedit instead.",
            "url" : "http://developer.foursquare.com/docs/venues/flag.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/venues/{VENUE_ID}/flag?problem={problem}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Venue",
          "displayName" : "Venue_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/venues/{VENUE_ID}/flag"
        },
        {
          "path" : "/venues/{VENUE_ID}/marktodo",
          "doc" : {
            "t" : "Allows you to mark a venue to-do, with optional text.",
            "url" : "http://developer.foursquare.com/docs/venues/marktodo.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/venues/{VENUE_ID}/marktodo",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Venue",
          "displayName" : "Venue_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/venues/{VENUE_ID}/marktodo"
        },
        {
          "path" : "/venues/{VENUE_ID}/photos",
          "doc" : {
            "t" : "Returns photos for a venue.",
            "url" : "http://developer.foursquare.com/docs/venues/photos.html"
          },
          "curl" : "curl -X GET  https://api.foursquare.com/v2/venues/{VENUE_ID}/photos?group={group}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Venue",
          "displayName" : "Venue_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/venues/{VENUE_ID}/photos"
        },
        {
          "path" : "/venues/{VENUE_ID}/tips",
          "doc" : {
            "t" : "Returns tips for a venue.",
            "url" : "http://developer.foursquare.com/docs/venues/tips.html"
          },
          "curl" : "curl -X GET  https://api.foursquare.com/v2/venues/{VENUE_ID}/tips",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Venue",
          "displayName" : "Venue_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/venues/{VENUE_ID}/tips"
        },
        {
          "path" : "/venues/{VENUE_ID}/herenow",
          "doc" : {
            "t" : "Provides a count of how many people are at a given venue, plus the first page of the users there, friends-first, and if the current user is authenticated.",
            "url" : "http://developer.foursquare.com/docs/venues/herenow.html"
          },
          "curl" : "curl -X GET  https://api.foursquare.com/v2/venues/{VENUE_ID}/herenow",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Venue",
          "displayName" : "Venue_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/venues/{VENUE_ID}/herenow"
        },
        {
          "path" : "/venues/search",
          "doc" : {
            "t" : "Returns a list of venues near the current location, optionally matching the search term. If lat and long is provided, each venue includes a distance. If authenticated, the method will return venue metadata related to you and your friends. If you do not authenticate, you will not get this data.",
            "url" : "http://developer.foursquare.com/docs/venues/search.html"
          },
          "curl" : "curl -X GET  https://api.foursquare.com/v2/venues/search?ll={lat},{long}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Venue",
          "displayName" : "Venue_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/venues/search"
        },
        {
          "path" : "/venues/categories",
          "doc" : {
            "t" : "Returns a hierarchical list of categories applied to venues. Note that top-level categories do not have IDs because they cannot be assigned to a venue.",
            "url" : "http://developer.foursquare.com/docs/venues/categories.html"
          },
          "curl" : "curl -X GET  https://api.foursquare.com/v2/venues/categories",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Venue",
          "displayName" : "Venue_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/venues/categories"
        },
        {
          "path" : "/venues/add",
          "doc" : {
            "t" : "Allows users to add a new venue. If this method returns an error, give the user the option to edit her inputs. In addition to this, give users the ability to say \"never mind, check-in here anyway\" and perform a manual (\"venueless\") checkin by specifying just the venue name. This is rare, but there's a chance you'll see this case if the user wants to force a duplicate venue. All fields are optional, but one of either a valid address or a geolat/geolong pair must be provided. We recommend that developers provide a geolat/geolong pair in every case. Caller may also, optionally, pass in a category (primarycategoryid) to which you want this venue assigned. You can browse a full list of categories using the /categories method. On adding venue, we recommend that applications show the user this hierarchy and allow them to choose something suitable.",
            "url" : "http://developer.foursquare.com/docs/venues/add.html"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.foursquare.com/v2/venues/add?name={name}&ll={lat},{long}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Venue",
          "displayName" : "Venue_POST",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/venues/add"
        },
        {
          "path" : "/venues/{VENUE_ID}",
          "doc" : {
            "t" : "Gives details about a venue, including location, mayorship, tags, tips, specials, and category Authenticated users will also receive information about who is here now.If the venue ID given is one that has been merged into another \"master\" venue, the response will show data about the \"master\" instead of giving you an error.",
            "url" : "http://developer.foursquare.com/docs/venues/venues.html"
          },
          "curl" : "curl -X GET  https://api.foursquare.com/v2/venues/{VENUE_ID}",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Venue",
          "displayName" : "Venue_GET",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "m",
              "required" : true,
              "style" : "query",
              "default" : "foursquare",
              "doc" : {
                "t" : "swarm or foursquare"
              }
            },
            {
              "name" : "v",
              "required" : true,
              "style" : "query",
              "default" : "20140806",
              "doc" : {
                "t" : "20140806"
              }
            }
          ],
          "url" : "https://api.foursquare.com/v2/venues/{VENUE_ID}"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "enabled" : true,
    "logo" : "http://octoblu-api-logos.s3.amazonaws.com/color/foursquare.png",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/foursquare.png",
    "name" : "FourSquare",
    "oauth" : {
      "accessTokenIncludeClientInfo" : true,
      "accessTokenURL" : "https://foursquare.com/oauth2/access_token",
      "apiKey" : "",
      "authTokenPath" : "/oauth2/authenticate",
      "authTokenURL" : "https://foursquare.com/oauth2/authenticate",
      "baseURL" : "https://www.smartsheet.com",
      "clientId" : "0FHIAV0KFBVSBNYAXBKYMZY4HE0CMBTXLIBG0TGZLQ0TRJYB",
      "grant_type" : "authorization_code",
      "host" : "foursquare.com",
      "isManual" : true,
      "protocol" : "https",
      "requestTokenURL" : "",
      "scope" : "",
      "secret" : "3XRB1YRDIP1WYTUXZWZPN5IE5OLXV0GIBQT1VYZYDFMKGWX4",
      "tokenMethod" : "oauth_token",
      "useOAuthLib" : true,
      "version" : "2.0"
    },
    "useCustom" : true,
    "type" : "channel:four_square"
  },
  {
    "_id" : "53beae78b74924000012b946",
    "__v" : 0,
    "application" : {
      "base" : "test",
      "resources" : [
        {
          "curl" : "curl /sample1",
          "path" : "/sample1",
          "displayName" : "sample1",
          "doc" : {
            "t" : "sample",
            "url" : "sample"
          },
          "httpMethod" : "GET",
          "url" : "test/sample1"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://docs.example.com/api/sample",
            "t" : "sample"
          },
          "authentication" : {

          },
          "displayName" : "/sample",
          "path" : "/sample",
          "url" : "test/sample"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.example.com/oauth/sample2",
            "t" : "sample2"
          },
          "authentication" : {

          },
          "displayName" : "/sample2",
          "path" : "/sample2",
          "params" : [
            {
              "name" : "user",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "test/sample2"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "sample3",
            "t" : "sample3"
          },
          "authentication" : {

          },
          "displayName" : "sample3",
          "path" : "/sample3",
          "params" : [
            {
              "name" : "param1",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "param2",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "param3",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "test/sample3"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "sample4",
            "t" : "sample4"
          },
          "authentication" : {

          },
          "displayName" : "sample4",
          "path" : "/sample4",
          "params" : [
            {
              "name" : "one",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "two",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "three",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "four",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "test/sample4"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "test",
    "documentation" : "test",
    "enabled" : true,
    "logo" : "http://www.trashedgraphics.com/images/default_icon.png",
    "name" : "Josh Custom",
    "oauth" : {
      "version" : "1.0",
      "key" : "123",
      "secret" : "13123123123",
      "accessTokenURL" : "https://api.example.com/oauth/access_token",
      "requestTokenURL" : "https://api.example.com/oauth/request_token",
      "authTokenURL" : "https://api.example.com/oauth/authorize",
      "authTokenPath" : "authorization_code",
      "scope" : "user"
    },
    "owner" : "d982ad81-8e98-11e3-b224-23fcd9c1f8ad",
    "type" : "channel:josh_custom"
  },
  {
    "_id" : "53dabb4c993d558f4a859a6c",
    "owner" : "01f45d00-0611-11e4-83bd-196bfd08cd39",
    "auth_strategy" : "oauth",
    "logo" : "http://a4.mzstatic.com/us/r30/Purple/v4/e6/bc/f5/e6bcf5d1-0059-d5b5-0ca1-1edb1ce8255f/icon_256.png",
    "name" : "Wifi Plug",
    "description" : "",
    "documentation" : "",
    "enabled" : true,
    "application" : {
      "base" : "",
      "resources" : [ ]
    },
    "custom_tokens" : [ ],
    "__v" : 0,
    "type" : "channel:wifi_plug"
  },
  {
    "_id" : "52f9b75bdfeb56fca700000d",
    "application" : {
      "base" : "https://api.del.icio.us/v1",
      "resources" : [
        {
          "path" : "/posts/all?hashes",
          "doc" : {
            "t" : "Returns a change manifest of all posts. Call the update function to see if you need to fetch this at all.",
            "url" : "http://www.delicious.com/help/api#posts_all_hashes"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.del.icio.us/v1/posts/all?hashes",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Posts",
          "displayName" : "Posts_GET",
          "httpMethod" : "GET",
          "url" : "https://api.del.icio.us/v1/posts/all?hashes"
        },
        {
          "path" : "/posts/suggest",
          "params" : [
            {
              "name" : "url",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "URL for which you'd like suggestions."
              }
            }
          ],
          "doc" : {
            "t" : "Returns a list of popular tags, recommended tags and network tags for a user. URL for which you'd like suggestions.",
            "url" : "http://www.delicious.com/help/api#posts_suggest"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.del.icio.us/v1/posts/suggest",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Posts",
          "displayName" : "Posts_GET",
          "httpMethod" : "GET",
          "url" : "https://api.del.icio.us/v1/posts/suggest"
        },
        {
          "path" : "/posts/add",
          "params" : [
            {
              "name" : "url",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The URL of the item."
              }
            },
            {
              "name" : "description",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The description of the item."
              }
            },
            {
              "name" : "extended",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Notes for the item."
              }
            },
            {
              "name" : "tags",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Tags for the item (space delimited)."
              }
            },
            {
              "name" : "dt",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Datestamp of the item (format \"CCYY-MM-DDThh:mm:ssZ\"). Requires a LITERAL \"T\" and \"Z\" like in ISO8601 at http://www.cl.cam.ac.uk/~mgk25/iso-time.html for example: \"1984-09-01T14:21:31Z\""
              }
            },
            {
              "name" : "replace",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "no",
              "required" : "true",
              "doc" : {
                "t" : "Don't replace post if given url has already been posted."
              }
            },
            {
              "name" : "shared",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "no",
              "required" : "true",
              "doc" : {
                "t" : "Make the item private."
              }
            }
          ],
          "doc" : {
            "t" : "Add a post to Delicious. The URL of the item. The description of the item. Notes for the item. Tags for the item (space delimited). Datestamp of the item (format \"CCYY-MM-DDThh:mm:ssZ\"). Requires a LITERAL \"T\" and \"Z\" like in ISO8601 at http://www.cl.cam.ac.uk/~mgk25/iso-time.html for example: \"1984-09-01T14:21:31Z\" Don't replace post if given url has already been posted. Make the item private.",
            "url" : "http://www.delicious.com/help/api#posts_add"
          },
          "curl" : "curl -X PUT -u 'username:password' -d 'replace=no&shared=no' https://api.del.icio.us/v1/posts/add",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Posts",
          "displayName" : "Posts_PUT",
          "httpMethod" : "PUT",
          "url" : "https://api.del.icio.us/v1/posts/add"
        },
        {
          "path" : "/posts/delete",
          "params" : [
            {
              "name" : "url",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "The URL of the item."
              }
            }
          ],
          "doc" : {
            "t" : "Delete a post from Delicious. The URL of the item.",
            "url" : "http://www.delicious.com/help/api#posts_delete"
          },
          "curl" : "curl -X DELETE -u 'username:password' https://api.del.icio.us/v1/posts/delete",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Posts",
          "displayName" : "Posts_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://api.del.icio.us/v1/posts/delete"
        },
        {
          "path" : "/posts/get",
          "params" : [
            {
              "name" : "url",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Fetch a bookmark for this URL, regardless of date. Note: Be sure to URL-encode the argument value."
              }
            },
            {
              "name" : "hashes",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Fetch multiple bookmarks by one or more URL MD5s regardless of date, separated by URL-encoded spaces (ie. '+')."
              }
            },
            {
              "name" : "meta",
              "type" : "xsd:string",
              "style" : "query",
              "default" : "yes",
              "required" : "true",
              "doc" : {
                "t" : "Include change detection signatures on each item in a 'meta' attribute. Clients wishing to maintain a synchronized local store of bookmarks should retain the value of this attribute - its value will change when any significant field of the bookmark changes."
              }
            },
            {
              "name" : "tag",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Filter by this tag (space delimited)."
              }
            },
            {
              "name" : "dt",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Filter by this date, defaults to the most recent date on which bookmarks were saved."
              }
            }
          ],
          "doc" : {
            "t" : "Returns one or more posts on a single day matching the arguments. If no date or url is given, most recent date will be used. Fetch a bookmark for this URL, regardless of date. Note: Be sure to URL-encode the argument value. Fetch multiple bookmarks by one or more URL MD5s regardless of date, separated by URL-encoded spaces (ie. '+'). Include change detection signatures on each item in a 'meta' attribute. Clients wishing to maintain a synchronized local store of bookmarks should retain the value of this attribute - its value will change when any significant field of the bookmark changes. Filter by this tag (space delimited). Filter by this date, defaults to the most recent date on which bookmarks were saved.",
            "url" : "http://www.delicious.com/help/api#posts_get"
          },
          "curl" : "curl -X GET -u 'username:password' -d 'meta=yes' https://api.del.icio.us/v1/posts/get",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Posts",
          "displayName" : "Posts_GET",
          "httpMethod" : "GET",
          "url" : "https://api.del.icio.us/v1/posts/get"
        },
        {
          "path" : "/posts/dates",
          "params" : [
            {
              "name" : "tag",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Filter by this tag."
              }
            }
          ],
          "doc" : {
            "t" : "Returns a list of dates with the number of posts at each date. Filter by this tag.",
            "url" : "http://www.delicious.com/help/api#posts_dates"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.del.icio.us/v1/posts/dates",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Posts",
          "displayName" : "Posts_GET",
          "httpMethod" : "GET",
          "url" : "https://api.del.icio.us/v1/posts/dates"
        },
        {
          "path" : "/posts/recent",
          "params" : [
            {
              "name" : "tag",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Filter by this tag."
              }
            },
            {
              "name" : "count",
              "type" : "xsd:integer",
              "style" : "query",
              "default" : "15",
              "required" : "true",
              "doc" : {
                "t" : "Number of items to retrieve (Default:15, Maximum:100)."
              }
            }
          ],
          "doc" : {
            "t" : "Returns a list of the most recent posts, filtered by argument. Maximum 100. Filter by this tag. Number of items to retrieve (Default:15, Maximum:100).",
            "url" : "http://www.delicious.com/help/api#posts_recent"
          },
          "curl" : "curl -X GET -u 'username:password' -d 'count=15' https://api.del.icio.us/v1/posts/recent",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Posts",
          "displayName" : "Posts_GET",
          "httpMethod" : "GET",
          "url" : "https://api.del.icio.us/v1/posts/recent"
        },
        {
          "path" : "/posts/all",
          "doc" : {
            "t" : "Returns all posts. Please use sparingly. Call the update function to see if you need to fetch this at all.",
            "url" : "http://www.delicious.com/help/api#posts_all"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.del.icio.us/v1/posts/all",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Posts",
          "displayName" : "Posts_GET",
          "httpMethod" : "GET",
          "url" : "https://api.del.icio.us/v1/posts/all"
        },
        {
          "path" : "/tags/bundles/delete",
          "params" : [
            {
              "name" : "bundle",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Name of the bundle."
              }
            }
          ],
          "doc" : {
            "t" : "Delete a bundle. Name of the bundle.",
            "url" : "http://www.delicious.com/help/api#tags_bundles_delete"
          },
          "curl" : "curl -X DELETE -u 'username:password' https://api.del.icio.us/v1/tags/bundles/delete",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Tag Bundles",
          "displayName" : "Tag Bundles_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://api.del.icio.us/v1/tags/bundles/delete"
        },
        {
          "path" : "/tags/bundles/all",
          "params" : [
            {
              "name" : "bundle",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Fetch just the named bundle."
              }
            }
          ],
          "doc" : {
            "t" : "Retrieve all of a user's bundles. Fetch just the named bundle.",
            "url" : "http://www.delicious.com/help/api#tags_bundles_all"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.del.icio.us/v1/tags/bundles/all",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Tag Bundles",
          "displayName" : "Tag Bundles_GET",
          "httpMethod" : "GET",
          "url" : "https://api.del.icio.us/v1/tags/bundles/all"
        },
        {
          "path" : "/tags/bundles/set",
          "params" : [
            {
              "name" : "bundle",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Name of the bundle."
              }
            },
            {
              "name" : "tags",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "List of tags, space-separated."
              }
            }
          ],
          "doc" : {
            "t" : "Assign a set of tags to a single bundle, wipes away previous settings for bundle. Name of the bundle. List of tags, space-separated.",
            "url" : "http://www.delicious.com/help/api#tags_bundles_set"
          },
          "curl" : "curl -X PUT -u 'username:password' https://api.del.icio.us/v1/tags/bundles/set",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Tag Bundles",
          "displayName" : "Tag Bundles_PUT",
          "httpMethod" : "PUT",
          "url" : "https://api.del.icio.us/v1/tags/bundles/set"
        },
        {
          "path" : "/tags/rename",
          "params" : [
            {
              "name" : "old",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Tag to rename."
              }
            },
            {
              "name" : "new",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "New tag name."
              }
            }
          ],
          "doc" : {
            "t" : "Rename an existing tag with a new tag name. Tag to rename. New tag name.",
            "url" : "http://www.delicious.com/help/api#tags_rename"
          },
          "curl" : "curl -X POST -u 'username:password' https://api.del.icio.us/v1/tags/rename",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Tags",
          "displayName" : "Tags_POST",
          "httpMethod" : "POST",
          "url" : "https://api.del.icio.us/v1/tags/rename"
        },
        {
          "path" : "/tags/delete",
          "params" : [
            {
              "name" : "tag",
              "type" : "xsd:string",
              "style" : "query",
              "required" : "true",
              "doc" : {
                "t" : "Tag to delete."
              }
            }
          ],
          "doc" : {
            "t" : "Delete an existing tag. Tag to delete.",
            "url" : "http://www.delicious.com/help/api#tags_delete"
          },
          "curl" : "curl -X DELETE -u 'username:password' https://api.del.icio.us/v1/tags/delete",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Tags",
          "displayName" : "Tags_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://api.del.icio.us/v1/tags/delete"
        },
        {
          "path" : "/tags/get",
          "doc" : {
            "t" : "Returns a list of tags and number of times used by a user.",
            "url" : "http://www.delicious.com/help/api#tags_get"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.del.icio.us/v1/tags/get",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Tags",
          "displayName" : "Tags_GET",
          "httpMethod" : "GET",
          "url" : "https://api.del.icio.us/v1/tags/get"
        },
        {
          "path" : "/posts/update",
          "doc" : {
            "t" : "Returns the last update time for the user, as well as the number of new items in the user's inbox since it was last visited.",
            "url" : "http://www.delicious.com/help/api#posts_update"
          },
          "curl" : "curl -X GET -u 'username:password' https://api.del.icio.us/v1/posts/update",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Update",
          "displayName" : "Update_GET",
          "httpMethod" : "GET",
          "url" : "https://api.del.icio.us/v1/posts/update"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "enabled" : false,
    "logo" : "http://octoblu-api-logos.s3.amazonaws.com/color/delicious.png",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/delicious.png",
    "name" : "Delicious",
    "oauth" : {
      "isManual" : false,
      "version" : "2.0",
      "clientId" : "e9e36c5c7ab86dd3a33cccafa2c9afbb",
      "secret" : "fc69b39b321995c141ecf4e30207b0a2",
      "baseURL" : "https://delicious.com/",
      "accessTokenURL" : "https://avosapi.delicious.com/api/v1/oauth/token",
      "requestTokenURL" : "https://avosapi.delicious.com/api/v1/",
      "authTokenURL" : "https://delicious.com/auth/authorize",
      "tokenMethod" : "bearer",
      "authTokenPath" : "/auth/authorize",
      "accessTokenIncludeClientInfo" : true,
      "grant_type" : "code",
      "scope" : "",
      "protocol" : "https",
      "host" : "delicious.com",
      "passTokenInQuery" : false,
      "tokenQueryParam" : "oauth2_access_token",
      "checkCSRFOnCallback" : false,
      "useOAuthLib" : true
    },
    "useCustom" : false,
    "type" : "channel:delicious"
  },
  {
    "_id" : "52f9b79febbb40641600000b",
    "application" : {
      "base" : "https://api-ssl.bitly.com",
      "resources" : [
        {
          "path" : "/v3/highvalue",
          "displayName" : "/v3/highvalue",
          "doc" : {
            "url" : "http://dev.bitly.com/data_apis.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X GET /v3/highvalue?access_token=ACCESS_TOKEN&limit=2",
          "params" : [
            {
              "doc" : {
                "url" : "http://dev.bitly.com/data_apis.html#v3_highvalue"
              },
              "style" : "query",
              "type" : "string",
              "name" : "limit"
            }
          ],
          "url" : "https://api-ssl.bitly.com/v3/highvalue"
        },
        {
          "path" : "/v3/search",
          "displayName" : "/v3/search",
          "doc" : {
            "url" : "http://dev.bitly.com/data_apis.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X GET /v3/search?access_token=ACCESS_TOKEN&query=obama&domain=nytimes.com&limit=2&fields=aggregate_link%2Ctitle%2Curl",
          "params" : [
            {
              "doc" : {
                "url" : "http://dev.bitly.com/data_apis.html#v3_search"
              },
              "style" : "query",
              "type" : "string",
              "name" : "limit"
            }
          ],
          "url" : "https://api-ssl.bitly.com/v3/search"
        },
        {
          "path" : "/v3/realtime/bursting_phrases",
          "displayName" : "/v3/realtime/bursting_phrases",
          "doc" : {
            "url" : "http://dev.bitly.com/data_apis.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X GET /v3/realtime/bursting_phrases?access_token=ACCESS_TOKEN",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/realtime/bursting_phrases"
        },
        {
          "path" : "/v3/realtime/hot_phrases",
          "displayName" : "/v3/realtime/hot_phrases",
          "doc" : {
            "url" : "http://dev.bitly.com/data_apis.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X GET /v3/realtime/hot_phrases?access_token=ACCESS_TOKEN",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/realtime/hot_phrases"
        },
        {
          "path" : "/v3/realtime/clickrate",
          "displayName" : "/v3/realtime/clickrate",
          "doc" : {
            "url" : "http://dev.bitly.com/data_apis.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X GET /v3/realtime/clickrate?access_token=ACCESS_TOKEN&phrase=obama",
          "params" : [
            {
              "doc" : {
                "url" : "http://dev.bitly.com/data_apis.html#v3_realtime_clickrate"
              },
              "style" : "query",
              "type" : "string",
              "name" : "phrase"
            }
          ],
          "url" : "https://api-ssl.bitly.com/v3/realtime/clickrate"
        },
        {
          "path" : "/v3/link/info",
          "displayName" : "/v3/link/info",
          "doc" : {
            "url" : "http://dev.bitly.com/data_apis.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X GET /v3/link/info?access_token=ACCESS_TOKEN&link=http%3A%2F%2Fbit.ly%2FMwSGaQ",
          "params" : [
            {
              "doc" : {
                "url" : "http://dev.bitly.com/data_apis.html#v3_link_info"
              },
              "style" : "query",
              "type" : "string",
              "name" : "link"
            }
          ],
          "url" : "https://api-ssl.bitly.com/v3/link/info"
        },
        {
          "path" : "/v3/link/content",
          "displayName" : "/v3/link/content",
          "doc" : {
            "url" : "http://dev.bitly.com/data_apis.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X GET /v3/link/content?access_token=ACCESS_TOKEN&link=http%3A%2F%2Fbit.ly%2FMwSGaQ",
          "params" : [
            {
              "doc" : {
                "url" : "http://dev.bitly.com/data_apis.html#v3_link_content"
              },
              "style" : "query",
              "type" : "string",
              "name" : "link"
            }
          ],
          "url" : "https://api-ssl.bitly.com/v3/link/content"
        },
        {
          "path" : "/v3/link/category",
          "displayName" : "/v3/link/category",
          "doc" : {
            "url" : "http://dev.bitly.com/data_apis.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X GET /v3/link/category?access_token=ACCESS_TOKEN&link=http%3A%2F%2Fbit.ly%2F1234",
          "params" : [
            {
              "doc" : {
                "url" : "http://dev.bitly.com/data_apis.html#v3_link_category"
              },
              "style" : "query",
              "type" : "string",
              "name" : "link"
            }
          ],
          "url" : "https://api-ssl.bitly.com/v3/link/category"
        },
        {
          "path" : "/v3/link/social",
          "displayName" : "/v3/link/social",
          "doc" : {
            "url" : "http://dev.bitly.com/data_apis.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X GET /v3/link/social?access_token=ACCESS_TOKEN&link=http%3A%2F%2Fbit.ly%2FMwSGaQ",
          "params" : [
            {
              "doc" : {
                "url" : "http://dev.bitly.com/data_apis.html#v3_link_social"
              },
              "style" : "query",
              "type" : "string",
              "name" : "link"
            }
          ],
          "url" : "https://api-ssl.bitly.com/v3/link/social"
        },
        {
          "path" : "/v3/link/location",
          "displayName" : "/v3/link/location",
          "doc" : {
            "url" : "http://dev.bitly.com/data_apis.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X GET /v3/link/location?access_token=ACCESS_TOKEN&link=http%3A%2F%2Fbit.ly%2FMZGoYV",
          "params" : [
            {
              "doc" : {
                "url" : "http://dev.bitly.com/data_apis.html#v3_link_location"
              },
              "style" : "query",
              "type" : "string",
              "name" : "link"
            }
          ],
          "url" : "https://api-ssl.bitly.com/v3/link/location"
        },
        {
          "path" : "/v3/link/language",
          "displayName" : "/v3/link/language",
          "doc" : {
            "url" : "http://dev.bitly.com/data_apis.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X GET /v3/link/language?access_token=ACCESS_TOKEN&link=http%3A%2F%2Fbit.ly%2FMwSGaQ",
          "params" : [
            {
              "doc" : {
                "url" : "http://dev.bitly.com/data_apis.html#v3_link_language"
              },
              "style" : "query",
              "type" : "string",
              "name" : "link"
            }
          ],
          "url" : "https://api-ssl.bitly.com/v3/link/language"
        },
        {
          "path" : "/v3/expand",
          "displayName" : "/v3/expand",
          "doc" : {
            "url" : "http://dev.bitly.com/links.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/expand"
        },
        {
          "path" : "/v3/info",
          "displayName" : "/v3/info",
          "doc" : {
            "url" : "http://dev.bitly.com/links.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/info"
        },
        {
          "path" : "/v3/link/lookup",
          "displayName" : "/v3/link/lookup",
          "doc" : {
            "url" : "http://dev.bitly.com/links.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/link/lookup"
        },
        {
          "path" : "/v3/shorten",
          "displayName" : "/v3/shorten",
          "doc" : {
            "url" : "http://dev.bitly.com/links.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/shorten"
        },
        {
          "path" : "/v3/user/link_edit",
          "displayName" : "/v3/user/link_edit",
          "doc" : {
            "url" : "http://dev.bitly.com/links.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/link_edit"
        },
        {
          "path" : "/v3/user/link_lookup",
          "displayName" : "/v3/user/link_lookup",
          "doc" : {
            "url" : "http://dev.bitly.com/links.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/link_lookup"
        },
        {
          "path" : "/v3/user/link_save",
          "displayName" : "/v3/user/link_save",
          "doc" : {
            "url" : "http://dev.bitly.com/links.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/link_save"
        },
        {
          "path" : "/v3/user/save_custom_domain_keyword",
          "displayName" : "/v3/user/save_custom_domain_keyword",
          "doc" : {
            "url" : "http://dev.bitly.com/links.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/save_custom_domain_keyword"
        },
        {
          "path" : "/v3/link/clicks",
          "displayName" : "/v3/link/clicks",
          "doc" : {
            "url" : "http://dev.bitly.com/link_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/link/clicks"
        },
        {
          "path" : "/v3/link/countries",
          "displayName" : "/v3/link/countries",
          "doc" : {
            "url" : "http://dev.bitly.com/link_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/link/countries"
        },
        {
          "path" : "/v3/link/encoders",
          "displayName" : "/v3/link/encoders",
          "doc" : {
            "url" : "http://dev.bitly.com/link_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/link/encoders"
        },
        {
          "path" : "/v3/link/encoders_by_count",
          "displayName" : "/v3/link/encoders_by_count",
          "doc" : {
            "url" : "http://dev.bitly.com/link_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/link/encoders_by_count"
        },
        {
          "path" : "/v3/link/encoders_count",
          "displayName" : "/v3/link/encoders_count",
          "doc" : {
            "url" : "http://dev.bitly.com/link_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/link/encoders_count"
        },
        {
          "path" : "/v3/link/referrers",
          "displayName" : "/v3/link/referrers",
          "doc" : {
            "url" : "http://dev.bitly.com/link_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/link/referrers"
        },
        {
          "path" : "/v3/link/referrers_by_domain",
          "displayName" : "/v3/link/referrers_by_domain",
          "doc" : {
            "url" : "http://dev.bitly.com/link_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/link/referrers_by_domain"
        },
        {
          "path" : "/v3/link/referring_domains",
          "displayName" : "/v3/link/referring_domains",
          "doc" : {
            "url" : "http://dev.bitly.com/link_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/link/referring_domains"
        },
        {
          "path" : "/v3/link/shares",
          "displayName" : "/v3/link/shares",
          "doc" : {
            "url" : "http://dev.bitly.com/link_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/link/shares"
        },
        {
          "path" : "/v3/oauth/app",
          "displayName" : "/v3/oauth/app",
          "doc" : {
            "url" : "http://dev.bitly.com/user_info.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/oauth/app"
        },
        {
          "path" : "/v3/user/info",
          "displayName" : "/v3/user/info",
          "doc" : {
            "url" : "http://dev.bitly.com/user_info.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/info"
        },
        {
          "path" : "/v3/user/link_history",
          "displayName" : "/v3/user/link_history",
          "doc" : {
            "url" : "http://dev.bitly.com/user_info.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/link_history"
        },
        {
          "path" : "/v3/user/network_history",
          "displayName" : "/v3/user/network_history",
          "doc" : {
            "url" : "http://dev.bitly.com/user_info.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/network_history"
        },
        {
          "path" : "/v3/user/tracking_domain_list",
          "displayName" : "/v3/user/tracking_domain_list",
          "doc" : {
            "url" : "http://dev.bitly.com/user_info.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/tracking_domain_list"
        },
        {
          "path" : "/v3/user/clicks",
          "displayName" : "/v3/user/clicks",
          "doc" : {
            "url" : "http://dev.bitly.com/user_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/clicks"
        },
        {
          "path" : "/v3/user/countries",
          "displayName" : "/v3/user/countries",
          "doc" : {
            "url" : "http://dev.bitly.com/user_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/countries"
        },
        {
          "path" : "/v3/user/popular_earned_by_clicks",
          "displayName" : "/v3/user/popular_earned_by_clicks",
          "doc" : {
            "url" : "http://dev.bitly.com/user_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/popular_earned_by_clicks"
        },
        {
          "path" : "/v3/user/popular_earned_by_shortens",
          "displayName" : "/v3/user/popular_earned_by_shortens",
          "doc" : {
            "url" : "http://dev.bitly.com/user_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/popular_earned_by_shortens"
        },
        {
          "path" : "/v3/user/popular_links",
          "displayName" : "/v3/user/popular_links",
          "doc" : {
            "url" : "http://dev.bitly.com/user_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/popular_links"
        },
        {
          "path" : "/v3/user/popular_owned_by_clicks",
          "displayName" : "/v3/user/popular_owned_by_clicks",
          "doc" : {
            "url" : "http://dev.bitly.com/user_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/popular_owned_by_clicks"
        },
        {
          "path" : "/v3/user/popular_owned_by_shortens",
          "displayName" : "/v3/user/popular_owned_by_shortens",
          "doc" : {
            "url" : "http://dev.bitly.com/user_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/popular_owned_by_shortens"
        },
        {
          "path" : "/v3/user/referrers",
          "displayName" : "/v3/user/referrers",
          "doc" : {
            "url" : "http://dev.bitly.com/user_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/referrers"
        },
        {
          "path" : "/v3/user/referring_domains",
          "displayName" : "/v3/user/referring_domains",
          "doc" : {
            "url" : "http://dev.bitly.com/user_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/referring_domains"
        },
        {
          "path" : "/v3/user/share_counts",
          "displayName" : "/v3/user/share_counts",
          "doc" : {
            "url" : "http://dev.bitly.com/user_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/share_counts"
        },
        {
          "path" : "/v3/user/share_counts_by_share_type",
          "displayName" : "/v3/user/share_counts_by_share_type",
          "doc" : {
            "url" : "http://dev.bitly.com/user_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/share_counts_by_share_type"
        },
        {
          "path" : "/v3/user/shorten_counts",
          "displayName" : "/v3/user/shorten_counts",
          "doc" : {
            "url" : "http://dev.bitly.com/user_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/shorten_counts"
        },
        {
          "path" : "/v3/organization/brand_messages",
          "displayName" : "/v3/organization/brand_messages",
          "doc" : {
            "url" : "http://dev.bitly.com/organization_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/organization/brand_messages"
        },
        {
          "path" : "/v3/organization/intersecting_links",
          "displayName" : "/v3/organization/intersecting_links",
          "doc" : {
            "url" : "http://dev.bitly.com/organization_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/organization/intersecting_links"
        },
        {
          "path" : "/v3/organization/leaderboard",
          "displayName" : "/v3/organization/leaderboard",
          "doc" : {
            "url" : "http://dev.bitly.com/organization_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/organization/leaderboard"
        },
        {
          "path" : "/v3/organization/missed_opportunities",
          "displayName" : "/v3/organization/missed_opportunities",
          "doc" : {
            "url" : "http://dev.bitly.com/organization_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/organization/missed_opportunities"
        },
        {
          "path" : "/v3/organization/popular_links",
          "displayName" : "/v3/organization/popular_links",
          "doc" : {
            "url" : "http://dev.bitly.com/organization_metrics.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/organization/popular_links"
        },
        {
          "path" : "/v3/bundle/archive",
          "displayName" : "/v3/bundle/archive",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/archive"
        },
        {
          "path" : "/v3/bundle/bundles_by_user",
          "displayName" : "/v3/bundle/bundles_by_user",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/bundles_by_user"
        },
        {
          "path" : "/v3/bundle/clone",
          "displayName" : "/v3/bundle/clone",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/clone"
        },
        {
          "path" : "/v3/bundle/collaborator_add",
          "displayName" : "/v3/bundle/collaborator_add",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/collaborator_add"
        },
        {
          "path" : "/v3/bundle/collaborator_remove",
          "displayName" : "/v3/bundle/collaborator_remove",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/collaborator_remove"
        },
        {
          "path" : "/v3/bundle/contents",
          "displayName" : "/v3/bundle/contents",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/contents"
        },
        {
          "path" : "/v3/bundle/create",
          "displayName" : "/v3/bundle/create",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/create"
        },
        {
          "path" : "/v3/bundle/edit",
          "displayName" : "/v3/bundle/edit",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/edit"
        },
        {
          "path" : "/v3/bundle/link_add",
          "displayName" : "/v3/bundle/link_add",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/link_add"
        },
        {
          "path" : "/v3/bundle/link_comment_add",
          "displayName" : "/v3/bundle/link_comment_add",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/link_comment_add"
        },
        {
          "path" : "/v3/bundle/link_comment_edit",
          "displayName" : "/v3/bundle/link_comment_edit",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/link_comment_edit"
        },
        {
          "path" : "/v3/bundle/link_comment_remove",
          "displayName" : "/v3/bundle/link_comment_remove",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/link_comment_remove"
        },
        {
          "path" : "/v3/bundle/link_edit",
          "displayName" : "/v3/bundle/link_edit",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/link_edit"
        },
        {
          "path" : "/v3/bundle/link_remove",
          "displayName" : "/v3/bundle/link_remove",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/link_remove"
        },
        {
          "path" : "/v3/bundle/link_reorder",
          "displayName" : "/v3/bundle/link_reorder",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/link_reorder"
        },
        {
          "path" : "/v3/bundle/pending_collaborator_remove",
          "displayName" : "/v3/bundle/pending_collaborator_remove",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/pending_collaborator_remove"
        },
        {
          "path" : "/v3/bundle/reorder",
          "displayName" : "/v3/bundle/reorder",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/reorder"
        },
        {
          "path" : "/v3/bundle/view_count",
          "displayName" : "/v3/bundle/view_count",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bundle/view_count"
        },
        {
          "path" : "/v3/user/bundle_history",
          "displayName" : "/v3/user/bundle_history",
          "doc" : {
            "url" : "http://dev.bitly.com/bundles.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/bundle_history"
        },
        {
          "path" : "/v3/bitly_pro_domain",
          "displayName" : "/v3/bitly_pro_domain",
          "doc" : {
            "url" : "http://dev.bitly.com/domains.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/bitly_pro_domain"
        },
        {
          "path" : "/v3/user/tracking_domain_clicks",
          "displayName" : "/v3/user/tracking_domain_clicks",
          "doc" : {
            "url" : "http://dev.bitly.com/domains.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/tracking_domain_clicks"
        },
        {
          "path" : "/v3/user/tracking_domain_shorten_counts",
          "displayName" : "/v3/user/tracking_domain_shorten_counts",
          "doc" : {
            "url" : "http://dev.bitly.com/domains.html"
          },
          "httpMethod" : "GET",
          "curl" : "curl -X ",
          "params" : [ ],
          "url" : "https://api-ssl.bitly.com/v3/user/tracking_domain_shorten_counts"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "documentation" : "http://api.bitly.com/v1",
    "enabled" : true,
    "logo" : "http://www.indiesunlimited.com/wp-content/uploads/2013/05/bitly-puffer-fish.png",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/bitly.png",
    "name" : "Bitly",
    "oauth" : {
      "isManual" : true,
      "version" : "2.0",
      "clientId" : "7f618c46997d0a4e9066a5be267e78807004ae27",
      "secret" : "328bae6e1485e3f42f8ea5f801bad3a613d4ec09",
      "baseURL" : "https://bitly.com",
      "accessTokenURL" : "https://api-ssl.bitly.com/oauth/access_token",
      "requestTokenURL" : "https://api-ssl.bitly.com/",
      "authTokenURL" : "https://bitly.com/oauth/authorize",
      "tokenMethod" : "access_token_query",
      "authTokenPath" : "/oauth/authorize",
      "accessTokenIncludeClientInfo" : true,
      "grant_type" : "authorization_code",
      "scope" : "",
      "protocol" : "https",
      "host" : "bitly.com",
      "passTokenInQuery" : false,
      "tokenQueryParam" : "oauth2_access_token",
      "useOAuthLib" : true
    },
    "useCustom" : true,
    "type" : "channel:bitly"
  },
  {
    "_id" : "532a258a50411e5802cb8053",
    "application" : {
      "base" : "https://api.github.com",
      "resources" : [
        {
          "doc" : {
            "t" : "List public events",
            "url" : "http://developer.github.com/v3/activity/events/"
          },
          "displayName" : "/events",
          "path" : "/events",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/events"
        },
        {
          "doc" : {
            "t" : "List repository events",
            "url" : "http://developer.github.com/v3/activity/events/"
          },
          "displayName" : "/repos/:owner/:repo/events",
          "path" : "/repos/:owner/:repo/events",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/events"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/events/"
          },
          "displayName" : "/repos/:owner/:repo/issues/events",
          "path" : "/repos/:owner/:repo/issues/events",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/events"
        },
        {
          "doc" : {
            "t" : "List public events for a network of repositories",
            "url" : "http://developer.github.com/v3/activity/events/"
          },
          "displayName" : "/networks/:owner/:repo/events",
          "path" : "/networks/:owner/:repo/events",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/networks/:owner/:repo/events"
        },
        {
          "doc" : {
            "t" : "List public events for an organization",
            "url" : "http://developer.github.com/v3/activity/events/"
          },
          "displayName" : "/orgs/:org/events",
          "path" : "/orgs/:org/events",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/orgs/:org/events"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/events/"
          },
          "displayName" : "/users/:user/received_events",
          "path" : "/users/:user/received_events",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/users/:user/received_events"
        },
        {
          "doc" : {
            "t" : "List public events that a user has received",
            "url" : "http://developer.github.com/v3/activity/events/"
          },
          "displayName" : "/users/:user/received_events/public",
          "path" : "/users/:user/received_events/public",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/users/:user/received_events/public"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/events/"
          },
          "displayName" : "/users/:user/events",
          "path" : "/users/:user/events",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/users/:user/events"
        },
        {
          "doc" : {
            "t" : "List public events performed by a user",
            "url" : "http://developer.github.com/v3/activity/events/"
          },
          "displayName" : "/users/:user/events/public",
          "path" : "/users/:user/events/public",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/users/:user/events/public"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/events/"
          },
          "displayName" : "/users/:user/events/orgs/:org",
          "path" : "/users/:user/events/orgs/:org",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/users/:user/events/orgs/:org"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/feeds/"
          },
          "displayName" : "/feeds",
          "path" : "/feeds",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/feeds"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/notifications/"
          },
          "displayName" : "/notifications",
          "path" : "/notifications",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "all",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "If true, show notifications marked as read. Default: false"
              }
            },
            {
              "name" : "participating",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "If true, only shows notifications in which the user is directly participating or mentioned. Default: false"
              }
            },
            {
              "name" : "since",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Filters out any notifications updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now"
              }
            }
          ],
          "url" : "https://api.github.com/notifications"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/notifications/"
          },
          "displayName" : "/repos/:owner/:repo/notifications",
          "path" : "/repos/:owner/:repo/notifications",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "all",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "If true, show notifications marked as read. Default: false"
              }
            },
            {
              "name" : "participating",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "If true, only shows notifications in which the user is directly participating or mentioned. Default: false"
              }
            },
            {
              "name" : "since",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Filters out any notifications updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now"
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/notifications"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/notifications/"
          },
          "displayName" : "/notifications",
          "path" : "/notifications",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "last_read_at",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Describes the last point that notifications were checked.  Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now"
              }
            }
          ],
          "url" : "https://api.github.com/notifications"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/notifications/"
          },
          "displayName" : "/repos/:owner/:repo/notifications",
          "path" : "/repos/:owner/:repo/notifications",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "last_read_at",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Describes the last point that notifications were checked.  Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now"
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/notifications"
        },
        {
          "doc" : {
            "t" : "View a single thread",
            "url" : "http://developer.github.com/v3/activity/notifications/"
          },
          "displayName" : "/notifications/threads/:id",
          "path" : "/notifications/threads/:id",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/notifications/threads/:id"
        },
        {
          "doc" : {
            "t" : "Mark a thread as read",
            "url" : "http://developer.github.com/v3/activity/notifications/"
          },
          "displayName" : "/notifications/threads/:id",
          "path" : "/notifications/threads/:id",
          "httpMethod" : "PATCH",
          "params" : [ ],
          "url" : "https://api.github.com/notifications/threads/:id"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/notifications/"
          },
          "displayName" : "/notifications/threads/:id/subscription",
          "path" : "/notifications/threads/:id/subscription",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/notifications/threads/:id/subscription"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/notifications/"
          },
          "displayName" : "/notifications/threads/:id/subscription",
          "path" : "/notifications/threads/:id/subscription",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "subscribed",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "Determines if notifications should be received from this thread"
              }
            },
            {
              "name" : "ignored",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "Determines if all notifications should be blocked from this thread"
              }
            }
          ],
          "url" : "https://api.github.com/notifications/threads/:id/subscription"
        },
        {
          "doc" : {
            "t" : "Delete a Thread Subscription",
            "url" : "http://developer.github.com/v3/activity/notifications/"
          },
          "displayName" : "/notifications/threads/:id/subscription",
          "path" : "/notifications/threads/:id/subscription",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/notifications/threads/:id/subscription"
        },
        {
          "doc" : {
            "t" : "List Stargazers",
            "url" : "http://developer.github.com/v3/activity/starring/"
          },
          "displayName" : "/repos/:owner/:repo/stargazers",
          "path" : "/repos/:owner/:repo/stargazers",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/stargazers"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/starring/"
          },
          "displayName" : "/users/:user/starred",
          "path" : "/users/:user/starred",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/users/:user/starred"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/starring/"
          },
          "displayName" : "/user/starred",
          "path" : "/user/starred",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "One of created (when the repository was starred) or updated (when it was last pushed to). Default: created"
              }
            },
            {
              "name" : "direction",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "One of asc (ascending) or desc (descending). Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/user/starred"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/starring/"
          },
          "displayName" : "/user/starred/:owner/:repo",
          "path" : "/user/starred/:owner/:repo",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/user/starred/:owner/:repo"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/starring/"
          },
          "displayName" : "/user/starred/:owner/:repo",
          "path" : "/user/starred/:owner/:repo",
          "httpMethod" : "PUT",
          "params" : [ ],
          "url" : "https://api.github.com/user/starred/:owner/:repo"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/starring/"
          },
          "displayName" : "/user/starred/:owner/:repo",
          "path" : "/user/starred/:owner/:repo",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/user/starred/:owner/:repo"
        },
        {
          "doc" : {
            "t" : "List watchers",
            "url" : "http://developer.github.com/v3/activity/watching/"
          },
          "displayName" : "/repos/:owner/:repo/subscribers",
          "path" : "/repos/:owner/:repo/subscribers",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/subscribers"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/watching/"
          },
          "displayName" : "/users/:user/subscriptions",
          "path" : "/users/:user/subscriptions",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/users/:user/subscriptions"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/watching/"
          },
          "displayName" : "/user/subscriptions",
          "path" : "/user/subscriptions",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/user/subscriptions"
        },
        {
          "doc" : {
            "t" : "Get a Repository Subscription",
            "url" : "http://developer.github.com/v3/activity/watching/"
          },
          "displayName" : "/repos/:owner/:repo/subscription",
          "path" : "/repos/:owner/:repo/subscription",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/subscription"
        },
        {
          "doc" : {
            "t" : "Set a Repository Subscription",
            "url" : "http://developer.github.com/v3/activity/watching/"
          },
          "displayName" : "/repos/:owner/:repo/subscription",
          "path" : "/repos/:owner/:repo/subscription",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "subscribed",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "Determines if notifications should be received from this repository."
              }
            },
            {
              "name" : "ignored",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "Determines if all notifications should be blocked from this repository."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/subscription"
        },
        {
          "doc" : {
            "t" : "Delete a Repository Subscription",
            "url" : "http://developer.github.com/v3/activity/watching/"
          },
          "displayName" : "/repos/:owner/:repo/subscription",
          "path" : "/repos/:owner/:repo/subscription",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/subscription"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/watching/"
          },
          "displayName" : "/user/subscriptions/:owner/:repo",
          "path" : "/user/subscriptions/:owner/:repo",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/user/subscriptions/:owner/:repo"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/watching/"
          },
          "displayName" : "/user/subscriptions/:owner/:repo",
          "path" : "/user/subscriptions/:owner/:repo",
          "httpMethod" : "PUT",
          "params" : [ ],
          "url" : "https://api.github.com/user/subscriptions/:owner/:repo"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/activity/watching/"
          },
          "displayName" : "/user/subscriptions/:owner/:repo",
          "path" : "/user/subscriptions/:owner/:repo",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/user/subscriptions/:owner/:repo"
        },
        {
          "doc" : {
            "t" : "List comments on a gist",
            "url" : "http://developer.github.com/v3/gists/comments/"
          },
          "displayName" : "/gists/:gist_id/comments",
          "path" : "/gists/:gist_id/comments",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/gists/:gist_id/comments"
        },
        {
          "doc" : {
            "t" : "Get a single comment",
            "url" : "http://developer.github.com/v3/gists/comments/"
          },
          "displayName" : "/gists/:gist_id/comments/:id",
          "path" : "/gists/:gist_id/comments/:id",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/gists/:gist_id/comments/:id"
        },
        {
          "doc" : {
            "t" : "Create a comment",
            "url" : "http://developer.github.com/v3/gists/comments/"
          },
          "displayName" : "/gists/:gist_id/comments",
          "path" : "/gists/:gist_id/comments",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The comment text."
              }
            }
          ],
          "url" : "https://api.github.com/gists/:gist_id/comments"
        },
        {
          "doc" : {
            "t" : "Edit a comment",
            "url" : "http://developer.github.com/v3/gists/comments/"
          },
          "displayName" : "/gists/:gist_id/comments/:id",
          "path" : "/gists/:gist_id/comments/:id",
          "httpMethod" : "PATCH",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The comment text."
              }
            }
          ],
          "url" : "https://api.github.com/gists/:gist_id/comments/:id"
        },
        {
          "doc" : {
            "t" : "Delete a comment",
            "url" : "http://developer.github.com/v3/gists/comments/"
          },
          "displayName" : "/gists/:gist_id/comments/:id",
          "path" : "/gists/:gist_id/comments/:id",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/gists/:gist_id/comments/:id"
        },
        {
          "doc" : {
            "t" : "Get a Blob",
            "url" : "http://developer.github.com/v3/git/blobs/"
          },
          "displayName" : "/repos/:owner/:repo/git/blobs/:sha",
          "path" : "/repos/:owner/:repo/git/blobs/:sha",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/blobs/:sha"
        },
        {
          "doc" : {
            "t" : "Create a Blob",
            "url" : "http://developer.github.com/v3/git/blobs/"
          },
          "displayName" : "/repos/:owner/:repo/git/blobs",
          "path" : "/repos/:owner/:repo/git/blobs",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/blobs"
        },
        {
          "doc" : {
            "t" : "Get a Commit",
            "url" : "http://developer.github.com/v3/git/commits/"
          },
          "displayName" : "/repos/:owner/:repo/git/commits/:sha",
          "path" : "/repos/:owner/:repo/git/commits/:sha",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/commits/:sha"
        },
        {
          "doc" : {
            "t" : "Create a Commit",
            "url" : "http://developer.github.com/v3/git/commits/"
          },
          "displayName" : "/repos/:owner/:repo/git/commits",
          "path" : "/repos/:owner/:repo/git/commits",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "message",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The commit message"
              }
            },
            {
              "name" : "tree",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The SHA of the tree object this commit points to"
              }
            },
            {
              "name" : "parents",
              "style" : "body",
              "type" : "array of strings",
              "doc" : {
                "t" : "Required. The SHAs of the commits that were the parents of this commit.  If omitted or empty, the commit will be written as a root commit.  For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/commits"
        },
        {
          "doc" : {
            "t" : "Get a Reference",
            "url" : "http://developer.github.com/v3/git/refs/"
          },
          "displayName" : "/repos/:owner/:repo/git/refs/:ref",
          "path" : "/repos/:owner/:repo/git/refs/:ref",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/refs/:ref"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/git/refs/"
          },
          "displayName" : "/repos/:owner/:repo/git/refs/heads/skunkworkz/featureA",
          "path" : "/repos/:owner/:repo/git/refs/heads/skunkworkz/featureA",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/refs/heads/skunkworkz/featureA"
        },
        {
          "doc" : {
            "t" : "Get all References",
            "url" : "http://developer.github.com/v3/git/refs/"
          },
          "displayName" : "/repos/:owner/:repo/git/refs",
          "path" : "/repos/:owner/:repo/git/refs",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/refs"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/git/refs/"
          },
          "displayName" : "/repos/:owner/:repo/git/refs/tags",
          "path" : "/repos/:owner/:repo/git/refs/tags",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/refs/tags"
        },
        {
          "doc" : {
            "t" : "Create a Reference",
            "url" : "http://developer.github.com/v3/git/refs/"
          },
          "displayName" : "/repos/:owner/:repo/git/refs",
          "path" : "/repos/:owner/:repo/git/refs",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "ref",
              "style" : "body",
              "type" : "type",
              "doc" : {
                "t" : "The name of the fully qualified reference (ie: refs/heads/master). If it doesn’t start with ‘refs’ and have at least two slashes, it will be rejected."
              }
            },
            {
              "name" : "sha",
              "style" : "body",
              "type" : "type",
              "doc" : {
                "t" : "The SHA1 value to set this reference to"
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/refs"
        },
        {
          "doc" : {
            "t" : "Update a Reference",
            "url" : "http://developer.github.com/v3/git/refs/"
          },
          "displayName" : "/repos/:owner/:repo/git/refs/:ref",
          "path" : "/repos/:owner/:repo/git/refs/:ref",
          "httpMethod" : "PATCH",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "sha",
              "style" : "body",
              "type" : "type",
              "doc" : {
                "t" : "The SHA1 value to set this reference to"
              }
            },
            {
              "name" : "force",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting it to false will make sure you’re not overwriting work. Default: false"
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/refs/:ref"
        },
        {
          "doc" : {
            "t" : "Delete a Reference",
            "url" : "http://developer.github.com/v3/git/refs/"
          },
          "displayName" : "/repos/:owner/:repo/git/refs/:ref",
          "path" : "/repos/:owner/:repo/git/refs/:ref",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/refs/:ref"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/git/refs/"
          },
          "displayName" : "/repos/octocat/Hello-World/git/refs/heads/feature-a",
          "path" : "/repos/octocat/Hello-World/git/refs/heads/feature-a",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/octocat/Hello-World/git/refs/heads/feature-a"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/git/refs/"
          },
          "displayName" : "/repos/octocat/Hello-World/git/refs/tags/v1.0",
          "path" : "/repos/octocat/Hello-World/git/refs/tags/v1.0",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/octocat/Hello-World/git/refs/tags/v1.0"
        },
        {
          "doc" : {
            "t" : "Get a Tag",
            "url" : "http://developer.github.com/v3/git/tags/"
          },
          "displayName" : "/repos/:owner/:repo/git/tags/:sha",
          "path" : "/repos/:owner/:repo/git/tags/:sha",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/tags/:sha"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/git/tags/"
          },
          "displayName" : "/repos/:owner/:repo/git/tags",
          "path" : "/repos/:owner/:repo/git/tags",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "tag",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The tag"
              }
            },
            {
              "name" : "message",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The tag message"
              }
            },
            {
              "name" : "object",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The SHA of the git object this is tagging"
              }
            },
            {
              "name" : "type",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The type of the object we’re tagging. Normally this is a commit but it can also be a tree or a blob."
              }
            },
            {
              "name" : "tagger",
              "style" : "body",
              "type" : "hash",
              "doc" : {
                "t" : "A hash with information about the individual creating the tag."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/tags"
        },
        {
          "doc" : {
            "t" : "Get a Tree",
            "url" : "http://developer.github.com/v3/git/trees/"
          },
          "displayName" : "/repos/:owner/:repo/git/trees/:sha",
          "path" : "/repos/:owner/:repo/git/trees/:sha",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/trees/:sha"
        },
        {
          "doc" : {
            "t" : "Get a Tree Recursively",
            "url" : "http://developer.github.com/v3/git/trees/"
          },
          "displayName" : "/repos/:owner/:repo/git/trees/:sha?recursive=1",
          "path" : "/repos/:owner/:repo/git/trees/:sha?recursive=1",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/trees/:sha?recursive=1"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/git/trees/"
          },
          "displayName" : "/repos/:owner/:repo/git/trees",
          "path" : "/repos/:owner/:repo/git/trees",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "tree",
              "style" : "body",
              "type" : "array of hashes",
              "doc" : {
                "t" : "Required. Objects (of path, mode, type, and sha) specifying a tree structure"
              }
            },
            {
              "name" : "base_tree",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The SHA1 of the tree you want to update with new data. If you don’t set this, the commit will be created on top of everything; however, it will only contain your change, the rest of your files will show up as deleted."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/trees"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/issues/assignees/"
          },
          "displayName" : "/repos/:owner/:repo/assignees",
          "path" : "/repos/:owner/:repo/assignees",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/assignees"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/issues/assignees/"
          },
          "displayName" : "/repos/:owner/:repo/assignees/:assignee",
          "path" : "/repos/:owner/:repo/assignees/:assignee",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/assignees/:assignee"
        },
        {
          "doc" : {
            "t" : "List comments on an issue",
            "url" : "http://developer.github.com/v3/issues/comments/"
          },
          "displayName" : "/repos/:owner/:repo/issues/:number/comments",
          "path" : "/repos/:owner/:repo/issues/:number/comments",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number/comments"
        },
        {
          "doc" : {
            "t" : "List comments in a repository",
            "url" : "http://developer.github.com/v3/issues/comments/"
          },
          "displayName" : "/repos/:owner/:repo/issues/comments",
          "path" : "/repos/:owner/:repo/issues/comments",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/comments"
        },
        {
          "doc" : {
            "t" : "Get a single comment",
            "url" : "http://developer.github.com/v3/issues/comments/"
          },
          "displayName" : "/repos/:owner/:repo/issues/comments/:id",
          "path" : "/repos/:owner/:repo/issues/comments/:id",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/comments/:id"
        },
        {
          "doc" : {
            "t" : "Create a comment",
            "url" : "http://developer.github.com/v3/issues/comments/"
          },
          "displayName" : "/repos/:owner/:repo/issues/:number/comments",
          "path" : "/repos/:owner/:repo/issues/:number/comments",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The contents of the comment."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number/comments"
        },
        {
          "doc" : {
            "t" : "Edit a comment",
            "url" : "http://developer.github.com/v3/issues/comments/"
          },
          "displayName" : "/repos/:owner/:repo/issues/comments/:id",
          "path" : "/repos/:owner/:repo/issues/comments/:id",
          "httpMethod" : "PATCH",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The contents of the comment."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/comments/:id"
        },
        {
          "doc" : {
            "t" : "Delete a comment",
            "url" : "http://developer.github.com/v3/issues/comments/"
          },
          "displayName" : "/repos/:owner/:repo/issues/comments/:id",
          "path" : "/repos/:owner/:repo/issues/comments/:id",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/comments/:id"
        },
        {
          "doc" : {
            "t" : "List events for an issue",
            "url" : "http://developer.github.com/v3/issues/events/"
          },
          "displayName" : "/repos/:owner/:repo/issues/:issue_number/events",
          "path" : "/repos/:owner/:repo/issues/:issue_number/events",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:issue_number/events"
        },
        {
          "doc" : {
            "t" : "List events for a repository",
            "url" : "http://developer.github.com/v3/issues/events/"
          },
          "displayName" : "/repos/:owner/:repo/issues/events",
          "path" : "/repos/:owner/:repo/issues/events",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/events"
        },
        {
          "doc" : {
            "t" : "Get a single event",
            "url" : "http://developer.github.com/v3/issues/events/"
          },
          "displayName" : "/repos/:owner/:repo/issues/events/:id",
          "path" : "/repos/:owner/:repo/issues/events/:id",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/events/:id"
        },
        {
          "doc" : {
            "t" : "List all labels for this repository",
            "url" : "http://developer.github.com/v3/issues/labels/"
          },
          "displayName" : "/repos/:owner/:repo/labels",
          "path" : "/repos/:owner/:repo/labels",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/labels"
        },
        {
          "doc" : {
            "t" : "Get a single label",
            "url" : "http://developer.github.com/v3/issues/labels/"
          },
          "displayName" : "/repos/:owner/:repo/labels/:name",
          "path" : "/repos/:owner/:repo/labels/:name",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/labels/:name"
        },
        {
          "doc" : {
            "t" : "Create a label",
            "url" : "http://developer.github.com/v3/issues/labels/"
          },
          "displayName" : "/repos/:owner/:repo/labels",
          "path" : "/repos/:owner/:repo/labels",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The name of the label."
              }
            },
            {
              "name" : "color",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required.  A 6 character hex code, without the leading #, identifying the color."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/labels"
        },
        {
          "doc" : {
            "t" : "Update a label",
            "url" : "http://developer.github.com/v3/issues/labels/"
          },
          "displayName" : "/repos/:owner/:repo/labels/:name",
          "path" : "/repos/:owner/:repo/labels/:name",
          "httpMethod" : "PATCH",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The name of the label."
              }
            },
            {
              "name" : "color",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required.  A 6 character hex code, without the leading #, identifying the color."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/labels/:name"
        },
        {
          "doc" : {
            "t" : "Delete a label",
            "url" : "http://developer.github.com/v3/issues/labels/"
          },
          "displayName" : "/repos/:owner/:repo/labels/:name",
          "path" : "/repos/:owner/:repo/labels/:name",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/labels/:name"
        },
        {
          "doc" : {
            "t" : "List labels on an issue",
            "url" : "http://developer.github.com/v3/issues/labels/"
          },
          "displayName" : "/repos/:owner/:repo/issues/:number/labels",
          "path" : "/repos/:owner/:repo/issues/:number/labels",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number/labels"
        },
        {
          "doc" : {
            "t" : "Add labels to an issue",
            "url" : "http://developer.github.com/v3/issues/labels/"
          },
          "displayName" : "/repos/:owner/:repo/issues/:number/labels",
          "path" : "/repos/:owner/:repo/issues/:number/labels",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number/labels"
        },
        {
          "doc" : {
            "t" : "Remove a label from an issue",
            "url" : "http://developer.github.com/v3/issues/labels/"
          },
          "displayName" : "/repos/:owner/:repo/issues/:number/labels/:name",
          "path" : "/repos/:owner/:repo/issues/:number/labels/:name",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number/labels/:name"
        },
        {
          "doc" : {
            "t" : "Replace all labels for an issue",
            "url" : "http://developer.github.com/v3/issues/labels/"
          },
          "displayName" : "/repos/:owner/:repo/issues/:number/labels",
          "path" : "/repos/:owner/:repo/issues/:number/labels",
          "httpMethod" : "PUT",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number/labels"
        },
        {
          "doc" : {
            "t" : "Remove all labels from an issue",
            "url" : "http://developer.github.com/v3/issues/labels/"
          },
          "displayName" : "/repos/:owner/:repo/issues/:number/labels",
          "path" : "/repos/:owner/:repo/issues/:number/labels",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number/labels"
        },
        {
          "doc" : {
            "t" : "Get labels for every issue in a milestone",
            "url" : "http://developer.github.com/v3/issues/labels/"
          },
          "displayName" : "/repos/:owner/:repo/milestones/:number/labels",
          "path" : "/repos/:owner/:repo/milestones/:number/labels",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/milestones/:number/labels"
        },
        {
          "doc" : {
            "t" : "List milestones for a repository",
            "url" : "http://developer.github.com/v3/issues/milestones/"
          },
          "displayName" : "/repos/:owner/:repo/milestones",
          "path" : "/repos/:owner/:repo/milestones",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "state",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The state of the milestone. Either open or closed. Default: open"
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "What to sort results by. Either due_date or completeness. Default: due_date"
              }
            },
            {
              "name" : "direction",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The direction of the sort. Either asc or desc. Default: asc"
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/milestones"
        },
        {
          "doc" : {
            "t" : "Get a single milestone",
            "url" : "http://developer.github.com/v3/issues/milestones/"
          },
          "displayName" : "/repos/:owner/:repo/milestones/:number",
          "path" : "/repos/:owner/:repo/milestones/:number",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/milestones/:number"
        },
        {
          "doc" : {
            "t" : "Create a milestone",
            "url" : "http://developer.github.com/v3/issues/milestones/"
          },
          "displayName" : "/repos/:owner/:repo/milestones",
          "path" : "/repos/:owner/:repo/milestones",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "title",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The title of the milestone."
              }
            },
            {
              "name" : "state",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The state of the milestone. Either open or closed. Default: open"
              }
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "A description of the milestone."
              }
            },
            {
              "name" : "due_on",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The milestone due date. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/milestones"
        },
        {
          "doc" : {
            "t" : "Update a milestone",
            "url" : "http://developer.github.com/v3/issues/milestones/"
          },
          "displayName" : "/repos/:owner/:repo/milestones/:number",
          "path" : "/repos/:owner/:repo/milestones/:number",
          "httpMethod" : "PATCH",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "title",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The title of the milestone."
              }
            },
            {
              "name" : "state",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The state of the milestone. Either open or closed. Default: open"
              }
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "A description of the milestone."
              }
            },
            {
              "name" : "due_on",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The milestone due date. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/milestones/:number"
        },
        {
          "doc" : {
            "t" : "Delete a milestone",
            "url" : "http://developer.github.com/v3/issues/milestones/"
          },
          "displayName" : "/repos/:owner/:repo/milestones/:number",
          "path" : "/repos/:owner/:repo/milestones/:number",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/milestones/:number"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/emojis/"
          },
          "displayName" : "/emojis",
          "path" : "/emojis",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/emojis"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/gitignore/"
          },
          "displayName" : "/gitignore/templates",
          "path" : "/gitignore/templates",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/gitignore/templates"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/gitignore/"
          },
          "displayName" : "/gitignore/templates/C",
          "path" : "/gitignore/templates/C",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/gitignore/templates/C"
        },
        {
          "doc" : {
            "t" : "Render an arbitrary Markdown document",
            "url" : "http://developer.github.com/v3/markdown/"
          },
          "displayName" : "/markdown",
          "path" : "/markdown",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "text",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required.The Markdown text to render"
              }
            },
            {
              "name" : "mode",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The rendering mode. Can be either:* markdown to render a document as plain Markdown, just like README files are rendered. * gfm to render a document as user-content, e.g. like user comments or issues are rendered. In GFM mode, hard line breaks are always taken into account, and issue and user mentions are linked accordingly. Default: markdown"
              }
            },
            {
              "name" : "context",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The repository context. Only taken into account when rendering as gfm"
              }
            }
          ],
          "url" : "https://api.github.com/markdown"
        },
        {
          "doc" : {
            "t" : "Render a Markdown document in raw mode",
            "url" : "http://developer.github.com/v3/markdown/"
          },
          "displayName" : "/markdown/raw",
          "path" : "/markdown/raw",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.github.com/markdown/raw"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/meta/"
          },
          "displayName" : "/meta",
          "path" : "/meta",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/meta"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/rate_limit/"
          },
          "displayName" : "/rate_limit",
          "path" : "/rate_limit",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/rate_limit"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/orgs/members/"
          },
          "displayName" : "/orgs/:org/members",
          "path" : "/orgs/:org/members",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "filter",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Filter members returned in the list. Can be one of:* 2fa_disabled: Members without two-factor authentication enabled. Available for owners of organizations with private repositories.* all: All members the authenticated user can see.Default: all"
              }
            }
          ],
          "url" : "https://api.github.com/orgs/:org/members"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/orgs/members/"
          },
          "displayName" : "/orgs/:org/members/:user",
          "path" : "/orgs/:org/members/:user",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/orgs/:org/members/:user"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/orgs/members/"
          },
          "displayName" : "/orgs/:org/members/:user",
          "path" : "/orgs/:org/members/:user",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/orgs/:org/members/:user"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/orgs/members/"
          },
          "displayName" : "/orgs/:org/public_members",
          "path" : "/orgs/:org/public_members",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/orgs/:org/public_members"
        },
        {
          "doc" : {
            "t" : "Check public membership",
            "url" : "http://developer.github.com/v3/orgs/members/"
          },
          "displayName" : "/orgs/:org/public_members/:user",
          "path" : "/orgs/:org/public_members/:user",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/orgs/:org/public_members/:user"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/orgs/members/"
          },
          "displayName" : "/orgs/:org/public_members/:user",
          "path" : "/orgs/:org/public_members/:user",
          "httpMethod" : "PUT",
          "params" : [ ],
          "url" : "https://api.github.com/orgs/:org/public_members/:user"
        },
        {
          "doc" : {
            "t" : "Conceal a user’s membership",
            "url" : "http://developer.github.com/v3/orgs/members/"
          },
          "displayName" : "/orgs/:org/public_members/:user",
          "path" : "/orgs/:org/public_members/:user",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/orgs/:org/public_members/:user"
        },
        {
          "doc" : {
            "t" : "List teams",
            "url" : "http://developer.github.com/v3/orgs/teams/"
          },
          "displayName" : "/orgs/:org/teams",
          "path" : "/orgs/:org/teams",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/orgs/:org/teams"
        },
        {
          "doc" : {
            "t" : "Get team",
            "url" : "http://developer.github.com/v3/orgs/teams/"
          },
          "displayName" : "/teams/:id",
          "path" : "/teams/:id",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/teams/:id"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/orgs/teams/"
          },
          "displayName" : "/orgs/:org/teams",
          "path" : "/orgs/:org/teams",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The name of the team."
              }
            },
            {
              "name" : "repo_names",
              "style" : "body",
              "type" : "array of strings",
              "doc" : {
                "t" : "The repositories to add the team to."
              }
            },
            {
              "name" : "permission",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The permission to grant the team. Can be one of: * pull - team members can pull, but not push to or administer these repositories. * push - team members can pull and push, but not administer these repositories. * admin - team members can pull, push and administer these repositories.Default: pull"
              }
            }
          ],
          "url" : "https://api.github.com/orgs/:org/teams"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/orgs/teams/"
          },
          "displayName" : "/teams/:id",
          "path" : "/teams/:id",
          "httpMethod" : "PATCH",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The name of the team."
              }
            },
            {
              "name" : "permission",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The permission to grant the team. Can be one of: * pull - team members can pull, but not push to or administer these repositories. * push - team members can pull and push, but not administer these repositories. * admin - team members can pull, push and administer these repositories. Default: pull"
              }
            }
          ],
          "url" : "https://api.github.com/teams/:id"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/orgs/teams/"
          },
          "displayName" : "/teams/:id",
          "path" : "/teams/:id",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/teams/:id"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/orgs/teams/"
          },
          "displayName" : "/teams/:id/members",
          "path" : "/teams/:id/members",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/teams/:id/members"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/orgs/teams/"
          },
          "displayName" : "/teams/:id/members/:user",
          "path" : "/teams/:id/members/:user",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/teams/:id/members/:user"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/orgs/teams/"
          },
          "displayName" : "/teams/:id/members/:user",
          "path" : "/teams/:id/members/:user",
          "httpMethod" : "PUT",
          "params" : [ ],
          "url" : "https://api.github.com/teams/:id/members/:user"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/orgs/teams/"
          },
          "displayName" : "/teams/:id/members/:user",
          "path" : "/teams/:id/members/:user",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/teams/:id/members/:user"
        },
        {
          "doc" : {
            "t" : "List team repos",
            "url" : "http://developer.github.com/v3/orgs/teams/"
          },
          "displayName" : "/teams/:id/repos",
          "path" : "/teams/:id/repos",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/teams/:id/repos"
        },
        {
          "doc" : {
            "t" : "Check if a team manages a repository",
            "url" : "http://developer.github.com/v3/orgs/teams/"
          },
          "displayName" : "/teams/:id/repos/:owner/:repo",
          "path" : "/teams/:id/repos/:owner/:repo",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/teams/:id/repos/:owner/:repo"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/orgs/teams/"
          },
          "displayName" : "/teams/:id/repos/:org/:repo",
          "path" : "/teams/:id/repos/:org/:repo",
          "httpMethod" : "PUT",
          "params" : [ ],
          "url" : "https://api.github.com/teams/:id/repos/:org/:repo"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/orgs/teams/"
          },
          "displayName" : "/teams/:id/repos/:owner/:repo",
          "path" : "/teams/:id/repos/:owner/:repo",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/teams/:id/repos/:owner/:repo"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/orgs/teams/"
          },
          "displayName" : "/user/teams",
          "path" : "/user/teams",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/user/teams"
        },
        {
          "doc" : {
            "t" : "List comments on a pull request",
            "url" : "http://developer.github.com/v3/pulls/comments/"
          },
          "displayName" : "/repos/:owner/:repo/pulls/:number/comments",
          "path" : "/repos/:owner/:repo/pulls/:number/comments",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/:number/comments"
        },
        {
          "doc" : {
            "t" : "List comments in a repository",
            "url" : "http://developer.github.com/v3/pulls/comments/"
          },
          "displayName" : "/repos/:owner/:repo/pulls/comments",
          "path" : "/repos/:owner/:repo/pulls/comments",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/comments"
        },
        {
          "doc" : {
            "t" : "Get a single comment",
            "url" : "http://developer.github.com/v3/pulls/comments/"
          },
          "displayName" : "/repos/:owner/:repo/pulls/comments/:number",
          "path" : "/repos/:owner/:repo/pulls/comments/:number",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/comments/:number"
        },
        {
          "doc" : {
            "t" : "Create a comment",
            "url" : "http://developer.github.com/v3/pulls/comments/"
          },
          "displayName" : "/repos/:owner/:repo/pulls/:number/comments",
          "path" : "/repos/:owner/:repo/pulls/:number/comments",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The text of the comment"
              }
            },
            {
              "name" : "commit_id",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The SHA of the commit to comment on."
              }
            },
            {
              "name" : "path",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The relative path of the file to comment on."
              }
            },
            {
              "name" : "position",
              "style" : "body",
              "type" : "number",
              "doc" : {
                "t" : "Required. The line index in the diff to comment on."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/:number/comments"
        },
        {
          "doc" : {
            "t" : "Edit a comment",
            "url" : "http://developer.github.com/v3/pulls/comments/"
          },
          "displayName" : "/repos/:owner/:repo/pulls/comments/:number",
          "path" : "/repos/:owner/:repo/pulls/comments/:number",
          "httpMethod" : "PATCH",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The text of the comment"
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/comments/:number"
        },
        {
          "doc" : {
            "t" : "Delete a comment",
            "url" : "http://developer.github.com/v3/pulls/comments/"
          },
          "displayName" : "/repos/:owner/:repo/pulls/comments/:number",
          "path" : "/repos/:owner/:repo/pulls/comments/:number",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/comments/:number"
        },
        {
          "doc" : {
            "t" : "List collaborators",
            "url" : "http://developer.github.com/v3/repos/collaborators/"
          },
          "displayName" : "/repos/:owner/:repo/collaborators",
          "path" : "/repos/:owner/:repo/collaborators",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/collaborators"
        },
        {
          "doc" : {
            "t" : "Check if a user is a collaborator",
            "url" : "http://developer.github.com/v3/repos/collaborators/"
          },
          "displayName" : "/repos/:owner/:repo/collaborators/:user",
          "path" : "/repos/:owner/:repo/collaborators/:user",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/collaborators/:user"
        },
        {
          "doc" : {
            "t" : "Add user as a collaborator",
            "url" : "http://developer.github.com/v3/repos/collaborators/"
          },
          "displayName" : "/repos/:owner/:repo/collaborators/:user",
          "path" : "/repos/:owner/:repo/collaborators/:user",
          "httpMethod" : "PUT",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/collaborators/:user"
        },
        {
          "doc" : {
            "t" : "Remove user as a collaborator",
            "url" : "http://developer.github.com/v3/repos/collaborators/"
          },
          "displayName" : "/repos/:owner/:repo/collaborators/:user",
          "path" : "/repos/:owner/:repo/collaborators/:user",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/collaborators/:user"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/comments/"
          },
          "displayName" : "/repos/:owner/:repo/comments",
          "path" : "/repos/:owner/:repo/comments",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/comments"
        },
        {
          "doc" : {
            "t" : "List comments for a single commit",
            "url" : "http://developer.github.com/v3/repos/comments/"
          },
          "displayName" : "/repos/:owner/:repo/commits/:sha/comments",
          "path" : "/repos/:owner/:repo/commits/:sha/comments",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/commits/:sha/comments"
        },
        {
          "doc" : {
            "t" : "Create a commit comment",
            "url" : "http://developer.github.com/v3/repos/comments/"
          },
          "displayName" : "/repos/:owner/:repo/commits/:sha/comments",
          "path" : "/repos/:owner/:repo/commits/:sha/comments",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "sha",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The SHA of the commit to comment on."
              }
            },
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The contents of the comment."
              }
            },
            {
              "name" : "path",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Relative path of the file to comment on."
              }
            },
            {
              "name" : "position",
              "style" : "body",
              "type" : "number",
              "doc" : {
                "t" : "Line index in the diff to comment on."
              }
            },
            {
              "name" : "line",
              "style" : "body",
              "type" : "number",
              "doc" : {
                "t" : "Deprecated. Use position parameter instead. Line number in the file to comment on."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/commits/:sha/comments"
        },
        {
          "doc" : {
            "t" : "Get a single commit comment",
            "url" : "http://developer.github.com/v3/repos/comments/"
          },
          "displayName" : "/repos/:owner/:repo/comments/:id",
          "path" : "/repos/:owner/:repo/comments/:id",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/comments/:id"
        },
        {
          "doc" : {
            "t" : "Update a commit comment",
            "url" : "http://developer.github.com/v3/repos/comments/"
          },
          "displayName" : "/repos/:owner/:repo/comments/:id",
          "path" : "/repos/:owner/:repo/comments/:id",
          "httpMethod" : "PATCH",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The contents of the comment"
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/comments/:id"
        },
        {
          "doc" : {
            "t" : "Delete a commit comment",
            "url" : "http://developer.github.com/v3/repos/comments/"
          },
          "displayName" : "/repos/:owner/:repo/comments/:id",
          "path" : "/repos/:owner/:repo/comments/:id",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/comments/:id"
        },
        {
          "doc" : {
            "t" : "List commits on a repository",
            "url" : "http://developer.github.com/v3/repos/commits/"
          },
          "displayName" : "/repos/:owner/:repo/commits",
          "path" : "/repos/:owner/:repo/commits",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/commits"
        },
        {
          "doc" : {
            "t" : "Get a single commit",
            "url" : "http://developer.github.com/v3/repos/commits/"
          },
          "displayName" : "/repos/:owner/:repo/commits/:sha",
          "path" : "/repos/:owner/:repo/commits/:sha",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/commits/:sha"
        },
        {
          "doc" : {
            "t" : "Compare two commits",
            "url" : "http://developer.github.com/v3/repos/commits/"
          },
          "displayName" : "/repos/:owner/:repo/compare/:base...:head",
          "path" : "/repos/:owner/:repo/compare/:base...:head",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/compare/:base...:head"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/commits/"
          },
          "displayName" : "/repos/:owner/:repo/compare/user1:branchname...user2:branchname",
          "path" : "/repos/:owner/:repo/compare/user1:branchname...user2:branchname",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/compare/user1:branchname...user2:branchname"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/contents/"
          },
          "displayName" : "/repos/:owner/:repo/readme",
          "path" : "/repos/:owner/:repo/readme",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/readme"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/contents/"
          },
          "displayName" : "/repos/:owner/:repo/contents/:path",
          "path" : "/repos/:owner/:repo/contents/:path",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/contents/:path"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/contents/"
          },
          "displayName" : "/repos/:owner/:repo/contents/:path",
          "path" : "/repos/:owner/:repo/contents/:path",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "path",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The content path."
              }
            },
            {
              "name" : "message",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The commit message."
              }
            },
            {
              "name" : "content",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The new file content, Base64 encoded."
              }
            },
            {
              "name" : "branch",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The branch name. Default: the repository’s default branch (usually master)"
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/contents/:path"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/contents/"
          },
          "displayName" : "/repos/:owner/:repo/contents/:path",
          "path" : "/repos/:owner/:repo/contents/:path",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "path",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The content path."
              }
            },
            {
              "name" : "message",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The commit message."
              }
            },
            {
              "name" : "content",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The updated file content, Base64 encoded."
              }
            },
            {
              "name" : "sha",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The blob SHA of the file being replaced."
              }
            },
            {
              "name" : "branch",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The branch name. Default: the repository’s default branch (usually master)"
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/contents/:path"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/contents/"
          },
          "displayName" : "/repos/:owner/:repo/contents/:path",
          "path" : "/repos/:owner/:repo/contents/:path",
          "httpMethod" : "DELETE",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "path",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The content path."
              }
            },
            {
              "name" : "message",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The commit message."
              }
            },
            {
              "name" : "sha",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The blob SHA of the file being replaced."
              }
            },
            {
              "name" : "branch",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The branch name. Default: the repository’s default branch (usually master)"
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/contents/:path"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/contents/"
          },
          "displayName" : "/repos/:owner/:repo/:archive_format/:ref",
          "path" : "/repos/:owner/:repo/:archive_format/:ref",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "archive_format",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Can be either tarball or zipball. Default: tarball"
              }
            },
            {
              "name" : "ref",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "A valid Git reference. Default: the repository’s default branch (usually master)"
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/:archive_format/:ref"
        },
        {
          "doc" : {
            "t" : "List deploy keys",
            "url" : "http://developer.github.com/v3/repos/keys/"
          },
          "displayName" : "/repos/:owner/:repo/keys",
          "path" : "/repos/:owner/:repo/keys",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/keys"
        },
        {
          "doc" : {
            "t" : "Get a deploy key",
            "url" : "http://developer.github.com/v3/repos/keys/"
          },
          "displayName" : "/repos/:owner/:repo/keys/:id",
          "path" : "/repos/:owner/:repo/keys/:id",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/keys/:id"
        },
        {
          "doc" : {
            "t" : "Add a new deploy key",
            "url" : "http://developer.github.com/v3/repos/keys/"
          },
          "displayName" : "/repos/:owner/:repo/keys",
          "path" : "/repos/:owner/:repo/keys",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/keys"
        },
        {
          "doc" : {
            "t" : "Remove a deploy key",
            "url" : "http://developer.github.com/v3/repos/keys/"
          },
          "displayName" : "/repos/:owner/:repo/keys/:id",
          "path" : "/repos/:owner/:repo/keys/:id",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/keys/:id"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/deployments/"
          },
          "displayName" : "/repos/:owner/:repo/deployments",
          "path" : "/repos/:owner/:repo/deployments",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/deployments"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/deployments/"
          },
          "displayName" : "/repos/:owner/:repo/deployments",
          "path" : "/repos/:owner/:repo/deployments",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "ref",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The ref to deploy. This can be a branch, tag, or sha."
              }
            },
            {
              "name" : "force",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "Optional parameter to bypass any ahead/behind checks or commit status checks. Default: false"
              }
            },
            {
              "name" : "payload",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Optional JSON payload with extra information about the deployment. Default: \"\""
              }
            },
            {
              "name" : "auto_merge",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "Optional parameter to merge the default branch into the requested deployment branch if necessary. Default: false"
              }
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Optional short description. Default: \"\""
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/deployments"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/deployments/"
          },
          "displayName" : "/repos/:owner/:repo/deployments/:id/statuses",
          "path" : "/repos/:owner/:repo/deployments/:id/statuses",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "id",
              "style" : "body",
              "type" : "integer",
              "doc" : {
                "t" : "Required. The Deployment ID to list the statuses from."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/deployments/:id/statuses"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/deployments/"
          },
          "displayName" : "/repos/:owner/:repo/deployments/:id/statuses",
          "path" : "/repos/:owner/:repo/deployments/:id/statuses",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "state",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The state of the status. Can be one of pending, success, error, or failure."
              }
            },
            {
              "name" : "target_url",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The target URL to associate with this status.  This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. Default: \"\""
              }
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "A short description of the status. Default: \"\""
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/deployments/:id/statuses"
        },
        {
          "doc" : {
            "t" : "List downloads for a repository",
            "url" : "http://developer.github.com/v3/repos/downloads/"
          },
          "displayName" : "/repos/:owner/:repo/downloads",
          "path" : "/repos/:owner/:repo/downloads",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/downloads"
        },
        {
          "doc" : {
            "t" : "Get a single download",
            "url" : "http://developer.github.com/v3/repos/downloads/"
          },
          "displayName" : "/repos/:owner/:repo/downloads/:id",
          "path" : "/repos/:owner/:repo/downloads/:id",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/downloads/:id"
        },
        {
          "doc" : {
            "t" : "Delete a download",
            "url" : "http://developer.github.com/v3/repos/downloads/"
          },
          "displayName" : "/repos/:owner/:repo/downloads/:id",
          "path" : "/repos/:owner/:repo/downloads/:id",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/downloads/:id"
        },
        {
          "doc" : {
            "t" : "List forks",
            "url" : "http://developer.github.com/v3/repos/forks/"
          },
          "displayName" : "/repos/:owner/:repo/forks",
          "path" : "/repos/:owner/:repo/forks",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order. Can be either newest, oldest, or stargazers. Default: newest"
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/forks"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/forks/"
          },
          "displayName" : "/repos/:owner/:repo/forks",
          "path" : "/repos/:owner/:repo/forks",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/forks"
        },
        {
          "doc" : {
            "t" : "List hooks",
            "url" : "http://developer.github.com/v3/repos/hooks/"
          },
          "displayName" : "/repos/:owner/:repo/hooks",
          "path" : "/repos/:owner/:repo/hooks",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/hooks"
        },
        {
          "doc" : {
            "t" : "Get single hook",
            "url" : "http://developer.github.com/v3/repos/hooks/"
          },
          "displayName" : "/repos/:owner/:repo/hooks/:id",
          "path" : "/repos/:owner/:repo/hooks/:id",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/hooks/:id"
        },
        {
          "doc" : {
            "t" : "Create a hook",
            "url" : "http://developer.github.com/v3/repos/hooks/"
          },
          "displayName" : "/repos/:owner/:repo/hooks",
          "path" : "/repos/:owner/:repo/hooks",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The name of the service that is being called. (See /hooks for the list of valid hook names.)"
              }
            },
            {
              "name" : "config",
              "style" : "body",
              "type" : "hash",
              "doc" : {
                "t" : "Required. Key/value pairs to provide settings for this hook.  These settings vary between the services and are defined in the github-services repository. Booleans are stored internally as “1” for true, and “0” for false.  Any JSON true/false values will be converted automatically."
              }
            },
            {
              "name" : "events",
              "style" : "body",
              "type" : "array",
              "doc" : {
                "t" : "Determines what events the hook is triggered for.  Default: [\"push\"]"
              }
            },
            {
              "name" : "active",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "Determines whether the hook is actually triggered on pushes."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/hooks"
        },
        {
          "doc" : {
            "t" : "Edit a hook",
            "url" : "http://developer.github.com/v3/repos/hooks/"
          },
          "displayName" : "/repos/:owner/:repo/hooks/:id",
          "path" : "/repos/:owner/:repo/hooks/:id",
          "httpMethod" : "PATCH",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "config",
              "style" : "body",
              "type" : "hash",
              "doc" : {
                "t" : "Key/value pairs to provide settings for this hook.  Modifying this will replace the entire config object.  These settings vary between the services and are defined in the github-services repository. Booleans are stored internally as “1” for true, and “0” for false.  Any JSON true/false values will be converted automatically."
              }
            },
            {
              "name" : "events",
              "style" : "body",
              "type" : "array",
              "doc" : {
                "t" : "Determines what events the hook is triggered for.  This replaces the entire array of events.  Default: [\"push\"]"
              }
            },
            {
              "name" : "add_events",
              "style" : "body",
              "type" : "array",
              "doc" : {
                "t" : "Determines a list of events to be added to the list of events that the Hook triggers for."
              }
            },
            {
              "name" : "remove_events",
              "style" : "body",
              "type" : "array",
              "doc" : {
                "t" : "Determines a list of events to be removed from the list of events that the Hook triggers for."
              }
            },
            {
              "name" : "active",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "Determines whether the hook is actually triggered on pushes."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/hooks/:id"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/hooks/"
          },
          "displayName" : "/repos/:owner/:repo/hooks/:id/tests",
          "path" : "/repos/:owner/:repo/hooks/:id/tests",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/hooks/:id/tests"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/hooks/"
          },
          "displayName" : "/repos/:owner/:repo/hooks/:id/pings",
          "path" : "/repos/:owner/:repo/hooks/:id/pings",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/hooks/:id/pings"
        },
        {
          "doc" : {
            "t" : "Delete a hook",
            "url" : "http://developer.github.com/v3/repos/hooks/"
          },
          "displayName" : "/repos/:owner/:repo/hooks/:id",
          "path" : "/repos/:owner/:repo/hooks/:id",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/hooks/:id"
        },
        {
          "doc" : {
            "t" : "Perform a merge",
            "url" : "http://developer.github.com/v3/repos/merging/"
          },
          "displayName" : "/repos/:owner/:repo/merges",
          "path" : "/repos/:owner/:repo/merges",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "base",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The name of the base branch that the head will be merged into."
              }
            },
            {
              "name" : "head",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The head to merge. This can be a branch name or a commit SHA1."
              }
            },
            {
              "name" : "commit_message",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Commit message to use for the merge commit. If omitted, a default message will be used."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/merges"
        },
        {
          "doc" : {
            "t" : "Get information about a Pages site",
            "url" : "http://developer.github.com/v3/repos/pages/"
          },
          "displayName" : "/repos/:owner/:repo/pages",
          "path" : "/repos/:owner/:repo/pages",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/pages"
        },
        {
          "doc" : {
            "t" : "List Pages builds",
            "url" : "http://developer.github.com/v3/repos/pages/"
          },
          "displayName" : "/repos/:owner/:repo/pages/builds",
          "path" : "/repos/:owner/:repo/pages/builds",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/pages/builds"
        },
        {
          "doc" : {
            "t" : "List latest Pages build",
            "url" : "http://developer.github.com/v3/repos/pages/"
          },
          "displayName" : "/repos/:owner/:repo/pages/builds/latest",
          "path" : "/repos/:owner/:repo/pages/builds/latest",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/pages/builds/latest"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/releases/"
          },
          "displayName" : "/repos/:owner/:repo/releases",
          "path" : "/repos/:owner/:repo/releases",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/releases"
        },
        {
          "doc" : {
            "t" : "Get a single release",
            "url" : "http://developer.github.com/v3/repos/releases/"
          },
          "displayName" : "/repos/:owner/:repo/releases/:id",
          "path" : "/repos/:owner/:repo/releases/:id",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/releases/:id"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/releases/"
          },
          "displayName" : "/repos/:owner/:repo/releases",
          "path" : "/repos/:owner/:repo/releases",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "tag_name",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The name of the tag."
              }
            },
            {
              "name" : "target_commitish",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Specifies the commitish value that determines where the Git tag is created from.  Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository’s default branch (usually master)."
              }
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The name of the release."
              }
            },
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Text describing the contents of the tag."
              }
            },
            {
              "name" : "draft",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "true to create a draft (unpublished) release, false to create a published one. Default: false"
              }
            },
            {
              "name" : "prerelease",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "true to identify the release as a prerelease. false to identify the release as a full release. Default: false"
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/releases"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/releases/"
          },
          "displayName" : "/repos/:owner/:repo/releases/:id",
          "path" : "/repos/:owner/:repo/releases/:id",
          "httpMethod" : "PATCH",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "tag_name",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The name of the tag."
              }
            },
            {
              "name" : "target_commitish",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Specifies the commitish value that determines where the Git tag is created from.  Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository’s default branch (usually master)."
              }
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The name of the release."
              }
            },
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Text describing the contents of the tag."
              }
            },
            {
              "name" : "draft",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "true makes the release a draft, and false publishes the release."
              }
            },
            {
              "name" : "prerelease",
              "style" : "body",
              "type" : "boolean",
              "doc" : {
                "t" : "true to identify the release as a prerelease, false to identify the release as a full release."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/releases/:id"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/releases/"
          },
          "displayName" : "/repos/:owner/:repo/releases/:id",
          "path" : "/repos/:owner/:repo/releases/:id",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/releases/:id"
        },
        {
          "doc" : {
            "t" : "List assets for a release",
            "url" : "http://developer.github.com/v3/repos/releases/"
          },
          "displayName" : "/repos/:owner/:repo/releases/:id/assets",
          "path" : "/repos/:owner/:repo/releases/:id/assets",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/releases/:id/assets"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/releases/"
          },
          "displayName" : "https://uploads.github.com/repos/:owner/:repo/releases/:id/assets?name=foo.zip",
          "path" : "/https://uploads.github.com/repos/:owner/:repo/releases/:id/assets?name=foo.zip",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.github.com/https://uploads.github.com/repos/:owner/:repo/releases/:id/assets?name=foo.zip"
        },
        {
          "doc" : {
            "t" : "Get a single release asset",
            "url" : "http://developer.github.com/v3/repos/releases/"
          },
          "displayName" : "/repos/:owner/:repo/releases/assets/:id",
          "path" : "/repos/:owner/:repo/releases/assets/:id",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/releases/assets/:id"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/releases/"
          },
          "displayName" : "/repos/:owner/:repo/releases/assets/:id",
          "path" : "/repos/:owner/:repo/releases/assets/:id",
          "httpMethod" : "PATCH",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The file name of the asset."
              }
            },
            {
              "name" : "label",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "An alternate short description of the asset.  Used in place of the filename."
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/releases/assets/:id"
        },
        {
          "doc" : {
            "t" : "Delete a release asset",
            "url" : "http://developer.github.com/v3/repos/releases/"
          },
          "displayName" : "/repos/:owner/:repo/releases/assets/:id",
          "path" : "/repos/:owner/:repo/releases/assets/:id",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/releases/assets/:id"
        },
        {
          "doc" : {
            "t" : "Get contributors list with additions, deletions, and commit counts",
            "url" : "http://developer.github.com/v3/repos/statistics/"
          },
          "displayName" : "/repos/:owner/:repo/stats/contributors",
          "path" : "/repos/:owner/:repo/stats/contributors",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/stats/contributors"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/statistics/"
          },
          "displayName" : "/repos/:owner/:repo/stats/commit_activity",
          "path" : "/repos/:owner/:repo/stats/commit_activity",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/stats/commit_activity"
        },
        {
          "doc" : {
            "t" : "Get the number of additions and deletions per week",
            "url" : "http://developer.github.com/v3/repos/statistics/"
          },
          "displayName" : "/repos/:owner/:repo/stats/code_frequency",
          "path" : "/repos/:owner/:repo/stats/code_frequency",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/stats/code_frequency"
        },
        {
          "doc" : {
            "t" : "Get the weekly commit count for the repository owner and everyone else",
            "url" : "http://developer.github.com/v3/repos/statistics/"
          },
          "displayName" : "/repos/:owner/:repo/stats/participation",
          "path" : "/repos/:owner/:repo/stats/participation",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/stats/participation"
        },
        {
          "doc" : {
            "t" : "Get the number of commits per hour in each day",
            "url" : "http://developer.github.com/v3/repos/statistics/"
          },
          "displayName" : "/repos/:owner/:repo/stats/punch_card",
          "path" : "/repos/:owner/:repo/stats/punch_card",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/stats/punch_card"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/statuses/"
          },
          "displayName" : "/repos/:owner/:repo/statuses/:ref",
          "path" : "/repos/:owner/:repo/statuses/:ref",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/repos/:owner/:repo/statuses/:ref"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/repos/statuses/"
          },
          "displayName" : "/repos/:owner/:repo/statuses/:sha",
          "path" : "/repos/:owner/:repo/statuses/:sha",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "state",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Required. The state of the status. Can be one of pending, success, error, or failure."
              }
            },
            {
              "name" : "target_url",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The target URL to associate with this status.  This URL will be linked from the GitHub UI to allow users to easily see the ‘source’ of the Status.For example, if your Continuous Integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:http://ci.example.com/user/repo/build/sha."
              }
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "A short description of the status"
              }
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/statuses/:sha"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-repositories"
          },
          "displayName" : "/search/repositories",
          "path" : "/search/repositories",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search keywords, as well as any qualifiers."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. One of stars, forks, or updated. Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/repositories"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-repositories"
          },
          "displayName" : "/search/code",
          "path" : "/search/code",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search terms."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. Can only be indexed, which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/code"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-repositories"
          },
          "displayName" : "/search/issues",
          "path" : "/search/issues",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search terms."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. Can be comments, created, or updated. Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/issues"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-repositories"
          },
          "displayName" : "/search/users",
          "path" : "/search/users",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search terms."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. Can be followers, repositories, or joined.  Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/users"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-code"
          },
          "displayName" : "/search/repositories",
          "path" : "/search/repositories",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search keywords, as well as any qualifiers."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. One of stars, forks, or updated. Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/repositories"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-code"
          },
          "displayName" : "/search/code",
          "path" : "/search/code",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search terms."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. Can only be indexed, which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/code"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-code"
          },
          "displayName" : "/search/issues",
          "path" : "/search/issues",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search terms."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. Can be comments, created, or updated. Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/issues"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-code"
          },
          "displayName" : "/search/users",
          "path" : "/search/users",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search terms."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. Can be followers, repositories, or joined.  Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/users"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-issues"
          },
          "displayName" : "/search/repositories",
          "path" : "/search/repositories",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search keywords, as well as any qualifiers."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. One of stars, forks, or updated. Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/repositories"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-issues"
          },
          "displayName" : "/search/code",
          "path" : "/search/code",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search terms."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. Can only be indexed, which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/code"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-issues"
          },
          "displayName" : "/search/issues",
          "path" : "/search/issues",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search terms."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. Can be comments, created, or updated. Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/issues"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-issues"
          },
          "displayName" : "/search/users",
          "path" : "/search/users",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search terms."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. Can be followers, repositories, or joined.  Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/users"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-users"
          },
          "displayName" : "/search/repositories",
          "path" : "/search/repositories",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search keywords, as well as any qualifiers."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. One of stars, forks, or updated. Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/repositories"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-users"
          },
          "displayName" : "/search/code",
          "path" : "/search/code",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search terms."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. Can only be indexed, which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/code"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-users"
          },
          "displayName" : "/search/issues",
          "path" : "/search/issues",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search terms."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. Can be comments, created, or updated. Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/issues"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/#search-users"
          },
          "displayName" : "/search/users",
          "path" : "/search/users",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "q",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search terms."
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. Can be followers, repositories, or joined.  Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort order if sort parameter is provided. One of asc or desc. Default: desc"
              }
            }
          ],
          "url" : "https://api.github.com/search/users"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/legacy/"
          },
          "displayName" : "/legacy/issues/search/:owner/:repository/:state/:keyword",
          "path" : "/legacy/issues/search/:owner/:repository/:state/:keyword",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "state",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Indicates the state of the issues to return. Can be either open or closed."
              }
            },
            {
              "name" : "keyword",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search term."
              }
            }
          ],
          "url" : "https://api.github.com/legacy/issues/search/:owner/:repository/:state/:keyword"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/legacy/"
          },
          "displayName" : "/legacy/repos/search/:keyword",
          "path" : "/legacy/repos/search/:keyword",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "keyword",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search term"
              }
            },
            {
              "name" : "language",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "Filter results by language"
              }
            },
            {
              "name" : "start_page",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The page number to fetch"
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. One of stars, forks, or updated. Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. if sort param is provided. Can be either asc or desc."
              }
            }
          ],
          "url" : "https://api.github.com/legacy/repos/search/:keyword"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/legacy/"
          },
          "displayName" : "/legacy/user/search/:keyword",
          "path" : "/legacy/user/search/:keyword",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "keyword",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The search term"
              }
            },
            {
              "name" : "start_page",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The page number to fetch"
              }
            },
            {
              "name" : "sort",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. One of stars, forks, or updated. Default: results are sorted by best match."
              }
            },
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The sort field. if sort param is provided. Can be either asc or desc."
              }
            }
          ],
          "url" : "https://api.github.com/legacy/user/search/:keyword"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/search/legacy/"
          },
          "displayName" : "/legacy/user/email/:email",
          "path" : "/legacy/user/email/:email",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "style" : "body",
              "type" : "",
              "doc" : {
                "t" : ""
              }
            },
            {
              "name" : "email",
              "style" : "body",
              "type" : "string",
              "doc" : {
                "t" : "The email address"
              }
            }
          ],
          "url" : "https://api.github.com/legacy/user/email/:email"
        },
        {
          "doc" : {
            "t" : "List email addresses for a user",
            "url" : "http://developer.github.com/v3/users/emails/"
          },
          "displayName" : "/user/emails",
          "path" : "/user/emails",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/user/emails"
        },
        {
          "doc" : {
            "t" : "Add email address(es)",
            "url" : "http://developer.github.com/v3/users/emails/"
          },
          "displayName" : "/user/emails",
          "path" : "/user/emails",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.github.com/user/emails"
        },
        {
          "doc" : {
            "t" : "Delete email address(es)",
            "url" : "http://developer.github.com/v3/users/emails/"
          },
          "displayName" : "/user/emails",
          "path" : "/user/emails",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/user/emails"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/users/followers/"
          },
          "displayName" : "/users/:user/followers",
          "path" : "/users/:user/followers",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/users/:user/followers"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/users/followers/"
          },
          "displayName" : "/user/followers",
          "path" : "/user/followers",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/user/followers"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/users/followers/"
          },
          "displayName" : "/users/:user/following",
          "path" : "/users/:user/following",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/users/:user/following"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/users/followers/"
          },
          "displayName" : "/user/following",
          "path" : "/user/following",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/user/following"
        },
        {
          "doc" : {
            "t" : "Check if you are following a user",
            "url" : "http://developer.github.com/v3/users/followers/"
          },
          "displayName" : "/user/following/:user",
          "path" : "/user/following/:user",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/user/following/:user"
        },
        {
          "doc" : {
            "t" : "Check if one user follows another",
            "url" : "http://developer.github.com/v3/users/followers/"
          },
          "displayName" : "/users/:user/following/:target_user",
          "path" : "/users/:user/following/:target_user",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/users/:user/following/:target_user"
        },
        {
          "doc" : {
            "t" : "Follow a user",
            "url" : "http://developer.github.com/v3/users/followers/"
          },
          "displayName" : "/user/following/:user",
          "path" : "/user/following/:user",
          "httpMethod" : "PUT",
          "params" : [ ],
          "url" : "https://api.github.com/user/following/:user"
        },
        {
          "doc" : {
            "t" : "Unfollow a user",
            "url" : "http://developer.github.com/v3/users/followers/"
          },
          "displayName" : "/user/following/:user",
          "path" : "/user/following/:user",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/user/following/:user"
        },
        {
          "doc" : {
            "t" : "List public keys for a user",
            "url" : "http://developer.github.com/v3/users/keys/"
          },
          "displayName" : "/users/:user/keys",
          "path" : "/users/:user/keys",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/users/:user/keys"
        },
        {
          "doc" : {
            "t" : "List your public keys",
            "url" : "http://developer.github.com/v3/users/keys/"
          },
          "displayName" : "/user/keys",
          "path" : "/user/keys",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/user/keys"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/users/keys/"
          },
          "displayName" : "/user/keys/:id",
          "path" : "/user/keys/:id",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.github.com/user/keys/:id"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/users/keys/"
          },
          "displayName" : "/user/keys",
          "path" : "/user/keys",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.github.com/user/keys"
        },
        {
          "doc" : {
            "t" : "",
            "url" : "http://developer.github.com/v3/users/keys/"
          },
          "displayName" : "/user/keys/:id",
          "path" : "/user/keys/:id",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.github.com/user/keys/:id"
        },
        {
          "params" : [
            {
              "type" : "string",
              "style" : "body",
              "name" : "files"
            },
            {
              "type" : "string",
              "style" : "body",
              "name" : "description"
            },
            {
              "type" : "boolean",
              "style" : "body",
              "name" : "public"
            }
          ],
          "httpMethod" : "POST",
          "path" : "/gists",
          "displayName" : "/gists",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/#create-a-gist"
          },
          "url" : "https://api.github.com/gists"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "documentation" : "http://developer.github.com/v3",
    "enabled" : true,
    "isPassport": true,
    "logo" : "https://s3-us-west-2.amazonaws.com/octoblu-icons/github.png",
    "logobw" : "https://s3-us-west-2.amazonaws.com/octoblu-icons/github.png",
    "name" : "Github",
    "oauth" : {
      "production" : {
        "accessTokenPath" : "/oauth/access_token",
        "authTokenURL" : "https://github.com/login",
        "baseURL" : "https://github.com/login",
        "clientId" : "d67367e23f89dcb0fdbe",
        "secret" : "c2b1741e8a8ff08673607b3b67753b2dc8778d71",
        "tokenMethod" : "access_token_query",
        "version" : "2.0",
        "scope" : "user,repo,repo_deployment,notifications,gist"
      },
      "development" : {
        "accessTokenPath" : "/oauth/access_token",
        "authTokenURL" : "https://github.com/login",
        "baseURL" : "https://github.com/login",
        "clientId" : "463a8c25ee407035cd1c",
        "secret" : "fdccd7d4fa72cda2746dc3db787e5558b8bb3837",
        "tokenMethod" : "access_token_query",
        "version" : "2.0",
        "scope" : "user,repo,repo_deployment,notifications,gist"
      }
    },
    "useCustom" : true,
    "type" : "channel:github"
  },
  {
    "_id" : "532a60c06d3281aa4aeacab3",
    "application" : {
      "base" : "https://www.dropbox.com/1",
      "resources" : [
        {
          "doc" : {
            "t" : "Disables the access token used to authenticate the call. This method works for OAuth 1 and OAuth 2 tokens."
          },
          "displayName" : "/disable_access_token",
          "path" : "/disable_access_token",
          "fullURL" : "https://api.dropbox.com/1/disable_access_token",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://www.dropbox.com/1/disable_access_token"
        },
        {
          "doc" : {
            "t" : "Retrieves information about the user's account."
          },
          "displayName" : "/account/info ",
          "path" : "/account/info ",
          "fullURL" : "https://api.dropbox.com/1/account/info",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "locale",
              "required" : false,
              "doc" : {
                "t" : "Use to specify language settings for user error messages and other language specific text. See the notes above for more information about supported locales."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/account/info "
        },
        {
          "doc" : {
            "t" : "Downloads a file. Note that this call goes to api-content.dropbox.com instead of api.dropbox.com."
          },
          "displayName" : "/files (GET)",
          "path" : "/files",
          "fullURL" : "https://api-content.dropbox.com/1/files/<root>/<path>",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://www.dropbox.com/1/files"
        },
        {
          "doc" : {
            "t" : "Uploads a file using PUT semantics. Note that this call goes to api-content.dropbox.com instead of api.dropbox.com.This method is in most cases simpler to use than /files (POST).The preferred HTTP method for this call is PUT. For compatibility with browser environments, the POST HTTP method is also recognized.Note: Providing a Content-Length header set to the size of the uploaded file is required so that the server can verify that it has received the entire file contents."
          },
          "displayName" : "/files_put ",
          "path" : "/files_put ",
          "fullURL" : "https://api-content.dropbox.com/1/files_put/<root>/<path>?param=val",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "locale",
              "required" : false,
              "doc" : {
                "t" : "The metadata returned on successful upload will have its size field translated based on the given locale."
              }
            },
            {
              "name" : "overwrite",
              "required" : false,
              "doc" : {
                "t" : "This value, either true (default) or false, determines what happens when there's already a file at the specified path. If true, the existing file will be overwritten by the new one. If false, the new file will be automatically renamed (for example, test.txt might be automatically renamed to test (1).txt). The new name can be obtained from the returned metadata."
              }
            },
            {
              "name" : "parent_rev",
              "required" : false,
              "doc" : {
                "t" : "The revision of the file you're editing. If parent_rev matches the latest version of the file on the user's Dropbox, that file will be replaced. Otherwise, the new file will be automatically renamed (for example, test.txt might be automatically renamed to test (conflicted copy).txt). If you specify a revision that doesn't exist, the file won't save (error 400). Get the most recent rev by performing a call to /metadata."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/files_put "
        },
        {
          "doc" : {
            "t" : "Uploads a file. Note that this call goes to api-content.dropbox.com instead of api.dropbox.com.We recommend you use /files_put instead due to its simpler interface."
          },
          "displayName" : "/files (POST)",
          "path" : "/files",
          "fullURL" : "https://api-content.dropbox.com/1/files/<root>/<path>",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "locale",
              "required" : false,
              "doc" : {
                "t" : "The metadata returned on successful upload will have its size field translated based on the given locale."
              }
            },
            {
              "name" : "overwrite",
              "required" : false,
              "doc" : {
                "t" : "This value, either true (default) or false, determines what happens when there's already a file at the specified path. If true, the existing file will be overwritten by the new one. If false, the new file will be automatically renamed (for example, test.txt might be automatically renamed to test (1).txt). The new name can be obtained from the returned metadata."
              }
            },
            {
              "name" : "parent_rev",
              "required" : false,
              "doc" : {
                "t" : "The revision of the file you're editing. If parent_rev matches the latest version of the file on the user's Dropbox, that file will be replaced. Otherwise, the new file will be automatically renamed (for example, test.txt might be automatically renamed to test (conflicted copy).txt). If you specify a revision that doesn't exist, the file won't save (error 400). Get the most recent rev by performing a call to /metadata."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/files"
        },
        {
          "doc" : {
            "t" : "Retrieves file and folder metadata."
          },
          "displayName" : "/metadata ",
          "path" : "/metadata ",
          "fullURL" : "https://api.dropbox.com/1/metadata/<root>/<path>",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "file_limit",
              "required" : false,
              "doc" : {
                "t" : "Default is 10,000 (max is 25,000). When listing a folder, the service won't report listings containing more than the specified amount of files and will instead respond with a 406 (Not Acceptable) status response."
              }
            },
            {
              "name" : "hash",
              "required" : false,
              "doc" : {
                "t" : "Each call to /metadata on a folder will return a hash field, generated by hashing all of the metadata contained in that response. On later calls to /metadata, you should provide that value via this parameter so that if nothing has changed, the response will be a 304 (Not Modified) status code instead of the full, potentially very large, folder listing. This parameter is ignored if the specified path is associated with a file or if list=false. A folder shared between two users will have the same hash for each user."
              }
            },
            {
              "name" : "list",
              "required" : false,
              "doc" : {
                "t" : "The strings true and false are valid values. true is the default. If true, the folder's metadata will include a contents field with a list of metadata entries for the contents of the folder. If false, the contents field will be omitted."
              }
            },
            {
              "name" : "include_deleted",
              "required" : false,
              "doc" : {
                "t" : "Only applicable when list is set. If this parameter is set to true, then contents will include the metadata of deleted children. Note that the target of the metadata call is always returned even when it has been deleted (with is_deleted set to true) regardless of this flag."
              }
            },
            {
              "name" : "rev",
              "required" : false,
              "doc" : {
                "t" : "If you include a particular revision number, then only the metadata for that revision will be returned."
              }
            },
            {
              "name" : "locale",
              "required" : false,
              "doc" : {
                "t" : "The metadata returned will have its size field translated based on the given locale. For more information see above."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/metadata "
        },
        {
          "doc" : {
            "t" : "A way of letting you keep up with changes to files and folders in a user's Dropbox. You can periodically call /delta to get a list of \"delta entries\", which are instructions on how to update your local state to match the server's state."
          },
          "displayName" : "/delta",
          "path" : "/delta",
          "fullURL" : "https://api.dropbox.com/1/delta",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "cursor",
              "required" : false,
              "doc" : {
                "t" : "A string that is used to keep track of your current state. On the next call pass in this value to return delta entries that have been recorded since the cursor was returned."
              }
            },
            {
              "name" : "locale",
              "required" : false,
              "doc" : {
                "t" : "The metadata returned will have its size field translated based on the given locale. For more information see above."
              }
            },
            {
              "name" : "path_prefix",
              "required" : false,
              "doc" : {
                "t" : "If present, this parameter filters the response to only include entries at or under the specified path. For example, a path_prefix of \"/Photos/Vacation\" will return entries for the path \"/Photos/Vacation\" and any files and folders under that path. If you use the path_prefix parameter, you must continue to pass the same prefix on subsequent calls using the returned cursor."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/delta"
        },
        {
          "doc" : {
            "t" : "A long-poll endpoint to wait for changes on an account. In conjunction with /delta, this call gives you a low-latency way to monitor an account for file changes.Note that this call goes to api-notify.dropbox.com instead of api.dropbox.com.Unlike most other API endpoints, this call does not require OAuth authentication. The passed in cursor can only be acquired via an authenticated call to /delta."
          },
          "displayName" : "/longpoll_delta",
          "path" : "/longpoll_delta",
          "fullURL" : "https://api-notify.dropbox.com/1/longpoll_delta",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "cursor",
              "required" : false,
              "doc" : {
                "t" : "A delta cursor as returned from a call to /delta."
              }
            },
            {
              "name" : "timeout",
              "required" : false,
              "doc" : {
                "t" : "An optional integer indicating a timeout, in seconds. The default value is 30 seconds, which is also the minimum allowed value. The maximum is 480 seconds. The request will block for at most this length of time, plus up to 90 seconds of random jitter added to avoid the thundering herd problem. Care should be taken when using this parameter, as some network infrastructure does not support long timeouts."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/longpoll_delta"
        },
        {
          "doc" : {
            "t" : "Obtains metadata for the previous revisions of a file.Only revisions up to thirty days old are available (or more if the Dropbox user has Packrat). You can use the revision number in conjunction with the /restore call to revert the file to its previous state."
          },
          "displayName" : "/revisions",
          "path" : "/revisions",
          "fullURL" : "https://api.dropbox.com/1/revisions/<root>/<path>",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "rev_limit",
              "required" : false,
              "doc" : {
                "t" : "Default is 10. Max is 1,000. Up to this number of recent revisions will be returned."
              }
            },
            {
              "name" : "locale",
              "required" : false,
              "doc" : {
                "t" : "The metadata returned will have its size field translated based on the given locale. For more information see above."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/revisions"
        },
        {
          "doc" : {
            "t" : "Restores a file path to a previous revision.Unlike downloading a file at a given revision and then re-uploading it, this call is atomic. It also saves a bunch of bandwidth."
          },
          "displayName" : "/restore",
          "path" : "/restore",
          "fullURL" : "https://api.dropbox.com/1/restore/<root>/<path>",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "rev",
              "required" : true,
              "doc" : {
                "t" : "required The revision of the file to restore."
              }
            },
            {
              "name" : "locale",
              "required" : false,
              "doc" : {
                "t" : "The metadata returned will have its size field translated based on the given locale. For more information see above."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/restore"
        },
        {
          "doc" : {
            "t" : "Returns metadata for all files and folders whose filename contains the given search string as a substring.Searches are limited to the folder path and its sub-folder hierarchy provided in the call."
          },
          "displayName" : "/search",
          "path" : "/search",
          "fullURL" : "https://api.dropbox.com/1/search/<root>/<path>",
          "httpMethod" : "",
          "params" : [
            {
              "name" : "query",
              "required" : true,
              "doc" : {
                "t" : "required The search string. This string is split (on spaces) into individual words. Files and folders will be returned if they contain all words in the search string."
              }
            },
            {
              "name" : "file_limit",
              "required" : false,
              "doc" : {
                "t" : "The maximum and default value is 1,000. No more than file_limit search results will be returned."
              }
            },
            {
              "name" : "include_deleted",
              "required" : false,
              "doc" : {
                "t" : "If this parameter is set to true, then files and folders that have been deleted will also be included in the search."
              }
            },
            {
              "name" : "locale",
              "required" : false,
              "doc" : {
                "t" : "The metadata returned will have its size field translated based on the given locale. For more information see above."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/search"
        },
        {
          "doc" : {
            "t" : "Creates and returns a Dropbox link to files or folders users can use to view a preview of the file in a web browser.Note: Links created after April 23rd, 2012 no longer expire after thirty days."
          },
          "displayName" : "/shares",
          "path" : "/shares",
          "fullURL" : "https://api.dropbox.com/1/shares/<root>/<path>",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "locale",
              "required" : false,
              "doc" : {
                "t" : "Use to specify language settings for user error messages and other language specific text. See the notes above for more information about supported locales."
              }
            },
            {
              "name" : "short_url",
              "required" : false,
              "doc" : {
                "t" : "When true (default), the url returned will be shortened using the Dropbox url shortener. If false, the url will link directly to the file's preview page."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/shares"
        },
        {
          "doc" : {
            "t" : "Returns a link directly to a file.Similar to /shares. The difference is that this bypasses the Dropbox webserver, used to provide a preview of the file, so that you can effectively stream the contents of your media."
          },
          "displayName" : "/media",
          "path" : "/media",
          "fullURL" : "https://api.dropbox.com/1/media/<root>/<path>",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "locale",
              "required" : false,
              "doc" : {
                "t" : "Use to specify language settings for user error messages and other language specific text. See the notes above for more information about supported locales."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/media"
        },
        {
          "doc" : {
            "t" : "Creates and returns a copy_ref to a file. This reference string can be used to copy that file to another user's Dropbox by passing it in as the from_copy_ref parameter on /fileops/copy."
          },
          "displayName" : "/copy_ref",
          "path" : "/copy_ref",
          "fullURL" : "https://api.dropbox.com/1/copy_ref/<root>/<path>",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://www.dropbox.com/1/copy_ref"
        },
        {
          "doc" : {
            "t" : "Gets a thumbnail for an image. Note that this call goes to api-content.dropbox.com instead of api.dropbox.com."
          },
          "displayName" : "/thumbnails",
          "path" : "/thumbnails",
          "fullURL" : "https://api-content.dropbox.com/1/thumbnails/<root>/<path>",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "format",
              "required" : false,
              "doc" : {
                "t" : "jpeg (default) or png. For images that are photos, jpeg should be preferred, while png is better for screenshots and digital art."
              }
            },
            {
              "name" : "size",
              "required" : false,
              "doc" : {
                "t" : "One of the following values (default: s):valuedimensions (px)xs32x32s64x64m128x128l640x480xl1024x768"
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/thumbnails"
        },
        {
          "doc" : {
            "t" : "Uploads large files to Dropbox in multiple chunks. Also has the ability to resume if the upload is interrupted. This allows for uploads larger than the /files and /files_put maximum of 150 MB.Typical usage:Send a PUT request to /chunked_upload with the first chunk of the file without setting upload_id, and receive an upload_id in return.Repeatedly PUT subsequent chunks using the upload_id to identify the upload in progress and an offset representing the number of bytes transferred so far.After each chunk has been uploaded, the server returns a new offset representing the total amount transferred.After the last chunk, POST to /commit_chunked_upload to complete the upload.Chunks can be any size up to 150 MB. A typical chunk is 4 MB. Using large chunks will mean fewer calls to /chunked_upload and faster overall throughput. However, whenever a transfer is interrupted, you will have to resume at the beginning of the last chunk, so it is often safer to use smaller chunks.If the offset you submit does not match the expected offset on the server, the server will ignore the request and respond with a 400 error that includes the current offset. To resume upload, seek to the correct offset (in bytes) within the file and then resume uploading from that point.A chunked upload can take a maximum of 24 hours before expiring."
          },
          "displayName" : "/chunked_upload",
          "path" : "/chunked_upload",
          "fullURL" : "https://api-content.dropbox.com/1/chunked_upload?param=val",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "upload_id",
              "required" : false,
              "doc" : {
                "t" : "The unique ID of the in-progress upload on the server. If left blank, the server will create a new upload session."
              }
            },
            {
              "name" : "offset",
              "required" : false,
              "doc" : {
                "t" : "The byte offset of this chunk, relative to the beginning of the full file. The server will verify that this matches the offset it expects. If it does not, the server will return an error with the expected offset."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/chunked_upload"
        },
        {
          "doc" : {
            "t" : "Completes an upload initiated by the /chunked_upload method. Saves a file uploaded via /chunked_upload to a user's Dropbox./commit_chunked_upload is similar to /files_put. The main difference is that while /files_put takes the file contents in the request body, /commit_chunked_upload takes a parameter upload_id, which is obtained when the file contents are uploaded via /chunked_upload.Note that this call goes to api-content.dropbox.com instead of api.dropbox.com."
          },
          "displayName" : "/commit_chunked_upload",
          "path" : "/commit_chunked_upload",
          "fullURL" : "https://api-content.dropbox.com/1/commit_chunked_upload/<root>/<path>",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "locale",
              "required" : false,
              "doc" : {
                "t" : "The metadata returned on successful upload will have its size field translated based on the given locale."
              }
            },
            {
              "name" : "overwrite",
              "required" : false,
              "doc" : {
                "t" : "This value, either true (default) or false, determines what happens when there's already a file at the specified path. If true, the existing file will be overwritten by the new one. If false, the new file will be automatically renamed (for example, test.txt might be automatically renamed to test (1).txt). The new name can be obtained from the returned metadata."
              }
            },
            {
              "name" : "parent_rev",
              "required" : false,
              "doc" : {
                "t" : "The revision of the file you're editing. If parent_rev matches the latest version of the file on the user's Dropbox, that file will be replaced. Otherwise, the new file will be automatically renamed (for example, test.txt might be automatically renamed to test (conflicted copy).txt). If you specify a revision that doesn't exist, the file won't save (error 400). Get the most recent rev by performing a call to /metadata."
              }
            },
            {
              "name" : "upload_id",
              "required" : false,
              "doc" : {
                "t" : "Used to identify the chunked upload session you'd like to commit."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/commit_chunked_upload"
        },
        {
          "doc" : {
            "t" : "Copies a file or folder to a new location."
          },
          "displayName" : "/fileops/copy",
          "path" : "/fileops/copy",
          "fullURL" : "https://api.dropbox.com/1/fileops/copy",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "root",
              "required" : true,
              "doc" : {
                "t" : "required The root relative to which from_path and to_path are specified. Valid values are sandbox and dropbox."
              }
            },
            {
              "name" : "from_path",
              "required" : false,
              "doc" : {
                "t" : "Specifies the file or folder to be copied from relative to root."
              }
            },
            {
              "name" : "to_path",
              "required" : true,
              "doc" : {
                "t" : "required Specifies the destination path, including the new name for the file or folder, relative to root."
              }
            },
            {
              "name" : "locale",
              "required" : false,
              "doc" : {
                "t" : "The metadata returned will have its size field translated based on the given locale. For more information see above."
              }
            },
            {
              "name" : "from_copy_ref",
              "required" : false,
              "doc" : {
                "t" : "Specifies a copy_ref generated from a previous /copy_ref call. Must be used instead of the from_path parameter."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/fileops/copy"
        },
        {
          "doc" : {
            "t" : "Creates a folder."
          },
          "displayName" : "/fileops/create_folder ",
          "path" : "/fileops/create_folder ",
          "fullURL" : "https://api.dropbox.com/1/fileops/create_folder",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "root",
              "required" : true,
              "doc" : {
                "t" : "required The root relative to which path is specified. Valid values are sandbox and dropbox."
              }
            },
            {
              "name" : "path",
              "required" : true,
              "doc" : {
                "t" : "required The path to the new folder to create relative to root."
              }
            },
            {
              "name" : "locale",
              "required" : false,
              "doc" : {
                "t" : "The metadata returned will have its size field translated based on the given locale. For more information see above."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/fileops/create_folder "
        },
        {
          "doc" : {
            "t" : "Deletes a file or folder."
          },
          "displayName" : "/fileops/delete ",
          "path" : "/fileops/delete ",
          "fullURL" : "https://api.dropbox.com/1/fileops/delete",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "root",
              "required" : true,
              "doc" : {
                "t" : "required The root relative to which path is specified. Valid values are sandbox and dropbox."
              }
            },
            {
              "name" : "path",
              "required" : true,
              "doc" : {
                "t" : "required The path to the file or folder to be deleted."
              }
            },
            {
              "name" : "locale",
              "required" : false,
              "doc" : {
                "t" : "The metadata returned will have its size field translated based on the given locale. For more information see above."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/fileops/delete "
        },
        {
          "doc" : {
            "t" : "Moves a file or folder to a new location."
          },
          "displayName" : "/fileops/move ",
          "path" : "/fileops/move ",
          "fullURL" : "https://api.dropbox.com/1/fileops/move",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "root",
              "required" : true,
              "doc" : {
                "t" : "required The root relative to which from_path and to_path are specified. Valid values are sandbox and dropbox."
              }
            },
            {
              "name" : "from_path",
              "required" : true,
              "doc" : {
                "t" : "required Specifies the file or folder to be moved from relative to root."
              }
            },
            {
              "name" : "to_path",
              "required" : true,
              "doc" : {
                "t" : "required Specifies the destination path, including the new name for the file or folder, relative to root."
              }
            },
            {
              "name" : "locale",
              "required" : false,
              "doc" : {
                "t" : "The metadata returned will have its size field translated based on the given locale. For more information see above."
              }
            }
          ],
          "url" : "https://www.dropbox.com/1/fileops/move "
        }
      ]
    },
    "auth_strategy" : "oauth",
    "documentation" : "https://www.dropbox.com/developers/core/docs",
    "enabled" : true,
    "logo" : "http://cdn.appstorm.net/windows.appstorm.net/files/2012/10/dropbox-logo.jpg",
    "name" : "Dropbox",
    "oauth" : {
      "accessTokenPath" : "/oauth2/authorize",
      "authTokenPath" : "/oauth2/token",
      "baseURL" : "https://www.dropbox.com/1",
      "tokenBaseURL" : "https://api.dropbox.com/1",
      "clientId" : "o666ch0fz95hqrk",
      "secret" : "9bbacizq8laqwkt",
      "tokenMethod" : "access_token_query",
      "version" : "2.0"
    },
    "useCustom" : true,
    "type" : "channel:dropbox",
    "isPassport" : true
  },
  {
    "_id" : "5333294ab64eb201df08a5b3",
    "application" : {
      "base" : "https://api.box.com/2.0",
      "resources" : [
        {
          "httpMethod" : "GET",
          "path" : "/folders/{folder id}/items",
          "displayName" : "/folders/{folder id}/items",
          "category" : "folders",
          "doc" : {
            "t" : "Retrieves the files and/or folders contained within this folder without any other metadata about the folder. Any attribute in the full files or folders objects can be passed in with the fields parameter to get specific attributes, and only those specific attributes back; otherwise, the mini format is returned for each item by default. Multiple attributes can be passed in separated by commas e.g. fields=name,created_at. Paginated results can be retrieved using the limit and offset parameters.An collection of items contained in the folder is returned. An error is thrown if the folder does not exist, or if any of the parameters are invalid.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "fields",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "  Attribute(s) to include in the response  "
              }
            },
            {
              "name" : "limit",
              "type" : "integer (default=100, max=1000)",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "  The number of items to return  "
              }
            },
            {
              "name" : "offset",
              "type" : "integer (default=0)",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "  The item at which to begin the response  "
              }
            }
          ],
          "url" : "https://api.box.com/2.0/folders/{folder id}/items"
        },
        {
          "httpMethod" : "POST",
          "path" : "/folders",
          "displayName" : "/folders",
          "category" : "folders",
          "doc" : {
            "t" : "Used to create a new empty folder. The new folder will be created inside of the specified parent folder  A full folder object is returned if the parent folder ID is valid and if no name collisions occur.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "name",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The desired name for the folder"
              }
            },
            {
              "name" : "parent",
              "type" : "object",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The parent folder"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The ID of the parent folder"
              }
            }
          ],
          "url" : "https://api.box.com/2.0/folders"
        },
        {
          "httpMethod" : "GET",
          "path" : "/folders/{folder id}",
          "displayName" : "/folders/{folder id}",
          "category" : "folders",
          "doc" : {
            "t" : "Retrieves the full metadata about a folder, including information about when it was last updated as well as the files and folders contained in it. The root folder of a Box account is always represented by the id “0″.A full file object is returned, including the most current information available about it. An error is thrown if the folder does not exist or if the user does not have access to it.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "None are taken",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : ""
              }
            }
          ],
          "url" : "https://api.box.com/2.0/folders/{folder id}"
        },
        {
          "httpMethod" : "PUT",
          "path" : "/folders/{folder id}",
          "displayName" : "/folders/{folder id}",
          "category" : "folders",
          "doc" : {
            "t" : "Used to update information about the folder. To move a folder, update the ID of its parent. To enable an email address that can be used to upload files to this folder, update the folder_upload_email attribute. An optional If-Match header can be included to ensure that client only updates the folder if it knows about the latest version. The updated folder is returned if the name is valid. Errors generally occur only if there is a name collision.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "If-Match",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "This is in the ‘etag’ field of the folder object."
              }
            },
            {
              "name" : "name",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The name of the folder.\nType: string"
              }
            },
            {
              "name" : "description",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The description of the folder.\nType: string"
              }
            },
            {
              "name" : "parent",
              "type" : "object",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The parent folder of this file."
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The ID of the parent folder."
              }
            },
            {
              "name" : "shared_link",
              "type" : "object",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "An object representing this item’s shared link and associated permissions."
              }
            },
            {
              "name" : "access",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The level of access required for this shared link. Can be open, company, collaborators."
              }
            },
            {
              "name" : "unshared_at",
              "type" : "timestamp",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The day that this link should be disabled at. Timestamps are rounded off to the given day."
              }
            },
            {
              "name" : "permissions",
              "type" : "object",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The set of permissions that apply to this link."
              }
            },
            {
              "name" : "permissions.can_download",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Whether this link allows downloads."
              }
            },
            {
              "name" : "permissions.can_preview",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Whether this link allows previews."
              }
            },
            {
              "name" : "folder_upload_email",
              "type" : "object",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The email-to-upload address for this folder."
              }
            },
            {
              "name" : "access",
              "type" : "object",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Can be open or collaborators."
              }
            },
            {
              "name" : "owned_by",
              "type" : "object",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The user who owns the folder. Only used when moving a collaborated folder that you are not the owner of to a folder you are the owner of. Not a substitute for changing folder owners, please reference collaborations to accomplish folder ownership changes."
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The ID of the user, should be your own user ID."
              }
            },
            {
              "name" : "sync_state",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Whether Box Sync clients will sync this folder. Values of synced or not_synced can be sent, while partially_synced may also be returned.\nType: string"
              }
            },
            {
              "name" : "tags",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "All tags attached to this folder. To add/remove a tag to/from a folder, you can first get the folder’s current tags (be sure to specify ?fields=tags, since the tags field is not returned by default); then modify the list as required; and finally, set the folder’s entire list of tags.\nType: array of strings"
              }
            }
          ],
          "url" : "https://api.box.com/2.0/folders/{folder id}"
        },
        {
          "httpMethod" : "DELETE",
          "path" : "/folders/{folder id}",
          "displayName" : "/folders/{folder id}",
          "category" : "folders",
          "doc" : {
            "t" : "Used to delete a folder. A recursive parameter must be included in order to delete folders that have items inside of them. An optional If-Match header can be included to ensure that client only deletes the folder if it knows about the latest version.An empty 204 response will be returned upon successful deletion. An error is thrown if the folder is not empty and the ‘recursive’ parameter is not included.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "If-Match",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "This is in the ‘etag’ field of the folder object."
              }
            },
            {
              "name" : "recursive",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Whether to delete this folder if it has items inside of it"
              }
            }
          ],
          "url" : "https://api.box.com/2.0/folders/{folder id}"
        },
        {
          "httpMethod" : "POST",
          "path" : "/folders/{folder id}/copy",
          "displayName" : "/folders/{folder id}/copy",
          "category" : "folders",
          "doc" : {
            "t" : "Used to create a copy of a folder in another folder. The original version of the folder will not be altered.A full folder object is returned if the ID is valid and if the update is successful. Errors can be thrown if the destination folder is invalid or if a file-name collision occurs. A 409 will be returned if the intended destination folder is the same, as this will cause a name collision.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "parentrequired",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Object representing the new location of the folder"
              }
            },
            {
              "name" : "idrequired",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The ID of the destination folder"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "An optional new name for the folder"
              }
            }
          ],
          "url" : "https://api.box.com/2.0/folders/{folder id}/copy"
        },
        {
          "httpMethod" : "PUT",
          "path" : "/folders/{folder id}",
          "displayName" : "/folders/{folder id}",
          "category" : "folders",
          "doc" : {
            "t" : "Used to create a shared link for this particular folder. Please see here for more information on the permissions available for shared links. In order to disable a shared link, send this same type of PUT request with the value of shared_link set to null, i.e. {\"shared_link\": null} A full folder object containing the updated shared link is returned if the ID is valid and if the update is successful.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/folders/{folder id}"
        },
        {
          "httpMethod" : "GET",
          "path" : "/folders/{id}/collaborations",
          "displayName" : "/folders/{id}/collaborations",
          "category" : "folders",
          "doc" : {
            "t" : "Use this to get a list of all the collaborations on a folder i.e. all of the users that have access to that folder.A collection of collaboration objects are returned. If there are no collaborations on this folder, an empty collection will be returned.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/folders/{id}/collaborations"
        },
        {
          "httpMethod" : "GET",
          "path" : "/folders/trash/items",
          "displayName" : "/folders/trash/items",
          "category" : "folders",
          "doc" : {
            "t" : "Retrieves the files and/or folders that have been moved to the trash. Any attribute in the full files or folders objects can be passed in with the fields parameter to get specific attributes, and only those specific attributes back; otherwise, the mini format is returned for each item by default. Multiple attributes can be passed in separated by commas e.g. fields=name,created_at. Paginated results can be retrieved using the limit and offset parameters.An collection of items contained in the trash is returned. An error is thrown if any of the parameters are invalid.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "fields",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "  Attribute(s) to include in the response  "
              }
            },
            {
              "name" : "limit",
              "type" : "integer (default=100, max=1000)",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "  The number of items to return  "
              }
            },
            {
              "name" : "offset",
              "type" : "integer (default=0)",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "  The item at which to begin the response  "
              }
            }
          ],
          "url" : "https://api.box.com/2.0/folders/trash/items"
        },
        {
          "httpMethod" : "GET",
          "path" : "/folders/{folder id}/trash",
          "displayName" : "/folders/{folder id}/trash",
          "category" : "folders",
          "doc" : {
            "t" : "Retrieves an item that has been moved to the trash.The full item will be returned, including information about when the it was moved to the trash.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/folders/{folder id}/trash"
        },
        {
          "httpMethod" : "DELETE",
          "path" : "/folders/{folder id}/trash",
          "displayName" : "/folders/{folder id}/trash",
          "category" : "folders",
          "doc" : {
            "t" : "Permanently deletes an item that is in the trash. The item will no longer exist in Box. This action cannot be undone.An empty 204 No Content response will be returned upon successful deletion",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/folders/{folder id}/trash"
        },
        {
          "httpMethod" : "POST",
          "path" : "/folders/{folder id}",
          "displayName" : "/folders/{folder id}",
          "category" : "folders",
          "doc" : {
            "t" : "Restores an item that has been moved to the trash. Default behavior is to restore the item to the folder it was in before it was moved to the trash. If that parent folder no longer exists or if there is now an item with the same name in that parent folder, the new parent folder and/or new name will need to be included in the request.The full item will be returned with a 201 Created status. By default it is restored to the parent folder it was in before it was trashed.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/folders/{folder id}"
        },
        {
          "httpMethod" : "GET",
          "path" : "/files/{file id}",
          "displayName" : "/files/{file id}",
          "category" : "files",
          "doc" : {
            "t" : "Used to retrieve the metadata about a file.A full file object is returned if the ID is valid and if the user has access to the file.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "None are taken",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : ""
              }
            }
          ],
          "url" : "https://api.box.com/2.0/files/{file id}"
        },
        {
          "httpMethod" : "PUT",
          "path" : "/files/{file id}",
          "displayName" : "/files/{file id}",
          "category" : "files",
          "doc" : {
            "t" : "Used to update individual or multiple fields in the file object, including renaming the file, changing it’s description, and creating a shared link for the file. To move a file, change the ID of its parent folder. An optional If-Match header can be included to ensure that client only updates the file if it knows about the latest version. A full file object is returned if the ID is valid and if the update is successful.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "If-Match",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "This is in the ‘etag’ field of the file object."
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The new name for the file."
              }
            },
            {
              "name" : "description",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The new description for the file."
              }
            },
            {
              "name" : "parent",
              "type" : "object",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The parent folder of this file."
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The ID of the parent folder."
              }
            },
            {
              "name" : "shared_link",
              "type" : "object",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "An object representing this item’s shared link and associated permissions."
              }
            },
            {
              "name" : "access",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The level of access required for this shared link. Can be open, company, collaborators."
              }
            },
            {
              "name" : "unshared_at",
              "type" : "timestamp",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The day that this link should be disabled at. Timestamps are rounded off to the given day."
              }
            },
            {
              "name" : "permissions",
              "type" : "object",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The set of permissions that apply to this link."
              }
            },
            {
              "name" : "permissions.download",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Whether this link allows downloads."
              }
            },
            {
              "name" : "permissions.preview",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Whether this link allows previews."
              }
            },
            {
              "name" : "tags",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "All tags attached to this file. To add/remove a tag to/from a file, you can first get the file’s current tags (be sure to specify ?fields=tags, since the tags field is not returned by default); then modify the list as required; and finally, set the file’s entire list of tags.\nType: array of strings"
              }
            }
          ],
          "url" : "https://api.box.com/2.0/files/{file id}"
        },
        {
          "httpMethod" : "GET",
          "path" : "/files/{file id}/content",
          "displayName" : "/files/{file id}/content",
          "category" : "files",
          "doc" : {
            "t" : "Retrieves the actual data of the file. An optional version parameter can be set to download a previous version of the file.If the file is available to be downloaded, the response will be a 302 Found to a URL at dl.boxcloud.com. The dl.boxcloud.com URL is not persistent. Clients will need to follow the redirect in order to actually download the file. The raw data of the file is returned unless the file ID is invalid or the user does not have access to it.If the file is not ready to be downloaded (i.e. in the case where the file was uploaded immediately before the download request), a response with an HTTP status of 202 Accepted will be returned with a Retry-After header indicating the time in seconds after which the file will be available for the client to download.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "version",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The ID specific version of this file to download."
              }
            }
          ],
          "url" : "https://api.box.com/2.0/files/{file id}/content"
        },
        {
          "httpMethod" : "POST",
          "path" : "/https://upload.box.com/api/2.0/files/content",
          "displayName" : "https://upload.box.com/api/2.0/files/content",
          "category" : "files",
          "doc" : {
            "t" : "Use the Uploads API to allow users to add a new file. The user can then upload a file by specifying the destination folder for the file.  If the user provides a file name that  already exists in the destination folder, the user will receive an error.  \nA different Box URL, https://upload.box.com/api/2.0/files/content, handles uploads. This API uses the multipart post method to complete all upload tasks. You can optionally specify a Content-MD5 header with the SHA1 hash of the file to ensure that the file is not corrupted in transit.A full file object is returned inside of a collection if the ID is valid and if the update is successful. An error is thrown when a name collision occurs.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "  Content-MD5",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "  The SHA1 hash of the file  "
              }
            },
            {
              "name" : "filenamerequired",
              "type" : "file",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The name of the file to be uploaded"
              }
            },
            {
              "name" : "parent_idrequired",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The ID of folder where this file should be uploaded "
              }
            },
            {
              "name" : "content_created_at",
              "type" : "timestamp",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The time this file was created on the user’s machine. See here for more details. "
              }
            },
            {
              "name" : "content_modified_at",
              "type" : "timestamp",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The time this file was last modified on the user’s machine. See here for more details. "
              }
            }
          ],
          "url" : "https://api.box.com/2.0/https://upload.box.com/api/2.0/files/content"
        },
        {
          "httpMethod" : "DELETE",
          "path" : "/files/{file id}",
          "displayName" : "/files/{file id}",
          "category" : "files",
          "doc" : {
            "t" : "Discards a file to the trash. The etag of the file can be included as an ‘If-Match’ header to prevent race conditions.An empty 204 response is sent to confirm deletion of the file. If the If-Match header is sent and fails, a ’412 Precondition Failed’ error is returned.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "\tIf-Match     \t ",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : " The etag of the file. This is in the ‘etag’ field of the file object."
              }
            }
          ],
          "url" : "https://api.box.com/2.0/files/{file id}"
        },
        {
          "httpMethod" : "POST",
          "path" : "/https://upload.box.com/api/2.0/files/{file id}/content",
          "displayName" : "https://upload.box.com/api/2.0/files/{file id}/content",
          "category" : "files",
          "doc" : {
            "t" : "Note that uploads are handled through https://upload.box.com. This method is used to upload a new version of an existing file in a user’s account. Similar to regular file uploads, these are performed as multipart form uploads An optional If-Match header can be included to ensure that client only overwrites the file if it knows about the latest version. The filename on Box will remain the same as the previous version. To update the file’s name, use PUT /files/{id}The updated file object will be returned inside of a file collection. Errors may occur due to bad filenames and invalid file IDs.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "If-Match",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "This is in the ‘etag’ field of the file object."
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The name of the file to be uploaded"
              }
            },
            {
              "name" : "content_modified_at",
              "type" : "timestamp",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The time this file was last modified on the user’s machine. See here for more details. "
              }
            }
          ],
          "url" : "https://api.box.com/2.0/https://upload.box.com/api/2.0/files/{file id}/content"
        },
        {
          "httpMethod" : "GET",
          "path" : "/files/{file id}/versions",
          "displayName" : "/files/{file id}/versions",
          "category" : "files",
          "doc" : {
            "t" : "If there are previous versions of this file, this method can be used to retrieve metadata about the older versions.An array of version objects are returned. If there are no previous versions of this file, then an empty array will be returned.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "None are taken",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : ""
              }
            }
          ],
          "url" : "https://api.box.com/2.0/files/{file id}/versions"
        },
        {
          "httpMethod" : "POST",
          "path" : "/files/{file id}/versions/current",
          "displayName" : "/files/{file id}/versions/current",
          "category" : "files",
          "doc" : {
            "t" : "If there are previous versions of this file, this method can be used to promote one of the older versions to the top of the stack.  This actually mints a copy of the old version and puts it on the top of the versions stack.  The file will have the exact same contents, the same SHA1/etag, and the same name as the original.  Other properties such as comments do not get updated to their former values.The newly promoted file_version object is returned, along with a ’201 Created’ status",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "typerequired",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Must be ‘file_version’ for this request"
              }
            },
            {
              "name" : "idrequired",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The ID of the file_version that you want to make current"
              }
            }
          ],
          "url" : "https://api.box.com/2.0/files/{file id}/versions/current"
        },
        {
          "httpMethod" : "DELETE",
          "path" : "/files/{file id}/versions/{version_id}",
          "displayName" : "/files/{file id}/versions/{version_id}",
          "category" : "files",
          "doc" : {
            "t" : "Discards a specific file version to the trash. An empty 204 response is sent to confirm deletion of the file. If the If-Match header is sent and fails, a ’412 Precondition Failed’ error is returned.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "\tIf-Match     \t ",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : " The etag of the file. This is in the ‘etag’ field of the file object."
              }
            }
          ],
          "url" : "https://api.box.com/2.0/files/{file id}/versions/{version_id}"
        },
        {
          "httpMethod" : "POST",
          "path" : "/files/{file id}/copy",
          "displayName" : "/files/{file id}/copy",
          "category" : "files",
          "doc" : {
            "t" : "Used to create a copy of a file in another folder. The original version of the file will not be altered.A full file object is returned if the ID is valid and if the update is successful. Errors can be thrown if the destination folder is invalid or if a file-name collision occurs. A 409 will be returned if the intended destination folder is the same, as this will cause a name collision.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "parentrequired",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Folder object representing the new location of the file"
              }
            },
            {
              "name" : "idrequired",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The ID of the destination folder"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "An optional new name for the file"
              }
            }
          ],
          "url" : "https://api.box.com/2.0/files/{file id}/copy"
        },
        {
          "httpMethod" : "GET",
          "path" : "/files/{file id}/thumbnail.extension",
          "displayName" : "/files/{file id}/thumbnail.extension",
          "category" : "files",
          "doc" : {
            "t" : "Retrieves a thumbnail, or smaller image representation, of this file. Sizes of 32x32,  64x64, 128x128, and 256x256 can be returned. Currently thumbnails are only available in .png format and will only be generated for image file formats.There are three success cases that your application needs to account for:If the thumbnail isn’t available yet, a 202 Accepted HTTP status will be returned, including a Location header pointing to a placeholder graphic that can be used until the thumbnail is returned. A Retry-After header will also be returned, indicating the time in seconds after which the thumbnail will be available. Your application should only attempt to get the thumbnail again after Retry-After time.If Box can’t generate a thumbnail for this file type, a 302 Found response will be returned, redirecting to a placeholder graphic in the requested size for this particular file type, e.g. this for a CSV file).If the thumbnail is available, a 200 OK response will be returned with the contents of the thumbnail in the bodyIf Box is unable to generate a thumbnail for this particular file, a 404 Not Found response will be returned with a code of preview_cannot_be_generated. If there are any bad parameters sent in, a standard 400 Bad Request will be returned.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/files/{file id}/thumbnail.extension"
        },
        {
          "httpMethod" : "PUT",
          "path" : "/files/{file id}",
          "displayName" : "/files/{file id}",
          "category" : "files",
          "doc" : {
            "t" : "Used to create a shared link for this particular file. Please see here for more information on the permissions available for shared links. In order to get default shared link status, set it to an empty access level, i.e. {\"shared_link\": {}}. In order to disable a shared link, send this same type of PUT request with the value of shared_link set to null, i.e. {\"shared_link\": null} A full file object containing the updated shared link is returned if the ID is valid and if the update is successful.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/files/{file id}"
        },
        {
          "httpMethod" : "GET",
          "path" : "/files/{file id}/trash",
          "displayName" : "/files/{file id}/trash",
          "category" : "files",
          "doc" : {
            "t" : "Retrieves an item that has been moved to the trash.The full item will be returned, including information about when the it was moved to the trash.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/files/{file id}/trash"
        },
        {
          "httpMethod" : "DELETE",
          "path" : "/files/{file id}/trash",
          "displayName" : "/files/{file id}/trash",
          "category" : "files",
          "doc" : {
            "t" : "Permanently deletes an item that is in the trash. The item will no longer exist in Box. This action cannot be undone.An empty 204 No Content response will be returned upon successful deletion",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/files/{file id}/trash"
        },
        {
          "httpMethod" : "POST",
          "path" : "/files/{file id}",
          "displayName" : "/files/{file id}",
          "category" : "files",
          "doc" : {
            "t" : "Restores an item that has been moved to the trash. Default behavior is to restore the item to the folder it was in before it was moved to the trash. If that parent folder no longer exists or if there is now an item with the same name in that parent folder, the new parent folder and/or new name will need to be included in the request.The full item will be returned with a 201 Created status. By default it is restored to the parent folder it was in before it was trashed.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/files/{file id}"
        },
        {
          "httpMethod" : "GET",
          "path" : "/files/{file id}/comments",
          "displayName" : "/files/{file id}/comments",
          "category" : "files",
          "doc" : {
            "t" : "Retrieves the comments on a particular file, if any exist.A collection of comment objects are returned. If there are no comments on the file, an empty comments array is returned.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "None are taken",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : ""
              }
            }
          ],
          "url" : "https://api.box.com/2.0/files/{file id}/comments"
        },
        {
          "httpMethod" : "GET",
          "path" : "/files/{id}/tasks",
          "displayName" : "/files/{id}/tasks",
          "category" : "files",
          "doc" : {
            "t" : "Retrieves all of the tasks for given file.A collection of mini task objects is returned. If there are no tasks, an empty collection will be returned.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/files/{id}/tasks"
        },
        {
          "httpMethod" : "POST",
          "path" : "/comments",
          "displayName" : "/comments",
          "category" : "comments",
          "doc" : {
            "t" : "Used to add a comment by the user to a specific file or comment (i.e. as a reply comment).The new comment object is returned. Errors may occur if the item id is invalid, the item type is invalid/unsupported, or if the user does not have access to the item being commented on.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/comments"
        },
        {
          "httpMethod" : "PUT",
          "path" : "/comments/{comment id}",
          "displayName" : "/comments/{comment id}",
          "category" : "comments",
          "doc" : {
            "t" : "Used to update the message of the comment.The full updated comment object is returned if the ID is valid and if the user has access to the comment.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "messagerequired",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The desired text for the comment message"
              }
            }
          ],
          "url" : "https://api.box.com/2.0/comments/{comment id}"
        },
        {
          "httpMethod" : "GET",
          "path" : "/comments/{comment id}",
          "displayName" : "/comments/{comment id}",
          "category" : "comments",
          "doc" : {
            "t" : "Used to retrieve the message and metadata about a specific comment. Information about the user who created the comment is also included.A full comment object is returned is the ID is valid and if the user has access to the comment.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "None are accepted",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : ""
              }
            }
          ],
          "url" : "https://api.box.com/2.0/comments/{comment id}"
        },
        {
          "httpMethod" : "DELETE/comments/{comment",
          "path" : "/id}",
          "displayName" : "id}",
          "category" : "comments",
          "doc" : {
            "t" : "Permanently deletes a comment.An empty 204 response is returned to confirm deletion of the comment. Errors can be thrown if the ID is invalid or if the user is not authorized to delete this particular comment.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "None are taken",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : ""
              }
            }
          ],
          "url" : "https://api.box.com/2.0/id}"
        },
        {
          "httpMethod" : "POST",
          "path" : "/collaborations",
          "displayName" : "/collaborations",
          "category" : "collaborations",
          "doc" : {
            "t" : "Used to add a collaboration for a single user to a folder. Descriptions of the various roles can be found here. Either an email address or a user ID can be used to create the collaboration. The new collaboration object is returned. Errors may occur if the IDs are invalid or if the user does not have permissions to create a collaboration.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "notify",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Determines if the user should receive email notification of the collaboration."
              }
            },
            {
              "name" : "item",
              "type" : "folder object",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The item to add the collaboration on"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The ID of the item to add the collaboration on"
              }
            },
            {
              "name" : "type",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Must be folder"
              }
            },
            {
              "name" : "accessible_by",
              "type" : "object",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The user or group who this collaboration applies to"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The ID of this user or group"
              }
            },
            {
              "name" : "type",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Type of collaborator, must be either user or group"
              }
            },
            {
              "name" : "login",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "An email address (does not need to be a Box user). Omit if this is a group."
              }
            },
            {
              "name" : "role",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The access level of this collaboration (see above for roles)"
              }
            }
          ],
          "url" : "https://api.box.com/2.0/collaborations"
        },
        {
          "httpMethod" : "PUT",
          "path" : "/collaborations/{id}",
          "displayName" : "/collaborations/{id}",
          "category" : "collaborations",
          "doc" : {
            "t" : "Used to edit an existing collaboration. Descriptions of the various roles can be found here.The updated collaboration object is returned. Errors may occur if the IDs are invalid or if the user does not have permissions to edit the collaboration.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "role",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The access level of this collaboration (see above for roles)"
              }
            },
            {
              "name" : "status",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Whether this collaboration has been accepted"
              }
            }
          ],
          "url" : "https://api.box.com/2.0/collaborations/{id}"
        },
        {
          "httpMethod" : "DELETE",
          "path" : "/collaborations/{id}",
          "displayName" : "/collaborations/{id}",
          "category" : "collaborations",
          "doc" : {
            "t" : "Used to delete a single collaboration.A blank 204 response is returned if the ID is valid, and the user has permissions to remove the collaboration.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "None are taken",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : ""
              }
            }
          ],
          "url" : "https://api.box.com/2.0/collaborations/{id}"
        },
        {
          "httpMethod" : "GET",
          "path" : "/collaborations/{id}",
          "displayName" : "/collaborations/{id}",
          "category" : "collaborations",
          "doc" : {
            "t" : "Used to get information about a single collaboration. All collaborations for a single folder can be retrieved through GET /folders/{id}/collaborations. A complete list of the user’s pending collaborations can also be retrieved.The collaboration object is returned. Errors may occur if the IDs are invalid or if the user does not have permissions to see the collaboration.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "status",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "  Can only be pending"
              }
            }
          ],
          "url" : "https://api.box.com/2.0/collaborations/{id}"
        },
        {
          "httpMethod" : "GET",
          "path" : "/collaborations?status=pending",
          "displayName" : "/collaborations?status=pending",
          "category" : "collaborations",
          "doc" : {
            "t" : "Used to retrieve all pending collaboration invites for this user.A collection of pending collaboration objects are returned. If the user has no pending collaborations, the collection will be empty.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "statusrequired",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "  Must be pending"
              }
            }
          ],
          "url" : "https://api.box.com/2.0/collaborations?status=pending"
        },
        {
          "httpMethod" : "GET",
          "path" : "/events?stream_position=0",
          "displayName" : "/events?stream_position=0",
          "category" : "events",
          "doc" : {
            "t" : "Use this to get events for a given user. A chunk of event objects is returned for the user based on the parameters passed in. Parameters indicating how many chunks are left as well as the next stream_position are also returned.\nA collection of events is returned. See the above table for descriptions of the event types.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "stream_position",
              "type" : "string (default=0)",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The location in the event stream at which you want to start receiving events. Can specify special case ‘now’ to get 0 events and the latest stream position for initialization."
              }
            },
            {
              "name" : "stream_type",
              "type" : "• all: returns everything\n• changes: returns tree changes\n• sync: returns tree changes only for sync folders string (default=all):",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Limits the type of events returned"
              }
            },
            {
              "name" : "limit",
              "type" : "integer (default=100 max=10,000)",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Limits the number of events returned"
              }
            }
          ],
          "url" : "https://api.box.com/2.0/events?stream_position=0"
        },
        {
          "httpMethod" : "OPTIONS",
          "path" : "/events",
          "displayName" : "/events",
          "category" : "events",
          "doc" : {
            "t" : "To get real-time notification of activity in a Box account, use the long poll feature of the /events API. To do so, first call the /events API with an OPTIONS call to retrieve the long poll URL to use. Next, make a GET request to the provided URL to begin listening for events. If an event occurs within an account you are monitoring, you will receive a response with the value new_change. It’s important to note that this response will not come with any other details, but should serve as a prompt to take further action such as calling the /events endpoint with your last known stream_position. After sending this response, the server will close the connection and you will need to repeat the long poll process to begin listening for events again.If no events occur for a period of time after you make the GET request to the long poll URL, you will receive a response with the value reconnect. When you receive this response, you’ll make another OPTIONS call to the /events endpoint and repeat the long poll process.If you receive no events in retry_timeout seconds, you should make another GET request to the real time server (i.e. URL in the response). This might be necessary in case you do not receive the reconnect message in the face of network errors.If you receive max_retries error when making GET requests to the real time server, you should make another OPTIONS request.For a better understanding of the long poll process, please review this short tutorial.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/events"
        },
        {
          "httpMethod" : "GET",
          "path" : "/events?stream_type=admin_logs",
          "displayName" : "/events?stream_type=admin_logs",
          "category" : "events",
          "doc" : {
            "t" : "Retrieves events for all users in an enterprise. Upper and lower bounds as well as filters can be applied to the results. A list of valid values for event_type can be found here.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "stream_type",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Must be admin_logs"
              }
            },
            {
              "name" : "limit",
              "type" : "integer (default=100 max=500)",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Limits the number of events returned"
              }
            },
            {
              "name" : "stream_position",
              "type" : "string (default=0)",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The starting position for fetching the events. This is used in combination with the limit to determine which events to return to the caller. Use the results from the next_stream_position of your last call to get the next set of events."
              }
            },
            {
              "name" : "event_type",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "A comma-separated list of events to filter by"
              }
            },
            {
              "name" : "created_after",
              "type" : "timestamp",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "A lower bound on the timestamp of the events returned"
              }
            },
            {
              "name" : "created_before",
              "type" : "timestamp",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "An upper bound on the timestamp of the events returned"
              }
            }
          ],
          "url" : "https://api.box.com/2.0/events?stream_type=admin_logs"
        },
        {
          "httpMethod" : "GET",
          "path" : "/search?query=SEARCH_QUERY",
          "displayName" : "/search?query=SEARCH_QUERY",
          "category" : "search",
          "doc" : {
            "t" : "The search endpoint provides a simple way of finding items that are accessible in a given user’s Box account.A collection of search results is returned. If there are no matching search results, the entries array will be empty.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/search?query=SEARCH_QUERY"
        },
        {
          "httpMethod" : "GET",
          "path" : "/users/me",
          "displayName" : "/users/me",
          "category" : "users",
          "doc" : {
            "t" : "Retrieves information about the user who is currently logged in i.e. the user for whom this auth token was generated.Returns a single complete user object. An error is returned if a valid auth token is not included in the API request.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/users/me"
        },
        {
          "httpMethod" : "GET",
          "path" : "/users",
          "displayName" : "/users",
          "category" : "users",
          "doc" : {
            "t" : "Returns a list of all users for the Enterprise along with their user_id, public_name, and login.Returns the list of all users for the Enterprise with their user_id, public_name, and login if the user is an enterprise admin.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "   filter_term  ",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   A string used to filter the results to only users starting with the filter_term in either the name or the login     "
              }
            },
            {
              "name" : "   limit  ",
              "type" : "integer (default=100, max=1000)",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   The number of records to return.     "
              }
            },
            {
              "name" : "   offset  ",
              "type" : "integer (default=0)",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   The record at which to start     "
              }
            }
          ],
          "url" : "https://api.box.com/2.0/users"
        },
        {
          "httpMethod" : "POST",
          "path" : "/users",
          "displayName" : "/users",
          "category" : "users",
          "doc" : {
            "t" : "Used to provision a new user in an enterprise. This method only works for enterprise admins.Returns the full user object for the newly created user. Errors may be thrown when the fields are invalid or this API call is made from a non-admin account.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "   login   required  ",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   The email address this user uses to login     "
              }
            },
            {
              "name" : "   name   required  ",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   The name of this user     "
              }
            },
            {
              "name" : "   role  ",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   This user’s enterprise role. Can be coadmin or user     "
              }
            },
            {
              "name" : "   language  ",
              "type" : "ISO 639-1 Language Code",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   The language of this user     "
              }
            },
            {
              "name" : "   is_sync_enabled  ",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   Whether or not this user can use Box Sync     "
              }
            },
            {
              "name" : "   job_title  ",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   The user’s job title     "
              }
            },
            {
              "name" : "   phone  ",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   The user’s phone number     "
              }
            },
            {
              "name" : "   address  ",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   The user’s address     "
              }
            },
            {
              "name" : "   space_amount  ",
              "type" : "float",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   The user’s total available space amount in bytes     "
              }
            },
            {
              "name" : "   tracking_codes  ",
              "type" : "array",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   An array of key/value pairs set by the user’s admin     "
              }
            },
            {
              "name" : "   can_see_managed_users  ",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   Whether this user can see other enterprise users in its contact list     "
              }
            },
            {
              "name" : "   status  ",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   Can be active or inactive     "
              }
            },
            {
              "name" : "   is_exempt_from_device_limits  ",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   Whether to exempt this user from Enterprise device limits      "
              }
            },
            {
              "name" : "   is_exempt_from_login_verification  ",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   Whether or not this user must use two-factor authentication     "
              }
            }
          ],
          "url" : "https://api.box.com/2.0/users"
        },
        {
          "httpMethod" : "PUT",
          "path" : "/users/{id}",
          "displayName" : "/users/{id}",
          "category" : "users",
          "doc" : {
            "t" : "Used to edit the settings and information about a user. This method only works for enterprise admins. To roll a user out of the enterprise (and convert them to a standalone free user), update the special enterprise attribute to be nullReturns the a full user object for the updated user. Errors may be thrown when the fields are invalid or this API call is made from a non-admin account.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "notify",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Whether the user should receive an email when they are rolled out of an enterprise"
              }
            },
            {
              "name" : "enterprise",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Setting this to null will roll the user out of the enterprise and make them a free user"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The name of this user"
              }
            },
            {
              "name" : "role",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "This user’s enterprise role. Can be coadmin or user"
              }
            },
            {
              "name" : "language",
              "type" : "ISO 639-1 Language Code",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The language of this user"
              }
            },
            {
              "name" : "is_sync_enabled",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Whether or not this user can use Box Sync"
              }
            },
            {
              "name" : "job_title",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The user’s job title"
              }
            },
            {
              "name" : "phone",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The user’s phone number"
              }
            },
            {
              "name" : "address",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The user’s address"
              }
            },
            {
              "name" : "space_amount",
              "type" : "float",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "The user’s total available space amount in byte. A value of -1 grants unlimited storage."
              }
            },
            {
              "name" : "tracking_codes",
              "type" : "array",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "An array of key/value pairs set by the user’s admin"
              }
            },
            {
              "name" : "can_see_managed_users",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Whether this user can see other enterprise users in its contact list"
              }
            },
            {
              "name" : "status",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Can be active or inactive"
              }
            },
            {
              "name" : "is_exempt_from_device_limits",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Whether to exempt this user from Enterprise device limits"
              }
            },
            {
              "name" : "is_exempt_from_login_verification",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Whether or not this user must use two-factor authentication"
              }
            },
            {
              "name" : "is_password_reset_required",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "Whether or not the user is required to reset password"
              }
            }
          ],
          "url" : "https://api.box.com/2.0/users/{id}"
        },
        {
          "httpMethod" : "DELETE",
          "path" : "/users/{user id}",
          "displayName" : "/users/{user id}",
          "category" : "users",
          "doc" : {
            "t" : "Deletes a user in an enterprise account.An empty 204 response is sent to confirm deletion of the user. If the user still has files in their account and the ‘force’ parameter is not sent, an error is returned.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "   notify  ",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   Determines if the destination user should receive email notification of the transfer.     "
              }
            },
            {
              "name" : "   force  ",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   Whether or not the user should be deleted even if this user still own files.     "
              }
            }
          ],
          "url" : "https://api.box.com/2.0/users/{user id}"
        },
        {
          "httpMethod" : "PUT",
          "path" : "/users/{user_id}/folders/{folder_id}",
          "displayName" : "/users/{user_id}/folders/{folder_id}",
          "category" : "users",
          "doc" : {
            "t" : "Moves all of the owned content from within one user’s folder into a new folder in another user’s account.  You can move folders across users as long as the you have administrative permissions and the ‘source’ user owns the folders.  To move everything from the root folder, use “0″ which always represents the root folder of a Box account Returns the information for the newly created destination folder..  An error is thrown if you do not have the necessary permissions to move the folder",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "   owned_by   required  ",
              "type" : "object",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "   The user who the folder will be transferred to     "
              }
            },
            {
              "name" : "  id  \trequired  ",
              "type" : "string",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "  \tThe ID of the user who the folder will be transferred to  \t  "
              }
            },
            {
              "name" : "  \tnotify  ",
              "type" : "boolean",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : "  \tDetermines if the destination user should receive email notification of the transfer.  \t  "
              }
            }
          ],
          "url" : "https://api.box.com/2.0/users/{user_id}/folders/{folder_id}"
        },
        {
          "httpMethod" : "GET",
          "path" : "/users/{user id}/email_aliases",
          "displayName" : "/users/{user id}/email_aliases",
          "category" : "users",
          "doc" : {
            "t" : "Retrieves all email aliases for this user. The collection of email aliases does not include the primary login for the user; use GET /users/USER_ID to retrieve the login email address.If the user_id is valid a collection of email aliases will be returned.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/users/{user id}/email_aliases"
        },
        {
          "httpMethod" : "POST",
          "path" : "/users/{user id}/email_aliases",
          "displayName" : "/users/{user id}/email_aliases",
          "category" : "users",
          "doc" : {
            "t" : "Adds a new email alias to the given user’s account.  Returns the newly created email_alias object. Errors will be thrown if the user_id is not valid or the particular user’s email alias cannot be modified.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/users/{user id}/email_aliases"
        },
        {
          "httpMethod" : "DELETE",
          "path" : "/users/{user id}/email_aliases/{email alias id}",
          "displayName" : "/users/{user id}/email_aliases/{email alias id}",
          "category" : "users",
          "doc" : {
            "t" : "Removes an email alias from a user.If the user has permission to remove this email alias, an empty 204 No Content response will be returned to confirm deletion.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/users/{user id}/email_aliases/{email alias id}"
        },
        {
          "httpMethod" : "GET",
          "path" : "/groups",
          "displayName" : "/groups",
          "category" : "groups",
          "doc" : {
            "t" : "Retrieves all of the groups for given user.A collection of mini group objects is returned. If there are no groups, an empty collection will be returned.",
            "doc" : ""
          },
          "params" : [
            {
              "name" : "   none are taken  ",
              "type" : "",
              "required" : false,
              "style" : "query",
              "curl" : "",
              "category" : "",
              "authentication" : {
                "required" : true
              },
              "doc" : {
                "t" : ""
              }
            }
          ],
          "url" : "https://api.box.com/2.0/groups"
        },
        {
          "httpMethod" : "POST",
          "path" : "/groups",
          "displayName" : "/groups",
          "category" : "groups",
          "doc" : {
            "t" : "Used to create a group.A new group object will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/groups"
        },
        {
          "httpMethod" : "GET",
          "path" : "/groups/{id}/memberships",
          "displayName" : "/groups/{id}/memberships",
          "category" : "groups",
          "doc" : {
            "t" : "Retrieves all of the members for a given group.A collection of group membership objects will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/groups/{id}/memberships"
        },
        {
          "httpMethod" : "GET",
          "path" : "/users/{id}/memberships",
          "displayName" : "/users/{id}/memberships",
          "category" : "groups",
          "doc" : {
            "t" : "Retrieves all of the group memberships for a given enterprise.  Note this is only available to group admins.  To get a users groups use the users/me/memberships endpoint.A collection of group membership objects will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/users/{id}/memberships"
        },
        {
          "httpMethod" : "GET",
          "path" : "/group_memberships/{id}",
          "displayName" : "/group_memberships/{id}",
          "category" : "groups",
          "doc" : {
            "t" : "Fetches a specific group membership entry.The specified group_membership object will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/group_memberships/{id}"
        },
        {
          "httpMethod" : "POST",
          "path" : "/group_memberships",
          "displayName" : "/group_memberships",
          "category" : "groups",
          "doc" : {
            "t" : "Used to add a member to a Group.  A new group membership object will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/group_memberships"
        },
        {
          "httpMethod" : "PUT",
          "path" : "/group_memberships/{id}",
          "displayName" : "/group_memberships/{id}",
          "category" : "groups",
          "doc" : {
            "t" : "Used to update a group membership.A new group membership object will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/group_memberships/{id}"
        },
        {
          "httpMethod" : "DELETE",
          "path" : "/group_memberships/{id}",
          "displayName" : "/group_memberships/{id}",
          "category" : "groups",
          "doc" : {
            "t" : "Deletes a specific group membership.An empty 204 No Content response will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/group_memberships/{id}"
        },
        {
          "httpMethod" : "POST",
          "path" : "/tasks",
          "displayName" : "/tasks",
          "category" : "tasks",
          "doc" : {
            "t" : "Used to create a single task for single user on a single file.A new task object will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/tasks"
        },
        {
          "httpMethod" : "GET",
          "path" : "/tasks/{id}",
          "displayName" : "/tasks/{id}",
          "category" : "tasks",
          "doc" : {
            "t" : "Fetches a specific task.The specified task object will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/tasks/{id}"
        },
        {
          "httpMethod" : "PUT",
          "path" : "/tasks/{id}",
          "displayName" : "/tasks/{id}",
          "category" : "tasks",
          "doc" : {
            "t" : "Updates a specific task.The updated task object will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/tasks/{id}"
        },
        {
          "httpMethod" : "DELETE",
          "path" : "/tasks/{id}",
          "displayName" : "/tasks/{id}",
          "category" : "tasks",
          "doc" : {
            "t" : "Permanently deletes a specific task.An empty 204 response will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/tasks/{id}"
        },
        {
          "httpMethod" : "GET",
          "path" : "/tasks/{id}/assignments",
          "displayName" : "/tasks/{id}/assignments",
          "category" : "tasks",
          "doc" : {
            "t" : "Retrieves all of the assignments for a given task.A collection of task assignment mini objects will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/tasks/{id}/assignments"
        },
        {
          "httpMethod" : "POST",
          "path" : "/task_assignments",
          "displayName" : "/task_assignments",
          "category" : "tasks",
          "doc" : {
            "t" : "Used to assign a task to a single user. There can be multiple assignments on a given task.A new task assignment object will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/task_assignments"
        },
        {
          "httpMethod" : "GET",
          "path" : "/task_assignments/{id}",
          "displayName" : "/task_assignments/{id}",
          "category" : "tasks",
          "doc" : {
            "t" : "Fetches a specific task assignment.The specified task assignment object will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/task_assignments/{id}"
        },
        {
          "httpMethod" : "DELETE",
          "path" : "/task_assignments/{id}",
          "displayName" : "/task_assignments/{id}",
          "category" : "tasks",
          "doc" : {
            "t" : "Deletes a specific task assignment.An empty 204 No Content response will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/task_assignments/{id}"
        },
        {
          "httpMethod" : "PUT",
          "path" : "/task_assignments/{id}",
          "displayName" : "/task_assignments/{id}",
          "category" : "tasks",
          "doc" : {
            "t" : "Used to update a task assignment.A new task assignment object will be returned upon success.",
            "doc" : ""
          },
          "params" : [ ],
          "url" : "https://api.box.com/2.0/task_assignments/{id}"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "documentation" : "http://developers.box.com/docs/",
    "enabled" : true,
    "logo" : "http://cloudtimes.org/wp-content/uploads/2011/08/box_logo.png",
    "name" : "Box",
    "oauth" : {
      "accessTokenURL" : "https://www.box.com/api/oauth2/token",
      "apiKey" : "dzi6sr2jw0kgcmkbb8bdjhe9zvaps8b1",
      "authTokenPath" : "/api/oauth2/authorize",
      "authTokenURL" : "https://www.box.com/api/oauth2/authorize",
      "baseURL" : "https://www.box.com/api",
      "clientId" : "dzi6sr2jw0kgcmkbb8bdjhe9zvaps8b1",
      "grant_type" : "authorization_code",
      "host" : "www.box.com",
      "isManual" : true,
      "key" : "",
      "protocol" : "https",
      "requestTokenURL" : "",
      "scope" : "",
      "secret" : "wimCRfl5cuC2Em8L3vGUZTplxUQWxt6o",
      "tokenMethod" : "bearer",
      "useOAuthLib" : false,
      "version" : "2.0"
    },
    "useCustom" : true,
    "type" : "channel:box"
  },
  {
    "_id" : "5333aefee5c02952f1c33089",
    "application" : {
      "base" : "https://www.googleapis.com",
      "resources" : [
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/copy",
                "t" : "The ID of the file to copy."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/copy",
                "t" : "Whether to convert this file to the corresponding Google Docs format.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "convert"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/copy",
                "t" : "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "ocr"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/copy",
                "t" : "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes."
              },
              "style" : "query",
              "type" : "string",
              "name" : "ocrLanguage"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/copy",
                "t" : "Whether to pin the head revision of the new copy.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "pinned"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/copy",
                "t" : "The language of the timed text."
              },
              "style" : "query",
              "type" : "string",
              "name" : "timedTextLanguage"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/copy",
                "t" : "The timed text track name."
              },
              "style" : "query",
              "type" : "string",
              "name" : "timedTextTrackName"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/copy",
                "t" : "The visibility of the new file.  This parameter is only relevant when the source is not a native Google Doc and convert=false.          Acceptable values are:                      \"DEFAULT\": The visibility of the new file is determined by the user's default visibility/sharing policies.              (default)                        \"PRIVATE\": The new file will be visible to only the owner."
              },
              "style" : "query",
              "type" : "string",
              "name" : "visibility"
            }
          ],
          "httpMethod" : "POST",
          "path" : "/drive/v2/files/{fileId}/copy",
          "displayName" : "copy",
          "doc" : {
            "t" : "POST  /files/fileId/copy"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/copy"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/delete",
                "t" : "The ID of the file to delete."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "DELETE",
          "path" : "/drive/v2/files/{fileId}",
          "displayName" : "delete",
          "doc" : {
            "t" : "DELETE  /files/fileId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/get",
                "t" : "The ID for the file in question."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/get",
                "t" : "This parameter is deprecated and has no function.          Acceptable values are:                      \"BASIC\": Deprecated                        \"FULL\": Deprecated"
              },
              "style" : "query",
              "type" : "string",
              "name" : "projection"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/get",
                "t" : "Whether to update the view date after successfully retrieving the file.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "updateViewedDate"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/{fileId}",
          "displayName" : "get",
          "doc" : {
            "t" : "GET  /files/fileId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/insert",
                "t" : "The type of upload request to the /upload URI.                          Acceptable values are:                                          media - Simple upload. Upload the media only, without any metadata.            multipart - Multipart upload. Upload both the media and its metadata, in a single request.            resumable - Resumable upload. Upload the file in a resumable fashion, using a series of at least two requests where the first request includes the metadata."
              },
              "style" : "query",
              "type" : "string",
              "name" : "uploadType"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/insert",
                "t" : "Whether to convert this file to the corresponding Google Docs format.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "convert"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/insert",
                "t" : "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "ocr"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/insert",
                "t" : "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes."
              },
              "style" : "query",
              "type" : "string",
              "name" : "ocrLanguage"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/insert",
                "t" : "Whether to pin the head revision of the uploaded file.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "pinned"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/insert",
                "t" : "The language of the timed text."
              },
              "style" : "query",
              "type" : "string",
              "name" : "timedTextLanguage"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/insert",
                "t" : "The timed text track name."
              },
              "style" : "query",
              "type" : "string",
              "name" : "timedTextTrackName"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/insert",
                "t" : "Whether to use the content as indexable text.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "useContentAsIndexableText"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/insert",
                "t" : "The visibility of the new file.  This parameter is only relevant when convert=false.          Acceptable values are:                      \"DEFAULT\": The visibility of the new file is determined by the user's default visibility/sharing policies.              (default)                        \"PRIVATE\": The new file will be visible to only the owner."
              },
              "style" : "query",
              "type" : "string",
              "name" : "visibility"
            }
          ],
          "httpMethod" : "POST",
          "path" : "/drive/v2/files",
          "displayName" : "insert",
          "doc" : {
            "t" : "POSThttps://www.googleapis.com/upload/drive/v2/files          and          POST  /files"
          },
          "url" : "https://www.googleapis.com/drive/v2/files"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/list",
                "t" : "Maximum number of files to return. Acceptable values are 0 to 1000, inclusive. (Default: 100)"
              },
              "style" : "query",
              "type" : "integer",
              "name" : "maxResults"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/list",
                "t" : "Page token for files."
              },
              "style" : "query",
              "type" : "string",
              "name" : "pageToken"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/list",
                "t" : "This parameter is deprecated and has no function.          Acceptable values are:                      \"BASIC\": Deprecated                        \"FULL\": Deprecated"
              },
              "style" : "query",
              "type" : "string",
              "name" : "projection"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/list",
                "t" : "Query string for searching files. See Searching for files for more information about supported fields and operations."
              },
              "style" : "query",
              "type" : "string",
              "name" : "q"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files",
          "displayName" : "list",
          "doc" : {
            "t" : "GET  /files"
          },
          "url" : "https://www.googleapis.com/drive/v2/files"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/patch",
                "t" : "The ID of the file to update."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/patch",
                "t" : "Whether to convert this file to the corresponding Google Docs format.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "convert"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/patch",
                "t" : "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If not set or true, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).          (Default: true)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "newRevision"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/patch",
                "t" : "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "ocr"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/patch",
                "t" : "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes."
              },
              "style" : "query",
              "type" : "string",
              "name" : "ocrLanguage"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/patch",
                "t" : "Whether to pin the new revision.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "pinned"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/patch",
                "t" : "Whether to set the modified date with the supplied modified date.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "setModifiedDate"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/patch",
                "t" : "The language of the timed text."
              },
              "style" : "query",
              "type" : "string",
              "name" : "timedTextLanguage"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/patch",
                "t" : "The timed text track name."
              },
              "style" : "query",
              "type" : "string",
              "name" : "timedTextTrackName"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/patch",
                "t" : "Whether to update the view date after successfully updating the file.          (Default: true)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "updateViewedDate"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/patch",
                "t" : "Whether to use the content as indexable text.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "useContentAsIndexableText"
            }
          ],
          "httpMethod" : "PATCH",
          "path" : "/drive/v2/files/{fileId}",
          "displayName" : "patch",
          "doc" : {
            "t" : "PATCH  /files/fileId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/touch",
                "t" : "The ID of the file to update."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "POST",
          "path" : "/drive/v2/files/{fileId}/touch",
          "displayName" : "touch",
          "doc" : {
            "t" : "POST  /files/fileId/touch"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/touch"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/trash",
                "t" : "The ID of the file to trash."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "POST",
          "path" : "/drive/v2/files/{fileId}/trash",
          "displayName" : "trash",
          "doc" : {
            "t" : "POST  /files/fileId/trash"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/trash"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/untrash",
                "t" : "The ID of the file to untrash."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "POST",
          "path" : "/drive/v2/files/{fileId}/untrash",
          "displayName" : "untrash",
          "doc" : {
            "t" : "POST  /files/fileId/untrash"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/untrash"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/update",
                "t" : "The ID of the file to update."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/update",
                "t" : "The type of upload request to the /upload URI.                          Acceptable values are:                                          media - Simple upload. Upload the media only, without any metadata.            multipart - Multipart upload. Upload both the media and its metadata, in a single request.            resumable - Resumable upload. Upload the file in a resumable fashion, using a series of at least two requests where the first request includes the metadata."
              },
              "style" : "query",
              "type" : "string",
              "name" : "uploadType"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/update",
                "t" : "Whether to convert this file to the corresponding Google Docs format.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "convert"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/update",
                "t" : "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If not set or true, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).          (Default: true)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "newRevision"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/update",
                "t" : "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "ocr"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/update",
                "t" : "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes."
              },
              "style" : "query",
              "type" : "string",
              "name" : "ocrLanguage"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/update",
                "t" : "Whether to pin the new revision.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "pinned"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/update",
                "t" : "Whether to set the modified date with the supplied modified date.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "setModifiedDate"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/update",
                "t" : "The language of the timed text."
              },
              "style" : "query",
              "type" : "string",
              "name" : "timedTextLanguage"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/update",
                "t" : "The timed text track name."
              },
              "style" : "query",
              "type" : "string",
              "name" : "timedTextTrackName"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/update",
                "t" : "Whether to update the view date after successfully updating the file.          (Default: true)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "updateViewedDate"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/update",
                "t" : "Whether to use the content as indexable text.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "useContentAsIndexableText"
            }
          ],
          "httpMethod" : "PUT",
          "path" : "/drive/v2/files/{fileId}",
          "displayName" : "update",
          "doc" : {
            "t" : "PUThttps://www.googleapis.com/upload/drive/v2/files/fileId          and          PUT  /files/fileId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/files/watch",
                "t" : "The ID of the file to watch."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "POST",
          "path" : "/drive/v2/files/{fileId}/watch",
          "displayName" : "watch",
          "doc" : {
            "t" : "POST  /files/fileId/watch"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/watch"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/about/get",
                "t" : "When calculating the number of remaining change IDs, whether to include shared files and public files the user has opened. When set to false, this counts only change IDs for owned files and any shared or public files that the user has explictly added to a folder in Drive.          (Default: true)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "includeSubscribed"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/about/get",
                "t" : "Maximum number of remaining change IDs to count"
              },
              "style" : "query",
              "type" : "long",
              "name" : "maxChangeIdCount"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/about/get",
                "t" : "Change ID to start counting from when calculating number of remaining change IDs"
              },
              "style" : "query",
              "type" : "long",
              "name" : "startChangeId"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/about",
          "displayName" : "get",
          "doc" : {
            "t" : "GET  /about"
          },
          "url" : "https://www.googleapis.com/drive/v2/about"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/changes/get",
                "t" : "The ID of the change."
              },
              "style" : "query",
              "type" : "string",
              "name" : "changeId"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/changes/changeId",
          "displayName" : "get",
          "doc" : {
            "t" : "GET  /changes/changeId"
          },
          "url" : "https://www.googleapis.com/drive/v2/changes/changeId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/changes/list",
                "t" : "Whether to include deleted items.          (Default: true)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "includeDeleted"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/changes/list",
                "t" : "Whether to include shared files and public files the user has opened. When set to false, the list will include owned files plus any shared or public files the user has explictly added to a folder in Drive.          (Default: true)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "includeSubscribed"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/changes/list",
                "t" : "Maximum number of changes to return. Acceptable values are 0 to 1000, inclusive. (Default: 100)"
              },
              "style" : "query",
              "type" : "integer",
              "name" : "maxResults"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/changes/list",
                "t" : "Page token for changes."
              },
              "style" : "query",
              "type" : "string",
              "name" : "pageToken"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/changes/list",
                "t" : "Change ID to start listing changes from."
              },
              "style" : "query",
              "type" : "long",
              "name" : "startChangeId"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/changes",
          "displayName" : "list",
          "doc" : {
            "t" : "GET  /changes"
          },
          "url" : "https://www.googleapis.com/drive/v2/changes"
        },
        {
          "params" : [ ],
          "httpMethod" : "POST",
          "path" : "/drive/v2/changes/watch",
          "displayName" : "watch",
          "doc" : {
            "t" : "POST  /changes/watch"
          },
          "url" : "https://www.googleapis.com/drive/v2/changes/watch"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/children/delete",
                "t" : "The ID of the child."
              },
              "style" : "query",
              "type" : "string",
              "name" : "childId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/children/delete",
                "t" : "The ID of the folder."
              },
              "style" : "query",
              "type" : "string",
              "name" : "folderId"
            }
          ],
          "httpMethod" : "DELETE",
          "path" : "/drive/v2/files/folderId/children/childId",
          "displayName" : "delete",
          "doc" : {
            "t" : "DELETE  /files/folderId/children/childId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/folderId/children/childId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/children/get",
                "t" : "The ID of the child."
              },
              "style" : "query",
              "type" : "string",
              "name" : "childId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/children/get",
                "t" : "The ID of the folder."
              },
              "style" : "query",
              "type" : "string",
              "name" : "folderId"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/folderId/children/childId",
          "displayName" : "get",
          "doc" : {
            "t" : "GET  /files/folderId/children/childId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/folderId/children/childId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/children/insert",
                "t" : "The ID of the folder."
              },
              "style" : "query",
              "type" : "string",
              "name" : "folderId"
            }
          ],
          "httpMethod" : "POST",
          "path" : "/drive/v2/files/folderId/children",
          "displayName" : "insert",
          "doc" : {
            "t" : "POST  /files/folderId/children"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/folderId/children"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/children/list",
                "t" : "The ID of the folder. To list all files in the root folder, use the alias root as the value for folderId."
              },
              "style" : "query",
              "type" : "string",
              "name" : "folderId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/children/list",
                "t" : "Maximum number of children to return. Acceptable values are 0 to 1000, inclusive. (Default: 100)"
              },
              "style" : "query",
              "type" : "integer",
              "name" : "maxResults"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/children/list",
                "t" : "Page token for children."
              },
              "style" : "query",
              "type" : "string",
              "name" : "pageToken"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/children/list",
                "t" : "Query string for searching children. See Searching for files for more information about supported fields and operations."
              },
              "style" : "query",
              "type" : "string",
              "name" : "q"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/folderId/children",
          "displayName" : "list",
          "doc" : {
            "t" : "GET  /files/folderId/children"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/folderId/children"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/parents/delete",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/parents/delete",
                "t" : "The ID of the parent."
              },
              "style" : "query",
              "type" : "string",
              "name" : "parentId"
            }
          ],
          "httpMethod" : "DELETE",
          "path" : "/drive/v2/files/{fileId}/parents/parentId",
          "displayName" : "delete",
          "doc" : {
            "t" : "DELETE  /files/fileId/parents/parentId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/parents/parentId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/parents/get",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/parents/get",
                "t" : "The ID of the parent."
              },
              "style" : "query",
              "type" : "string",
              "name" : "parentId"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/{fileId}/parents/parentId",
          "displayName" : "get",
          "doc" : {
            "t" : "GET  /files/fileId/parents/parentId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/parents/parentId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/parents/insert",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "POST",
          "path" : "/drive/v2/files/{fileId}/parents",
          "displayName" : "insert",
          "doc" : {
            "t" : "POST  /files/fileId/parents"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/parents"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/parents/list",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/{fileId}/parents",
          "displayName" : "list",
          "doc" : {
            "t" : "GET  /files/fileId/parents"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/parents"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/permissions/delete",
                "t" : "The ID for the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/permissions/delete",
                "t" : "The ID for the permission."
              },
              "style" : "query",
              "type" : "string",
              "name" : "permissionId"
            }
          ],
          "httpMethod" : "DELETE",
          "path" : "/drive/v2/files/{fileId}/permissions/permissionId",
          "displayName" : "delete",
          "doc" : {
            "t" : "DELETE  /files/fileId/permissions/permissionId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/permissions/permissionId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/permissions/get",
                "t" : "The ID for the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/permissions/get",
                "t" : "The ID for the permission."
              },
              "style" : "query",
              "type" : "string",
              "name" : "permissionId"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/{fileId}/permissions/permissionId",
          "displayName" : "get",
          "doc" : {
            "t" : "GET  /files/fileId/permissions/permissionId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/permissions/permissionId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/permissions/getIdForEmail",
                "t" : "The email address for which to return a permission ID"
              },
              "style" : "query",
              "type" : "string",
              "name" : "email"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/permissionIds/email",
          "displayName" : "getIdForEmail",
          "doc" : {
            "t" : "GET  /permissionIds/email"
          },
          "url" : "https://www.googleapis.com/drive/v2/permissionIds/email"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/permissions/insert",
                "t" : "The ID for the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/permissions/insert",
                "t" : "A custom message to include in notification emails."
              },
              "style" : "query",
              "type" : "string",
              "name" : "emailMessage"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/permissions/insert",
                "t" : "Whether to send notification emails when sharing to users or groups.          (Default: true)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "sendNotificationEmails"
            }
          ],
          "httpMethod" : "POST",
          "path" : "/drive/v2/files/{fileId}/permissions",
          "displayName" : "insert",
          "doc" : {
            "t" : "POST  /files/fileId/permissions"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/permissions"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/permissions/list",
                "t" : "The ID for the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/{fileId}/permissions",
          "displayName" : "list",
          "doc" : {
            "t" : "GET  /files/fileId/permissions"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/permissions"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/permissions/patch",
                "t" : "The ID for the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/permissions/patch",
                "t" : "The ID for the permission."
              },
              "style" : "query",
              "type" : "string",
              "name" : "permissionId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/permissions/patch",
                "t" : "Whether changing a role to 'owner' should also downgrade the current owners to writers.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "transferOwnership"
            }
          ],
          "httpMethod" : "PATCH",
          "path" : "/drive/v2/files/{fileId}/permissions/permissionId",
          "displayName" : "patch",
          "doc" : {
            "t" : "PATCH  /files/fileId/permissions/permissionId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/permissions/permissionId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/permissions/update",
                "t" : "The ID for the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/permissions/update",
                "t" : "The ID for the permission."
              },
              "style" : "query",
              "type" : "string",
              "name" : "permissionId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/permissions/update",
                "t" : "Whether changing a role to 'owner' should also downgrade the current owners to writers.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "transferOwnership"
            }
          ],
          "httpMethod" : "PUT",
          "path" : "/drive/v2/files/{fileId}/permissions/permissionId",
          "displayName" : "update",
          "doc" : {
            "t" : "PUT  /files/fileId/permissions/permissionId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/permissions/permissionId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/revisions/delete",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/revisions/delete",
                "t" : "The ID of the revision."
              },
              "style" : "query",
              "type" : "string",
              "name" : "revisionId"
            }
          ],
          "httpMethod" : "DELETE",
          "path" : "/drive/v2/files/{fileId}/revisions/revisionId",
          "displayName" : "delete",
          "doc" : {
            "t" : "DELETE  /files/fileId/revisions/revisionId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/revisions/revisionId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/revisions/get",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/revisions/get",
                "t" : "The ID of the revision."
              },
              "style" : "query",
              "type" : "string",
              "name" : "revisionId"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/{fileId}/revisions/revisionId",
          "displayName" : "get",
          "doc" : {
            "t" : "GET  /files/fileId/revisions/revisionId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/revisions/revisionId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/revisions/list",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/{fileId}/revisions",
          "displayName" : "list",
          "doc" : {
            "t" : "GET  /files/fileId/revisions"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/revisions"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/revisions/patch",
                "t" : "The ID for the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/revisions/patch",
                "t" : "The ID for the revision."
              },
              "style" : "query",
              "type" : "string",
              "name" : "revisionId"
            }
          ],
          "httpMethod" : "PATCH",
          "path" : "/drive/v2/files/{fileId}/revisions/revisionId",
          "displayName" : "patch",
          "doc" : {
            "t" : "PATCH  /files/fileId/revisions/revisionId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/revisions/revisionId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/revisions/update",
                "t" : "The ID for the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/revisions/update",
                "t" : "The ID for the revision."
              },
              "style" : "query",
              "type" : "string",
              "name" : "revisionId"
            }
          ],
          "httpMethod" : "PUT",
          "path" : "/drive/v2/files/{fileId}/revisions/revisionId",
          "displayName" : "update",
          "doc" : {
            "t" : "PUT  /files/fileId/revisions/revisionId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/revisions/revisionId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/apps/get",
                "t" : "The ID of the app."
              },
              "style" : "query",
              "type" : "string",
              "name" : "appId"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/apps/appId",
          "displayName" : "get",
          "doc" : {
            "t" : "GET  /apps/appId"
          },
          "url" : "https://www.googleapis.com/drive/v2/apps/appId"
        },
        {
          "params" : [ ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/apps",
          "displayName" : "list",
          "doc" : {
            "t" : "GET  /apps"
          },
          "url" : "https://www.googleapis.com/drive/v2/apps"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/comments/delete",
                "t" : "The ID of the comment."
              },
              "style" : "query",
              "type" : "string",
              "name" : "commentId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/comments/delete",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "DELETE",
          "path" : "/drive/v2/files/{fileId}/comments/commentId",
          "displayName" : "delete",
          "doc" : {
            "t" : "DELETE  /files/fileId/comments/commentId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/comments/commentId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/comments/get",
                "t" : "The ID of the comment."
              },
              "style" : "query",
              "type" : "string",
              "name" : "commentId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/comments/get",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/comments/get",
                "t" : "If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "includeDeleted"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/{fileId}/comments/commentId",
          "displayName" : "get",
          "doc" : {
            "t" : "GET  /files/fileId/comments/commentId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/comments/commentId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/comments/insert",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "POST",
          "path" : "/drive/v2/files/{fileId}/comments",
          "displayName" : "insert",
          "doc" : {
            "t" : "POST  /files/fileId/comments"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/comments"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/comments/list",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/comments/list",
                "t" : "If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "includeDeleted"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/comments/list",
                "t" : "The maximum number of discussions to include in the response, used for paging.          Acceptable values are 0 to 100, inclusive.          (Default: 20)"
              },
              "style" : "query",
              "type" : "integer",
              "name" : "maxResults"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/comments/list",
                "t" : "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response."
              },
              "style" : "query",
              "type" : "string",
              "name" : "pageToken"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/comments/list",
                "t" : "Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp."
              },
              "style" : "query",
              "type" : "string",
              "name" : "updatedMin"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/{fileId}/comments",
          "displayName" : "list",
          "doc" : {
            "t" : "GET  /files/fileId/comments"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/comments"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/comments/patch",
                "t" : "The ID of the comment."
              },
              "style" : "query",
              "type" : "string",
              "name" : "commentId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/comments/patch",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "PATCH",
          "path" : "/drive/v2/files/{fileId}/comments/commentId",
          "displayName" : "patch",
          "doc" : {
            "t" : "PATCH  /files/fileId/comments/commentId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/comments/commentId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/comments/update",
                "t" : "The ID of the comment."
              },
              "style" : "query",
              "type" : "string",
              "name" : "commentId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/comments/update",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "PUT",
          "path" : "/drive/v2/files/{fileId}/comments/commentId",
          "displayName" : "update",
          "doc" : {
            "t" : "PUT  /files/fileId/comments/commentId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/comments/commentId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/delete",
                "t" : "The ID of the comment."
              },
              "style" : "query",
              "type" : "string",
              "name" : "commentId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/delete",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/delete",
                "t" : "The ID of the reply."
              },
              "style" : "query",
              "type" : "string",
              "name" : "replyId"
            }
          ],
          "httpMethod" : "DELETE",
          "path" : "/drive/v2/files/{fileId}/comments/commentId/replies/replyId",
          "displayName" : "delete",
          "doc" : {
            "t" : "DELETE  /files/fileId/comments/commentId/replies/replyId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/comments/commentId/replies/replyId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/get",
                "t" : "The ID of the comment."
              },
              "style" : "query",
              "type" : "string",
              "name" : "commentId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/get",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/get",
                "t" : "The ID of the reply."
              },
              "style" : "query",
              "type" : "string",
              "name" : "replyId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/get",
                "t" : "If set, this will succeed when retrieving a deleted reply.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "includeDeleted"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/{fileId}/comments/commentId/replies/replyId",
          "displayName" : "get",
          "doc" : {
            "t" : "GET  /files/fileId/comments/commentId/replies/replyId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/comments/commentId/replies/replyId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/insert",
                "t" : "The ID of the comment."
              },
              "style" : "query",
              "type" : "string",
              "name" : "commentId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/insert",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "POST",
          "path" : "/drive/v2/files/{fileId}/comments/commentId/replies",
          "displayName" : "insert",
          "doc" : {
            "t" : "POST  /files/fileId/comments/commentId/replies"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/comments/commentId/replies"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/list",
                "t" : "The ID of the comment."
              },
              "style" : "query",
              "type" : "string",
              "name" : "commentId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/list",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/list",
                "t" : "If set, all replies, including deleted replies (with content stripped) will be returned.          (Default: false)"
              },
              "style" : "query",
              "type" : "boolean",
              "name" : "includeDeleted"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/list",
                "t" : "The maximum number of replies to include in the response, used for paging.          Acceptable values are 0 to 100, inclusive.          (Default: 20)"
              },
              "style" : "query",
              "type" : "integer",
              "name" : "maxResults"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/list",
                "t" : "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response."
              },
              "style" : "query",
              "type" : "string",
              "name" : "pageToken"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/{fileId}/comments/commentId/replies",
          "displayName" : "list",
          "doc" : {
            "t" : "GET  /files/fileId/comments/commentId/replies"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/comments/commentId/replies"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/patch",
                "t" : "The ID of the comment."
              },
              "style" : "query",
              "type" : "string",
              "name" : "commentId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/patch",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/patch",
                "t" : "The ID of the reply."
              },
              "style" : "query",
              "type" : "string",
              "name" : "replyId"
            }
          ],
          "httpMethod" : "PATCH",
          "path" : "/drive/v2/files/{fileId}/comments/commentId/replies/replyId",
          "displayName" : "patch",
          "doc" : {
            "t" : "PATCH  /files/fileId/comments/commentId/replies/replyId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/comments/commentId/replies/replyId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/update",
                "t" : "The ID of the comment."
              },
              "style" : "query",
              "type" : "string",
              "name" : "commentId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/update",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/replies/update",
                "t" : "The ID of the reply."
              },
              "style" : "query",
              "type" : "string",
              "name" : "replyId"
            }
          ],
          "httpMethod" : "PUT",
          "path" : "/drive/v2/files/{fileId}/comments/commentId/replies/replyId",
          "displayName" : "update",
          "doc" : {
            "t" : "PUT  /files/fileId/comments/commentId/replies/replyId"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/comments/commentId/replies/replyId"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/properties/delete",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/properties/delete",
                "t" : "The key of the property."
              },
              "style" : "query",
              "type" : "string",
              "name" : "propertyKey"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/properties/delete",
                "t" : "The visibility of the property."
              },
              "style" : "query",
              "type" : "string",
              "name" : "visibility"
            }
          ],
          "httpMethod" : "DELETE",
          "path" : "/drive/v2/files/{fileId}/properties/propertyKey",
          "displayName" : "delete",
          "doc" : {
            "t" : "DELETE  /files/fileId/properties/propertyKey"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/properties/propertyKey"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/properties/get",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/properties/get",
                "t" : "The key of the property."
              },
              "style" : "query",
              "type" : "string",
              "name" : "propertyKey"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/properties/get",
                "t" : "The visibility of the property."
              },
              "style" : "query",
              "type" : "string",
              "name" : "visibility"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/{fileId}/properties/propertyKey",
          "displayName" : "get",
          "doc" : {
            "t" : "GET  /files/fileId/properties/propertyKey"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/properties/propertyKey"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/properties/insert",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "POST",
          "path" : "/drive/v2/files/{fileId}/properties",
          "displayName" : "insert",
          "doc" : {
            "t" : "POST  /files/fileId/properties"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/properties"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/properties/list",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/{fileId}/properties",
          "displayName" : "list",
          "doc" : {
            "t" : "GET  /files/fileId/properties"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/properties"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/properties/patch",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/properties/patch",
                "t" : "The key of the property."
              },
              "style" : "query",
              "type" : "string",
              "name" : "propertyKey"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/properties/patch",
                "t" : "The visibility of the property."
              },
              "style" : "query",
              "type" : "string",
              "name" : "visibility"
            }
          ],
          "httpMethod" : "PATCH",
          "path" : "/drive/v2/files/{fileId}/properties/propertyKey",
          "displayName" : "patch",
          "doc" : {
            "t" : "PATCH  /files/fileId/properties/propertyKey"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/properties/propertyKey"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/properties/update",
                "t" : "The ID of the file."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/properties/update",
                "t" : "The key of the property."
              },
              "style" : "query",
              "type" : "string",
              "name" : "propertyKey"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/properties/update",
                "t" : "The visibility of the property."
              },
              "style" : "query",
              "type" : "string",
              "name" : "visibility"
            }
          ],
          "httpMethod" : "PUT",
          "path" : "/drive/v2/files/{fileId}/properties/propertyKey",
          "displayName" : "update",
          "doc" : {
            "t" : "PUT  /files/fileId/properties/propertyKey"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/properties/propertyKey"
        },
        {
          "params" : [ ],
          "httpMethod" : "POST",
          "path" : "/drive/v2/channels/stop",
          "displayName" : "stop",
          "doc" : {
            "t" : "POST  /channels/stop"
          },
          "url" : "https://www.googleapis.com/drive/v2/channels/stop"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/realtime/get",
                "t" : "The ID of the file that the Realtime API data model is associated with."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            }
          ],
          "httpMethod" : "GET",
          "path" : "/drive/v2/files/{fileId}/realtime",
          "displayName" : "get",
          "doc" : {
            "t" : "GET  /files/fileId/realtime"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/realtime"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/realtime/update",
                "t" : "The ID of the file that the Realtime API data model is associated with."
              },
              "style" : "query",
              "type" : "string",
              "name" : "fileId"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/realtime/update",
                "t" : "The type of upload request to the /upload URI.                          Acceptable values are:                                          media - Simple upload. Upload the media data.            resumable - Resumable upload. Upload the file in a resumable fashion, using a series of at least two requests."
              },
              "style" : "query",
              "type" : "string",
              "name" : "uploadType"
            },
            {
              "doc" : {
                "url" : "https://developers.google.com/drive/v2/reference/realtime/update",
                "t" : "The revision of the model to diff the uploaded model against. If set, the uploaded model is diffed against the provided revision and those differences are merged with any changes made to the model after the provided revision. If not set, the uploaded model replaces the current model on the server."
              },
              "style" : "query",
              "type" : "string",
              "name" : "baseRevision"
            }
          ],
          "httpMethod" : "",
          "path" : "/drive/v2/files/{fileId}/realtime",
          "displayName" : "update",
          "doc" : {
            "t" : "PUThttps://www.googleapis.com/upload/drive/v2/files/fileId/realtime"
          },
          "url" : "https://www.googleapis.com/drive/v2/files/{fileId}/realtime"
        },
        {
          "httpMethod" : "none",
          "doc" : {

          },
          "authentication" : {

          },
          "url" : "https://www.googleapis.comundefined"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "documentation" : "https://developers.google.com/drive/",
    "enabled" : true,
    "logo" : "http://ignitiondeck.com/id/wp-content/uploads/2013/06/googledrive-logo-300x300.png",
    "name" : "GoogleDrive",
    "oauth" : {
      "version" : "2.0",
      "isManual" : true,
      "protocol" : "https",
      "host" : "accounts.google.com",
      "baseURL" : "https://accounts.google.com",
      "clientId" : "965719986462-6a2td9snm9plpnqgk8uq7e9tuleedb40.apps.googleusercontent.com",
      "secret" : "DVH1uUxAj2CHgY6ASERX4iK_",
      "authTokenURL" : "https://accounts.google.com/o/oauth2/auth",
      "authTokenPath" : "/o/oauth2/auth",
      "grant_type" : "authorization_code",
      "accessTokenURL" : "https://accounts.google.com/o/oauth2/token",
      "requestTokenURL" : "",
      "scope" : "https://docs.google.com/feeds https://www.googleapis.com/auth/drive",
      "tokenMethod" : "access_token_query"
    },
    "useCustom" : true,
    "type" : "channel:google_drive"
  },
  {
    "_id" : "53359922443595b588409210",
    "application" : {
      "base" : "https://graph.facebook.com",
      "resources" : [
        {
          "doc" : {
            "t" : "GET /{app-id} \"/{app-id}\" ); FB.api(     \"/{app-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{app-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{app-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{app-id}"
          },
          "displayName" : "/{app-id}",
          "path" : "/{app-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/app",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The application ID",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "android_key_hash",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Indicates the app key hash for this app's Android native implementation.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "app_domains ¹",
              "type" : "string[]",
              "style" : "",
              "doc" : {
                "t" : "Domains and subdomains this app can use.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "auth_dialog_data_help_url ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The URL of a special landing page that helps users of an app begin publishing Open Graph activity",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "auth_dialog_headline ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "One line description of an app that appears in the Login Dialog",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "auth_dialog_perms_explanation ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The text to explain why an app needs additional permissions that appears in the Login Dialog",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "auth_referral_default_activity_privacy ¹",
              "type" : "enum{SELF, EVERYONE, ALL_FRIENDS, NONE}",
              "style" : "",
              "doc" : {
                "t" : "The default privacy setting selected for Open Graph activities in the Login Dialog",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "auth_referral_enabled ¹",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "Indicates whether Authenticated Referrals are enabled.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "auth_referral_extended_perms ¹",
              "type" : "string[]",
              "style" : "",
              "doc" : {
                "t" : "Extended permissions that a user can choose to grant when Authenticated Referrals are enabled.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "auth_referral_friend_perms ¹",
              "type" : "string[]",
              "style" : "",
              "doc" : {
                "t" : "Basic friends permissions that a user must grant when Authenticated Referrals are enabled.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "auth_referral_user_perms ¹",
              "type" : "string[]",
              "style" : "",
              "doc" : {
                "t" : "Basic user permissions that a user must grant when Authenticated Referrals are enabled",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "auth_referral_response_type ¹",
              "type" : "enum{code, token}",
              "style" : "",
              "doc" : {
                "t" : "The format that an app receives the auth token from the Login Dialog in",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "canvas_fluid_height ¹",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "Indicates whether app uses fluid or settable height values for Canvas",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "canvas_fluid_width ¹",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "Indicates whether app uses fluid or fixed width values for Canvas",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "canvas_url ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The non-secure URL from which Canvas app content is loaded.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "category",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The category of the application",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "company",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The company the application belongs to",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "contact_email ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Email address listed for users to contact developers.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "created_time",
              "type" : "int",
              "style" : "",
              "doc" : {
                "t" : "Unix timestamp that indicates when the app was created",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "creator_uid",
              "type" : "int",
              "style" : "",
              "doc" : {
                "t" : "User ID of the creator of this app",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "daily_active_users",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The number of daily active users the application has",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "daily_active_users_rank",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Ranking of this app vs other apps comparing daily active users",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "deauth_callback_url ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "URL that is pinged whenever a user removes the app",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "description",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The description of the application written by the 3rd party developers",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "hosting_url",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Webspace created with one of our hosting partners for this app",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "icon_url",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The URL of the application's icon",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "ios_bundle_id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Indicates the bundle ID for this app's native iOS implementation.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "iphone_app_store_id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "ID of the app in the iPhone App Store",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "link",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "A link to the Application on Facebook",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "logo_url",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The URL of the application's logo",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "migrations ¹",
              "type" : "object",
              "style" : "",
              "doc" : {
                "t" : "Migrations settings for this app.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "{migration-name}",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "There will be multiple migration settings in the migration object depending on how many migrations are currently available to apps. The value of each of these fields indicates whether that migration is active for this app or not.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "mobile_web_url ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "URL to which Mobile users will be directed when using the app.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "monthly_active_users",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The number of monthly active users the application has",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "monthly_active_users_rank",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Ranking of this app vs other apps comparing monthly active users",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The title of the application",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "namespace ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The namespace for the app.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "page_tab_default_name ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The title of the app when used in a Page Tab",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "page_tab_url ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The non-secure URL from which Page Tab app content is loaded.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "privacy_policy_url ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The URL that links to a Privacy Policy for the app.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "restrictions ¹",
              "type" : "object[] Object with one or more of the following fields: type, location, age, and age_distr",
              "style" : "",
              "doc" : {
                "t" : "Demographic restrictions set for this app.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "type",
              "type" : "enum{alcohol}",
              "style" : "",
              "doc" : {
                "t" : "Indicates a restriction type.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "location",
              "type" : "csv[string]",
              "style" : "",
              "doc" : {
                "t" : "Indicates a restriction based on location, such as 'DE' for apps restricted to Germany",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "age",
              "type" : "enum{13+, 17+, 18+, 19+, 21+}",
              "style" : "",
              "doc" : {
                "t" : "Indicates a restriction based on a minimum age.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "secure_canvas_url ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The secure URL from which Canvas app content is loaded.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "secure_page_tab_url ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The secure URL from which Page Tab app content is loaded.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "server_ip_whitelist ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "App requests must originate from this comma-separated list of IP addresses",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "social_discovery ¹",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "Indicates whether app usage stories show up in the Ticker or News Feed.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "subcategory",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The subcategory of the application",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "terms_of_service_url ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "URL to Terms of Service which is linked to in Login Dialog.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "user_support_email ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Main contact email for this app.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "user_support_url ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "URL of support for users of an app shown in Canvas footer.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "website_url ¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "URL of a website that integrates with this app.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            },
            {
              "name" : "weekly_active_users",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The number of weekly active users the application has",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/app"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{app-id}"
        },
        {
          "doc" : {
            "t" : "GET /{check-in-id} \"/{check-in-id}\" ); FB.api(     \"/{check-in-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{check-in-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{check-in-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{check-in-id}"
          },
          "displayName" : "/{check-in-id}",
          "path" : "/{check-in-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/checkin",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/checkin"
              }
            },
            {
              "name" : "application",
              "type" : "App",
              "style" : "",
              "doc" : {
                "t" : "The app that made the check-in.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/checkin"
              }
            },
            {
              "name" : "created_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The time the check-in was created.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/checkin"
              }
            },
            {
              "name" : "from",
              "type" : "User",
              "style" : "",
              "doc" : {
                "t" : "The user who made the check-in.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/checkin"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The check-in's unique ID.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/checkin"
              }
            },
            {
              "name" : "message",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The message the user added to the check-in.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/checkin"
              }
            },
            {
              "name" : "place",
              "type" : "Page",
              "style" : "",
              "doc" : {
                "t" : "The Facebook Page that represents the location of the check-in.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/checkin"
              }
            },
            {
              "name" : "tags",
              "type" : "User[]",
              "style" : "",
              "doc" : {
                "t" : "The people that the author tagged in the check-in.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/checkin"
              }
            },
            {
              "name" : "type",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The type of this object; always returns checkin",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/checkin"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{check-in-id}"
        },
        {
          "doc" : {
            "t" : "GET /{comment-id} \"/{comment-id}\" ); FB.api(     \"/{comment-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{comment-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{comment-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{comment-id}"
          },
          "displayName" : "/{comment-id}",
          "path" : "/{comment-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/comment",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The comment ID",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "attachment",
              "type" : "StoryAttachment",
              "style" : "",
              "doc" : {
                "t" : "Link or photo attached to the comment",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "description",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Text accompanying the attachment",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "description_tags",
              "type" : "string[]",
              "style" : "",
              "doc" : {
                "t" : "Profiles tagged in the text accompanying the attachment",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "media",
              "type" : "StoryAttachmentMedia",
              "style" : "",
              "doc" : {
                "t" : "Media object (photo, link etc.) contained in the attachment",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "image",
              "type" : "ImageSource",
              "style" : "",
              "doc" : {
                "t" : "An image in the attachment",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "height",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Height of the image",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "src",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "URI of the image",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "width",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Width of the image",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "target",
              "type" : "StoryAttachmentTarget",
              "style" : "",
              "doc" : {
                "t" : "Object that the attachment links to",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "id",
              "type" : "numeric string",
              "style" : "",
              "doc" : {
                "t" : "ID.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "url",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "URL.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "title",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Title of the attachment",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "type",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Type of the attachment",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "url",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "URL of the attachment",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "can_comment",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "Whether the viewer can reply to this comment",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "can_remove",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "Whether the viewer can remove this comment",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "comment_count",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Number of replies to this comment",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "created_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The time this comment was made",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "from",
              "type" : "User",
              "style" : "",
              "doc" : {
                "t" : "The person that made this comment",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "like_count",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Number of times this comment was liked",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "message",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The comment text",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "message_tags",
              "type" : "string[]",
              "style" : "",
              "doc" : {
                "t" : "Profiles tagged in mentions in the message",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "parent",
              "type" : "Comment",
              "style" : "",
              "doc" : {
                "t" : "For comment replies, this the comment that this is a reply to",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            },
            {
              "name" : "user_likes",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "Whether the viewer has liked this comment",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/comment"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{comment-id}"
        },
        {
          "doc" : {
            "t" : "GET /{domain-id} \"/{domain-id}\" ); FB.api(     \"/{domain-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{domain-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{domain-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{domain-id}"
          },
          "displayName" : "/{domain-id}",
          "path" : "/{domain-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/domain",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/domain"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The ID of the domain.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/domain"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The name of the domain.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/domain"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{domain-id}"
        },
        {
          "doc" : {
            "t" : "GET /{event-id} \"/{event-id}\" ); FB.api(     \"/{event-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{event-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{event-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{event-id}"
          },
          "displayName" : "/{event-id}",
          "path" : "/{event-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/event",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "id",
              "type" : "numeric string",
              "style" : "",
              "doc" : {
                "t" : "The event ID.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "cover",
              "type" : "CoverPhoto",
              "style" : "",
              "doc" : {
                "t" : "The event's cover photo.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "ID of the Photo that represents this cover photo.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "source",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "URL to the Photo that represents this cover photo.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "offset_y",
              "type" : "int",
              "style" : "",
              "doc" : {
                "t" : "The vertical offset in pixels of the photo from the bottom.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "offset_x",
              "type" : "int",
              "style" : "",
              "doc" : {
                "t" : "The horizontal offset in pixels of the photo from the left.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "description",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Long-form description of the event.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "end_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "End time of the event, if one has been set.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "is_date_only",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "Indicates whether the event only has a date specified, but no time.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "location",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The location of the event, if any.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The name of the event.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "owner",
              "type" : "User|Page|Group",
              "style" : "",
              "doc" : {
                "t" : "The profile that created the event.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "parent_group",
              "type" : "Group",
              "style" : "",
              "doc" : {
                "t" : "The group the event belongs to, if any.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "privacy",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Who can see the event.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "start_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "Start time of the event.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "ticket_uri",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The link users can visit to buy a ticket to this event. Can only be added to events created by Pages.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "timezone",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Any timezone that the event has.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "updated_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "Last time that the event was updated.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            },
            {
              "name" : "venue",
              "type" : "Page",
              "style" : "",
              "doc" : {
                "t" : "Venue hosting the event, if any.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/event"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{event-id}"
        },
        {
          "doc" : {
            "t" : "GET /{friendlist-id} \"/{friendlist-id}\" ); FB.api(     \"/{friendlist-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{friendlist-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{friendlist-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{friendlist-id}"
          },
          "displayName" : "/{friendlist-id}",
          "path" : "/{friendlist-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/friendlist",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/friendlist"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The friend list ID",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/friendlist"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The name of the friend list",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/friendlist"
              }
            },
            {
              "name" : "list_type",
              "type" : "enum{close_friends, acquaintances, restricted, user_created, education, work, current_city, family}",
              "style" : "",
              "doc" : {
                "t" : "The type of the friend list",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/friendlist"
              }
            },
            {
              "name" : "owner",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The owner of the friend list",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/friendlist"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{friendlist-id}"
        },
        {
          "doc" : {
            "t" : "GET /{group-id} \"/{group-id}\" ); FB.api(     \"/{group-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{group-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{group-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{group-id}"
          },
          "displayName" : "/{group-id}",
          "path" : "/{group-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/group/",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The group ID",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            },
            {
              "name" : "cover",
              "type" : "CoverPhoto",
              "style" : "",
              "doc" : {
                "t" : "Information about the group's cover photo.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "ID of the Photo that represents this cover photo.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            },
            {
              "name" : "source",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "URL to the Photo that represents this cover photo.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            },
            {
              "name" : "offset_y",
              "type" : "int",
              "style" : "",
              "doc" : {
                "t" : "The vertical offset in pixels of the photo from the bottom.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            },
            {
              "name" : "offset_x",
              "type" : "int",
              "style" : "",
              "doc" : {
                "t" : "The horizontal offset in pixels of the photo from the left.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            },
            {
              "name" : "description",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "A brief description of the group.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            },
            {
              "name" : "email",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The email address to upload content to the group. Only current members of the group can use this.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            },
            {
              "name" : "icon",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The URL for the group's icon.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            },
            {
              "name" : "link",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The group's website.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The name of the group.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            },
            {
              "name" : "owner",
              "type" : "User|Page",
              "style" : "",
              "doc" : {
                "t" : "The profile that created this group.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            },
            {
              "name" : "parent",
              "type" : "Group|Page|App",
              "style" : "",
              "doc" : {
                "t" : "The parent of this group, if it exists.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            },
            {
              "name" : "privacy",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The privacy setting of the group.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            },
            {
              "name" : "updated_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The last time the group was updated (this includes changes in the group's properties and changes in posts and comments if the session user can see them).",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/group/"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{group-id}"
        },
        {
          "doc" : {
            "t" : "GET /{link-id} \"/{link-id}\" ); FB.api(     \"/{link-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{link-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{link-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{link-id}"
          },
          "displayName" : "/{link-id}",
          "path" : "/{link-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/link",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/link"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The link ID.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/link"
              }
            },
            {
              "name" : "created_time",
              "type" : "`datetime",
              "style" : "",
              "doc" : {
                "t" : "The time the message was published.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/link"
              }
            },
            {
              "name" : "description",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "A description of the link (appears beneath the link caption).",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/link"
              }
            },
            {
              "name" : "from",
              "type" : "User",
              "style" : "",
              "doc" : {
                "t" : "The user that created the link.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/link"
              }
            },
            {
              "name" : "icon",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "A URL to the link icon that Facebook displays in the news feed.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/link"
              }
            },
            {
              "name" : "link",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The URL that was shared.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/link"
              }
            },
            {
              "name" : "message",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The optional message from the user about this link.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/link"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The name of the link.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/link"
              }
            },
            {
              "name" : "picture",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "A URL to the thumbnail image used in the link post",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/link"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{link-id}"
        },
        {
          "doc" : {
            "t" : "GET /{message-id} \"/{message-id}\" ); FB.api(     \"/{message-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{message-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{message-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{message-id}"
          },
          "displayName" : "/{message-id}",
          "path" : "/{message-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/message",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/message"
              }
            },
            {
              "name" : "created_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "A timestamp of when this message was created",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/message"
              }
            },
            {
              "name" : "from",
              "type" : "User",
              "style" : "",
              "doc" : {
                "t" : "The sender of this message.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/message"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The unique ID for this message.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/message"
              }
            },
            {
              "name" : "message",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The text of the message.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/message"
              }
            },
            {
              "name" : "to",
              "type" : "User[]",
              "style" : "",
              "doc" : {
                "t" : "A list of the message recipients.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/message"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{message-id}"
        },
        {
          "doc" : {
            "t" : "GET /{milestone-id} \"/{milestone-id}\" ); FB.api(     \"/{milestone-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{milestone-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{milestone-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{milestone-id}"
          },
          "displayName" : "/{milestone-id}",
          "path" : "/{milestone-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/milestone/",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/milestone/"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The ID of a milestone event",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/milestone/"
              }
            },
            {
              "name" : "title",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The title of the milestone",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/milestone/"
              }
            },
            {
              "name" : "from",
              "type" : "Page",
              "style" : "",
              "doc" : {
                "t" : "The Page that posted the milestone.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/milestone/"
              }
            },
            {
              "name" : "description",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The description of the milestone",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/milestone/"
              }
            },
            {
              "name" : "created_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The creation time of the milestone",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/milestone/"
              }
            },
            {
              "name" : "updated_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The update time of the milestone",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/milestone/"
              }
            },
            {
              "name" : "start_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The start time of the milestone",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/milestone/"
              }
            },
            {
              "name" : "end_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The end time of the milestone. Page milestones have the same start and end time",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/milestone/"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{milestone-id}"
        },
        {
          "doc" : {
            "t" : "GET /{note-id} \"/{note-id}\" ); FB.api(     \"/{note-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{note-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{note-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{note-id}"
          },
          "displayName" : "/{note-id}",
          "path" : "/{note-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/note",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/note"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The note's ID.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/note"
              }
            },
            {
              "name" : "created_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The time the note was initially published.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/note"
              }
            },
            {
              "name" : "from",
              "type" : "User",
              "style" : "",
              "doc" : {
                "t" : "The profile that created the note.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/note"
              }
            },
            {
              "name" : "icon",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The icon that Facebook displays with notes.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/note"
              }
            },
            {
              "name" : "message",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The content of the note.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/note"
              }
            },
            {
              "name" : "subject",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The title of the note.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/note"
              }
            },
            {
              "name" : "updated_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The time the note was last updated.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/note"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{note-id}"
        },
        {
          "doc" : {
            "t" : "GET /{object-id}/comments \"/{object-id}/comments\" ); FB.api(     \"/{object-id}/comments\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{object-id}/comments\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{object-id}/comments\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{object-id}/comments"
          },
          "displayName" : "/{object-id}/comments",
          "path" : "/{object-id}/comments",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/object/comments/",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://graph.facebook.com/{object-id}/comments"
        },
        {
          "doc" : {
            "t" : "GET /{object-id}/comments \"/{object-id}/comments\" ); FB.api(     \"/{object-id}/comments\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{object-id}/comments\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{object-id}/comments\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{object-id}/comments"
          },
          "displayName" : "/{object-id}/comments",
          "path" : "/{object-id}/comments",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/object/comments/",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://graph.facebook.com/{object-id}/comments"
        },
        {
          "doc" : {
            "t" : "GET /{offer-id} \"/{offer-id}\" ); FB.api(     \"/{offer-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{offer-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{offer-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{offer-id}"
          },
          "displayName" : "/{offer-id}",
          "path" : "/{offer-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/offer",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/offer"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The offer's ID.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/offer"
              }
            },
            {
              "name" : "claim_limit",
              "type" : "integer",
              "style" : "",
              "doc" : {
                "t" : "The maximum number of times the offer can be claimed.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/offer"
              }
            },
            {
              "name" : "coupon_type",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The type of offer.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/offer"
              }
            },
            {
              "name" : "created_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The time the offer was created.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/offer"
              }
            },
            {
              "name" : "expiration_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The expiration time of the offer (for display purposes).",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/offer"
              }
            },
            {
              "name" : "from",
              "type" : "Page",
              "style" : "",
              "doc" : {
                "t" : "The page that published the offer.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/offer"
              }
            },
            {
              "name" : "image_url",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The URL for the offer's image.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/offer"
              }
            },
            {
              "name" : "published",
              "type" : "boolean",
              "style" : "",
              "doc" : {
                "t" : "Whether a post is published or not, default is true.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/offer"
              }
            },
            {
              "name" : "redemption_code",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "A code to to receive the discount or promotion.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/offer"
              }
            },
            {
              "name" : "redemption_link",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The URL where the offer may be redeemed.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/offer"
              }
            },
            {
              "name" : "reminder_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "Time before the expiration_time of the offer when the user receives a notification that the offer is about to expire. This notification time will occur in the user's set timezone.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/offer"
              }
            },
            {
              "name" : "scheduled_publish_time",
              "type" : "Unix timestamp",
              "style" : "",
              "doc" : {
                "t" : "Time when the Page post should go live, this should be between 10 mins and 6 months from the time of publishing the post.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/offer"
              }
            },
            {
              "name" : "terms",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The terms of the offer.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/offer"
              }
            },
            {
              "name" : "title",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The title of the offer.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/offer"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{offer-id}"
        },
        {
          "doc" : {
            "t" : "GET /platform \"/platform\" ); FB.api(     \"/platform\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/platform\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/platform\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/platform"
          },
          "displayName" : "/platform",
          "path" : "/platform",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/page",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "id",
              "type" : "numeric string",
              "style" : "",
              "doc" : {
                "t" : "The Page ID",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "about¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Information about the Page",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "attire",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Dress code of the business. Applicable to Restaurants or Nightlife. Can be one of Casual, Dressy or Unspecified",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "band_members",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Members of the band. Applicable to Bands",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "best_page",
              "type" : "Page",
              "style" : "",
              "doc" : {
                "t" : "The best available Page on Facebook for the concept represented by this Page. The best available Page takes into account authenticity and fan count",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "birthday",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Birthday of this person. Applicable to Pages representing people",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "booking_agent",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Booking agent of the band. Applicable to Bands",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "can_post",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "Whether the current session user can post on this Page",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "category",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The Page's category. e.g. Product/Service, Computers/Technology",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "category_list",
              "type" : "PageCategory[]",
              "style" : "",
              "doc" : {
                "t" : "The Page's categories",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "checkins",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Number of checkins at a place represented by a Page",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "company_overview¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The company overview. Applicable to Companies",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "cover¹",
              "type" : "CoverPhoto",
              "style" : "",
              "doc" : {
                "t" : "Information about the Page's cover photo",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "ID of the Photo that represents this cover photo.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "source",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "URL to the Photo that represents this cover photo.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "offset_y",
              "type" : "int",
              "style" : "",
              "doc" : {
                "t" : "The vertical offset in pixels of the photo from the bottom.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "offset_x",
              "type" : "int",
              "style" : "",
              "doc" : {
                "t" : "The horizontal offset in pixels of the photo from the left.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "current_location",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Current location of the Page",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "description¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The description of the Page",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "directed_by",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The director of the film. Applicable to Films",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "founded",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "When the company is founded. Applicable to Companies",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "general_info¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "General information provided by the Page",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "general_manager",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "General manager of the business. Applicable to Restaurants or Nightlife",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "hometown",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Hometown of the band. Applicable to Bands",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "hours¹",
              "type" : "object",
              "style" : "",
              "doc" : {
                "t" : "Indicates the opening hours for this location.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "{day}_{number}_{status}",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Indicates a single range of opening hours for a day. Each day can have 2 different hours ranges. {day} should be the first 3 characters of the day of the week, {number} should be either 1 or 2 to allow for the two different hours ranges per day. {status} should be either open or close to delineate the start or end of a time range. An example would be mon_1_open with value 17:00 and mon_1_close with value 21:15 which would represent a single opening range of 5pm to 9:15pm on Mondays.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "is_permanently_closed¹",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "For businesses that are no longer operating.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "is_published",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "Indicates whether the Page is published and visible to non-admins",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "is_unclaimed",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "Indicates whether the Page is unclaimed",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "likes",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "The number of users who like the Page. For Global Brand Pages this is the count for all pages across the brand",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "link",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The Page's Facebook URL",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "location",
              "type" : "object",
              "style" : "",
              "doc" : {
                "t" : "The location of this place. Applicable to all Places",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "country",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Country of the location",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "city",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "City of the location",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "longitude",
              "type" : "float",
              "style" : "",
              "doc" : {
                "t" : "Longitude of the location",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "zip",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Zip code of the location",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "state",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "State of the location",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "street",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Street of the location",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "located_in",
              "type" : "id",
              "style" : "",
              "doc" : {
                "t" : "The parent location if this location is located within another location",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "latitude",
              "type" : "float",
              "style" : "",
              "doc" : {
                "t" : "Latitude of the location",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "mission¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The company mission. Applicable to Companies",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "name¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The name of the Page.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "parking¹",
              "type" : "object",
              "style" : "",
              "doc" : {
                "t" : "Information about the parking available at a place.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "street",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Indicates street parking is available.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "lot",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Indicates a parking lot is available.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "valet",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Indicates a valet is available.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "phone¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Phone number provided by a Page",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "press_contact",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Press contact information of the band. Applicable to Bands",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "price_range",
              "type" : "enum{$, $$, $$$, $$$$, Unspecified}",
              "style" : "",
              "doc" : {
                "t" : "Price range of the business. Applicable to Restaurants or Nightlife.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "products",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The products of this company. Applicable to Companies",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "restaurant_services",
              "type" : "object",
              "style" : "",
              "doc" : {
                "t" : "Services the restaurant provides. Applicable to Restaurants",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "kids",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Whether the restaurant is kids-friendly",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "delivery",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Whether the restaurant has delivery service",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "walkins",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Whether the restaurant welcomes walkins",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "catering",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Whether the restaurant has catering service",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "reserve",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Whether the restaurant takes reservations",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "groups",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Whether the restaurant is group-friendly",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "waiter",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Whether the restaurant has waiters",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "outdoor",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Whether the restaurant has outdoor seating",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "takeout",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Whether the restaurant has takeout service",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "restaurant_specialties",
              "type" : "object",
              "style" : "",
              "doc" : {
                "t" : "The restaurant's specialties. Applicable to Restaurants",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "coffee",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Whether the restaurant serves coffee",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "drinks",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Whether the restaurant serves drinks",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "breakfast",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Whether the restaurant serves breakfast",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "dinner",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Whether the restaurant serves dinner",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "lunch",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Whether the restaurant serves lunch",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "talking_about_count",
              "type" : "unsigned int32",
              "style" : "",
              "doc" : {
                "t" : "The number of people talking about this Page",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "username",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The alias of the Page. For example, for www.facebook.com/platform the username is 'platform'",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "website¹",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The URL of the Page's website",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            },
            {
              "name" : "were_here_count",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "The number of visits to this Page's location",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/page"
              }
            }
          ],
          "url" : "https://graph.facebook.com/platform"
        },
        {
          "doc" : {
            "t" : "GET /{photo-id} \"/{photo-id}\" ); FB.api(     \"/{photo-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{photo-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{photo-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{photo-id}"
          },
          "displayName" : "/{photo-id}",
          "path" : "/{photo-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/photo",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "id",
              "type" : "numeric string",
              "style" : "",
              "doc" : {
                "t" : "The photo ID",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "album",
              "type" : "Album",
              "style" : "",
              "doc" : {
                "t" : "The album this photo is in",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "backdated_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The time that the photo was taken",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "backdated_time_granularity",
              "type" : "enum{'year', 'month', 'day', 'hour', 'min', 'none'}",
              "style" : "",
              "doc" : {
                "t" : "How accurate the backdated time is.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "created_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The time this photo was published",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "from",
              "type" : "User or Page",
              "style" : "",
              "doc" : {
                "t" : "The profile that uploaded this photo",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "height",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "The height of this photo in pixels",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "icon",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The icon that Facebook displays when photos are published to newsfeed",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "images",
              "type" : "ImageSource[]",
              "style" : "",
              "doc" : {
                "t" : "The 4 different stored representations of the photo",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "height",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Height of the image",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "source",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "URI of the image",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "width",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Width of the image",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "link",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "A link to the photo on Facebook",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The user provided caption given to this photo.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "name_tags",
              "type" : "object[]",
              "style" : "",
              "doc" : {
                "t" : "An array containing an array of objects mentioned in the name field.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "id",
              "type" : "numeric string",
              "style" : "",
              "doc" : {
                "t" : "ID of the profile",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "object",
              "type" : "Profile",
              "style" : "",
              "doc" : {
                "t" : "The object itself",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "length",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Number of characters in the text indicating the object",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Name of the object",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "offset",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "The character offset in the source text of the text indicating the object",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "type",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Type of the object",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "page_story_id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "ID of the page story this corresponds to if any",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "picture",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Link to the 100px wide representation of this photo",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "place",
              "type" : "Page",
              "style" : "",
              "doc" : {
                "t" : "Location associated with the photo, if any",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "position",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "Deprecated. Returns 0",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "source",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Link to the image source of the photo",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "updated_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The last time the photo or its caption was updated",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            },
            {
              "name" : "width",
              "type" : "int32",
              "style" : "",
              "doc" : {
                "t" : "The width of this photo in pixels",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/photo"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{photo-id}"
        },
        {
          "doc" : {
            "t" : "GET /{post-id} \"/{post-id}\" ); FB.api(     \"/{post-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{post-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{post-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{post-id}"
          },
          "displayName" : "/{post-id}",
          "path" : "/{post-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/post",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The post ID",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "actions",
              "type" : "object[]",
              "style" : "",
              "doc" : {
                "t" : "A list of available actions on the post (including commenting, liking, and any optional app-specified actions).",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The action's link name.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "link",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Where the action link goes to.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "application",
              "type" : "App",
              "style" : "",
              "doc" : {
                "t" : "Information about the app this post was published by.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "caption",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The caption of a link in the post (appears beneath the name).",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "created_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The time the post was initially published.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "description",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "A description of a link in the post (appears beneath the caption).",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "from",
              "type" : "Profile",
              "style" : "",
              "doc" : {
                "t" : "Information about the profile that posted the message.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "icon",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "A link to an icon representing the type of this post.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "is_hidden",
              "type" : "boolean",
              "style" : "",
              "doc" : {
                "t" : "If this post is marked as hidden (applies to Pages only).",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "link",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The link attached to this post.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "message",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The status message in the post.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "message_tags",
              "type" : "object",
              "style" : "",
              "doc" : {
                "t" : "Profiles tagged in message.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "{tag-key}",
              "type" : "object",
              "style" : "",
              "doc" : {
                "t" : "Each tag in the message has a unique key within the message_tags object, which also indicates the order in which it appears in the message. The corresponding value of this key is another object representing the tag itself.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "ID of the profile that was tagged.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The text used in the tag.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "type",
              "type" : "enum{user, page, group}",
              "style" : "",
              "doc" : {
                "t" : "Indicates which type of profile is tagged.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "offset",
              "type" : "integer",
              "style" : "",
              "doc" : {
                "t" : "Where the first character of the tagged text is in the message.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "length",
              "type" : "integer",
              "style" : "",
              "doc" : {
                "t" : "How many characters this tag consists of, after the offset.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The name of the link.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "object_id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The ID of any uploaded photo or video attached to the post.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "picture",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The picture scraped from any link included with the post.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "place",
              "type" : "Page",
              "style" : "",
              "doc" : {
                "t" : "Any location information attached to the post.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "privacy",
              "type" : "object",
              "style" : "",
              "doc" : {
                "t" : "The privacy settings of the post.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "description",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Text that describes the privacy settings, as they would appear on Facebook.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "value",
              "type" : "enum{EVERYONE, ALL_FRIENDS, FRIENDS_OF_FRIENDS, SELF, CUSTOM}",
              "style" : "",
              "doc" : {
                "t" : "The actual privacy setting.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "friends",
              "type" : "enum{ALL_FRIENDS, FRIENDS_OF_FRIENDS, SOME_FRIENDS}",
              "style" : "",
              "doc" : {
                "t" : "If value is CUSTOM, this indicates which group of friends can see the post.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "allow",
              "type" : "csv<string>",
              "style" : "",
              "doc" : {
                "t" : "If value is CUSTOM, this is a comma-separated ID list of users and friendlists (if any) that can see the post.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "deny",
              "type" : "csv<string>",
              "style" : "",
              "doc" : {
                "t" : "If value is CUSTOM, this is a comma-separated ID list of users and friendlists (if any) that cannot see the post.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "properties",
              "type" : "object[]",
              "style" : "",
              "doc" : {
                "t" : "A list of properties for any attached video, for example, the length of the video.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The property name.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "text",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The value of the property.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "href",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Any link associated with the property.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "shares",
              "type" : "object",
              "style" : "",
              "doc" : {
                "t" : "The number of times this post has been shared. If there are no shares, this field is not included.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "count",
              "type" : "integer",
              "style" : "",
              "doc" : {
                "t" : "The count of shares.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "source",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "A URL to any Flash movie or video file attached to the post.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "status_type",
              "type" : "enum{mobile_status_update, created_note, added_photos, added_video, shared_story, created_group, created_event, wall_post, app_created_story, published_story, tagged_in_photo, approved_friend}",
              "style" : "",
              "doc" : {
                "t" : "Description of the type of a status update.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "story",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Text from stories not intentionally generated by users, such as those generated when two people become friends, or when someone else posts on the person's wall.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "story_tags",
              "type" : "object",
              "style" : "",
              "doc" : {
                "t" : "Deprecated field, same as message_tags.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "to",
              "type" : "Profile[]",
              "style" : "",
              "doc" : {
                "t" : "Profiles mentioned or targeted in this post.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "type",
              "type" : "enum{link, status, photo, video}",
              "style" : "",
              "doc" : {
                "t" : "A string indicating the object type of this post.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "updated_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The time of the last change to this post, or the comments on it.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            },
            {
              "name" : "with_tags",
              "type" : "Profile[]",
              "style" : "",
              "doc" : {
                "t" : "Profiles tagged as being 'with' the publisher of the post.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/post"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{post-id}"
        },
        {
          "doc" : {
            "t" : "GET /me \"/me\" ); FB.api(     \"/me\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/me\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/me\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/me"
          },
          "displayName" : "/me",
          "path" : "/me",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/user/",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "id",
              "type" : "numeric string",
              "style" : "",
              "doc" : {
                "t" : "The id of this person's user account.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "age_range",
              "type" : "object",
              "style" : "",
              "doc" : {
                "t" : "Unspecific age range that this person's age fits into.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "min",
              "type" : "enum{13, 18, 21}",
              "style" : "",
              "doc" : {
                "t" : "The lower bounds of the range for this person's age.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "max",
              "type" : "enum{17, 20, None}",
              "style" : "",
              "doc" : {
                "t" : "The upper bounds of the range for this person's age.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "bio",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The 'about me' section of this person's profile.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "birthday",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "This person's birthday in the format MM/DD/YYYY.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "currency",
              "type" : "object",
              "style" : "",
              "doc" : {
                "t" : "This person's local currency information",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "user_currency",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The ISO-4217-3 code for the user's preferred currency (defaulting to USD if the user hasn't set one)",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "currency_exchange",
              "type" : "float",
              "style" : "",
              "doc" : {
                "t" : "Deprecated - Ignore The exchange rate between US Dollars and Facebook Credits",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "currency_exchange_inverse",
              "type" : "float",
              "style" : "",
              "doc" : {
                "t" : "Deprecated - Ignore The inverse of currency_exchange",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "usd_exchange",
              "type" : "float",
              "style" : "",
              "doc" : {
                "t" : "The exchange rate between the user's preferred currency and US Dollars",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "usd_exchange_inverse",
              "type" : "float",
              "style" : "",
              "doc" : {
                "t" : "The inverse of currency_exchange",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "currency_offset",
              "type" : "integer",
              "style" : "",
              "doc" : {
                "t" : "Deprecated - Ignore The denominator between Facebook Credits and US Dollars",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "education",
              "type" : "object[]",
              "style" : "",
              "doc" : {
                "t" : "The sections of a person's education history.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "school",
              "type" : "Page",
              "style" : "",
              "doc" : {
                "t" : "The Facebook Page that represents a school in this section.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "year",
              "type" : "Page",
              "style" : "",
              "doc" : {
                "t" : "The Facebook Page that represents the year of graduation in this section.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "concentration",
              "type" : "Page[]",
              "style" : "",
              "doc" : {
                "t" : "Facebook Pages representing the subjects studied in this section.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "type",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Indicates the type of educational institution.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "cover",
              "type" : "CoverPhoto",
              "style" : "",
              "doc" : {
                "t" : "Information about the person's cover photo",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "ID of the Photo that represents this cover photo.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "source",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "URL to the Photo that represents this cover photo.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "offset_y",
              "type" : "int",
              "style" : "",
              "doc" : {
                "t" : "The vertical offset in pixels of the photo from the bottom.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "email",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "This person's primary email address listed on their profile. This field will not be returned if no valid email address is available.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "favorite_athletes",
              "type" : "Page[]",
              "style" : "",
              "doc" : {
                "t" : "Facebook Pages representing athletes listed under the Likes section of this person's profile.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "favorite_teams",
              "type" : "Page[]",
              "style" : "",
              "doc" : {
                "t" : "Facebook Pages representing sports teams listed under the Likes section of this person's profile.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "first_name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The person's first name",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "gender",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The person's gender",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "hometown",
              "type" : "Page",
              "style" : "",
              "doc" : {
                "t" : "The person's hometown",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "inspirational_people",
              "type" : "Page[]",
              "style" : "",
              "doc" : {
                "t" : "Facebook Pages representing inspirational people listed under the Likes section of this person's profile.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "installed",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "Is the app making the request installed?",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "is_verified",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "People with large numbers of followers can have the authenticity of their identity manually verified by Facebook. This field indicates whether the user profile is verified in this way.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "languages",
              "type" : "Page[]",
              "style" : "",
              "doc" : {
                "t" : "Facebook Pages representing the languages this person knows.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "last_name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The person's last name.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "link",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "A link to the person's profile.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "locale",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The person's locale.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "location",
              "type" : "Page",
              "style" : "",
              "doc" : {
                "t" : "The person's current location as entered by them on their profile. This is not a check in field.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "middle_name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The person's middle name.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The person's full name",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "name_format",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The person's name formatted to correctly handle Chinese, Japanese, Korean ordering",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "political",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The person's political views",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "quotes",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The person's favorite quotes",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "relationship_status",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The person's relationship status",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "religion",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The person's religion",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "significant_other",
              "type" : "User",
              "style" : "",
              "doc" : {
                "t" : "The person's significant other",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "third_party_id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "A string containing an anonymous, but unique identifier for this person. You can use this identifier with third-parties",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "username",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The person's username",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "verified",
              "type" : "bool",
              "style" : "",
              "doc" : {
                "t" : "Indicates whether the user account has been verified. This is distinct from the is_verified field. Someone is considered verified if they take any of the following actions: Register for mobile Confirm their account via SMS   Enter a valid credit card ",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "website",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The person's website",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "work",
              "type" : "object[]",
              "style" : "",
              "doc" : {
                "t" : "The periods of a person's employment history.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "employer",
              "type" : "Page",
              "style" : "",
              "doc" : {
                "t" : "The Facebook Page that represents the employer in this period.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "location",
              "type" : "Page",
              "style" : "",
              "doc" : {
                "t" : "The Facebook Page representing the location of this employment.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "position",
              "type" : "Page",
              "style" : "",
              "doc" : {
                "t" : "The Facebook Page that represents the position that was held.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "start_date",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "When the employment period started.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "end_date",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "When the employment period ended. Not returned if employment is still current.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "projects",
              "type" : "object[]",
              "style" : "",
              "doc" : {
                "t" : "Each of the projects this person was involved in during this employment period. Each project is presented by a Facebook Page with additional fields shown below.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "with",
              "type" : "User[]",
              "style" : "",
              "doc" : {
                "t" : "A list of people involved with this project.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "description",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The description given to this project.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "start_date",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "When the project started.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            },
            {
              "name" : "end_date",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "When the project ended. Not returned if project is still ongoing.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/user/"
              }
            }
          ],
          "url" : "https://graph.facebook.com/me"
        },
        {
          "doc" : {
            "t" : "GET /{achievement-id} \"/{achievement-id}\" ); FB.api(     \"/{achievement-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{achievement-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{achievement-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{achievement-id}"
          },
          "displayName" : "/{achievement-id}",
          "path" : "/{achievement-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/achievement",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/achievement"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "ID of this particular achievement.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/achievement"
              }
            },
            {
              "name" : "from",
              "type" : "User",
              "style" : "",
              "doc" : {
                "t" : "The user who achieved this.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/achievement"
              }
            },
            {
              "name" : "publish_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "Time at which this was achieved.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/achievement"
              }
            },
            {
              "name" : "application",
              "type" : "App",
              "style" : "",
              "doc" : {
                "t" : "The app in which the user achieved this.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/achievement"
              }
            },
            {
              "name" : "data",
              "type" : "object",
              "style" : "",
              "doc" : {
                "t" : "Information about the achievement type this instance is connected with.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/achievement"
              }
            },
            {
              "name" : "achievement",
              "type" : "AchievementType",
              "style" : "",
              "doc" : {
                "t" : "The achievement type that the user achieved.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/achievement"
              }
            },
            {
              "name" : "importance",
              "type" : "int",
              "style" : "",
              "doc" : {
                "t" : "A weighting given to each achievement type by the app.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/achievement"
              }
            },
            {
              "name" : "type",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "Always game.achievement.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/achievement"
              }
            },
            {
              "name" : "no_feed_story",
              "type" : "boolean",
              "style" : "",
              "doc" : {
                "t" : "Indicates whether gaining the achievement published a feed story for the user.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/achievement"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{achievement-id}"
        },
        {
          "doc" : {
            "t" : "GET /{album-id} \"/{album-id}\" ); FB.api(     \"/{album-id}\",     function (response) {       if (response && !response.error) {         /* handle the result */       }     } );/* make the API call */ [FBRequestConnection startWithGraphPath:@\"/{album-id}\"                              parameters:nil                              HTTPMethod:@\"GET\"                       completionHandler:^(                           FBRequestConnection *connection,                           id result,                           NSError *error                       ) {                           /* handle the result */                       }];/* make the API call */ new Request(     session,     \"/{album-id}\",     null,     HttpMethod.GET,     new Request.Callback() {         public void onCompleted(Response response) {             /* handle the result */         }     } ).executeAsync();curl https://graph.facebook.com/{album-id}"
          },
          "displayName" : "/{album-id}",
          "path" : "/{album-id}",
          "fullURL" : "https://developers.facebook.com/docs/graph-api/reference/album",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "",
              "type" : "",
              "style" : "",
              "doc" : {
                "t" : "",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/album"
              }
            },
            {
              "name" : "id",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The album ID.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/album"
              }
            },
            {
              "name" : "can_upload",
              "type" : "boolean",
              "style" : "",
              "doc" : {
                "t" : "Whether the viewer can upload photos to this album.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/album"
              }
            },
            {
              "name" : "count",
              "type" : "int",
              "style" : "",
              "doc" : {
                "t" : "Number of photos in this album.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/album"
              }
            },
            {
              "name" : "cover_photo",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The ID of the album's cover photo.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/album"
              }
            },
            {
              "name" : "created_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The time the album was initially created.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/album"
              }
            },
            {
              "name" : "description",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The description of the album.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/album"
              }
            },
            {
              "name" : "from",
              "type" : "User",
              "style" : "",
              "doc" : {
                "t" : "The profile that created the album.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/album"
              }
            },
            {
              "name" : "link",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "A link to this album on Facebook.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/album"
              }
            },
            {
              "name" : "location",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The textual location of the album.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/album"
              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The title of the album.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/album"
              }
            },
            {
              "name" : "place",
              "type" : "Page",
              "style" : "",
              "doc" : {
                "t" : "The place associated with this album.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/album"
              }
            },
            {
              "name" : "privacy",
              "type" : "string",
              "style" : "",
              "doc" : {
                "t" : "The privacy settings for the album.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/album"
              }
            },
            {
              "name" : "type",
              "type" : "enum{profile, mobile, wall, normal, album}",
              "style" : "",
              "doc" : {
                "t" : "The type of the album.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/album"
              }
            },
            {
              "name" : "updated_time",
              "type" : "datetime",
              "style" : "",
              "doc" : {
                "t" : "The last time the album was updated.",
                "url" : "https://developers.facebook.com/docs/graph-api/reference/album"
              }
            }
          ],
          "url" : "https://graph.facebook.com/{album-id}"
        },
        {
          "params" : [ ],
          "httpMethod" : "GET",
          "path" : "/{user-id}/feed",
          "displayName" : "/{user-id}/feed",
          "doc" : {
            "t" : "GET /{user-id}/feed",
            "url" : "https://developers.facebook.com/docs/graph-api/reference/v2.0/user/feed"
          },
          "url" : "https://graph.facebook.com/{user-id}/feed"
        },
        {
          "params" : [ ],
          "httpMethod" : "GET",
          "path" : "/me/feed",
          "displayName" : "/me/feed",
          "doc" : {
            "t" : "GET /me/feed",
            "url" : "https://developers.facebook.com/docs/graph-api/reference/v2.0/user/feed"
          },
          "url" : "https://graph.facebook.com/me/feed"
        },
        {
          "params" : [
            {
              "doc" : {
                "url" : "https://developers.facebook.com/docs/graph-api/reference/v2.0/user/feed"
              },
              "required" : false,
              "style" : "body",
              "type" : "string",
              "name" : "message"
            },
            {
              "doc" : {
                "url" : "https://developers.facebook.com/docs/graph-api/reference/v2.0/user/feed"
              },
              "required" : false,
              "style" : "body",
              "type" : "string",
              "name" : "link"
            }
          ],
          "httpMethod" : "POST",
          "path" : "/me/feed",
          "displayName" : "/me/feed",
          "doc" : {
            "t" : "POST /me/feed",
            "url" : "https://developers.facebook.com/docs/graph-api/reference/v2.0/user/feed"
          },
          "url" : "https://graph.facebook.com/me/feed"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "documentation" : "https://developers.facebook.com/docs/graph-api/reference/",
    "enabled" : true,
    "logo" : "http://appshopper.com/blog/wp-content/uploads/2010/08/facebook-icon-150x148.png",
    "name" : "Facebook",
    "oauth" : {
      "accessTokenURL" : "https://graph.facebook.com/oauth/access_token",
      "apiKey" : "",
      "authTokenPath" : "/dialog/oauth",
      "authTokenURL" : "https://www.facebook.com/dialog/oauth",
      "baseURL" : "https://www.facebook.com",
      "clientId" : "125271024334065",
      "grant_type" : "",
      "host" : "www.facebook.com",
      "isManual" : true,
      "protocol" : "https",
      "requestTokenURL" : "",
      "scope" : "publish_stream,offline_access,manage_pages,publish_actions",
      "secret" : "999a5e310b8934a3dd0bdc37c87f39a1",
      "tokenMethod" : "access_token_query",
      "useOAuthLib" : false,
      "version" : "2.0"
    },
    "useCustom" : true,
    "type" : "channel:facebook"
  },
  {
    "_id" : "533987f06d8a28a6ca8ff923",
    "application" : {
      "base" : "https://api.smartsheet.com/1.1",
      "resources" : [
        {
          "curl" : "curl https://api.smartsheet.com/1.1/home?include=templates -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "List All Contents",
          "path" : "/home",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/home"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/workspaces -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "List All Workspaces",
          "path" : "/workspaces",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/workspaces"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/workspace/{workspaceid} -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Workspace",
          "path" : "/workspace/{workspaceid}",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/workspace/{workspaceid}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/workspaces -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"name\": \"New workspace\"}'",
          "displayName" : "Create Workspace",
          "path" : "/workspaces",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "name (string)",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/workspaces"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/workspace/7960873114331012 -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X PUT -d '{\"name\": \"Updated workspace\"}'",
          "displayName" : "Update Workspace",
          "path" : "/workspace/{id}",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "name (string)",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/workspace/{id}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/workspace/7960873114331012 -H \"Authorization: Bearer ACCESS_TOKEN\" -X DELETE",
          "displayName" : "Delete Workspace",
          "path" : "/workspace/{id}",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/workspace/{id}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/folder/{folderId} -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Folder",
          "path" : "/folder/{folderId}",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/folder/{folderId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/folder/{folderId} -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X PUT -d '{\"name\": \"New name for folder\"}'",
          "displayName" : "Update Folder",
          "path" : "/folder/{folderId}",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "name",
              "required" : true,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/folder/{folderId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/folder/{folderId} -H \"Authorization: Bearer ACCESS_TOKEN\" -X DELETE",
          "displayName" : "Delete Folder",
          "path" : "/folder/{folderId}",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/folder/{folderId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/home/folders -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\"",
          "displayName" : "List Child Folders",
          "path" : "/home/folders",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/home/folders"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/home/folders -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\"",
          "displayName" : "List Child Folders",
          "path" : "/workspace/{workspaceId}/folders",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/workspace/{workspaceId}/folders"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/home/folders -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\"",
          "displayName" : "List Child Folders",
          "path" : "/folder/{folderId}/folders",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/folder/{folderId}/folders"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/home/folders -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"name\": \"New folder\"}'",
          "displayName" : "Create Child Folder",
          "path" : "/home/folders",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "name",
              "required" : true,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/home/folders"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/home/folders -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"name\": \"New folder\"}'",
          "displayName" : "Create Child Folder",
          "path" : "/workspace/{workspaceId}/folders",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "name",
              "required" : true,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/workspace/{workspaceId}/folders"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/home/folders -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"name\": \"New folder\"}'",
          "displayName" : "Create Child Folder",
          "path" : "/folder/{folderId}/folders",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "name",
              "required" : true,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/folder/{folderId}/folders"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/templates -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "List All Templates",
          "path" : "/templates",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/templates"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheets -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "List All Sheets",
          "path" : "/sheets",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/sheets"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId} -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Sheet (incl. Rows)",
          "path" : "/sheet/{sheetId}",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "include",
              "required" : false,
              "style" : "query",
              "doc" : {
                "t" : "Comma separated list of optional objects to include in the response:discussionsattachmentsTo include discussion attachments, both attachments and discussions parameters must be present in the query string."
              }
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}"
        },
        {
          "curl" : "",
          "displayName" : "Get as Excel/PDF",
          "path" : "/sheet/{sheetId}",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "paperSize ",
              "required" : false,
              "style" : "query",
              "doc" : {
                "t" : "query string parameter, applies to PDF only, must be one of:LETTER (default)LEGAL WIDE (Same as 11x17)ARCHDA4A3A2A1A0"
              }
            },
            {
              "name" : "Accept",
              "required" : true,
              "style" : "query",
              "doc" : {
                "t" : "Must be either \"application/pdf\" or \"application/vnd.ms-excel\""
              }
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheets -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"name\":\"newsheet\",\"columns\":[{\"title\":\"Favorite\",\"type\":\"CHECKBOX\",\"symbol\":\"STAR\"}, {\"title\":\"Primary Column\", \"primary\":true,\"type\":\"TEXT_NUMBER\"}, {\"title\":\"Status\", \"type\":\"PICKLIST\", \"options\":[\"Not Started\",\"Started\",\"Completed\"]}]}'",
          "displayName" : "Create Sheet",
          "path" : "/sheets",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "name",
              "required" : true,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/sheets"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheets -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"name\":\"newsheet\",\"columns\":[{\"title\":\"Favorite\",\"type\":\"CHECKBOX\",\"symbol\":\"STAR\"}, {\"title\":\"Primary Column\", \"primary\":true,\"type\":\"TEXT_NUMBER\"}, {\"title\":\"Status\", \"type\":\"PICKLIST\", \"options\":[\"Not Started\",\"Started\",\"Completed\"]}]}'",
          "displayName" : "Create Sheet",
          "path" : "/folder/{folderId}/sheets",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "name",
              "required" : true,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/folder/{folderId}/sheets"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheets -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"name\":\"newsheet\",\"columns\":[{\"title\":\"Favorite\",\"type\":\"CHECKBOX\",\"symbol\":\"STAR\"}, {\"title\":\"Primary Column\", \"primary\":true,\"type\":\"TEXT_NUMBER\"}, {\"title\":\"Status\", \"type\":\"PICKLIST\", \"options\":[\"Not Started\",\"Started\",\"Completed\"]}]}'",
          "displayName" : "Create Sheet",
          "path" : "/workspace/{workspaceId}/sheets",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "name",
              "required" : true,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/workspace/{workspaceId}/sheets"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheets?include=data,attachments,discussions -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"name\":\"newsheet\", \"fromId\": 7679398137620356}'",
          "displayName" : "Create from Sheet or Template",
          "path" : "/sheets",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "name",
              "required" : false,
              "style" : "body"
            },
            {
              "name" : "include    ",
              "required" : false,
              "style" : "query",
              "doc" : {
                "t" : "Comma separated list of the following optional elements to be copied from the template to the sheet :dataattachments discussions"
              }
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/sheets"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheets?include=data,attachments,discussions -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"name\":\"newsheet\", \"fromId\": 7679398137620356}'",
          "displayName" : "Create from Sheet or Template",
          "path" : "/folder/{folderId}/sheets",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "name",
              "required" : false,
              "style" : "body"
            },
            {
              "name" : "include    ",
              "required" : false,
              "style" : "query",
              "doc" : {
                "t" : "Comma separated list of the following optional elements to be copied from the template to the sheet :dataattachments discussions"
              }
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/folder/{folderId}/sheets"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheets?include=data,attachments,discussions -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"name\":\"newsheet\", \"fromId\": 7679398137620356}'",
          "displayName" : "Create from Sheet or Template",
          "path" : "/workspace/{workspaceId}/sheets",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "name",
              "required" : false,
              "style" : "body"
            },
            {
              "name" : "include    ",
              "required" : false,
              "style" : "query",
              "doc" : {
                "t" : "Comma separated list of the following optional elements to be copied from the template to the sheet :dataattachments discussions"
              }
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/workspace/{workspaceId}/sheets"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId} -H \"Authorization: Bearer ACCESS_TOKEN\" -X DELETE",
          "displayName" : "Delete Sheet",
          "path" : "/sheet/{sheetId}",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId} -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"name\":\"New Sheet Name\"}'",
          "displayName" : "Update Sheet",
          "path" : "/sheet/{sheetId}",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "name",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/version -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Sheet Version",
          "path" : "/sheet/{sheetId}/version",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/version"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/emails -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"to\" : [\"john.doe@smartsheet.com\", \"jane.doe@smartsheet.com\"], \"subject\" : \"Check these rows out!\", \"message\": \"Here are the rows I mentioned in our meeting\",\"ccMe\":false,\"format\":\"PDF\",\"formatDetails\":{\"paperSize\":\"A4\"}}'",
          "displayName" : "Send Sheet",
          "path" : "/sheet/{sheetId}/emails",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/emails"
        },
        {
          "curl" : "",
          "displayName" : "Get Columns",
          "path" : "/sheet/{sheetId}/columns",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/columns"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/columns -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"title\":\"Status\", \"type\":\"PICKLIST\", \"options\":[\"Not Started\",\"Started\",\"Completed\"], \"index\":1}'",
          "displayName" : "Add Column to Sheet",
          "path" : "/sheet/{sheetId}/columns",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "title",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/columns"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/rows -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"toTop\":true, \"rows\":[ {\"cells\": [ {\"columnId\": 7960873114331012, \"value\": true}, {\"columnId\": 642523719853956, \"value\": \"New status\", \"strict\": false} ] }, {\"cells\": [ {\"columnId\": 7960873114331012, \"value\": true}, {\"columnId\": 642523719853956, \"value\": \"New status\", \"strict\": false} ] } ] }'",
          "displayName" : "Insert Rows into Sheet",
          "path" : "/sheet/{sheetId}/rows",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "toTop",
              "required" : true,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/rows"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/row/{rowNumber} -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Row by Number",
          "path" : "/sheet/{sheetId}/row/{rowNumber}",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/row/{rowNumber}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/attachments -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Sheet Attachments",
          "path" : "/sheet/{sheetId}/attachments",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/attachments"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/publish -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Publish Status",
          "path" : "/sheet/{sheetId}/publish",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/publish"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/publish -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X PUT -d '{\"readOnlyLiteEnabled\": true,\"readOnlyFullEnabled\": false,\"readWriteEnabled\": false,\"icalEnabled\": false}'",
          "displayName" : "Set Publish Status",
          "path" : "/sheet/{sheetId}/publish",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "readOnlyLiteEnabled",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/publish"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/column/{columnId} -H \"Authorization: Bearer ACCESS_TOKEN\" -X PUT -d '{\"title\":\"First Column\",\"index\":0, \"sheetId\":SHEET_ID, \"type\" : \"PICKLIST\", \"options\" :[\"One\",\"Two\"]}'",
          "displayName" : "Modify Column",
          "path" : "/column/{columnId}",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "index (column's new index in the sheet)",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/column/{columnId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/column/{columnId} -H \"Authorization: Bearer ACCESS_TOKEN\" -X DELETE",
          "displayName" : "Delete Column",
          "path" : "/column/{columnId}",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/column/{columnId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/row/{rowId}?include=discussions,attachments,columns -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Row",
          "path" : "/row/{rowId}",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "include",
              "required" : true,
              "style" : "query",
              "doc" : {
                "t" : "Comma separated list of optional objects to include in the row:discussionsattachmentscolumnsTo include discussion attachments, both attachments and discussions parameters must be present in the query string.Including the columns will provide all of the columns for the sheet. This enables you to have the full context of the cells in the row."
              }
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/row/{rowId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/row/{rowId} -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X PUT -d '{\"parentId\": PARENT_ROW_ID, \"expanded\": true}'",
          "displayName" : "Modify Row",
          "path" : "/row/{rowId}",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "toTop",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/row/{rowId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/row/{rowId} -H \"Authorization: Bearer ACCESS_TOKEN\" -X DELETE",
          "displayName" : "Delete Row",
          "path" : "/row/{rowId}",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/row/{rowId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/row/{rowId}/emails -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"to\" : [\"john.doe@smartsheet.com\", \"jane.doe@smartsheet.com\"], \"subject\" : \"Check this row out!\", \"message\": \"Here are the rows I mentioned in our meeting\", \"ccMe\" : false, \"includeAttachments\" : false, \"includeDiscussions\" : true}'",
          "displayName" : "Send Row",
          "path" : "/row/{rowId}/emails",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/row/{rowId}/emails"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/row/{rowId}/cells -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X PUT -d '[ {\"columnId\": 3738748463671172, \"value\": \"Revision 2\"}, {\"columnId\": 5427598323935108, \"value\": \"On Time\", \"strict\": false} ]'",
          "displayName" : "Update Row Cells",
          "path" : "/row/{rowId}/cells",
          "httpMethod" : "PUT",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/row/{rowId}/cells"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/row/{rowId}/column/{columnId}/history -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Cell History",
          "path" : "/row/{rowId}/column/{columnId}/history",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/row/{rowId}/column/{columnId}/history"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/row/{rowId}/attachments -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Row Attachments",
          "path" : "/row/{rowId}/attachments",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/row/{rowId}/attachments"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/attachment/{attachmentId} -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Attachment",
          "path" : "/attachment/{attachmentId}",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/attachment/{attachmentId}"
        },
        {
          "curl" : "",
          "displayName" : "Attach File",
          "path" : "/sheet/{sheetId}/attachments",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/attachments"
        },
        {
          "curl" : "",
          "displayName" : "Attach File",
          "path" : "/row/{rowId}/attachments",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/row/{rowId}/attachments"
        },
        {
          "curl" : "",
          "displayName" : "Attach File",
          "path" : "/comment/{commentId}/attachments",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/comment/{commentId}/attachments"
        },
        {
          "curl" : "",
          "displayName" : "Attach URL",
          "path" : "/sheet/{sheetId}/attachments",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "name",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/attachments"
        },
        {
          "curl" : "",
          "displayName" : "Attach URL",
          "path" : "/row/{rowId}/attachments",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "name",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/row/{rowId}/attachments"
        },
        {
          "curl" : "",
          "displayName" : "Attach URL",
          "path" : "/comment/{commentId}/attachments",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "name",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/comment/{commentId}/attachments"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/attachment/{attachmentId} -H \"Authorization: Bearer ACCESS_TOKEN\" -X DELETE",
          "displayName" : "Delete Attachment",
          "path" : "/attachment/{attachmentId}",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/attachment/{attachmentId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/discussion/{discussionId} -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Discussion",
          "path" : "/discussion/{discussionId}",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/discussion/{discussionId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/discussions -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"title\": \"This is a new discussion\", \"comment\": {\"text\":\"This text is the body of the first comment\"}}'",
          "displayName" : "Create Discussion",
          "path" : "/sheet/{sheetId}/discussions",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "title (string)",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/discussions"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/discussions -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"title\": \"This is a new discussion\", \"comment\": {\"text\":\"This text is the body of the first comment\"}}'",
          "displayName" : "Create Discussion",
          "path" : "/row/{rowId}/discussions",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "title (string)",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/row/{rowId}/discussions"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/discussion/{discussionId}/comments -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"text\":\"This is a new comment.\"}'",
          "displayName" : "Add Comment",
          "path" : "/discussion/{discussionId}/comments",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "text",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/discussion/{discussionId}/comments"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/discussion/{discussionId}/attachments -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Discussion Attachments",
          "path" : "/discussion/{discussionId}/attachments",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/discussion/{discussionId}/attachments"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/comment/{id} -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Comment",
          "path" : "/comment/{commentId}",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/comment/{commentId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/comment/{commentId} -H \"Authorization: Bearer ACCESS_TOKEN\"-X 'DELETE'",
          "displayName" : "Delete Comment",
          "path" : "/comment/{commentId}",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/comment/{commentId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/users -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "List All Users",
          "path" : "/users",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/users"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/users?sendEmail=true -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"firstName\": \"John\", \"lastName\": \"Doe\", \"email\": \"NEW_USER_EMAIL\", \"admin\": false, \"licensedSheetCreator\": true}'",
          "displayName" : "Add User",
          "path" : "/users",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "sendEmail",
              "required" : false,
              "style" : "query",
              "doc" : {
                "t" : "A boolean flag to indicate whether to send a welcome email or not. Defaults to false."
              }
            },
            {
              "name" : "email (required)",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/users"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/user/me -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Current User",
          "path" : "/user/me",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/user/me"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/user/{userId} -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X PUT -d '{\"admin\": false, \"licensedSheetCreator\": true}'",
          "displayName" : "Update User",
          "path" : "/user/{userIId}",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "admin (boolean)",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/user/{userIId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/user/{userId}?transferTo=USER_ID&removeFromSharing=true -H \"Authorization: Bearer ACCESS_TOKEN\" -X DELETE",
          "displayName" : "Delete User",
          "path" : "/user/{userId}",
          "httpMethod" : "DELETE",
          "params" : [
            {
              "name" : "transferTo    ",
              "required" : false,
              "style" : "query",
              "doc" : {
                "t" : "The ID of the user to whom the sheets should be transferred.  Defaults to not transferring the sheets."
              }
            },
            {
              "name" : "removeFromSharing    ",
              "required" : false,
              "style" : "query",
              "doc" : {
                "t" : "Set to \"true\" to remove the user from sharing all sheets/workspaces in the organization. Defaults to false."
              }
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/user/{userId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/users/sheets -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "List All Sheets",
          "path" : "/users/sheets",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/users/sheets"
        },
        {
          "curl" : "",
          "displayName" : "Search Sheet",
          "path" : "/search/sheet/{sheetId}",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "query",
              "required" : true,
              "style" : "query",
              "doc" : {
                "t" : "Text with which to perform the search."
              }
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/search/sheet/{sheetId}"
        },
        {
          "curl" : "",
          "displayName" : "Search Everything",
          "path" : "/search",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "query",
              "required" : true,
              "style" : "query",
              "doc" : {
                "t" : "Text with which to perform the search."
              }
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/search"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/shares -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Shares",
          "path" : "/sheet/{sheetId}/shares",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/shares"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/shares -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Shares",
          "path" : "/workspace/{workspaceId}/shares",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/workspace/{workspaceId}/shares"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/share/{userId} -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Share",
          "path" : "/sheet/{sheetId}/share/{userId}",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/share/{userId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/share/{userId} -H \"Authorization: Bearer ACCESS_TOKEN\"",
          "displayName" : "Get Share",
          "path" : "/workspace/{workspaceId}/share/{userId}",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/workspace/{workspaceId}/share/{userId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/shares?sendEmail=true -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"email\":\"jane.doe@smartsheet.com\", \"accessLevel\": \"EDITOR\"}'",
          "displayName" : "Share to One",
          "path" : "/sheet/{sheetId}/shares",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "email (string)",
              "required" : false,
              "style" : "body"
            },
            {
              "name" : "sendEmail    ",
              "required" : false,
              "style" : "query",
              "doc" : {
                "t" : "Either \"true\" or \"false\" to  indicate whether or not to notify the user by email. Default is false."
              }
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/shares"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/shares?sendEmail=true -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"email\":\"jane.doe@smartsheet.com\", \"accessLevel\": \"EDITOR\"}'",
          "displayName" : "Share to One",
          "path" : "/workspace/{workspaceId}/shares",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "email (string)",
              "required" : false,
              "style" : "body"
            },
            {
              "name" : "sendEmail    ",
              "required" : false,
              "style" : "query",
              "doc" : {
                "t" : "Either \"true\" or \"false\" to  indicate whether or not to notify the user by email. Default is false."
              }
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/workspace/{workspaceId}/shares"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/multishare?sendEmail=true -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"users\":[{\"email\":\"john.doe@smartsheet.com\"},{\"email\":\"jane.doe@smartsheet.com\"}],\"subject\":\"My new Smartsheet\",\"message\":\"I have shared a Smartsheet with you. Please review it for the latest updates\", \"accessLevel\":\"ADMIN\",\"ccMe\":false}'",
          "displayName" : "Share to Many",
          "path" : "/sheet/{sheetId}/multishare",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "sendEmail    ",
              "required" : false,
              "style" : "query",
              "doc" : {
                "t" : "Either \"true\" or \"false\" to  indicate whether or not to notify the user by email. Default is false."
              }
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/multishare"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/multishare?sendEmail=true -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X POST -d '{\"users\":[{\"email\":\"john.doe@smartsheet.com\"},{\"email\":\"jane.doe@smartsheet.com\"}],\"subject\":\"My new Smartsheet\",\"message\":\"I have shared a Smartsheet with you. Please review it for the latest updates\", \"accessLevel\":\"ADMIN\",\"ccMe\":false}'",
          "displayName" : "Share to Many",
          "path" : "/workspace/{workspaceId}/multishare",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "sendEmail    ",
              "required" : false,
              "style" : "query",
              "doc" : {
                "t" : "Either \"true\" or \"false\" to  indicate whether or not to notify the user by email. Default is false."
              }
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/workspace/{workspaceId}/multishare"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/share/{userId} -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X PUT -d '{\"accessLevel\": \"VIEWER\"}'",
          "displayName" : "Update Share",
          "path" : "/sheet/{sheetId}/share/{userId}",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "accessLevel (string)",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/share/{userId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/share/{userId} -H \"Authorization: Bearer ACCESS_TOKEN\" -H \"Content-Type: application/json\" -X PUT -d '{\"accessLevel\": \"VIEWER\"}'",
          "displayName" : "Update Share",
          "path" : "/workspace/{workspaceId}/share/{userId}",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "accessLevel (string)",
              "required" : false,
              "style" : "body"
            }
          ],
          "url" : "https://api.smartsheet.com/1.1/workspace/{workspaceId}/share/{userId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/share/{userId} -H \"Authorization: Bearer ACCESS_TOKEN\" -X DELETE",
          "displayName" : "Delete Share",
          "path" : "/sheet/{sheetId}/share/{userId}",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/sheet/{sheetId}/share/{userId}"
        },
        {
          "curl" : "curl https://api.smartsheet.com/1.1/sheet/{sheetId}/share/{userId} -H \"Authorization: Bearer ACCESS_TOKEN\" -X DELETE",
          "displayName" : "Delete Share",
          "path" : "/workspace/{workspaceId}/share/{userId}",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "url" : "https://api.smartsheet.com/1.1/workspace/{workspaceId}/share/{userId}"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "documentation" : "http://www.smartsheet.com/developers/api-documentation",
    "enabled" : true,
    "logo" : "http://media-cache-ec0.pinimg.com/avatars/smartsheet_1355263281_140.jpg",
    "name" : "Smartsheet",
    "oauth" : {
      "accessTokenURL" : "https://api.smartsheet.com/1.1/token",
      "apiKey" : "",
      "authTokenPath" : "/b/authorize",
      "authTokenURL" : "https://www.smartsheet.com/b/authorize",
      "baseURL" : "https://www.smartsheet.com",
      "clientId" : "1uicos1cvzm64rpf0kp",
      "grant_type" : "authorization_code",
      "host" : "www.smartsheet.com",
      "isManual" : true,
      "protocol" : "https",
      "requestTokenURL" : "",
      "scope" : "READ_SHEETS,WRITE_SHEETS,SHARE_SHEETS,DELETE_SHEETS,CREATE_SHEETS,ADMIN_USERS,ADMIN_SHEETS,ADMIN_WORKSPACES",
      "secret" : "29kbwcoggrbkglpfiw",
      "tokenMethod" : "bearer",
      "useOAuthLib" : false,
      "version" : "2.0"
    },
    "useCustom" : true,
    "type" : "channel:smartsheet"
  },
  {
    "_id" : "537d58762699fc4331e85167",
    "application" : {
      "base" : "https://api.sandbox.paypal.com",
      "resources" : [
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#list-payment-resources"
          },
          "curl" : "",
          "httpMethod" : "GET",
          "displayName" : "/v1/payments/payment",
          "path" : "/v1/payments/payment",
          "url" : "https://api.sandbox.paypal.com/v1/payments/payment"
        },
        {
          "params" : [
            {
              "name" : "intent",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "payer",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "transactions",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "redirect_urls",
              "type" : "string",
              "style" : "body",
              "required" : false
            }
          ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#create-a-payment"
          },
          "curl" : "",
          "httpMethod" : "POST",
          "displayName" : "/v1/payments/payment",
          "path" : "/v1/payments/payment",
          "url" : "https://api.sandbox.paypal.com/v1/payments/payment"
        },
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#look-up-a-payment-resource"
          },
          "curl" : "",
          "httpMethod" : "GET",
          "displayName" : "/v1/payments/payment/{paymentId}",
          "path" : "/v1/payments/payment/{paymentId}",
          "url" : "https://api.sandbox.paypal.com/v1/payments/payment/{paymentId}"
        },
        {
          "params" : [
            {
              "name" : "payer_id",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "transactions",
              "type" : "string",
              "style" : "body",
              "required" : false
            }
          ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#execute-an-approved-paypal-payment\t"
          },
          "curl" : "",
          "httpMethod" : "POST",
          "displayName" : "/v1/payments/payment/{paymentId}/execute",
          "path" : "/v1/payments/payment/{paymentId}/execute",
          "url" : "https://api.sandbox.paypal.com/v1/payments/payment/{paymentId}/execute"
        },
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#look-up-a-sale"
          },
          "curl" : "",
          "httpMethod" : "GET",
          "displayName" : "/v1/payments/sale/{transactionId}",
          "path" : "/v1/payments/sale/{transactionId}",
          "url" : "https://api.sandbox.paypal.com/v1/payments/sale/{transactionId}"
        },
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#refund-a-sale"
          },
          "curl" : "",
          "httpMethod" : "POST",
          "displayName" : "/v1/payments/sale/{transactionId}/refund",
          "path" : "/v1/payments/sale/{transactionId}/refund",
          "url" : "https://api.sandbox.paypal.com/v1/payments/sale/{transactionId}/refund"
        },
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#look-up-a-refund"
          },
          "curl" : "",
          "httpMethod" : "GET",
          "displayName" : "/v1/payments/refund/{refundId}",
          "path" : "/v1/payments/refund/{refundId}",
          "url" : "https://api.sandbox.paypal.com/v1/payments/refund/{refundId}"
        },
        {
          "params" : [
            {
              "name" : "amount",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "is_final_capture",
              "type" : "boolean",
              "style" : "body",
              "required" : false
            }
          ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#look-up-an-authorization"
          },
          "curl" : "",
          "httpMethod" : "GET",
          "displayName" : "/v1/payments/authorization/{authorizationId}",
          "path" : "/v1/payments/authorization/{authorizationId}",
          "url" : "https://api.sandbox.paypal.com/v1/payments/authorization/{authorizationId}"
        },
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#capture-an-authorization"
          },
          "curl" : "",
          "httpMethod" : "POST",
          "displayName" : "/v1/payments/authorization/{authorizationId}/capture",
          "path" : "/v1/payments/authorization/{authorizationId}/capture",
          "url" : "https://api.sandbox.paypal.com/v1/payments/authorization/{authorizationId}/capture"
        },
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#void-an-authorization"
          },
          "curl" : "",
          "httpMethod" : "POST",
          "displayName" : "/v1/payments/authorization/{authorizationId}/void",
          "path" : "/v1/payments/authorization/{authorizationId}/void",
          "url" : "https://api.sandbox.paypal.com/v1/payments/authorization/{authorizationId}/void"
        },
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#reauthorize-a-payment"
          },
          "curl" : "",
          "httpMethod" : "POST",
          "displayName" : "/v1/payments/authorization/{authorizationId}/reauthorize",
          "path" : "/v1/payments/authorization/{authorizationId}/reauthorize",
          "url" : "https://api.sandbox.paypal.com/v1/payments/authorization/{authorizationId}/reauthorize"
        },
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#look-up-a-captured-payment"
          },
          "curl" : "",
          "httpMethod" : "GET",
          "displayName" : "/v1/payments/capture/{captureId}",
          "path" : "/v1/payments/capture/{captureId}",
          "url" : "https://api.sandbox.paypal.com/v1/payments/capture/{captureId}"
        },
        {
          "params" : [
            {
              "name" : "amount",
              "type" : "string",
              "style" : "body",
              "required" : true
            }
          ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#refund-a-captured-payment"
          },
          "curl" : "",
          "httpMethod" : "POST",
          "displayName" : "/v1/payments/capture/{captureId}/refund",
          "path" : "/v1/payments/capture/{captureId}/refund",
          "url" : "https://api.sandbox.paypal.com/v1/payments/capture/{captureId}/refund"
        },
        {
          "params" : [
            {
              "name" : "number",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "type",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "expire_month",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "expire_year",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "payer_id",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "cvv2",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "first_name",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "last_name",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "billing_address",
              "type" : "string",
              "style" : "body",
              "required" : true
            }
          ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#store-a-credit-card"
          },
          "curl" : "",
          "httpMethod" : "POST",
          "displayName" : "/v1/vault/credit-card",
          "path" : "/v1/vault/credit-card",
          "url" : "https://api.sandbox.paypal.com/v1/vault/credit-card"
        },
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#delete-a-stored-credit-card"
          },
          "curl" : "",
          "httpMethod" : "DELETE",
          "displayName" : "/v1/vault/credit-card/{creditCardId}",
          "path" : "/v1/vault/credit-card/{creditCardId}",
          "url" : "https://api.sandbox.paypal.com/v1/vault/credit-card/{creditCardId}"
        },
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#look-up-a-stored-credit-card"
          },
          "curl" : "",
          "httpMethod" : "GET",
          "displayName" : "/v1/vault/credit-card/{creditCardId}",
          "path" : "/v1/vault/credit-card/{creditCardId}",
          "url" : "https://api.sandbox.paypal.com/v1/vault/credit-card/{creditCardId}"
        },
        {
          "params" : [
            {
              "name" : "grant_type",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "code",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "redirect_url",
              "type" : "string",
              "style" : "body",
              "required" : true
            }
          ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#grant-token-from-authorization-code"
          },
          "curl" : "",
          "httpMethod" : "POST",
          "displayName" : "/v1/identity/openidconnect/tokenservice",
          "path" : "/v1/identity/openidconnect/tokenservice",
          "url" : "https://api.sandbox.paypal.com/v1/identity/openidconnect/tokenservice"
        },
        {
          "params" : [
            {
              "name" : "grant_type",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "refresh_token",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "scope",
              "type" : "string",
              "style" : "body",
              "required" : true
            }
          ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#grant-token-from-refresh-token"
          },
          "curl" : "",
          "httpMethod" : "POST",
          "displayName" : "/v1/identity/openidconnect/tokenservice",
          "path" : "/v1/identity/openidconnect/tokenservice",
          "url" : "https://api.sandbox.paypal.com/v1/identity/openidconnect/tokenservice"
        },
        {
          "params" : [
            {
              "name" : "",
              "type" : "string",
              "style" : "body"
            }
          ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#get-user-information"
          },
          "curl" : "",
          "httpMethod" : "GET",
          "displayName" : "/v1/identity/openidconnect/userinfo/?{schema}",
          "path" : "/v1/identity/openidconnect/userinfo/?{schema}",
          "url" : "https://api.sandbox.paypal.com/v1/identity/openidconnect/userinfo/?{schema}"
        },
        {
          "params" : [
            {
              "name" : "",
              "type" : "string",
              "style" : "body"
            }
          ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#get-invoices-of-a-merchant"
          },
          "curl" : "",
          "httpMethod" : "GET",
          "displayName" : "/v1/invoicing/invoices",
          "path" : "/v1/invoicing/invoices",
          "url" : "https://api.sandbox.paypal.com/v1/invoicing/invoices"
        },
        {
          "params" : [
            {
              "name" : "number",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "merchant_info",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "billing_info",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "shipping_info",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "items",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "invoice_date",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "payment_term",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "discount",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "shipping_cost",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "custom",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "tax_calculated_after_discount",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "tax_inclusive",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "terms",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "note",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "merchant_memo",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "logo_url",
              "type" : "string",
              "style" : "body",
              "required" : false
            }
          ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#create-an-invoice"
          },
          "curl" : "",
          "httpMethod" : "POST",
          "displayName" : "/v1/invoicing/invoices",
          "path" : "/v1/invoicing/invoices",
          "url" : "https://api.sandbox.paypal.com/v1/invoicing/invoices"
        },
        {
          "params" : [
            {
              "name" : "",
              "type" : "string",
              "style" : "body"
            }
          ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#retrieve-an-invoice"
          },
          "curl" : "",
          "httpMethod" : "GET",
          "displayName" : "/v1/invoicing/invoices/{invoiceId}",
          "path" : "/v1/invoicing/invoices/{invoiceId}",
          "url" : "https://api.sandbox.paypal.com/v1/invoicing/invoices/{invoiceId}"
        },
        {
          "params" : [
            {
              "name" : "number",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "merchant_info",
              "type" : "string",
              "style" : "body",
              "required" : true
            },
            {
              "name" : "billing_info",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "shipping_info",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "items",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "invoice_date",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "payment_term",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "discount",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "shipping_cost",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "custom",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "tax_calculated_after_discount",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "tax_inclusive",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "terms",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "note",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "merchant_memo",
              "type" : "string",
              "style" : "body",
              "required" : false
            },
            {
              "name" : "logo_url",
              "type" : "string",
              "style" : "body",
              "required" : false
            }
          ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#update-an-invoice"
          },
          "curl" : "",
          "httpMethod" : "PUT",
          "displayName" : "/v1/invoicing/invoices/{invoiceId}",
          "path" : "/v1/invoicing/invoices/{invoiceId}",
          "url" : "https://api.sandbox.paypal.com/v1/invoicing/invoices/{invoiceId}"
        },
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#delete-an-invoice"
          },
          "curl" : "",
          "httpMethod" : "DELETE",
          "displayName" : "/v1/invoicing/invoices/{invoiceId}",
          "path" : "/v1/invoicing/invoices/{invoiceId}",
          "url" : "https://api.sandbox.paypal.com/v1/invoicing/invoices/{invoiceId}"
        },
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#search-for-invoices"
          },
          "curl" : "",
          "httpMethod" : "POST",
          "displayName" : "/v1/invoicing/invoices?{query-string}",
          "path" : "/v1/invoicing/invoices?{query-string}",
          "url" : "https://api.sandbox.paypal.com/v1/invoicing/invoices?{query-string}"
        },
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#send-an-invoice"
          },
          "curl" : "",
          "httpMethod" : "POST",
          "displayName" : "/v1/invoicing/invoices/{invoiceId}/send",
          "path" : "/v1/invoicing/invoices/{invoiceId}/send",
          "url" : "https://api.sandbox.paypal.com/v1/invoicing/invoices/{invoiceId}/send"
        },
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#send-an-invoice-reminder"
          },
          "curl" : "",
          "httpMethod" : "POST",
          "displayName" : "/v1/invoicing/invoices/{invoiceId}/remind",
          "path" : "/v1/invoicing/invoices/{invoiceId}/remind",
          "url" : "https://api.sandbox.paypal.com/v1/invoicing/invoices/{invoiceId}/remind"
        },
        {
          "params" : [ ],
          "doc" : {
            "url" : "https://developer.paypal.com/webapps/developer/docs/api/#cancel-an-invoice"
          },
          "curl" : "",
          "httpMethod" : "POST",
          "displayName" : "/v1/invoicing/invoices/{invoiceId}/cancel",
          "path" : "/v1/invoicing/invoices/{invoiceId}/cancel",
          "url" : "https://api.sandbox.paypal.com/v1/invoicing/invoices/{invoiceId}/cancel"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "documentation" : "https://developer.paypal.com/webapps/developer/docs/api/",
    "enabled" : false,
    "logo" : "https://www.paypalobjects.com/webstatic/mktg/logo/pp_cc_mark_74x46.jpg",
    "name" : "Paypal",
    "oauth" : {
      "isManual" : true,
      "version" : "2.0",
      "clientId" : "Ae23kRDSdXJm5eLVgfVQotoZHx_-NLSV5EAo3851xadqORKPWgp7Vsh6mtp5",
      "secret" : "EL1KKRD12JZ49CCD12ZNiArARRO3taOAWN33NIRyhVM6PO90snC_Tlzea12P",
      "baseURL" : "https://www.sandbox.paypal.com",
      "accessTokenURL" : "https://api.sandbox.paypal.com/v1/oauth2/token",
      "requestTokenURL" : "https://api.sandbox.paypal.com/v1/oauth2/token",
      "authTokenURL" : "https://www.sandbox.paypal.com/webapps/auth/protocol/openidconnect/v1/authorize",
      "tokenMethod" : "",
      "authTokenPath" : "/webapps/auth/protocol/openidconnect/v1/authorize",
      "accessTokenIncludeClientInfo" : false,
      "grant_type" : "client_credentials",
      "scope" : "openid",
      "protocol" : "https",
      "host" : "www.sandbox.paypal.com",
      "passTokenInQuery" : false,
      "tokenQueryParam" : "",
      "useOAuthLib" : true
    },
    "useCustom" : true,
    "type" : "channel:paypal"
  },
  {
    "_id" : "53c459c7e6fab66e2180cc3f",
    "__v" : 0,
    "application" : {
      "base" : "https://www.triggerapp.com/api/v1/me",
      "resources" : [
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://www.triggerapp.com/developers/companies"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "Companies",
          "path" : "companies",
          "params" : [
            {
              "name" : "name",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "billable",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "address1",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "address2",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "city",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "state",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "phone",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "country",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "currency_symbol",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "custom_currency_symbol",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "task_rate",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.triggerapp.com/api/v1/mecompanies"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "companies",
          "displayName" : "Get companies",
          "httpMethod" : "GET",
          "url" : "https://www.triggerapp.com/api/v1/mecompanies"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "due_date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "billable"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "billable_type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "fixed_rate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "task_rate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "estimated_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "accessible_to_clients"
            }
          ],
          "path" : "companies/company_id/projects",
          "displayName" : "Projects",
          "httpMethod" : "POST",
          "url" : "https://www.triggerapp.com/api/v1/mecompanies/company_id/projects"
        },
        {
          "path" : "companies/company_id/projects/project_id",
          "displayName" : "Destroy an existing project",
          "httpMethod" : "DELETE",
          "url" : "https://www.triggerapp.com/api/v1/mecompanies/company_id/projects/project_id"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "project_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "tasks",
          "displayName" : "Tasks",
          "httpMethod" : "GET",
          "url" : "https://www.triggerapp.com/api/v1/metasks"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "title"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "assignee_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "priority"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "billable"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "hourly_rate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "flat_fee"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "recurring_type"
            }
          ],
          "path" : "tasks",
          "displayName" : "Post Tasks",
          "httpMethod" : "POST",
          "url" : "https://www.triggerapp.com/api/v1/metasks"
        }
      ]
    },
    "auth_strategy" : "basic",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://www.triggerapp.com/developers",
    "enabled" : true,
    "logo" : "",
    "name" : "triggerapp",
    "owner" : "01f45d00-0611-11e4-83bd-196bfd08cd39",
    "type" : "channel:triggerapp"
  },
  {
    "_id" : "53cd8a5ad3a4442658086a56",
    "__v" : 0,
    "application" : {
      "base" : "https://api.surveymonkey.net/v2",
      "resources" : [
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "header",
              "name" : "survey.template_id"
            },
            {
              "name" : "survey.from_survey_id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "survey.survey_title",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "collector.type",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "collector.name",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "collector.recipients[_].email",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "collector.recipients[_].first_name",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "collector.recipients[_].last_name",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "collector.recipients[_].custom_id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "collector.send",
              "style" : "header",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "email_message.reply_email",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "email_message.subject",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "email_message.body_text",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "path" : "/batch/create_flow",
          "displayName" : "Create Flow",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.surveymonkey.com/mashery/create_flow"
          },
          "httpMethod" : "POST",
          "url" : "https://api.surveymonkey.net/v2/batch/create_flow"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.surveymonkey.com/mashery/get_survey_list"
          },
          "authentication" : {

          },
          "displayName" : "get_survey_list",
          "path" : "/surveys/get_survey_list",
          "params" : [
            {
              "name" : "page",
              "style" : "header",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page_size",
              "style" : "header",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_date",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_date",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "title",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "recipient_email",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "order_asc",
              "style" : "header",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.surveymonkey.net/v2/surveys/get_survey_list"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.surveymonkey.com/mashery/get_survey_details"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "get_survey_details",
          "path" : "/surveys/get_survey_details",
          "params" : [
            {
              "name" : "survey_id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.surveymonkey.net/v2/surveys/get_survey_details"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.surveymonkey.com/mashery/get_collector_list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "get_collector_list",
          "path" : "/surveys/get_collector_list",
          "params" : [
            {
              "name" : "survey_id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "page",
              "style" : "header",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page_size",
              "style" : "header",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_date",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_date",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "order_asc",
              "style" : "header",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.surveymonkey.net/v2/surveys/get_collector_list"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.surveymonkey.com/mashery/create_collector"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "create_collector",
          "path" : "/collectors/create_collector",
          "params" : [
            {
              "name" : "survey_id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "collector.type",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "collector.name",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.surveymonkey.net/v2/collectors/create_collector"
        },
        {
          "httpMethod" : "POST",
          "doc" : {

          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "get_respondent_list",
          "path" : "/surveys/get_respondent_list",
          "params" : [
            {
              "name" : "survey_id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "collector_id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page",
              "style" : "header",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page_size",
              "style" : "header",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_date",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_date",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_modified_date",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_modified_date",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "order_asc",
              "style" : "header",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "order_by",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.surveymonkey.net/v2/surveys/get_respondent_list"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.surveymonkey.com/mashery/get_responses"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "get_responses",
          "path" : "/surveys/get_responses",
          "params" : [
            {
              "name" : "respondent_ids",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "survey_id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.surveymonkey.net/v2/surveys/get_responses"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.surveymonkey.com/mashery/get_response_counts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "get_response_counts",
          "path" : "/surveys/get_response_counts",
          "params" : [
            {
              "name" : "collector_id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.surveymonkey.net/v2/surveys/get_response_counts"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.surveymonkey.com/mashery/get_user_details"
          },
          "authentication" : {
            "required" : "false"
          },
          "path" : "/user/get_user_details",
          "displayName" : "/surveys/get_response_counts",
          "params" : [
            {
              "name" : "api_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.surveymonkey.net/v2/user/get_user_details"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.surveymonkey.com/mashery/get_template_list"
          },
          "authentication" : {

          },
          "displayName" : "get_template_list",
          "path" : "/templates/get_template_list",
          "params" : [
            {
              "name" : "page",
              "style" : "header",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page_size",
              "style" : "header",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "language_id",
              "style" : "header",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "category_id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "show_only_available_to_current_user",
              "style" : "header",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.surveymonkey.net/v2/templates/get_template_list"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.surveymonkey.com/mashery/send_flow"
          },
          "authentication" : {

          },
          "path" : "/batch/send_flow",
          "displayName" : "send_flow",
          "params" : [
            {
              "name" : "survey_id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "collector.type",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "collector.name",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "collector.recipients[_].email",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "collector.recipients[_].first_name",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "collector.recipients[_].last_name",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "collector.recipients[_].custom_id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "collector.send",
              "style" : "header",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "email_message.reply_email",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "email_message.subject",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "email_message.body_text",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.surveymonkey.net/v2/batch/send_flow"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "Give your entire team access to our powerful online survey platform. SurveyMonkey Enterprise helps anyone in any function use surveys to make smarter decisions, while your organization gets complete control of your data, users and billing.",
    "documentation" : "https://developer.surveymonkey.com/mashery",
    "enabled" : true,
    "logo" : "http://blog.grovo.com/wp-content/uploads/2012/09/surveymonkey.png",
    "name" : "Survey Monkey",
    "oauth" : {
      "isManual" : true,
      "version" : "2.0",
      "clientId" : "vyscb5uzhypva3t8x2fd93hu",
      "secret" : "MfS2A9Z9uBZVHrmMKY9R4ZQFUVGESAum",
      "baseURL" : "https://api.surveymonkey.net",
      "accessTokenURL" : "https://api.surveymonkey.net/oauth/token",
      "authTokenURL" : "https://api.surveymonkey.com/oauth/authorize",
      "tokenMethod" : "apikey_app_query",
      "authTokenPath" : "/oauth/authorize",
      "accessTokenIncludeClientInfo" : true,
      "grant_type" : "authorization_code",
      "scope" : "",
      "protocol" : "https",
      "host" : "api.surveymonkey.net",
      "passTokenInQuery" : true,
      "tokenQueryParam" : "oauth2_access_token",
      "auth_use_client_id_value" : "rebootd",
      "auth_use_api_key" : true
    },
    "useCustom" : true,
    "type" : "channel:survey_monkey"
  },
  {
    "_id" : "53dab882993d558f4a859a6b",
    "__v" : 0,
    "application" : {
      "base" : "http://api.yelp.com/v2/",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.yelp.com/developers/documentation/v2/search_api"
          },
          "displayName" : "Search",
          "path" : "search",
          "params" : [
            {
              "name" : "term",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "category_filter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "radius_filter",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "deals_filter",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "location",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "http://api.yelp.com/v2/search"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "http://www.yelp.com/developers/documentation/",
    "enabled" : true,
    "logo" : "http://www.greathillsent.com/images/yelp.png",
    "name" : "Yelp",
    "oauth" : {
      "key" : "w5Ds7zP3v1JFIKo9r4pVVQ",
      "secret" : "HuZn98JS3aMXdDjsNfqH3qz1Y00",
      "accessTokenURL" : "WOGT8hmmsJwfsjQZISh6XG2pBIfR-7G7",
      "version" : "2.0",
      "clientId" : "w5Ds7zP3v1JFIKo9r4pVVQ"
    },
    "owner" : "01f45d00-0611-11e4-83bd-196bfd08cd39",
    "type" : "channel:yelp"
  },
  {
    "_id" : "53dbfb2c626a43a44f966d08",
    "__v" : 0,
    "application" : {
      "base" : "http://api.nytimes.com/svc/",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.nytimes.com/docs/read/article_search_api_v2"
          },
          "authentication" : {
            "required" : "false"
          },
          "displayName" : "Article Search",
          "path" : "search/v2/articlesearch",
          "params" : [
            {
              "name" : "q",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fq",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "begin_date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fl",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "hl",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "facet_field",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "facet_filter",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "response-format",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "api-key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://api.nytimes.com/svc/search/v2/articlesearch"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.nytimes.com/docs/events_api"
          },
          "authentication" : {

          },
          "displayName" : "Event Listings",
          "path" : "events/{version}/listings",
          "params" : [
            {
              "name" : "version",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "api-key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "response-format",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ll",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "radius",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ne",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sw",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "query",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filters",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date_range",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "facets",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://api.nytimes.com/svc/events/{version}/listings"
        },
        {
          "httpMethod" : "GET",
          "doc" : {

          },
          "authentication" : {

          },
          "displayName" : "The Best Sellers",
          "path" : "books/{version}/lists",
          "url" : "http://api.nytimes.com/svc/books/{version}/lists"
        }
      ]
    },
    "auth_strategy" : "",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "http://developer.nytimes.com/docs/",
    "enabled" : true,
    "logo" : "http://foodtank.com/assets/images/head/new-york-times-ipad-icon.png",
    "name" : "The New York Times",
    "owner" : "01f45d00-0611-11e4-83bd-196bfd08cd39",
    "type" : "channel:the_new_york_times"
  },
  {
    "_id" : "53dfe0138656bd840ebe0e5a",
    "__v" : 0,
    "application" : {
      "base" : "",
      "resources" : [ ]
    },
    "auth_strategy" : "none",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://iodocs.docusign.com",
    "enabled" : true,
    "logo" : "http://iianc.com/images/Logos/DocuSign-Logo.jpeg",
    "name" : "DocuSign",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:docu_sign"
  },
  {
    "_id" : "53e10a8813c57e0267403a82",
    "__v" : 0,
    "application" : {
      "base" : "https://unison.com",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {

          },
          "authentication" : {
            "required" : "false"
          },
          "displayName" : "/whoami",
          "path" : "/whoami",
          "url" : "https://unison.com/whoami"
        },
        {
          "httpMethod" : "GET",
          "doc" : {

          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/rooms",
          "path" : "/rooms",
          "url" : "https://unison.com/rooms"
        },
        {
          "httpMethod" : "POST",
          "doc" : {

          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/rooms",
          "path" : "/rooms",
          "params" : [
            {
              "name" : "application/json",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://unison.com/rooms"
        },
        {
          "httpMethod" : "GET",
          "doc" : {

          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/rooms /{room_id}",
          "path" : "/rooms /{room_id}",
          "params" : [
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://unison.com/rooms /{room_id}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {

          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/rooms /{room_id} /topics",
          "path" : "/rooms /{room_id} /topics",
          "params" : [
            {
              "name" : "anchor",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "number",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://unison.com/rooms /{room_id} /topics"
        },
        {
          "httpMethod" : "POST",
          "doc" : {

          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/rooms /{room_id} /topics",
          "path" : "/rooms /{room_id} /topics",
          "params" : [
            {
              "name" : "application/json",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://unison.com/rooms /{room_id} /topics"
        },
        {
          "httpMethod" : "GET",
          "doc" : {

          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/rooms /{room_id} /topics /{topic_id}",
          "path" : "/rooms /{room_id} /topics /{topic_id}",
          "params" : [
            {
              "name" : "Room Id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://unison.com/rooms /{room_id} /topics /{topic_id}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {

          },
          "authentication" : {

          },
          "displayName" : "/rooms /{room_id} /topics /{topic_id} /comments",
          "path" : "/rooms /{room_id} /topics /{topic_id} /comments",
          "params" : [
            {
              "name" : "anchor",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "number",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://unison.com/rooms /{room_id} /topics /{topic_id} /comments"
        },
        {
          "httpMethod" : "POST",
          "doc" : {

          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/rooms /{room_id} /topics /{topic_id} /comments",
          "path" : "/rooms /{room_id} /topics /{topic_id} /comments",
          "params" : [
            {
              "name" : "application/json",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://unison.com/rooms /{room_id} /topics /{topic_id} /comments"
        },
        {
          "httpMethod" : "GET",
          "doc" : {

          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/rooms /{room_id} /topics /{topic_id} /comments /{comment_id}",
          "path" : "/rooms /{room_id} /topics /{topic_id} /comments /{comment_id}",
          "url" : "https://unison.com/rooms /{room_id} /topics /{topic_id} /comments /{comment_id}"
        }
      ]
    },
    "auth_strategy" : "",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://developers.unison.com/v1/explorer/",
    "enabled" : true,
    "logo" : "http://www.trademarkia.com/services/logo.ashx?sid=77753715",
    "name" : "Unison",
    "oauth" : {

    },
    "type" : "channel:unison"
  },
  {
    "_id" : "53e4be588e3257fb7d6fdadd",
    "owner" : "c301a2f0-1e0d-11e4-8e9e-0b07725414db",
    "auth_strategy" : "",
    "logo" : "",
    "name" : "User Activities",
    "description" : "test Fitbit",
    "documentation" : "http://api.fitbit.com/1/user/-/activities/frequent.json",
    "enabled" : true,
    "application" : {
      "base" : "http://api.fitbit.com/1",
      "resources" : [ ]
    },
    "custom_tokens" : [ ],
    "__v" : 0,
    "type" : "channel:user_activities"
  },
  {
    "_id" : "53f2431f710850ee08e28474",
    "__v" : 0,
    "application" : {
      "base" : "https://redbooth.com/api/3",
      "resources" : [
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "per_page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "organization_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "project_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "target_type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "created_from"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "created_to"
            }
          ],
          "path" : "/activities",
          "displayName" : "/activities",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:activities,header:activities-activity-list"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/activities"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "per_page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "organization_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "project_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "target_type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "target_id"
            }
          ],
          "path" : "/comments",
          "displayName" : "/comments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:comments,header:comments-comment-list"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/comments"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "id"
            }
          ],
          "path" : "/comment/{id}",
          "displayName" : "/comment/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:comments,header:comments-comment-list"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/comment/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "target_type"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "target_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "body"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "minutes"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "time_tracking_on"
            }
          ],
          "path" : "/comment/{id}",
          "displayName" : "/comment/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:comments,header:comments-comment-list"
          },
          "httpMethod" : "POST",
          "url" : "https://redbooth.com/api/3/comment/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "target_type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "target_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "body"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "minutes"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "time_tracking_on"
            }
          ],
          "path" : "/comment/{id}",
          "displayName" : "/comment/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:comments,header:comments-comment-list"
          },
          "httpMethod" : "PUT",
          "url" : "https://redbooth.com/api/3/comment/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : "id"
            }
          ],
          "path" : "/comment/{id}",
          "displayName" : "/comment/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:comments,header:comments-comment-list"
          },
          "httpMethod" : "DELETE",
          "url" : "https://redbooth.com/api/3/comment/{id}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "per_page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "organization_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "project_id"
            }
          ],
          "path" : "/conversations",
          "displayName" : "/conversations",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:conversations,header:conversations-conversation-list"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/conversations"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "id"
            }
          ],
          "path" : "/conversations/{id}",
          "displayName" : "/conversations/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:conversations,header:conversations-conversation-list"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/conversations/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "project_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "body"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "is_private"
            }
          ],
          "path" : "/conversations/{id}",
          "displayName" : "/conversations/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:conversations,header:conversations-conversation-list"
          },
          "httpMethod" : "POST",
          "url" : "https://redbooth.com/api/3/conversations/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "project_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "body"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "is_private"
            }
          ],
          "path" : "/conversations/{id}",
          "displayName" : "/conversations/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:conversations,header:conversations-conversation-list"
          },
          "httpMethod" : "PUT",
          "url" : "https://redbooth.com/api/3/conversations/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "",
              "name" : "id"
            }
          ],
          "path" : "/conversations/{id}",
          "displayName" : "/conversations/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:conversations,header:conversations-conversation-list"
          },
          "httpMethod" : "DELETE",
          "url" : "https://redbooth.com/api/3/conversations/{id}"
        },
        {
          "path" : "/me",
          "displayName" : "/me",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:user-information,header:user-information-user-information"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/me"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "first_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "last_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "email"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "password"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "password_confirmation"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "old_password"
            }
          ],
          "path" : "/me",
          "displayName" : "/me",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:user-information,header:user-information-user-information"
          },
          "httpMethod" : "PUT",
          "url" : "https://redbooth.com/api/3/me"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "",
              "name" : "id"
            }
          ],
          "path" : "/me",
          "displayName" : "/me",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:user-information,header:user-information-user-information"
          },
          "httpMethod" : "DELETE",
          "url" : "https://redbooth.com/api/3/me"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "per_page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "organization_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "role"
            }
          ],
          "path" : "/memberships",
          "displayName" : "/memberships",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:memberships,header:memberships-membership-list"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/memberships"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "id"
            }
          ],
          "path" : "/memberships/{id}",
          "displayName" : "/memberships/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:memberships,header:memberships-membership-list"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/memberships/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "organization_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "role"
            }
          ],
          "path" : "/memberships/{id}",
          "displayName" : "/memberships/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:memberships,header:memberships-membership-list"
          },
          "httpMethod" : "POST",
          "url" : "https://redbooth.com/api/3/memberships/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "organization_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "role"
            }
          ],
          "path" : "/memberships/{id}",
          "displayName" : "/memberships/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:memberships,header:memberships-membership-list"
          },
          "httpMethod" : "PUT",
          "url" : "https://redbooth.com/api/3/memberships/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "",
              "name" : "id"
            }
          ],
          "path" : "/memberships/{id}",
          "displayName" : "/memberships/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:memberships,header:memberships-membership-list"
          },
          "httpMethod" : "DELETE",
          "url" : "https://redbooth.com/api/3/memberships/{id}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "per_page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "organization_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "project_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "user_id"
            }
          ],
          "path" : "/notes",
          "displayName" : "/notes",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:notes,header:notes-note-list"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/notes"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "id"
            }
          ],
          "path" : "/notes/{id}",
          "displayName" : "/notes/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:notes,header:notes-note-list"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/notes/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "project_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "content"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "is_private"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "shared"
            }
          ],
          "path" : "/notes/{id}",
          "displayName" : "/notes/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:notes,header:notes-note-list"
          },
          "httpMethod" : "POST",
          "url" : "https://redbooth.com/api/3/notes/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "project_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "body"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "is_private"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "shared"
            }
          ],
          "path" : "/notes/{id}",
          "displayName" : "/notes/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:notes,header:notes-note-list"
          },
          "httpMethod" : "PUT",
          "url" : "https://redbooth.com/api/3/notes/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "",
              "name" : "id"
            }
          ],
          "path" : "/notes/{id}",
          "displayName" : "/notes/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:notes,header:notes-note-list"
          },
          "httpMethod" : "DELETE",
          "url" : "https://redbooth.com/api/3/notes/{id}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "per_page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            }
          ],
          "path" : "/notifications",
          "displayName" : "/notifications",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:notifications,header:notifications-notification-list"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/notifications"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "id"
            }
          ],
          "path" : "/notifications/{id}",
          "displayName" : "/notifications/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:notifications,header:notifications-notification-list"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/notifications/{id}"
        },
        {
          "path" : "/notifications/{id}",
          "displayName" : "/notifications/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:notifications,header:notifications-notification-list"
          },
          "httpMethod" : "POST",
          "url" : "https://redbooth.com/api/3/notifications/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "read"
            }
          ],
          "path" : "/notifications/{id}",
          "displayName" : "/notifications/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:notifications,header:notifications-notification-list"
          },
          "httpMethod" : "PUT",
          "url" : "https://redbooth.com/api/3/notifications/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "",
              "name" : "id"
            }
          ],
          "path" : "/notifications/{id}",
          "displayName" : "/notifications/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:notifications,header:notifications-notification-list"
          },
          "httpMethod" : "DELETE",
          "url" : "https://redbooth.com/api/3/notifications/{id}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "per_page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            }
          ],
          "path" : "/organizations",
          "displayName" : "/organizations",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:organizations,header:organizations-organization-list"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/organizations"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "id"
            }
          ],
          "path" : "/organizations/{id}",
          "displayName" : "/organizations/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:organizations,header:organizations-organization-list"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/organizations/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "permalink"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "domain"
            }
          ],
          "path" : "/organizations/{id}",
          "displayName" : "/organizations/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:organizations,header:organizations-organization-list"
          },
          "httpMethod" : "POST",
          "url" : "https://redbooth.com/api/3/organizations/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "permalink"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "domain"
            }
          ],
          "path" : "/organizations/{id}",
          "displayName" : "/organizations/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:organizations,header:organizations-organization-list"
          },
          "httpMethod" : "PUT",
          "url" : "https://redbooth.com/api/3/organizations/{id}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "",
              "name" : "id"
            }
          ],
          "path" : "/organizations/{id}",
          "displayName" : "/organizations/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:organizations,header:organizations-organization-list"
          },
          "httpMethod" : "DELETE",
          "url" : "https://redbooth.com/api/3/organizations/{id}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "per_page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "organization_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "project_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "role"
            }
          ],
          "path" : "/people",
          "displayName" : "/people",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:people,header:people-people-list"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/people"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "project_id"
            }
          ],
          "path" : "/people/{id}",
          "displayName" : "/people/{id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:people,header:people-people-list"
          },
          "httpMethod" : "GET",
          "url" : "https://redbooth.com/api/3/people/{id}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:people,header:people-people-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/people/{id}",
          "path" : "/people/{id}",
          "params" : [
            {
              "name" : "project_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "user_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "role",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://redbooth.com/api/3/people/{id}"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:people,header:people-people-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/people/{id}",
          "path" : "/people/{id}",
          "params" : [
            {
              "name" : "project_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "user_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "role",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://redbooth.com/api/3/people/{id}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:people,header:people-people-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/people/{id}",
          "path" : "/people/{id}",
          "params" : [
            {
              "name" : "id",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://redbooth.com/api/3/people/{id}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:projects,header:projects-project-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects",
          "path" : "/projects",
          "params" : [
            {
              "name" : "order",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "organization_id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://redbooth.com/api/3/projects"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:projects,header:projects-project-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{id}",
          "path" : "/projects/{id}",
          "params" : [
            {
              "name" : "id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://redbooth.com/api/3/projects/{id}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:projects,header:projects-project-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{id}",
          "path" : "/projects/{id}",
          "params" : [
            {
              "name" : "organizations_id",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "tracks_time",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "public",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "publish_pages",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://redbooth.com/api/3/projects/{id}"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:projects,header:projects-project-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{id}",
          "path" : "/projects/{id}",
          "params" : [
            {
              "name" : "id",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "organizations_id",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "tracks_time",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "public",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_weekend_days",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "publish_pages",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://redbooth.com/api/3/projects/{id}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:projects,header:projects-project-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{id}",
          "path" : "/projects/{id}",
          "params" : [
            {
              "name" : "id",
              "style" : "",
              "type" : "number",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://redbooth.com/api/3/projects/{id}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:subtasks,header:subtasks-subtasks-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/subtasks",
          "path" : "/subtasks",
          "params" : [
            {
              "name" : "task_id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "order",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://redbooth.com/api/3/subtasks"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:subtasks,header:subtasks-subtasks-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/subtasks",
          "path" : "/subtasks",
          "params" : [
            {
              "name" : "task_id",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "resolved",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "position",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://redbooth.com/api/3/subtasks"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:subtasks,header:subtasks-subtasks-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/subtasks",
          "path" : "/subtasks",
          "params" : [
            {
              "name" : "id",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "task_id",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "resolved",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "position",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://redbooth.com/api/3/subtasks"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:subtasks,header:subtasks-subtasks-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/subtasks",
          "path" : "/subtasks",
          "params" : [
            {
              "name" : "id",
              "style" : "",
              "type" : "number",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://redbooth.com/api/3/subtasks"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:tasklists,header:tasklists-tasklist-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/task_lists",
          "path" : "/task_lists",
          "params" : [
            {
              "name" : "order",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "organization_id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "project_id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "archived",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://redbooth.com/api/3/task_lists"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:tasklists,header:tasklists-tasklist-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/task_lists/{id}",
          "path" : "/task_lists/{id}",
          "params" : [
            {
              "name" : "id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://redbooth.com/api/3/task_lists/{id}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:tasklists,header:tasklists-tasklist-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/task_lists/{id}",
          "path" : "/task_lists/{id}",
          "params" : [
            {
              "name" : "project_id",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "archived",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://redbooth.com/api/3/task_lists/{id}"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:tasklists,header:tasklists-tasklist-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/task_lists/{id}",
          "path" : "/task_lists/{id}",
          "params" : [
            {
              "name" : "id",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "project_id",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "archived",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://redbooth.com/api/3/task_lists/{id}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:tasklists,header:tasklists-tasklist-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/task_lists/{id}",
          "path" : "/task_lists/{id}",
          "params" : [
            {
              "name" : "id",
              "style" : "",
              "type" : "number",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://redbooth.com/api/3/task_lists/{id}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:tasks,header:tasks-task-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/tasks",
          "path" : "/tasks",
          "params" : [
            {
              "name" : "order",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "organization_id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "project_id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "task_list_id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "assigned_user_id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "assigned",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "archived",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://redbooth.com/api/3/tasks"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:tasks,header:tasks-task-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/tasks/{id}",
          "path" : "/tasks/{id}",
          "params" : [
            {
              "name" : "id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://redbooth.com/api/3/tasks/{id}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:tasks,header:tasks-task-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/tasks/{id}",
          "path" : "/tasks/{id}",
          "params" : [
            {
              "name" : "project_id",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "task_list_id",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "is_private",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://redbooth.com/api/3/tasks/{id}"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:tasks,header:tasks-task-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/tasks/{id}",
          "path" : "/tasks/{id}",
          "params" : [
            {
              "name" : "id",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "project_id",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "task_list_id",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "assigned_user_id",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "is_private",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://redbooth.com/api/3/tasks/{id}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:tasks,header:tasks-task-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/tasks/{id}",
          "path" : "/tasks/{id}",
          "params" : [
            {
              "name" : "id",
              "style" : "",
              "type" : "number",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://redbooth.com/api/3/tasks/{id}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.redbooth.com/api-docs/#page:users,header:users-user-list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/me",
          "path" : "/me",
          "url" : "https://redbooth.com/api/3/me"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://developer.redbooth.com/api-docs/",
    "enabled" : true,
    "logo" : "https://chartio.com/hmedia/images/customers/logo_redbooth.png",
    "name" : "REDBOOTH",
    "oauth" : {
      "version" : "2.0"
    },
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:redbooth"
  },
  {
    "_id" : "5393128e59745965b10fc541",
    "logo" : "http://www.adnstatus.net/images/logo.png",
    "name" : "App.net",
    "auth_strategy" : "oauth",
    "description" : "One account. Many applications. Get instant access to hundreds of great social apps on iPhone, iPad, Android and more.",
    "documentation" : "",
    "enabled" : true,
    "useCustom" : true,
    "oauth" : {
      "development" : {
        "version" : "2.0",
        "key" : "DVPmwADDPtT9mDnSWxVNXcgdQVP6pkhq",
        "secret" : "Barj6KXwbYX5HECH8nCB35XzqPw9yrtz",
        "accessTokenPath" : "/oauth/access_token",
        "authTokenPath" : "/oauth/authenticate",
        "baseURL" : "https://account.app.net",
        "tokenMethod" : "access_token_query",
        "scope" : "basic stream write_post follow public_messages"
      },
      "staging" : {
        "version" : "2.0",
        "key" : "YSv2HCBzYSEgVQCmFrM7VpTsSxpHZe6M",
        "secret" : "vGvzzeAZzABFcGGb8xM9sNUVtV5vDEHk",
        "accessTokenPath" : "/oauth/access_token",
        "authTokenPath" : "/oauth/authenticate",
        "baseURL" : "https://account.app.net",
        "tokenMethod" : "access_token_query",
        "scope" : "basic stream write_post follow public_messages"
      },
      "production" : {
        "version" : "2.0",
        "key" : "uTpySTD9bc8WAyLBmFEyWcjuAfVmZWLX",
        "secret" : "m9PGxFRnKMtRn6TgEsSjynVkQANmNdUx",
        "accessTokenPath" : "/oauth/access_token",
        "authTokenPath" : "/oauth/authenticate",
        "baseURL" : "https://account.app.net",
        "tokenMethod" : "access_token_query",
        "scope" : "basic stream write_post follow public_messages"
      }
    },
    "application" : {
      "base" : "https://api.app.net/",
      "resources" : [
        {
          "params" : [
            {
              "name" : "user_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The user id. If the user id is me the current authenticated user will be used. You can also specify @username as a user_id."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/users/1558\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/user/lookup/#retrieve-a-user"
          },
          "displayName" : "/users/{user_id}",
          "path" : "/users/{user_id}",
          "url" : "https://api.app.net//users/{user_id}"
        },
        {
          "params" : [
            {
              "name" : "PATCH",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "https://api.app.net/users/me"
              }
            }
          ],
          "curl" : "curl -X PUT -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    -H \"Content-Type: application/json\" -d \"{\n  \\\"name\\\": \\\"@adnapi has a new name\\\",\n  \\\"locale\\\": \\\"en\\\",\n  \\\"timezone\\\": \\\"US/Central\\\",\n  \\\"description\\\": {\n    \\\"text\\\": \\\"new description\\\"\n  },\n  \\\"annotations\\\": [\n    {\n      \\\"type\\\": \\\"net.app.core.directory.blog\\\",\n      \\\"value\\\": {\n        \\\"url\\\": \\\"http://mynewblog.com\\\"\n      }\n    }\n  ]\n}\" \\\n    \"https://api.app.net/users/me?include_user_annotations=1\"",
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/user/profile/#update-a-user"
          },
          "displayName" : "/users/me",
          "path" : "/users/me",
          "url" : "https://api.app.net//users/me"
        },
        {
          "params" : [
            {
              "name" : "GET",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "https://api.app.net/users/{user_id}/avatar"
              }
            }
          ],
          "curl" : "curl -X PATCH -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    -H \"Content-Type: application/json\" -d \"{\n  \\\"name\\\": \\\"Mark Thurman 3\\\"\n}\" \\\n    \"https://api.app.net/users/me\"",
          "httpMethod" : "PATCH",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/user/profile/#partially-update-a-user"
          },
          "displayName" : "/users/me",
          "path" : "/users/me",
          "url" : "https://api.app.net//users/me"
        },
        {
          "params" : [
            {
              "name" : "user_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The user id to be followed. You can also specify @username as a user_id."
              }
            }
          ],
          "curl" : "curl -X POST -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/users/1558/follow\"",
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/user/following/#follow-a-user"
          },
          "displayName" : "/users/{user_id}/follow",
          "path" : "/users/{user_id}/follow",
          "url" : "https://api.app.net//users/{user_id}/follow"
        },
        {
          "params" : [
            {
              "name" : "user_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The user id to stop following. You can also specify @username as a user_id."
              }
            }
          ],
          "curl" : "curl -X DELETE -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/users/1558/follow\"",
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/user/following/#unfollow-a-user"
          },
          "displayName" : "/users/{user_id}/follow",
          "path" : "/users/{user_id}/follow",
          "url" : "https://api.app.net//users/{user_id}/follow"
        },
        {
          "params" : [
            {
              "name" : "user_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the User to mute. You can also specify @username as a user_id."
              }
            }
          ],
          "curl" : "curl -X POST -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/users/1558/mute\"",
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/user/muting/#mute-a-user"
          },
          "displayName" : "/users/{user_id}/mute",
          "path" : "/users/{user_id}/mute",
          "url" : "https://api.app.net//users/{user_id}/mute"
        },
        {
          "params" : [
            {
              "name" : "user_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the User to mute. You can also specify @username as a user_id."
              }
            }
          ],
          "curl" : "curl -X DELETE -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/users/1558/mute\"",
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/user/muting/#unmute-a-user"
          },
          "displayName" : "/users/{user_id}/mute",
          "path" : "/users/{user_id}/mute",
          "url" : "https://api.app.net//users/{user_id}/mute"
        },
        {
          "params" : [
            {
              "name" : "user_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the User to block. You can also specify @username as a user_id."
              }
            }
          ],
          "curl" : "curl -X POST -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/users/1558/block\"",
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/user/blocking/#block-a-user"
          },
          "displayName" : "/users/{user_id}/block",
          "path" : "/users/{user_id}/block",
          "url" : "https://api.app.net//users/{user_id}/block"
        },
        {
          "params" : [
            {
              "name" : "user_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the User to block. You can also specify @username as a user_id."
              }
            }
          ],
          "curl" : "curl -X DELETE -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/users/1558/block\"",
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/user/blocking/#unblock-a-user"
          },
          "displayName" : "/users/{user_id}/block",
          "path" : "/users/{user_id}/block",
          "url" : "https://api.app.net//users/{user_id}/block"
        },
        {
          "params" : [
            {
              "name" : "ids",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "A comma separated list of User ids to retrieve."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/users?ids=1,2\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/user/lookup/#retrieve-multiple-users"
          },
          "displayName" : "/users",
          "path" : "/users",
          "url" : "https://api.app.net//users"
        },
        {
          "params" : [
            {
              "name" : "q",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The search query. Supports @username or #tag searches as well as normal search terms. Searches username, display name, bio information. Does not search posts."
              }
            },
            {
              "name" : "count",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "(Optional) The number of Users to return, up to a maximum of 200. Defaults to 20 if not specified."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/users/search?q=%23api\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/user/search/#search-for-users"
          },
          "displayName" : "/users/search",
          "path" : "/users/search",
          "url" : "https://api.app.net//users/search"
        },
        {
          "params" : [
            {
              "name" : "ids",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "A comma separated list of User ids to retrieve muted User ids for."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR APP TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/users/muted/ids?ids=1,2\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/user/muting/#retrieve-muted-user-ids-for-multiple-users"
          },
          "displayName" : "/users/muted/ids",
          "path" : "/users/muted/ids",
          "url" : "https://api.app.net//users/muted/ids"
        },
        {
          "params" : [
            {
              "name" : "ids",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "A comma separated list of User ids to retrieve blocked User ids for."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR APP TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/users/blocked/ids?ids=1,2\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/user/blocking/#retrieve-blocked-user-ids-for-multiple-users"
          },
          "displayName" : "/users/blocked/ids",
          "path" : "/users/blocked/ids",
          "url" : "https://api.app.net//users/blocked/ids"
        },
        {
          "params" : [
            {
              "name" : "text",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The raw text of the post."
              }
            },
            {
              "name" : "reply_to",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "(Optional) The id of the Post that this new Post is replying to."
              }
            }
          ],
          "curl" : "curl -X POST -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    -H \"Content-Type: application/x-www-form-urlencoded\" -d \"text=If you're in San Francisco on Saturday October 20 and Sunday October 21 come to the first #adnhack => http://appnet.eventbrite.com/\" \\\n    \"https://api.app.net/posts\"",
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/post/lifecycle/#create-a-post"
          },
          "displayName" : "/posts",
          "path" : "/posts",
          "url" : "https://api.app.net//posts"
        },
        {
          "params" : [
            {
              "name" : "post_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Post to retrieve."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/posts/914440\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/post/lookup/#retrieve-a-post"
          },
          "displayName" : "/posts/{post_id}",
          "path" : "/posts/{post_id}",
          "url" : "https://api.app.net//posts/{post_id}"
        },
        {
          "params" : [
            {
              "name" : "post_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Post to delete."
              }
            }
          ],
          "curl" : "curl -X DELETE -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/posts/914440\"",
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/post/lifecycle/#delete-a-post"
          },
          "displayName" : "/posts/{post_id}",
          "path" : "/posts/{post_id}",
          "url" : "https://api.app.net//posts/{post_id}"
        },
        {
          "params" : [
            {
              "name" : "post_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Post to repost."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/posts/914440/repost\"",
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/post/reposts/#repost-a-post"
          },
          "displayName" : "/posts/{post_id}/repost",
          "path" : "/posts/{post_id}/repost",
          "url" : "https://api.app.net//posts/{post_id}/repost"
        },
        {
          "params" : [
            {
              "name" : "post_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Post to unrepost."
              }
            }
          ],
          "curl" : "curl -X DELETE -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/posts/914440/repost\"",
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/post/reposts/#unrepost-a-post"
          },
          "displayName" : "/posts/{post_id}/repost",
          "path" : "/posts/{post_id}/repost",
          "url" : "https://api.app.net//posts/{post_id}/repost"
        },
        {
          "params" : [
            {
              "name" : "post_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Post to star."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/posts/914440/star\"",
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/post/stars/#star-a-post"
          },
          "displayName" : "/posts/{post_id}/star",
          "path" : "/posts/{post_id}/star",
          "url" : "https://api.app.net//posts/{post_id}/star"
        },
        {
          "params" : [
            {
              "name" : "post_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Post to unstar."
              }
            }
          ],
          "curl" : "curl -X DELETE -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/posts/914440/star\"",
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/post/stars/#unstar-a-post"
          },
          "displayName" : "/posts/{post_id}/star",
          "path" : "/posts/{post_id}/star",
          "url" : "https://api.app.net//posts/{post_id}/star"
        },
        {
          "params" : [
            {
              "name" : "ids",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "A comma separated list of ids of Posts to retrieve."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/posts?ids=914440,2\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/post/lookup/#retrieve-multiple-posts"
          },
          "displayName" : "/posts",
          "path" : "/posts",
          "url" : "https://api.app.net//posts"
        },
        {
          "params" : [
            {
              "name" : "user_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The user id. If the user id is me the current authenticated user will be used. You can also specify @username as a user_id."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/users/2/mentions\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/post/streams/#retrieve-posts-mentioning-a-user"
          },
          "displayName" : "/users/{user_id}/mentions",
          "path" : "/users/{user_id}/mentions",
          "url" : "https://api.app.net//users/{user_id}/mentions"
        },
        {
          "params" : [
            {
              "name" : "GET",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "https://api.app.net/users/{user_id}/posts"
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/posts/stream/global\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/post/streams/#retrieve-the-global-stream"
          },
          "displayName" : "/posts/stream/global",
          "path" : "/posts/stream/global",
          "url" : "https://api.app.net//posts/stream/global"
        },
        {
          "params" : [
            {
              "name" : "post_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Post to report."
              }
            }
          ],
          "curl" : "curl -X POST -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/posts/914440/report\"",
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/post/report/#report-a-post"
          },
          "displayName" : "/posts/{post_id}/report",
          "path" : "/posts/{post_id}/report",
          "url" : "https://api.app.net//posts/{post_id}/report"
        },
        {
          "params" : [
            {
              "name" : "index",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Optional"
              }
            },
            {
              "name" : "order",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Optional"
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/posts/search?hashtags=adnhack&count=-1\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/post/search/#search-for-posts"
          },
          "displayName" : "/posts/search",
          "path" : "/posts/search",
          "url" : "https://api.app.net//posts/search"
        },
        {
          "params" : [
            {
              "name" : "PUT",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "https://api.app.net/channels/{channel_id}"
              }
            }
          ],
          "curl" : "curl -X POST -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    -H \"Content-Type: application/json\" -d \"{\n  \\\"type\\\": \\\"com.example.channel\\\",\n  \\\"writers\\\": {\n    \\\"user_ids\\\": [\n      \\\"@berg\\\",\n      \\\"1\\\"\n    ]\n  }\n}\" \\\n    \"https://api.app.net/channels\"",
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/lifecycle/#create-a-channel"
          },
          "displayName" : "/channels",
          "path" : "/channels",
          "url" : "https://api.app.net//channels"
        },
        {
          "params" : [
            {
              "name" : "channel_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Channel to retrieve."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels/1\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/lookup/#retrieve-a-channel"
          },
          "displayName" : "/channels/{channel_id}",
          "path" : "/channels/{channel_id}",
          "url" : "https://api.app.net//channels/{channel_id}"
        },
        {
          "params" : [
            {
              "name" : "ids",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "A comma separated list of ids of Channels to retrieve."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels?ids=1,2,6502\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/lookup/#retrieve-multiple-channels"
          },
          "displayName" : "/channels",
          "path" : "/channels",
          "url" : "https://api.app.net//channels"
        },
        {
          "params" : [
            {
              "name" : "GET",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "https://api.app.net/users/me/channels/pm/num_unread"
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/users/me/channels\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/lookup/#retrieve-my-channels"
          },
          "displayName" : "/users/me/channels",
          "path" : "/users/me/channels",
          "url" : "https://api.app.net//users/me/channels"
        },
        {
          "params" : [
            {
              "name" : "GET",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "https://api.app.net/users/me/channels/broadcast/num_unread"
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/users/me/channels/pm/num_unread\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/lookup/#retrieve-number-of-unread-pm-channels"
          },
          "displayName" : "/users/me/channels/pm/num_unread",
          "path" : "/users/me/channels/pm/num_unread",
          "url" : "https://api.app.net//users/me/channels/pm/num_unread"
        },
        {
          "params" : [
            {
              "name" : "DELETE",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "https://api.app.net/users/me/channels/broadcast/num_unread"
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/users/me/channels/broadcast/num_unread\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/lookup/#retrieve-number-of-unread-broadcast-channels"
          },
          "displayName" : "/users/me/channels/broadcast/num_unread",
          "path" : "/users/me/channels/broadcast/num_unread",
          "url" : "https://api.app.net//users/me/channels/broadcast/num_unread"
        },
        {
          "params" : [
            {
              "name" : "channel_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Channel to update."
              }
            }
          ],
          "curl" : "curl -X PUT -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    -H \"Content-Type: application/json\" -d \"{\n  \\\"readers\\\": {\n    \\\"public\\\": true\n  }\n}\" \\\n    \"https://api.app.net/channels/1\"",
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/lifecycle/#update-a-channel"
          },
          "displayName" : "/channels/{channel_id}",
          "path" : "/channels/{channel_id}",
          "url" : "https://api.app.net//channels/{channel_id}"
        },
        {
          "params" : [
            {
              "name" : "channel_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Channel to delete."
              }
            }
          ],
          "curl" : "curl -X DELETE -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels/1\"",
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/lifecycle/#deactivate-a-channel"
          },
          "displayName" : "/channels/{channel_id}",
          "path" : "/channels/{channel_id}",
          "url" : "https://api.app.net//channels/{channel_id}"
        },
        {
          "params" : [
            {
              "name" : "channel_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Channel to subscribe to."
              }
            }
          ],
          "curl" : "curl -X POST -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels/1/subscribe\"",
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/subscriptions/#subscribe-to-a-channel"
          },
          "displayName" : "/channels/{channel_id}/subscribe",
          "path" : "/channels/{channel_id}/subscribe",
          "url" : "https://api.app.net//channels/{channel_id}/subscribe"
        },
        {
          "params" : [
            {
              "name" : "channel_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Channel to unsubscribe from."
              }
            }
          ],
          "curl" : "curl -X DELETE -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels/1/subscribe\"",
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/subscriptions/#unsubscribe-from-a-channel"
          },
          "displayName" : "/channels/{channel_id}/subscribe",
          "path" : "/channels/{channel_id}/subscribe",
          "url" : "https://api.app.net//channels/{channel_id}/subscribe"
        },
        {
          "params" : [
            {
              "name" : "channel_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Channel to retrieve subscribers for."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels/1/subscribers\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/subscriptions/#retrieve-users-subscribed-to-a-channel"
          },
          "displayName" : "/channels/{channel_id}/subscribers",
          "path" : "/channels/{channel_id}/subscribers",
          "url" : "https://api.app.net//channels/{channel_id}/subscribers"
        },
        {
          "params" : [
            {
              "name" : "channel_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Channel to retrieve subscriber ids for."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels/1/subscribers/ids\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/subscriptions/#retrieve-user-ids-subscribed-to-a-channel"
          },
          "displayName" : "/channels/{channel_id}/subscribers/ids",
          "path" : "/channels/{channel_id}/subscribers/ids",
          "url" : "https://api.app.net//channels/{channel_id}/subscribers/ids"
        },
        {
          "params" : [
            {
              "name" : "ids",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "A comma separated list of Channel ids to retrieve subscriber ids for."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels/1/subscribers/ids?ids=1,2,3,5\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/subscriptions/#retrieve-user-ids-subscribed-to-a-channel"
          },
          "displayName" : "/channels/subscribers/ids",
          "path" : "/channels/subscribers/ids",
          "url" : "https://api.app.net//channels/subscribers/ids"
        },
        {
          "params" : [
            {
              "name" : "channel_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Channel to mute."
              }
            }
          ],
          "curl" : "curl -X POST -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels/1/mute\"",
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/muting/#mute-a-channel"
          },
          "displayName" : "/channels/{channel_id}/mute",
          "path" : "/channels/{channel_id}/mute",
          "url" : "https://api.app.net//channels/{channel_id}/mute"
        },
        {
          "params" : [
            {
              "name" : "channel_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Channel to unmute."
              }
            }
          ],
          "curl" : "curl -X DELETE -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels/1/mute\"",
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/muting/#unmute-a-channel"
          },
          "displayName" : "/channels/{channel_id}/mute",
          "path" : "/channels/{channel_id}/mute",
          "url" : "https://api.app.net//channels/{channel_id}/mute"
        },
        {
          "params" : [
            {
              "name" : "order",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Optional"
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels/search?q=kerbal&order=popularity\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/channel/search/#search-for-channels"
          },
          "displayName" : "/channels/search",
          "path" : "/channels/search",
          "url" : "https://api.app.net//channels/search"
        },
        {
          "params" : [
            {
              "name" : "channel_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Channel to retrieve Messages from."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels/1/messages\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/message/lifecycle/#retrieve-the-messages-in-a-channel"
          },
          "displayName" : "/channels/{channel_id}/messages",
          "path" : "/channels/{channel_id}/messages",
          "url" : "https://api.app.net//channels/{channel_id}/messages"
        },
        {
          "params" : [
            {
              "name" : "channel_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Channel in which to create the Message. Alternatively, you can specify pm to auto-create/reuse a net.app.core.pm private message channel."
              }
            }
          ],
          "curl" : "curl -X POST -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    -H \"Content-Type: application/json\" -d \"{\n  \\\"text\\\": \\\"Hello channel!\\\"\n}\" \\\n    \"https://api.app.net/channels/1/messages\"",
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/message/lifecycle/#create-a-message"
          },
          "displayName" : "/channels/{channel_id}/messages",
          "path" : "/channels/{channel_id}/messages",
          "url" : "https://api.app.net//channels/{channel_id}/messages"
        },
        {
          "params" : [
            {
              "name" : "channel_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Channel containing the Message."
              }
            },
            {
              "name" : "message_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Message to retrieve."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels/1/messages/1\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/message/lookup/#retrieve-a-message"
          },
          "displayName" : "/channels/{channel_id}/messages/{message_id}",
          "path" : "/channels/{channel_id}/messages/{message_id}",
          "url" : "https://api.app.net//channels/{channel_id}/messages/{message_id}"
        },
        {
          "params" : [
            {
              "name" : "ids",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "A comma separated list of ids of the Messages to retrieve."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels/messages?ids=1,2\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/message/lookup/#retrieve-multiple-messages"
          },
          "displayName" : "/channels/messages",
          "path" : "/channels/messages",
          "url" : "https://api.app.net//channels/messages"
        },
        {
          "params" : [
            {
              "name" : "channel_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Channel this Message belongs to."
              }
            },
            {
              "name" : "message_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Message to delete."
              }
            }
          ],
          "curl" : "curl -X DELETE -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels/1/messages/1\"",
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/message/lifecycle/#delete-a-message"
          },
          "displayName" : "/channels/{channel_id}/messages/{message_id}",
          "path" : "/channels/{channel_id}/messages/{message_id}",
          "url" : "https://api.app.net//channels/{channel_id}/messages/{message_id}"
        },
        {
          "params" : [
            {
              "name" : "index",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Optional"
              }
            },
            {
              "name" : "order",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Optional"
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/channels/messages/search?query=hello&channel_ids=1&count=1\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/message/search/#search-for-messages"
          },
          "displayName" : "/channels/messages/search",
          "path" : "/channels/messages/search",
          "url" : "https://api.app.net//channels/messages/search"
        },
        {
          "params" : [
            {
              "name" : "PUT",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "https://api.app.net/files/{file_id}"
              }
            }
          ],
          "curl" : "echo '{\n  \"type\": \"com.example.test\",\n  \"annotations\": [\n    {\n      \"type\": \"com.example.annotation\",\n      \"value\": {\n        \"foo\": \"bar\"\n      }\n    }\n  ]\n}' | \\\n    curl -X POST -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    -F \"metadata=@-;type=application/json\" -F \"content=@filename.jpg\" \\\n    \"https://api.app.net/files\"",
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/file/lifecycle/#create-a-file"
          },
          "displayName" : "/files",
          "path" : "/files",
          "url" : "https://api.app.net//files"
        },
        {
          "params" : [
            {
              "name" : "file_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the File to retrieve."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/files/1\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/file/lookup/#retrieve-a-file"
          },
          "displayName" : "/files/{file_id}",
          "path" : "/files/{file_id}",
          "url" : "https://api.app.net//files/{file_id}"
        },
        {
          "params" : [
            {
              "name" : "ids",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "A comma separated list of File ids to retrieve."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/files?ids=1,2,6502\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/file/lookup/#retrieve-multiple-files"
          },
          "displayName" : "/files",
          "path" : "/files",
          "url" : "https://api.app.net//files"
        },
        {
          "params" : [
            {
              "name" : "file_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the File to delete."
              }
            }
          ],
          "curl" : "curl -X DELETE -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/files/1\"",
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/file/lifecycle/#delete-a-file"
          },
          "displayName" : "/files/{file_id}",
          "path" : "/files/{file_id}",
          "url" : "https://api.app.net//files/{file_id}"
        },
        {
          "params" : [
            {
              "name" : "file_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the File to update."
              }
            }
          ],
          "curl" : "curl -X PUT -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    -H \"Content-Type: application/json\" -d \"{\n  \\\"name\\\": \\\"update_filename.jpg\\\"\n}\" \\\n    \"https://api.app.net/files/1\"",
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/file/lifecycle/#update-a-file"
          },
          "displayName" : "/files/{file_id}",
          "path" : "/files/{file_id}",
          "url" : "https://api.app.net//files/{file_id}"
        },
        {
          "params" : [
            {
              "name" : "file_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the File to retrieve content for."
              }
            }
          ],
          "curl" : "curl -X PUT -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"Content-Type: image/png\" \\\n    --data-binary \"@filename.png\" \"https://api.app.net/files/1/content\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/file/content/#get-file-content"
          },
          "displayName" : "/files/{file_id}/content",
          "path" : "/files/{file_id}/content",
          "url" : "https://api.app.net//files/{file_id}/content"
        },
        {
          "params" : [
            {
              "name" : "file_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the File to set content for."
              }
            }
          ],
          "curl" : "curl -X PUT -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"Content-Type: image/png\" \\\n    --data-binary \"@filename.png\" \"https://api.app.net/files/1/content\"",
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/file/content/#set-file-content"
          },
          "displayName" : "/files/{file_id}/content",
          "path" : "/files/{file_id}/content",
          "url" : "https://api.app.net//files/{file_id}/content"
        },
        {
          "params" : [
            {
              "name" : "file_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the File to set content for."
              }
            },
            {
              "name" : "derived_file_key",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The key identifying the derived file you want to create."
              }
            }
          ],
          "curl" : "curl -X PUT -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"Content-Type: image/png\" \\\n    --data-binary \"@filename.png\" \"https://api.app.net/files/1/content/thumbnail_png\"",
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/file/content/#set-derived-file-content"
          },
          "displayName" : "/files/{file_id}/content/{derived_file_key}",
          "path" : "/files/{file_id}/content/{derived_file_key}",
          "url" : "https://api.app.net//files/{file_id}/content/{derived_file_key}"
        },
        {
          "params" : [
            {
              "name" : "connection_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The connection id of the User Stream to delete."
              }
            }
          ],
          "curl" : "curl -X DELETE -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" \"https://api.app.net/streams/sxousNClc4Cq12du3f6GTZXNUvaHoJnFnjdOt6fH2xhJolPdDfR3rOxxjdPfPOIf\"",
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/user-stream/lifecycle/#delete-a-user-stream"
          },
          "displayName" : "/users/me/streams/{connection_id}",
          "path" : "/users/me/streams/{connection_id}",
          "url" : "https://api.app.net//users/me/streams/{connection_id}"
        },
        {
          "params" : [
            {
              "name" : "connection_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The connection id of the User Stream the subscription belongs to."
              }
            },
            {
              "name" : "subscription_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The subscription id of the subscription to cancel"
              }
            }
          ],
          "curl" : "curl -X DELETE -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" \"https://api.app.net/streams/sxousNClc4Cq12du3f6GTZXNUvaHoJnFnjdOt6fH2xhJolPdDfR3rOxxjdPfPOIf/bf42ca05-e67e-4e26-8bd0-8b042dd5b04c\"",
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/user-stream/lifecycle/#delete-a-user-stream-subscription"
          },
          "displayName" : "/users/me/streams/{connection_id}/{subscription_id}",
          "path" : "/users/me/streams/{connection_id}/{subscription_id}",
          "url" : "https://api.app.net//users/me/streams/{connection_id}/{subscription_id}"
        },
        {
          "params" : [
            {
              "name" : "GET",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "https://api.app.net/filters/{filter_id}"
              }
            }
          ],
          "curl" : "curl -X POST -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    -H \"Content-Type: application/json\" -d \"{\n  \\\"clauses\\\": [\n    {\n      \\\"field\\\": \\\"/data/entities/hashtags/*/name\\\",\n      \\\"object_type\\\": \\\"post\\\",\n      \\\"operator\\\": \\\"matches\\\",\n      \\\"value\\\": \\\"rollout\\\"\n    }\n  ],\n  \\\"match_policy\\\": \\\"include_any\\\",\n  \\\"name\\\": \\\"Posts about rollouts\\\"\n}\" \\\n    \"https://api.app.net/filters\"",
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/filter/lifecycle/#create-a-filter"
          },
          "displayName" : "/filters",
          "path" : "/filters",
          "url" : "https://api.app.net//filters"
        },
        {
          "params" : [
            {
              "name" : "filter_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Filter to retrieve."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/filters/1\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/filter/lifecycle/#retrieve-a-filter"
          },
          "displayName" : "/filters/{filter_id}",
          "path" : "/filters/{filter_id}",
          "url" : "https://api.app.net//filters/{filter_id}"
        },
        {
          "params" : [
            {
              "name" : "filter_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Filter to update."
              }
            }
          ],
          "curl" : "curl -X PUT -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    -H \"Content-Type: application/json\" -d \"{\n  \\\"match_policy\\\": \\\"include_any\\\",\n  \\\"clauses\\\": [\n    {\n      \\\"operator\\\": \\\"matches\\\",\n      \\\"field\\\": \\\"/data/entities/hashtags/*/name\\\",\n      \\\"object_type\\\": \\\"post\\\",\n      \\\"value\\\": \\\"rollout\\\"\n    },\n    {\n      \\\"operator\\\": \\\"matches\\\",\n      \\\"field\\\": \\\"/data/entities/hashtags/*/name\\\",\n      \\\"object_type\\\": \\\"post\\\",\n      \\\"value\\\": \\\"bug\\\"\n    }\n  ],\n  \\\"name\\\": \\\"Posts about rollouts or bugs\\\"\n}\" \\\n    \"https://api.app.net/filters/1\"",
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/filter/lifecycle/#update-a-filter"
          },
          "displayName" : "/filters/{filter_id}",
          "path" : "/filters/{filter_id}",
          "url" : "https://api.app.net//filters/{filter_id}"
        },
        {
          "params" : [
            {
              "name" : "filter_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The id of the Filter to delete."
              }
            }
          ],
          "curl" : "curl -X DELETE -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/filters/1\"",
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/filter/lifecycle/#delete-a-filter"
          },
          "displayName" : "/filters/{filter_id}",
          "path" : "/filters/{filter_id}",
          "url" : "https://api.app.net//filters/{filter_id}"
        },
        {
          "params" : [
            {
              "name" : "text",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The raw text to process."
              }
            }
          ],
          "curl" : "curl -X POST -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    -H \"Content-Type: application/json\" -d \"{\n  \\\"text\\\": \\\"This is #awesome tell @voidfiles about http://google.com\\\"\n}\" \\\n    \"https://api.app.net/text/process\"",
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/text-processor/"
          },
          "displayName" : "/text/process",
          "path" : "/text/process",
          "url" : "https://api.app.net//text/process"
        },
        {
          "params" : [
            {
              "name" : "GET",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "https://api.app.net/apps/me/tokens"
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR APP TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/apps/me/tokens/user_ids\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/token/#retrieve-authorized-user-ids-for-an-app"
          },
          "displayName" : "/apps/me/tokens/user_ids",
          "path" : "/apps/me/tokens/user_ids",
          "url" : "https://api.app.net//apps/me/tokens/user_ids"
        },
        {
          "params" : [
            {
              "name" : "factual_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The Factual id of the Place to retrieve."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/places/19931850-dc2f-012e-561d-003048cad9da\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/place/#retrieve-a-place"
          },
          "displayName" : "/places/{factual_id}",
          "path" : "/places/{factual_id}",
          "url" : "https://api.app.net//places/{factual_id}"
        },
        {
          "params" : [
            {
              "name" : "GET",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "https://api.app.net/posts/stream/explore/{slug}"
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/posts/stream/explore\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/explore/#retrieve-all-explore-streams"
          },
          "displayName" : "/posts/stream/explore",
          "path" : "/posts/stream/explore",
          "url" : "https://api.app.net//posts/stream/explore"
        },
        {
          "params" : [
            {
              "name" : "slug",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The slug of the Explore Stream to retrieve."
              }
            }
          ],
          "curl" : "curl -H \"Authorization: Bearer <YOUR ACCESS TOKEN>\" -H \"X-ADN-Pretty-JSON: 1\" \\\n    \"https://api.app.net/posts/stream/explore/photos\"",
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.app.net/reference/resources/explore/#retrieve-an-explore-stream"
          },
          "displayName" : "/posts/stream/explore/{slug}",
          "path" : "/posts/stream/explore/{slug}",
          "url" : "https://api.app.net//posts/stream/explore/{slug}"
        }
      ]
    },
    "type" : "channel:app.net"
  },
  {
    "_id" : "53a26faf0ced4e00501e05b0",
    "application" : {
      "base" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com",
      "resources" : [
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-benchmark.html"
          },
          "path" : "/skynet_trans_log/_bench/abort/{name}",
          "httpMethod" : "POST",
          "params" : [ ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_bench/abort/{name}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-benchmark.html"
          },
          "path" : "/skynet_trans_log/_bench",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "verbose",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether to return verbose statistics about each iteration (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_bench"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/docs-bulk.html"
          },
          "path" : "/skynet_trans_log/_bulk",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "consistency",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Explicit write consistency setting for the operation"
              },
              "required" : false
            },
            {
              "name" : "refresh",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Refresh the index after performing the operation"
              },
              "required" : false
            },
            {
              "name" : "replication",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Explicitely set the replication type"
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific routing value"
              },
              "required" : false
            },
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            },
            {
              "name" : "type",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Default document type for items which don't provide one"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_bulk"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-aliases.html"
          },
          "path" : "/skynet_trans_log/_cat/aliases",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "h",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "Comma-separated list of column names to display"
              },
              "required" : false
            },
            {
              "name" : "help",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return help information"
              },
              "required" : false
            },
            {
              "name" : "v",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Verbose mode. Display column headers"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cat/aliases"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-allocation.html"
          },
          "path" : "/skynet_trans_log/_cat/allocation",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "bytes",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "The unit in which to display byte values"
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "h",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "Comma-separated list of column names to display"
              },
              "required" : false
            },
            {
              "name" : "help",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return help information"
              },
              "required" : false
            },
            {
              "name" : "v",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Verbose mode. Display column headers"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cat/allocation"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-count.html"
          },
          "path" : "/skynet_trans_log/_cat/count",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "h",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "Comma-separated list of column names to display"
              },
              "required" : false
            },
            {
              "name" : "help",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return help information"
              },
              "required" : false
            },
            {
              "name" : "v",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Verbose mode. Display column headers"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cat/count"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-fielddata.html"
          },
          "path" : "/skynet_trans_log/_cat/fielddata",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "bytes",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "The unit in which to display byte values"
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "h",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "Comma-separated list of column names to display"
              },
              "required" : false
            },
            {
              "name" : "help",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return help information"
              },
              "required" : false
            },
            {
              "name" : "v",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Verbose mode. Display column headers"
              },
              "required" : false
            },
            {
              "name" : "fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of fields to return the fielddata size"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cat/fielddata"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-health.html"
          },
          "path" : "/skynet_trans_log/_cat/health",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "h",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "Comma-separated list of column names to display"
              },
              "required" : false
            },
            {
              "name" : "help",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return help information"
              },
              "required" : false
            },
            {
              "name" : "ts",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Set to false to disable timestamping"
              },
              "required" : false
            },
            {
              "name" : "v",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Verbose mode. Display column headers"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cat/health"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat.html"
          },
          "path" : "/skynet_trans_log/_cat",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "help",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return help information"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cat"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-indices.html"
          },
          "path" : "/skynet_trans_log/_cat/indices",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "bytes",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "The unit in which to display byte values"
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "h",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "Comma-separated list of column names to display"
              },
              "required" : false
            },
            {
              "name" : "help",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return help information"
              },
              "required" : false
            },
            {
              "name" : "pri",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Set to true to return stats only for primary shards"
              },
              "required" : false
            },
            {
              "name" : "v",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Verbose mode. Display column headers"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cat/indices"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-master.html"
          },
          "path" : "/skynet_trans_log/_cat/master",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "h",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "Comma-separated list of column names to display"
              },
              "required" : false
            },
            {
              "name" : "help",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return help information"
              },
              "required" : false
            },
            {
              "name" : "v",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Verbose mode. Display column headers"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cat/master"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-nodes.html"
          },
          "path" : "/skynet_trans_log/_cat/nodes",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "h",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "Comma-separated list of column names to display"
              },
              "required" : false
            },
            {
              "name" : "help",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return help information"
              },
              "required" : false
            },
            {
              "name" : "v",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Verbose mode. Display column headers"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cat/nodes"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-pending-tasks.html"
          },
          "path" : "/skynet_trans_log/_cat/pending_tasks",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "h",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "Comma-separated list of column names to display"
              },
              "required" : false
            },
            {
              "name" : "help",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return help information"
              },
              "required" : false
            },
            {
              "name" : "v",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Verbose mode. Display column headers"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cat/pending_tasks"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-plugins.html"
          },
          "path" : "/skynet_trans_log/_cat/plugins",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "h",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "Comma-separated list of column names to display"
              },
              "required" : false
            },
            {
              "name" : "help",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return help information"
              },
              "required" : false
            },
            {
              "name" : "v",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Verbose mode. Display column headers"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cat/plugins"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-recovery.html"
          },
          "path" : "/skynet_trans_log/_cat/recovery",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "bytes",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "The unit in which to display byte values"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "h",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "Comma-separated list of column names to display"
              },
              "required" : false
            },
            {
              "name" : "help",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return help information"
              },
              "required" : false
            },
            {
              "name" : "v",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Verbose mode. Display column headers"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cat/recovery"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-shards.html"
          },
          "path" : "/skynet_trans_log/_cat/shards",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "h",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "Comma-separated list of column names to display"
              },
              "required" : false
            },
            {
              "name" : "help",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return help information"
              },
              "required" : false
            },
            {
              "name" : "v",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Verbose mode. Display column headers"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cat/shards"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat-thread-pool.html"
          },
          "path" : "/skynet_trans_log/_cat/thread_pool",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "h",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "Comma-separated list of column names to display"
              },
              "required" : false
            },
            {
              "name" : "help",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return help information"
              },
              "required" : false
            },
            {
              "name" : "v",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Verbose mode. Display column headers"
              },
              "required" : false
            },
            {
              "name" : "full_id",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Enables displaying the complete node ids"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cat/thread_pool"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-request-scroll.html"
          },
          "path" : "/skynet_trans_log/_search/scroll/{scroll_id}",
          "httpMethod" : "DELETE",
          "params" : [ ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_search/scroll/{scroll_id}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cluster-update-settings.html"
          },
          "path" : "/skynet_trans_log/_cluster/settings",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "flat_settings",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return settings in flat format (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cluster/settings"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cluster-health.html"
          },
          "path" : "/skynet_trans_log/_cluster/health",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "level",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Specify the level of detail for returned information"
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            },
            {
              "name" : "wait_for_active_shards",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "Wait until the specified number of shards is active"
              },
              "required" : false
            },
            {
              "name" : "wait_for_nodes",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Wait until the specified number of nodes is available"
              },
              "required" : false
            },
            {
              "name" : "wait_for_relocating_shards",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "Wait until the specified number of relocating shards is finished"
              },
              "required" : false
            },
            {
              "name" : "wait_for_status",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Wait until cluster is in a specific state"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cluster/health"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cluster-pending.html"
          },
          "path" : "/skynet_trans_log/_cluster/pending_tasks",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cluster/pending_tasks"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cluster-update-settings.html"
          },
          "path" : "/skynet_trans_log/_cluster/settings",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "flat_settings",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return settings in flat format (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cluster/settings"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cluster-reroute.html"
          },
          "path" : "/skynet_trans_log/_cluster/reroute",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "dry_run",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Simulate the operation only and return the resulting state"
              },
              "required" : false
            },
            {
              "name" : "explain",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return an explanation of why the commands can or cannot be executed"
              },
              "required" : false
            },
            {
              "name" : "filter_metadata",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Don't return cluster state metadata (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cluster/reroute"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cluster-state.html"
          },
          "path" : "/skynet_trans_log/_cluster/state",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            },
            {
              "name" : "flat_settings",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return settings in flat format (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cluster/state"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cluster-stats.html"
          },
          "path" : "/skynet_trans_log/_cluster/stats",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "flat_settings",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return settings in flat format (default: false)"
              },
              "required" : false
            },
            {
              "name" : "human",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to return time and byte values in human-readable format."
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cluster/stats"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-count.html"
          },
          "path" : "/skynet_trans_log/_count",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "min_score",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "Include only documents with a specific `_score` value in the result"
              },
              "required" : false
            },
            {
              "name" : "preference",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specify the node or shard the operation should be performed on (default: random)"
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific routing value"
              },
              "required" : false
            },
            {
              "name" : "source",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The URL-encoded query definition (instead of using the request body)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_count"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-percolate.html"
          },
          "path" : "/skynet_trans_log/{index}/{type}/_percolate/count",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "routing",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of specific routing values"
              },
              "required" : false
            },
            {
              "name" : "preference",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specify the node or shard the operation should be performed on (default: random)"
              },
              "required" : false
            },
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "percolate_index",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The index to count percolate the document into. Defaults to index."
              },
              "required" : false
            },
            {
              "name" : "percolate_type",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The type to count percolate document into. Defaults to type."
              },
              "required" : false
            },
            {
              "name" : "version",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "Explicit version number for concurrency control"
              },
              "required" : false
            },
            {
              "name" : "version_type",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Specific version type"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/{type}/_percolate/count"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/docs-delete.html"
          },
          "path" : "/skynet_trans_log/{index}/{type}/{id}",
          "httpMethod" : "DELETE",
          "params" : [
            {
              "name" : "consistency",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Specific write consistency setting for the operation"
              },
              "required" : false
            },
            {
              "name" : "parent",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "ID of parent document"
              },
              "required" : false
            },
            {
              "name" : "refresh",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Refresh the index after performing the operation"
              },
              "required" : false
            },
            {
              "name" : "replication",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Specific replication type"
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific routing value"
              },
              "required" : false
            },
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            },
            {
              "name" : "version",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "Explicit version number for concurrency control"
              },
              "required" : false
            },
            {
              "name" : "version_type",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Specific version type"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/{type}/{id}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/docs-delete-by-query.html"
          },
          "path" : "/skynet_trans_log/{index}/_query",
          "httpMethod" : "DELETE",
          "params" : [
            {
              "name" : "analyzer",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The analyzer to use for the query string"
              },
              "required" : false
            },
            {
              "name" : "consistency",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Specific write consistency setting for the operation"
              },
              "required" : false
            },
            {
              "name" : "default_operator",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "The default operator for query string query (AND or OR)"
              },
              "required" : false
            },
            {
              "name" : "df",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The field to use as default where no field prefix is given in the query string"
              },
              "required" : false
            },
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "replication",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Specific replication type"
              },
              "required" : false
            },
            {
              "name" : "q",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Query in the Lucene query string syntax"
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific routing value"
              },
              "required" : false
            },
            {
              "name" : "source",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The URL-encoded query definition (instead of using the request body)"
              },
              "required" : false
            },
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/_query"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/docs-get.html"
          },
          "path" : "/skynet_trans_log/{index}/{type}/{id}",
          "httpMethod" : "HEAD",
          "params" : [
            {
              "name" : "parent",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The ID of the parent document"
              },
              "required" : false
            },
            {
              "name" : "preference",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specify the node or shard the operation should be performed on (default: random)"
              },
              "required" : false
            },
            {
              "name" : "realtime",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether to perform the operation in realtime or search mode"
              },
              "required" : false
            },
            {
              "name" : "refresh",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Refresh the shard containing the document before performing the operation"
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific routing value"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/{type}/{id}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-explain.html"
          },
          "path" : "/skynet_trans_log/{index}/{type}/{id}/_explain",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "analyze_wildcard",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)"
              },
              "required" : false
            },
            {
              "name" : "analyzer",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The analyzer for the query string query"
              },
              "required" : false
            },
            {
              "name" : "default_operator",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "The default operator for query string query (AND or OR)"
              },
              "required" : false
            },
            {
              "name" : "df",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The default field for query string query (default: _all)"
              },
              "required" : false
            },
            {
              "name" : "fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of fields to return in the response"
              },
              "required" : false
            },
            {
              "name" : "lenient",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored"
              },
              "required" : false
            },
            {
              "name" : "lowercase_expanded_terms",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether query terms should be lowercased"
              },
              "required" : false
            },
            {
              "name" : "parent",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The ID of the parent document"
              },
              "required" : false
            },
            {
              "name" : "preference",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specify the node or shard the operation should be performed on (default: random)"
              },
              "required" : false
            },
            {
              "name" : "q",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Query in the Lucene query string syntax"
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific routing value"
              },
              "required" : false
            },
            {
              "name" : "source",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The URL-encoded query definition (instead of using the request body)"
              },
              "required" : false
            },
            {
              "name" : "_source",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "True or false to return the _source field or not, or a list of fields to return"
              },
              "required" : false
            },
            {
              "name" : "_source_exclude",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A list of fields to exclude from the returned _source field"
              },
              "required" : false
            },
            {
              "name" : "_source_include",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A list of fields to extract and return from the _source field"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/{type}/{id}/_explain"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/docs-get.html"
          },
          "path" : "/skynet_trans_log/{index}/{type}/{id}",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of fields to return in the response"
              },
              "required" : false
            },
            {
              "name" : "parent",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The ID of the parent document"
              },
              "required" : false
            },
            {
              "name" : "preference",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specify the node or shard the operation should be performed on (default: random)"
              },
              "required" : false
            },
            {
              "name" : "realtime",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether to perform the operation in realtime or search mode"
              },
              "required" : false
            },
            {
              "name" : "refresh",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Refresh the shard containing the document before performing the operation"
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific routing value"
              },
              "required" : false
            },
            {
              "name" : "_source",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "True or false to return the _source field or not, or a list of fields to return"
              },
              "required" : false
            },
            {
              "name" : "_source_exclude",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A list of fields to exclude from the returned _source field"
              },
              "required" : false
            },
            {
              "name" : "_source_include",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A list of fields to extract and return from the _source field"
              },
              "required" : false
            },
            {
              "name" : "version",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "Explicit version number for concurrency control"
              },
              "required" : false
            },
            {
              "name" : "version_type",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Specific version type"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/{type}/{id}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/docs-get.html"
          },
          "path" : "/skynet_trans_log/{index}/{type}/{id}/_source",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "parent",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The ID of the parent document"
              },
              "required" : false
            },
            {
              "name" : "preference",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specify the node or shard the operation should be performed on (default: random)"
              },
              "required" : false
            },
            {
              "name" : "realtime",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether to perform the operation in realtime or search mode"
              },
              "required" : false
            },
            {
              "name" : "refresh",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Refresh the shard containing the document before performing the operation"
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific routing value"
              },
              "required" : false
            },
            {
              "name" : "_source",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "True or false to return the _source field or not, or a list of fields to return"
              },
              "required" : false
            },
            {
              "name" : "_source_exclude",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A list of fields to exclude from the returned _source field"
              },
              "required" : false
            },
            {
              "name" : "_source_include",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A list of fields to extract and return from the _source field"
              },
              "required" : false
            },
            {
              "name" : "version",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "Explicit version number for concurrency control"
              },
              "required" : false
            },
            {
              "name" : "version_type",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Specific version type"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/{type}/{id}/_source"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/docs-index_.html"
          },
          "path" : "/skynet_trans_log/{index}/{type}",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "consistency",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Explicit write consistency setting for the operation"
              },
              "required" : false
            },
            {
              "name" : "op_type",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation type"
              },
              "required" : false
            },
            {
              "name" : "parent",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "ID of the parent document"
              },
              "required" : false
            },
            {
              "name" : "refresh",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Refresh the index after performing the operation"
              },
              "required" : false
            },
            {
              "name" : "replication",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Specific replication type"
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific routing value"
              },
              "required" : false
            },
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            },
            {
              "name" : "timestamp",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit timestamp for the document"
              },
              "required" : false
            },
            {
              "name" : "ttl",
              "type" : "duration",
              "style" : "query",
              "doc" : {
                "t" : "Expiration time for the document"
              },
              "required" : false
            },
            {
              "name" : "version",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "Explicit version number for concurrency control"
              },
              "required" : false
            },
            {
              "name" : "version_type",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Specific version type"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/{type}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-analyze.html"
          },
          "path" : "/skynet_trans_log/_analyze",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "analyzer",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The name of the analyzer to use"
              },
              "required" : false
            },
            {
              "name" : "char_filters",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of character filters to use for the analysis"
              },
              "required" : false
            },
            {
              "name" : "field",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Use the analyzer configured for this field (instead of passing the analyzer name)"
              },
              "required" : false
            },
            {
              "name" : "filters",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of filters to use for the analysis"
              },
              "required" : false
            },
            {
              "name" : "index",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The name of the index to scope the operation"
              },
              "required" : false
            },
            {
              "name" : "prefer_local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)"
              },
              "required" : false
            },
            {
              "name" : "text",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The text on which the analysis should be performed (when request body is not used)"
              },
              "required" : false
            },
            {
              "name" : "tokenizer",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The name of the tokenizer to use for the analysis"
              },
              "required" : false
            },
            {
              "name" : "format",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Format of the output"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_analyze"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-clearcache.html"
          },
          "path" : "/skynet_trans_log/_cache/clear",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "field_data",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Clear field data"
              },
              "required" : false
            },
            {
              "name" : "fielddata",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Clear field data"
              },
              "required" : false
            },
            {
              "name" : "fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of fields to clear when using the `field_data` parameter (default: all)"
              },
              "required" : false
            },
            {
              "name" : "filter",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Clear filter caches"
              },
              "required" : false
            },
            {
              "name" : "filter_cache",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Clear filter caches"
              },
              "required" : false
            },
            {
              "name" : "filter_keys",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of keys to clear when using the `filter_cache` parameter (default: all)"
              },
              "required" : false
            },
            {
              "name" : "id",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Clear ID caches for parent/child"
              },
              "required" : false
            },
            {
              "name" : "id_cache",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Clear ID caches for parent/child"
              },
              "required" : false
            },
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "index",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of index name to limit the operation"
              },
              "required" : false
            },
            {
              "name" : "recycler",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Clear the recycler cache"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_cache/clear"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-open-close.html"
          },
          "path" : "/skynet_trans_log/{index}/_close",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            },
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/_close"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-create-index.html"
          },
          "path" : "/skynet_trans_log/{index}",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-delete-index.html"
          },
          "path" : "/skynet_trans_log/{index}",
          "httpMethod" : "DELETE",
          "params" : [
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-aliases.html"
          },
          "path" : "/skynet_trans_log/{index}/_alias/{name}",
          "httpMethod" : "DELETE",
          "params" : [
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit timestamp for the document"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/_alias/{name}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-delete-mapping.html"
          },
          "path" : "/skynet_trans_log/{index}/{type}/_mapping",
          "httpMethod" : "DELETE",
          "params" : [
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/{type}/_mapping"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-templates.html"
          },
          "path" : "/skynet_trans_log/_template/{name}",
          "httpMethod" : "DELETE",
          "params" : [
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_template/{name}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-warmers.html"
          },
          "path" : "/skynet_trans_log/{index}/_warmer/{name}",
          "httpMethod" : "DELETE",
          "params" : [
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            },
            {
              "name" : "name",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of warmer names to delete (supports wildcards); use `_all` to delete all warmers in the specified indices. You must specify a name either in the uri or in the parameters."
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/_warmer/{name}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-get-settings.html"
          },
          "path" : "/skynet_trans_log/{index}",
          "httpMethod" : "HEAD",
          "params" : [
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-aliases.html"
          },
          "path" : "/skynet_trans_log/_alias/{name}",
          "httpMethod" : "HEAD",
          "params" : [
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_alias/{name}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-templates.html"
          },
          "path" : "/skynet_trans_log/_template/{name}",
          "httpMethod" : "HEAD",
          "params" : [
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_template/{name}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-types-exists.html"
          },
          "path" : "/skynet_trans_log/{index}/{type}",
          "httpMethod" : "HEAD",
          "params" : [
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/{type}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-flush.html"
          },
          "path" : "/skynet_trans_log/_flush",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "force",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)"
              },
              "required" : false
            },
            {
              "name" : "full",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "If set to true a new index writer is created and settings that have been changed related to the index writer will be refreshed. Note: if a full flush is required for a setting to take effect this will be part of the settings update process and it not required to be executed by the user. (This setting can be considered as internal)"
              },
              "required" : false
            },
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_flush"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-aliases.html"
          },
          "path" : "/skynet_trans_log/_alias/",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_alias/"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-aliases.html"
          },
          "path" : "/skynet_trans_log/_aliases",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_aliases"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html"
          },
          "path" : "/skynet_trans_log/_mapping/field/{field}",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "include_defaults",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether the default mapping values should be returned as well"
              },
              "required" : false
            },
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_mapping/field/{field}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-get-mapping.html"
          },
          "path" : "/skynet_trans_log/_mapping",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_mapping"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-get-mapping.html"
          },
          "path" : "/skynet_trans_log/_settings",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "flat_settings",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return settings in flat format (default: false)"
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_settings"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-templates.html"
          },
          "path" : "/skynet_trans_log/_template/{name}",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "flat_settings",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return settings in flat format (default: false)"
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_template/{name}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-warmers.html"
          },
          "path" : "/skynet_trans_log/_warmer",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_warmer"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-open-close.html"
          },
          "path" : "/skynet_trans_log/{index}/_open",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            },
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/_open"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-optimize.html"
          },
          "path" : "/skynet_trans_log/_optimize",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "flush",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether the index should be flushed after performing the operation (default: true)"
              },
              "required" : false
            },
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "max_num_segments",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "The number of segments the index should be merged into (default: dynamic)"
              },
              "required" : false
            },
            {
              "name" : "only_expunge_deletes",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether the operation should only expunge deleted documents"
              },
              "required" : false
            },
            {
              "name" : "operation_threading",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "TODO: ?"
              },
              "required" : false
            },
            {
              "name" : "wait_for_merge",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether the request should block until the merge process is finished (default: true)"
              },
              "required" : false
            },
            {
              "name" : "force",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Force a merge operation to run, even if there is a single segment in the index (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_optimize"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-aliases.html"
          },
          "path" : "/skynet_trans_log/{index}/_alias/{name}",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit timestamp for the document"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/_alias/{name}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-put-mapping.html"
          },
          "path" : "/skynet_trans_log/{index}/{type}/_mapping",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "ignore_conflicts",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether to ignore conflicts while updating the mapping (default: false)"
              },
              "required" : false
            },
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            },
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/{type}/_mapping"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-update-settings.html"
          },
          "path" : "/skynet_trans_log/_settings",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            },
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "flat_settings",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return settings in flat format (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_settings"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-templates.html"
          },
          "path" : "/skynet_trans_log/_template/{name}",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "order",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)"
              },
              "required" : false
            },
            {
              "name" : "create",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether the index template should only be added if new or can also replace an existing one"
              },
              "required" : false
            },
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            },
            {
              "name" : "flat_settings",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return settings in flat format (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_template/{name}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-warmers.html"
          },
          "path" : "/skynet_trans_log/{index}/_warmer/{name}",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            },
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed) in the search request to warm"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices in the search request to warm. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both, in the search request to warm."
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/_warmer/{name}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-recovery.html"
          },
          "path" : "/skynet_trans_log/_recovery",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "detailed",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to display detailed information about shard recovery"
              },
              "required" : false
            },
            {
              "name" : "active_only",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Display only those recoveries that are currently on-going"
              },
              "required" : false
            },
            {
              "name" : "human",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to return time and byte values in human-readable format."
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_recovery"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-refresh.html"
          },
          "path" : "/skynet_trans_log/_refresh",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "force",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Force a refresh even if not required"
              },
              "required" : false
            },
            {
              "name" : "operation_threading",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "TODO: ?"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_refresh"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-segments.html"
          },
          "path" : "/skynet_trans_log/_segments",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "human",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to return time and byte values in human-readable format."
              },
              "required" : false
            },
            {
              "name" : "operation_threading",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "TODO: ?"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_segments"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-stats.html"
          },
          "path" : "/skynet_trans_log/_stats",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "completion_fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)"
              },
              "required" : false
            },
            {
              "name" : "fielddata_fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of fields for `fielddata` index metric (supports wildcards)"
              },
              "required" : false
            },
            {
              "name" : "fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)"
              },
              "required" : false
            },
            {
              "name" : "groups",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of search groups for `search` index metric"
              },
              "required" : false
            },
            {
              "name" : "human",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to return time and byte values in human-readable format."
              },
              "required" : false
            },
            {
              "name" : "level",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Return stats aggregated at cluster, index or shard level"
              },
              "required" : false
            },
            {
              "name" : "types",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of document types for the `indexing` index metric"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_stats"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/indices-aliases.html"
          },
          "path" : "/skynet_trans_log/_aliases",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Request timeout"
              },
              "required" : false
            },
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Specify timeout for connection to master"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_aliases"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-validate.html"
          },
          "path" : "/skynet_trans_log/_validate/query",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "explain",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return detailed information about the error"
              },
              "required" : false
            },
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "operation_threading",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "TODO: ?"
              },
              "required" : false
            },
            {
              "name" : "source",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The URL-encoded query definition (instead of using the request body)"
              },
              "required" : false
            },
            {
              "name" : "q",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Query in the Lucene query string syntax"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_validate/query"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/"
          },
          "path" : "/skynet_trans_log/",
          "httpMethod" : "GET",
          "params" : [ ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-benchmark.html"
          },
          "path" : "/skynet_trans_log/_bench",
          "httpMethod" : "GET",
          "params" : [ ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_bench"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/docs-multi-get.html"
          },
          "path" : "/skynet_trans_log/_mget",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of fields to return in the response"
              },
              "required" : false
            },
            {
              "name" : "preference",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specify the node or shard the operation should be performed on (default: random)"
              },
              "required" : false
            },
            {
              "name" : "realtime",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether to perform the operation in realtime or search mode"
              },
              "required" : false
            },
            {
              "name" : "refresh",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Refresh the shard containing the document before performing the operation"
              },
              "required" : false
            },
            {
              "name" : "_source",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "True or false to return the _source field or not, or a list of fields to return"
              },
              "required" : false
            },
            {
              "name" : "_source_exclude",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A list of fields to exclude from the returned _source field"
              },
              "required" : false
            },
            {
              "name" : "_source_include",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A list of fields to extract and return from the _source field"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_mget"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-more-like-this.html"
          },
          "path" : "/skynet_trans_log/{index}/{type}/{id}/_mlt",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "boost_terms",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "The boost factor"
              },
              "required" : false
            },
            {
              "name" : "max_doc_freq",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "The word occurrence frequency as count: words with higher occurrence in the corpus will be ignored"
              },
              "required" : false
            },
            {
              "name" : "max_query_terms",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "The maximum query terms to be included in the generated query"
              },
              "required" : false
            },
            {
              "name" : "max_word_length",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "The minimum length of the word: longer words will be ignored"
              },
              "required" : false
            },
            {
              "name" : "min_doc_freq",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "The word occurrence frequency as count: words with lower occurrence in the corpus will be ignored"
              },
              "required" : false
            },
            {
              "name" : "min_term_freq",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "The term frequency as percent: terms with lower occurence in the source document will be ignored"
              },
              "required" : false
            },
            {
              "name" : "min_word_length",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "The minimum length of the word: shorter words will be ignored"
              },
              "required" : false
            },
            {
              "name" : "mlt_fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "Specific fields to perform the query against"
              },
              "required" : false
            },
            {
              "name" : "percent_terms_to_match",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "How many terms have to match in order to consider the document a match (default: 0.3)"
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific routing value"
              },
              "required" : false
            },
            {
              "name" : "search_from",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "The offset from which to return results"
              },
              "required" : false
            },
            {
              "name" : "search_indices",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of indices to perform the query against (default: the index containing the document)"
              },
              "required" : false
            },
            {
              "name" : "search_query_hint",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The search query hint"
              },
              "required" : false
            },
            {
              "name" : "search_scroll",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "A scroll search request definition"
              },
              "required" : false
            },
            {
              "name" : "search_size",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "The number of documents to return (default: 10)"
              },
              "required" : false
            },
            {
              "name" : "search_source",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "A specific search request definition (instead of using the request body)"
              },
              "required" : false
            },
            {
              "name" : "search_type",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific search type (eg. `dfs_then_fetch`, `count`, etc)"
              },
              "required" : false
            },
            {
              "name" : "search_types",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of types to perform the query against (default: the same type as the document)"
              },
              "required" : false
            },
            {
              "name" : "stop_words",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A list of stop words to be ignored"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/{type}/{id}/_mlt"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-percolate.html"
          },
          "path" : "/skynet_trans_log/_mpercolate",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_mpercolate"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-multi-search.html"
          },
          "path" : "/skynet_trans_log/_msearch",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "search_type",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Search operation type"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_msearch"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html"
          },
          "path" : "/skynet_trans_log/_mtermvectors",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "ids",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of documents ids. You must define ids as parameter or set \"ids\" or \"docs\" in the request body"
              },
              "required" : false
            },
            {
              "name" : "term_statistics",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
              },
              "required" : false
            },
            {
              "name" : "field_statistics",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
              },
              "required" : false
            },
            {
              "name" : "fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
              },
              "required" : false
            },
            {
              "name" : "offsets",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
              },
              "required" : false
            },
            {
              "name" : "positions",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
              },
              "required" : false
            },
            {
              "name" : "payloads",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
              },
              "required" : false
            },
            {
              "name" : "preference",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific routing value. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
              },
              "required" : false
            },
            {
              "name" : "parent",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Parent id of documents. Applies to all returned documents unless otherwise specified in body \"params\" or \"docs\"."
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_mtermvectors"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html"
          },
          "path" : "/skynet_trans_log/_nodes/hot_threads",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "interval",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "The interval for the second sampling of threads"
              },
              "required" : false
            },
            {
              "name" : "snapshots",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "Number of samples of thread stacktrace (default: 10)"
              },
              "required" : false
            },
            {
              "name" : "threads",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "Specify the number of threads to provide information for (default: 3)"
              },
              "required" : false
            },
            {
              "name" : "type",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "The type to sample (default: cpu)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_nodes/hot_threads"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cluster-nodes-info.html"
          },
          "path" : "/skynet_trans_log/_nodes",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "flat_settings",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return settings in flat format (default: false)"
              },
              "required" : false
            },
            {
              "name" : "human",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to return time and byte values in human-readable format."
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_nodes"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cluster-nodes-shutdown.html"
          },
          "path" : "/skynet_trans_log/_shutdown",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "delay",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Set the delay for the operation (default: 1s)"
              },
              "required" : false
            },
            {
              "name" : "exit",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Exit the JVM as well (default: true)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_shutdown"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html"
          },
          "path" : "/skynet_trans_log/_nodes/stats",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "completion_fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)"
              },
              "required" : false
            },
            {
              "name" : "fielddata_fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of fields for `fielddata` index metric (supports wildcards)"
              },
              "required" : false
            },
            {
              "name" : "fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)"
              },
              "required" : false
            },
            {
              "name" : "groups",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of search groups for `search` index metric"
              },
              "required" : false
            },
            {
              "name" : "human",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to return time and byte values in human-readable format."
              },
              "required" : false
            },
            {
              "name" : "level",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Return indices stats aggregated at node, index or shard level"
              },
              "required" : false
            },
            {
              "name" : "types",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of document types for the `indexing` index metric"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_nodes/stats"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-percolate.html"
          },
          "path" : "/skynet_trans_log/{index}/{type}/_percolate",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "routing",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of specific routing values"
              },
              "required" : false
            },
            {
              "name" : "preference",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specify the node or shard the operation should be performed on (default: random)"
              },
              "required" : false
            },
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "percolate_index",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The index to percolate the document into. Defaults to index."
              },
              "required" : false
            },
            {
              "name" : "percolate_type",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The type to percolate document into. Defaults to type."
              },
              "required" : false
            },
            {
              "name" : "percolate_format",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Return an array of matching query IDs instead of objects"
              },
              "required" : false
            },
            {
              "name" : "version",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "Explicit version number for concurrency control"
              },
              "required" : false
            },
            {
              "name" : "version_type",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Specific version type"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/{type}/_percolate"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/"
          },
          "path" : "/skynet_trans_log/",
          "httpMethod" : "HEAD",
          "params" : [ ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-request-scroll.html"
          },
          "path" : "/skynet_trans_log/_search/scroll",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "scroll",
              "type" : "duration",
              "style" : "query",
              "doc" : {
                "t" : "Specify how long a consistent view of the index should be maintained for scrolled search"
              },
              "required" : false
            },
            {
              "name" : "scroll_id",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The scroll ID for scrolled search"
              },
              "required" : false
            }
          ],
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_search/scroll"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-search.html"
          },
          "path" : "/skynet_trans_log/_search",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "analyzer",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The analyzer to use for the query string"
              },
              "required" : false
            },
            {
              "name" : "analyze_wildcard",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether wildcard and prefix queries should be analyzed (default: false)"
              },
              "required" : false
            },
            {
              "name" : "default_operator",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "The default operator for query string query (AND or OR)"
              },
              "required" : false
            },
            {
              "name" : "df",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The field to use as default where no field prefix is given in the query string"
              },
              "required" : false
            },
            {
              "name" : "explain",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether to return detailed information about score computation as part of a hit"
              },
              "required" : false
            },
            {
              "name" : "fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of fields to return as part of a hit"
              },
              "required" : false
            },
            {
              "name" : "from",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "Starting offset (default: 0)"
              },
              "required" : false
            },
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "lenient",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether format-based query failures (such as providing text to a numeric field) should be ignored"
              },
              "required" : false
            },
            {
              "name" : "lowercase_expanded_terms",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether query terms should be lowercased"
              },
              "required" : false
            },
            {
              "name" : "preference",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specify the node or shard the operation should be performed on (default: random)"
              },
              "required" : false
            },
            {
              "name" : "q",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Query in the Lucene query string syntax"
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of specific routing values"
              },
              "required" : false
            },
            {
              "name" : "scroll",
              "type" : "duration",
              "style" : "query",
              "doc" : {
                "t" : "Specify how long a consistent view of the index should be maintained for scrolled search"
              },
              "required" : false
            },
            {
              "name" : "search_type",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Search operation type"
              },
              "required" : false
            },
            {
              "name" : "size",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "Number of hits to return (default: 10)"
              },
              "required" : false
            },
            {
              "name" : "sort",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of <field>:<direction> pairs"
              },
              "required" : false
            },
            {
              "name" : "source",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The URL-encoded request definition using the Query DSL (instead of using request body)"
              },
              "required" : false
            },
            {
              "name" : "_source",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "True or false to return the _source field or not, or a list of fields to return"
              },
              "required" : false
            },
            {
              "name" : "_source_exclude",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A list of fields to exclude from the returned _source field"
              },
              "required" : false
            },
            {
              "name" : "_source_include",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A list of fields to extract and return from the _source field"
              },
              "required" : false
            },
            {
              "name" : "stats",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "Specific 'tag' of the request for logging and statistical purposes"
              },
              "required" : false
            },
            {
              "name" : "suggest_field",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specify which field to use for suggestions"
              },
              "required" : false
            },
            {
              "name" : "suggest_mode",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Specify suggest mode"
              },
              "required" : false
            },
            {
              "name" : "suggest_size",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "How many suggestions to return in response"
              },
              "required" : false
            },
            {
              "name" : "suggest_text",
              "type" : "text",
              "style" : "query",
              "doc" : {
                "t" : "The source text for which the suggestions should be returned"
              },
              "required" : false
            },
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            },
            {
              "name" : "track_scores",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to calculate and return scores even if they are not used for sorting"
              },
              "required" : false
            },
            {
              "name" : "version",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specify whether to return document version as part of a hit"
              },
              "required" : false
            }
          ],
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_search"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-shards.html"
          },
          "path" : "/skynet_trans_log/{index}/{type}/_search_shards",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "preference",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specify the node or shard the operation should be performed on (default: random)"
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific routing value"
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            },
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/{type}/_search_shards"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-template.html"
          },
          "path" : "/skynet_trans_log/_search/template",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "preference",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specify the node or shard the operation should be performed on (default: random)"
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of specific routing values"
              },
              "required" : false
            },
            {
              "name" : "scroll",
              "type" : "duration",
              "style" : "query",
              "doc" : {
                "t" : "Specify how long a consistent view of the index should be maintained for scrolled search"
              },
              "required" : false
            },
            {
              "name" : "search_type",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Search operation type"
              },
              "required" : false
            }
          ],
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_search/template"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-snapshots.html"
          },
          "path" : "/skynet_trans_log/_snapshot/{repository}/{snapshot}",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "wait_for_completion",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Should this request wait until the operation has completed before returning"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_snapshot/{repository}/{snapshot}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-snapshots.html"
          },
          "path" : "/skynet_trans_log/_snapshot/{repository}",
          "httpMethod" : "PUT",
          "params" : [
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_snapshot/{repository}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-snapshots.html"
          },
          "path" : "/skynet_trans_log/_snapshot/{repository}/{snapshot}",
          "httpMethod" : "DELETE",
          "params" : [
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_snapshot/{repository}/{snapshot}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-snapshots.html"
          },
          "path" : "/skynet_trans_log/_snapshot/{repository}",
          "httpMethod" : "DELETE",
          "params" : [
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_snapshot/{repository}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-snapshots.html"
          },
          "path" : "/skynet_trans_log/_snapshot/{repository}/{snapshot}",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_snapshot/{repository}/{snapshot}"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-snapshots.html"
          },
          "path" : "/skynet_trans_log/_snapshot",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "local",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Return local information, do not retrieve the state from master node (default: false)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_snapshot"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-snapshots.html"
          },
          "path" : "/skynet_trans_log/_snapshot/{repository}/{snapshot}/_restore",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            },
            {
              "name" : "wait_for_completion",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Should this request wait until the operation has completed before returning"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_snapshot/{repository}/{snapshot}/_restore"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/modules-snapshots.html"
          },
          "path" : "/skynet_trans_log/_snapshot/_status",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "master_timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout for connection to master node"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_snapshot/_status"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-search.html"
          },
          "path" : "/skynet_trans_log/_suggest",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "ignore_unavailable",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether specified concrete indices should be ignored when unavailable (missing or closed)"
              },
              "required" : false
            },
            {
              "name" : "allow_no_indices",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)"
              },
              "required" : false
            },
            {
              "name" : "expand_wildcards",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Whether to expand wildcard expression to concrete indices that are open, closed or both."
              },
              "required" : false
            },
            {
              "name" : "preference",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specify the node or shard the operation should be performed on (default: random)"
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific routing value"
              },
              "required" : false
            },
            {
              "name" : "source",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The URL-encoded request definition (instead of using request body)"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/_suggest"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/docs-termvectors.html"
          },
          "path" : "/skynet_trans_log/{index}/{type}/{id}/_termvector",
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "term_statistics",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specifies if total term frequency and document frequency should be returned."
              },
              "required" : false
            },
            {
              "name" : "field_statistics",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned."
              },
              "required" : false
            },
            {
              "name" : "fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of fields to return."
              },
              "required" : false
            },
            {
              "name" : "offsets",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specifies if term offsets should be returned."
              },
              "required" : false
            },
            {
              "name" : "positions",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specifies if term positions should be returned."
              },
              "required" : false
            },
            {
              "name" : "payloads",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Specifies if term payloads should be returned."
              },
              "required" : false
            },
            {
              "name" : "preference",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specify the node or shard the operation should be performed on (default: random)."
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific routing value."
              },
              "required" : false
            },
            {
              "name" : "parent",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Parent id of documents."
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/{type}/{id}/_termvector"
        },
        {
          "doc" : {
            "url" : "http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/docs-update.html"
          },
          "path" : "/skynet_trans_log/{index}/{type}/{id}/_update",
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "consistency",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Explicit write consistency setting for the operation"
              },
              "required" : false
            },
            {
              "name" : "fields",
              "type" : "list",
              "style" : "query",
              "doc" : {
                "t" : "A comma-separated list of fields to return in the response"
              },
              "required" : false
            },
            {
              "name" : "lang",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The script language (default: mvel)"
              },
              "required" : false
            },
            {
              "name" : "parent",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "ID of the parent document"
              },
              "required" : false
            },
            {
              "name" : "refresh",
              "type" : "boolean",
              "style" : "query",
              "doc" : {
                "t" : "Refresh the index after performing the operation"
              },
              "required" : false
            },
            {
              "name" : "replication",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Specific replication type"
              },
              "required" : false
            },
            {
              "name" : "retry_on_conflict",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "Specify how many times should the operation be retried when a conflict occurs (default: 0)"
              },
              "required" : false
            },
            {
              "name" : "routing",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "Specific routing value"
              },
              "required" : false
            },
            {
              "name" : "script",
              "type" : "string",
              "style" : "query",
              "doc" : {
                "t" : "The URL-encoded script definition (instead of using request body)"
              },
              "required" : false
            },
            {
              "name" : "timeout",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit operation timeout"
              },
              "required" : false
            },
            {
              "name" : "timestamp",
              "type" : "time",
              "style" : "query",
              "doc" : {
                "t" : "Explicit timestamp for the document"
              },
              "required" : false
            },
            {
              "name" : "ttl",
              "type" : "duration",
              "style" : "query",
              "doc" : {
                "t" : "Expiration time for the document"
              },
              "required" : false
            },
            {
              "name" : "version",
              "type" : "number",
              "style" : "query",
              "doc" : {
                "t" : "Explicit version number for concurrency control"
              },
              "required" : false
            },
            {
              "name" : "version_type",
              "type" : "enum",
              "style" : "query",
              "doc" : {
                "t" : "Specific version type"
              },
              "required" : false
            }
          ],
          "disabled" : true,
          "url" : "http://internal-octoblu-elasticsearch-870143150.us-west-2.elb.amazonaws.com/skynet_trans_log/{index}/{type}/{id}/_update"
        }
      ]
    },
    "auth_strategy" : "none",
    "description" : "Parse skynet data logged to ElasticSearch",
    "documentation" : "http://www.elasticsearch.org/resources/",
    "enabled" : true,
    "logo" : "http://nest.azurewebsites.net/images/elasticsearch-net-nuget-icon.png",
    "name" : "ElasticLogs",
    "oauth" : {

    },
    "type" : "channel:elastic_logs"
  },
  {
    "_id" : "53d15c363e304fe01a0851ee",
    "__v" : 0,
    "application" : {
      "base" : null,
      "resources" : [
        {
          "path" : "/?method=getActivityStream",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Gets the activity events for a user, a user's friends, or everyone on Rdio.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#activity"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getActivityStream",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Activity and Statistics",
          "displayName" : "Activity and Statistics_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getActivityStream"
        },
        {
          "path" : "/?method=getTopCharts",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Returns the site-wide most popular items for a given type.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#activity"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getTopCharts",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Activity and Statistics",
          "displayName" : "Activity and Statistics_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getTopCharts"
        },
        {
          "path" : "/?method=getNewReleases",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Returns new albums released across a timeframe.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#activity"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getNewReleases",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Activity and Statistics",
          "displayName" : "Activity and Statistics_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getNewReleases"
        },
        {
          "path" : "/?method=getHeavyRotation",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Finds the most popular artists or albums for a user, their friends or the whole site.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#activity"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getHeavyRotation",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Activity and Statistics",
          "displayName" : "Activity and Statistics_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getHeavyRotation"
        },
        {
          "path" : "/?method=getAlbumsForArtist",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Returns the albums by (or featuring) an artist.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#catalog"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getAlbumsForArtist",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Catalog",
          "displayName" : "Catalog_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getAlbumsForArtist"
        },
        {
          "path" : "/?method=getTracksByISRC",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Finds and returns tracks based on their International Standard Recording Code (ISRC).The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#catalog"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getTracksByISRC",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Catalog",
          "displayName" : "Catalog_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getTracksByISRC"
        },
        {
          "path" : "/?method=getTracksForArtist",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Gets all of the tracks by this artist.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#catalog"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getTracksForArtist",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Catalog",
          "displayName" : "Catalog_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getTracksForArtist"
        },
        {
          "path" : "/?method=search",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Searches for artists, albums, tracks, users or all kinds of objects.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#catalog"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=search",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Catalog",
          "displayName" : "Catalog_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=search"
        },
        {
          "path" : "/?method=searchSuggestions",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Matches the supplied prefix against artists, albums, tracks and people in the Rdio system. Return the first ten matches.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#catalog"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=searchSuggestions",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Catalog",
          "displayName" : "Catalog_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=searchSuggestions"
        },
        {
          "path" : "/?method=getAlbumsByUPC",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Finds and returns albums based on their Universal Product Code (UPC).The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#catalog"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getAlbumsByUPC",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Catalog",
          "displayName" : "Catalog_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getAlbumsByUPC"
        },
        {
          "path" : "/?method=addToCollection",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Adds tracks or playlists to the current user's collection.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#collection"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=addToCollection",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Collection",
          "displayName" : "Collection_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=addToCollection"
        },
        {
          "path" : "/?method=getAlbumsInCollection",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Gets all of the albums in the user's collection.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#collection"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getAlbumsInCollection",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Collection",
          "displayName" : "Collection_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getAlbumsInCollection"
        },
        {
          "path" : "/?method=getArtistsInCollection",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Gets all of the artist in a user's collection.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#collection"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getArtistsInCollection",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Collection",
          "displayName" : "Collection_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getArtistsInCollection"
        },
        {
          "path" : "/?method=getTracksForAlbumInCollection",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Which tracks on the given album are in the user's collection.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#collection"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getTracksForAlbumInCollection",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Collection",
          "displayName" : "Collection_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getTracksForAlbumInCollection"
        },
        {
          "path" : "/?method=getTracksForArtistInCollection",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Which tracks from the given artist are in the user's collection.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#collection"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getTracksForArtistInCollection",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Collection",
          "displayName" : "Collection_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getTracksForArtistInCollection"
        },
        {
          "path" : "/?method=getTracksInCollection",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Gets all of the tracks in the user's collection.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#collection"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getTracksInCollection",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Collection",
          "displayName" : "Collection_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getTracksInCollection"
        },
        {
          "path" : "/?method=removeFromCollection",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Removes tracks or playlists from the current user's collection.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#collection"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=removeFromCollection",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Collection",
          "displayName" : "Collection_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=removeFromCollection"
        },
        {
          "path" : "/?method=setAvailableOffline",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Marks tracks or playlists for offline syncing.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#collection"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=setAvailableOffline",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Collection",
          "displayName" : "Collection_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=setAvailableOffline"
        },
        {
          "path" : "/?method=getAlbumsForArtistInCollection",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Gets the albums in the user's collection by a particular artist.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#collection"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getAlbumsForArtistInCollection",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Collection",
          "displayName" : "Collection_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getAlbumsForArtistInCollection"
        },
        {
          "path" : "/?method=getObjectFromShortCode",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Return the object that the supplied Rdio short-code is a representation of, or null if the short-code is invalid.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#core"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getObjectFromShortCode",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Core",
          "displayName" : "Core_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getObjectFromShortCode"
        },
        {
          "path" : "/?method=getObjectFromUrl",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Return the object that the supplied Rdio url is a representation of, or null if the url doesn't represent an object.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#core"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getObjectFromUrl",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Core",
          "displayName" : "Core_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getObjectFromUrl"
        },
        {
          "path" : "/?method=get",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Fetch one or more objects from Rdio.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#core"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=get",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Core",
          "displayName" : "Core_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=get"
        },
        {
          "path" : "/?method=getPlaybackToken",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Gets an playback token. If you are using this for web playback you must supply a domain.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#playback"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getPlaybackToken",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Playback",
          "displayName" : "Playback_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getPlaybackToken"
        },
        {
          "path" : "/?method=setPlaylistCollaborating",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Starts or stops collaborating on this playlist.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#playlists"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=setPlaylistCollaborating",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Playlists",
          "displayName" : "Playlists_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=setPlaylistCollaborating"
        },
        {
          "path" : "/?method=setPlaylistCollaborationMode",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Sets the playlist collaboration mode to allow no collaboration (0), collaboration with all Rdio users (1), or collaboration with Rdio users followed by the playlist owner (2).The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#playlists"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=setPlaylistCollaborationMode",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Playlists",
          "displayName" : "Playlists_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=setPlaylistCollaborationMode"
        },
        {
          "path" : "/?method=setPlaylistFields",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Sets the name and description for a playlist.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#playlists"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=setPlaylistFields",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Playlists",
          "displayName" : "Playlists_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=setPlaylistFields"
        },
        {
          "path" : "/?method=setPlaylistOrder",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Saves the given order of tracks in a given playlist. The new order must have the same tracks as the previous order (this method may not be used to add/remove tracks).The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#playlists"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=setPlaylistOrder",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Playlists",
          "displayName" : "Playlists_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=setPlaylistOrder"
        },
        {
          "path" : "/?method=removeFromPlaylist",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Removes items from a playlist by range (index and count). All track keys to remove must be in the tracks list too. This is to prevent accidental overwriting of playlist changes.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#playlists"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=removeFromPlaylist",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Playlists",
          "displayName" : "Playlists_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=removeFromPlaylist"
        },
        {
          "path" : "/?method=getPlaylists",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Gets the current user's playlists.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#playlists"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=getPlaylists",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Playlists",
          "displayName" : "Playlists_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=getPlaylists"
        },
        {
          "path" : "/?method=deletePlaylist",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Deletes a playlist.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#playlists"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=deletePlaylist",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Playlists",
          "displayName" : "Playlists_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=deletePlaylist"
        },
        {
          "path" : "/?method=createPlaylist",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Creates a new playlist in the current user's collection. The new playlist will be returned if the creation is successful, otherwise null will be returned.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#playlists"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=createPlaylist",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Playlists",
          "displayName" : "Playlists_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=createPlaylist"
        },
        {
          "path" : "/?method=addToPlaylist",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Adds a track to a playlist.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#playlists"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=addToPlaylist",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Playlists",
          "displayName" : "Playlists_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=addToPlaylist"
        },
        {
          "path" : "/?method=userFollowing",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Gets a list of users that a user follows.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#social"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=userFollowing",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Social Network",
          "displayName" : "Social Network_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=userFollowing"
        },
        {
          "path" : "/?method=addFriend",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Adds a friend to the current user.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#social"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=addFriend",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Social Network",
          "displayName" : "Social Network_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=addFriend"
        },
        {
          "path" : "/?method=currentUser",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Gets information about the currently logged in user.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#social"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=currentUser",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Social Network",
          "displayName" : "Social Network_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=currentUser"
        },
        {
          "path" : "/?method=findUser",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Finds a user either by email address or by their username. Exactly one of email or vanityName must be supplied.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#social"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=findUser",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Social Network",
          "displayName" : "Social Network_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=findUser"
        },
        {
          "path" : "/?method=removeFriend",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Removes a friend from the current user.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#social"
          },
          "curl" : "curl -X POST -u 'username:password' -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=removeFriend",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Social Network",
          "displayName" : "Social Network_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=removeFriend"
        },
        {
          "path" : "/?method=userFollowers",
          "params" : [
            {
              "name" : "Content-Type",
              "type" : "xsd:string",
              "style" : "header",
              "default" : "application/x-www-form-urlencoded",
              "required" : "true"
            }
          ],
          "doc" : {
            "t" : "Gets a list of users following a user.The content type corresponding to a HTML form submit, application/x-www-form-urlencoded.",
            "url" : "http://developer.rdio.com/docs/read/rest/Methods#social"
          },
          "curl" : "curl -X POST  -h 'Content-Type: application/x-www-form-urlencoded' http://api.rdio.com/1/?method=userFollowers",
          "authentication" : {
            "required" : "false"
          },
          "category" : "Social Network",
          "displayName" : "Social Network_POST",
          "httpMethod" : "POST",
          "url" : "null/?method=userFollowers"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "",
    "enabled" : false,
    "logo" : "http://cdn.appstorm.net/web.appstorm.net/files/2011/12/App-Store-Rdio.png",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/rdio.png",
    "name" : "Rdio",
    "oauth" : {
      "version" : "1.0",
      "key" : "8xrf6qedwvp2m5zmwrrhbb2j",
      "secret" : "E5EbEc5vdf",
      "accessTokenURL" : "http://api.rdio.com/oauth/access_token",
      "requestTokenURL" : "http://api.rdio.com/oauth/request_token",
      "authTokenURL" : "https://www.rdio.com/oauth/authorize",
      "tokenMethod" : "oauth_signed",
      "scope" : "user"
    },
    "useCustom" : false,
    "type" : "channel:rdio"
  },
  {
    "_id" : "53dfcb87626a43a44f966d0a",
    "__v" : 0,
    "application" : {
      "base" : "https://secure.echosign.com/api/rest/v2",
      "resources" : [
        {
          "path" : "/widgets",
          "displayName" : "/widgets",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/widgets/_post_0"
          },
          "httpMethod" : "GET",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "x-user-id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "x-user-email",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/widgets"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/widgets/_post_0"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/widgets",
          "path" : "/widgets",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "x-user-id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "x-user-email",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/widgets"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/widgets/_get_2"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/widgets/{widgetId}",
          "path" : "/widgets/{widgetId}",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/widgets/{widgetId}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/widgets/_get_3"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/widgets/{widgetId}/documents",
          "path" : "/widgets/{widgetId}/documents",
          "params" : [
            {
              "name" : "versionId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "participantEmail",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/widgets/{widgetId}/documents"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/widgets/_get_4"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/widgets/{widgetId}/documents/{documentId}",
          "path" : "/widgets/{widgetId}/documents/{documentId}",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/widgets/{widgetId}/documents/{documentId}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/widgets/_get_5"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/widgets/{widgetId}/auditTrail",
          "path" : "/widgets/{widgetId}/auditTrail",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/widgets/{widgetId}/auditTrail"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/widgets/_get_6"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/widgets/{widgetId}/combinedDocument",
          "path" : "/widgets/{widgetId}/combinedDocument",
          "params" : [
            {
              "name" : "versionId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "participantEmail",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auditReport",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/widgets/{widgetId}/combinedDocument"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/widgets/_get_7"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/widgets/{widgetId}/formData",
          "path" : "/widgets/{widgetId}/formData",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/widgets/{widgetId}/formData"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/widgets/_get_8"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/widgets/{widgetId}/agreements",
          "path" : "/widgets/{widgetId}/agreements",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/widgets/{widgetId}/agreements"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/widgets/_put_9"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/widgets/{widgetId}/personalize",
          "path" : "/widgets/{widgetId}/personalize",
          "params" : [
            {
              "name" : "WidgetPersonalizationInfo",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/widgets/{widgetId}/personalize"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/widgets/_put_10"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/widgets/{widgetId}/status",
          "path" : "/widgets/{widgetId}/status",
          "params" : [
            {
              "name" : "WidgetStatusUpdateInfo",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/widgets/{widgetId}/status"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/tokens/_post_0"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/auth/tokens",
          "path" : "/auth/tokens",
          "params" : [
            {
              "name" : "RESTCredentials",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/auth/tokens"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/transientDocuments/createTransientDocument_post_0"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/transientDocuments",
          "path" : "/transientDocuments",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "File-Name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "Mime-Type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/transientDocuments"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/agreements/_post_0"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/agreements",
          "path" : "/agreements",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "x-user-id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "x-user-email",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "AgreementCreationInfo",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/agreements"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/agreements/_get_1"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/agreements",
          "path" : "/agreements",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "x-user-id",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "x-user-email",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "query",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/agreements"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/agreements/_get_2"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/agreements/{agreementId}",
          "path" : "/agreements/{agreementId}",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/agreements/{agreementId}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/agreements/_get_3"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/agreements/{agreementId}/documents",
          "path" : "/agreements/{agreementId}/documents",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "versionId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "participantEmail",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "supportingDocumentContentFormat",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/agreements/{agreementId}/documents"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/agreements/_get_4"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/agreements/{agreementId}/documents/{documentId}",
          "path" : "/agreements/{agreementId}/documents/{documentId}",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/agreements/{agreementId}/documents/{documentId}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/agreements/_get_5"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/agreements/{agreementId}/auditTrail",
          "path" : "/agreements/{agreementId}/auditTrail",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/agreements/{agreementId}/auditTrail"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/agreements/_get_6"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/agreements/{agreementId}/signingUrls",
          "path" : "/agreements/{agreementId}/signingUrls",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/agreements/{agreementId}/signingUrls"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/agreements/_get_7"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/agreements/{agreementId}/combinedDocument",
          "path" : "/agreements/{agreementId}/combinedDocument",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "versionId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "participantEmail",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "attachSupportingDocuments",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auditReport",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/agreements/{agreementId}/combinedDocument"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/agreements/_get_8"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/agreements/{agreementId}/formData",
          "path" : "/agreements/{agreementId}/formData",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/agreements/{agreementId}/formData"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/agreements/sendDocument_put_9"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/agreements/{agreementId}/status",
          "path" : "/agreements/{agreementId}/status",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "AgreementStatusUpdateInfo",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/agreements/{agreementId}/status"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/reminders/_post_0"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/reminders",
          "path" : "/reminders",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "ReminderCreationInfo",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/reminders"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/users/_post_0"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users",
          "path" : "/users",
          "params" : [
            {
              "name" : "Access-Token",
              "style" : "header",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "UserCreationInfo",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://secure.echosign.com/api/rest/v2/users"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "header",
              "name" : "Access-Token"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "x-user-email"
            }
          ],
          "path" : "/users",
          "displayName" : "/users",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/users/_get_1"
          },
          "httpMethod" : "GET",
          "url" : "https://secure.echosign.com/api/rest/v2/users"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "header",
              "name" : "Access-Token"
            }
          ],
          "path" : "/users/{userId}",
          "displayName" : "/users/{userId}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/users/_get_2"
          },
          "httpMethod" : "GET",
          "url" : "https://secure.echosign.com/api/rest/v2/users/{userId}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "header",
              "name" : "Access-Token"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "header",
              "name" : "x-user-id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "header",
              "name" : "x-user-email"
            }
          ],
          "path" : "/libraryDocuments",
          "displayName" : "/libraryDocuments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/libraryDocuments/GetLibraryDocuments_get_0"
          },
          "httpMethod" : "GET",
          "url" : "https://secure.echosign.com/api/rest/v2/libraryDocuments"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "header",
              "name" : "Access-Token"
            }
          ],
          "path" : "/libraryDocuments/{libraryDocumentId}",
          "displayName" : "/libraryDocuments/{libraryDocumentId}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/libraryDocuments/_get_1"
          },
          "httpMethod" : "GET",
          "url" : "https://secure.echosign.com/api/rest/v2/libraryDocuments/{libraryDocumentId}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "header",
              "name" : "Access-Token"
            }
          ],
          "path" : "/libraryDocuments/{libraryDocumentId}/documents",
          "displayName" : "/libraryDocuments/{libraryDocumentId}/documents",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/libraryDocuments/_get_2"
          },
          "httpMethod" : "GET",
          "url" : "https://secure.echosign.com/api/rest/v2/libraryDocuments/{libraryDocumentId}/documents"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "header",
              "name" : "Access-Token"
            }
          ],
          "path" : "/libraryDocuments/{libraryDocumentId}/documents/{documentId}",
          "displayName" : "/libraryDocuments/{libraryDocumentId}/documents/{documentId}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/libraryDocuments/_get_3"
          },
          "httpMethod" : "GET",
          "url" : "https://secure.echosign.com/api/rest/v2/libraryDocuments/{libraryDocumentId}/documents/{documentId}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "header",
              "name" : "Access-Token"
            }
          ],
          "path" : "/libraryDocuments/{libraryDocumentId}/auditTrail",
          "displayName" : "/libraryDocuments/{libraryDocumentId}/auditTrail",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/libraryDocuments/_get_4"
          },
          "httpMethod" : "GET",
          "url" : "https://secure.echosign.com/api/rest/v2/libraryDocuments/{libraryDocumentId}/auditTrail"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "header",
              "name" : "Access-Token"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "auditReport"
            }
          ],
          "path" : "/libraryDocuments/{libraryDocumentId}/combinedDocument",
          "displayName" : "/libraryDocuments/{libraryDocumentId}/combinedDocument",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/libraryDocuments/_get_5"
          },
          "httpMethod" : "GET",
          "url" : "https://secure.echosign.com/api/rest/v2/libraryDocuments/{libraryDocumentId}/combinedDocument"
        }
      ]
    },
    "auth_strategy" : "none",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://secure.echosign.com/public/docs/restapi/v2;jsessionid=60842BF524165F90EAAAECE0C49F1B60.ord-prod-app8#!/widgets",
    "enabled" : true,
    "logo" : "http://blogs.adobe.com/conversations/files/2013/06/EchoSign.jpg",
    "name" : "Ectosign",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:ectosign"
  },
  {
    "_id" : "53e14e6d8e3257fb7d6fdad1",
    "__v" : 0,
    "application" : {
      "base" : "https://www.googleapis.com/youtube/v3",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/activities"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "Activities",
          "path" : "/activities",
          "params" : [
            {
              "name" : "part",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "channelId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "home",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "maxResults",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "mine",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pageToken",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "publishedAfter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "publishedBefore",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "regionCode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/activities"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/activities"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/activities",
          "displayName" : "Activities",
          "params" : [
            {
              "name" : "part",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/activities"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/channelBanners"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "channelBanner",
          "path" : "channelBanner",
          "url" : "https://www.googleapis.com/youtube/v3channelBanner"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/channels"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "channels",
          "path" : "/channels",
          "params" : [
            {
              "name" : "part",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "categoryId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forUsername",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "managedByMe",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "maxResults",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "mine",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "mySubscribers",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pageToken",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/channels"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/channels"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "channels",
          "path" : "/channels",
          "params" : [
            {
              "name" : "part",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/channels"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/channelSections"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "channelSections",
          "path" : "/channelSections",
          "params" : [
            {
              "name" : "id",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/channelSections"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/channelSections"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "channelSections",
          "path" : "/channelSections",
          "params" : [
            {
              "name" : "part",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "onBehalfOfContentOwnerChannel",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/channelSections"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/channelSections"
          },
          "authentication" : {
            "required" : "false"
          },
          "displayName" : "channelSections",
          "path" : "/channelSections",
          "params" : [
            {
              "name" : "part",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "channelId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "mine",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/channelSections"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/channelSections"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "channelSections",
          "path" : "/channelSections",
          "params" : [
            {
              "name" : "part",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/channelSections"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/guideCategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "guideCategories",
          "path" : "/guideCategories",
          "params" : [
            {
              "name" : "part",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "hl",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "regionCode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/guideCategories"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/i18nLanguages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/i18nLanguages",
          "path" : "/i18nLanguages",
          "params" : [
            {
              "name" : "part",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "hl",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/i18nLanguages"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/i18nRegions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/i18nRegions",
          "path" : "/i18nRegions",
          "params" : [
            {
              "name" : "part",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "hl",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/i18nRegions"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/playlistItems"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "playlistItems",
          "path" : "/playlistItems",
          "params" : [
            {
              "name" : "id",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/playlistItems"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/playlistItems"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "playlistItems",
          "path" : "/playlistItems",
          "params" : [
            {
              "name" : "part",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "maxResults",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pageToken",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "playlistId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "videoId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/playlistItems"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/playlistItems"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/playlistItems",
          "path" : "/playlistItems",
          "params" : [
            {
              "name" : "part",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/playlistItems"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/playlistItems"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "playlistItems",
          "path" : "/playlistItems",
          "params" : [
            {
              "name" : "part",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/playlistItems"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/playlists"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "playlists",
          "path" : "/playlists",
          "params" : [
            {
              "name" : "id",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/playlists"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/playlists"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "playlists",
          "path" : "/playlists",
          "params" : [
            {
              "name" : "part",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "channelId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "maxResults",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "mine",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "onBehalfOfContentOwnerChannel",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pageToken",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/playlists"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/playlists"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "playlists",
          "path" : "/playlists",
          "params" : [
            {
              "name" : "part",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "onBehalfOfContentOwnerChannel",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/playlists"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/playlists"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "playlists",
          "path" : "/playlists",
          "params" : [
            {
              "name" : "part",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/playlists"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/search"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "search",
          "path" : "/search",
          "params" : [
            {
              "name" : "part",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "channelId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "channelType",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "eventType",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forContentOwner",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forMine",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "location",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "locationRadius",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "maxResults",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "order",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pageToken",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "publishedAfter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "publishedBefore",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "q",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "regionCode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "relatedToVideoId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "safeSearch",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "topicId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "videoCaption",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "videoCategoryId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "videoDefinition",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "videoDimension",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "videoDuration",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "videoEmbeddable",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "videoLicense",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "videoSyndicated",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "videoType",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/search"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/subscriptions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "subscriptions",
          "path" : "/subscriptions",
          "params" : [
            {
              "name" : "id",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/subscriptions"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/subscriptions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "subscriptions",
          "path" : "/subscriptions",
          "params" : [
            {
              "name" : "part",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/subscriptions"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/subscriptions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "subscriptions",
          "path" : "/subscriptions",
          "params" : [
            {
              "name" : "part",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "channelId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forChannelId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "maxResults",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "mine",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "mySubscribers",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "onBehalfOfContentOwnerChannel",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "order",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pageToken",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/subscriptions"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/thumbnails"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/thumbnails/set",
          "path" : "/thumbnails/set",
          "url" : "https://www.googleapis.com/youtube/v3/thumbnails/set"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/videoCategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "videoCategories",
          "path" : "/videoCategories",
          "params" : [
            {
              "name" : "part",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "hl",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "regionCode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/videoCategories"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/videos"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/videos",
          "path" : "/videos",
          "url" : "https://www.googleapis.com/youtube/v3/videos"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/videos"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/videos",
          "displayName" : "/videos",
          "params" : [
            {
              "name" : "part",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "chart",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "locale",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "maxResults",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "myRating",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pageToken",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "regionCode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "videoCategoryId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/videos"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/videos"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "videos",
          "path" : "/videos",
          "params" : [
            {
              "name" : "id",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/videos"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/videos"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "videos",
          "path" : "/videos",
          "params" : [
            {
              "name" : "part",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/videos"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/videos"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/videos/rate",
          "path" : "/videos/rate",
          "params" : [
            {
              "name" : "id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "rating",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/videos/rate"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/videos"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/videos/getRating",
          "displayName" : "videos/getRating",
          "params" : [
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "onBehalfOfContentOwne",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/videos/getRating"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/watermarks"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "watermarks/set",
          "path" : "/watermarks/set",
          "url" : "https://www.googleapis.com/youtube/v3/watermarks/set"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developers.google.com/youtube/v3/docs/watermarks"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "watermarks/unset",
          "path" : "/watermarks/unset",
          "params" : [
            {
              "name" : "channelId",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "onBehalfOfContentOwner",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/youtube/v3/watermarks/unset"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://developers.google.com/youtube/v3/docs/",
    "enabled" : true,
    "logo" : "https://developers.google.com/youtube/images/YouTube_logo_standard_white.png",
    "name" : "YouTube",
    "oauth" : {
      "version" : "2.0"
    },
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:you_tube"
  },
  {
    "_id" : "53e259588e3257fb7d6fdad3",
    "__v" : 0,
    "application" : {
      "base" : "https://api.surveymonkey.ne",
      "resources" : [
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://api.surveymonkey.net/v2/surveys/get_survey_details"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "get_survey_details",
          "path" : "get_survey_details",
          "params" : [
            {
              "name" : "survey_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.surveymonkey.neget_survey_details"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://api.surveymonkey.net/v2/user/get_user_details"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "get_user_details",
          "path" : "get_user_details",
          "url" : "https://api.surveymonkey.neget_user_details"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://api.surveymonkey.net/v2/surveys/get_survey_list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "get_survey_list",
          "path" : "get_survey_list",
          "params" : [
            {
              "name" : "page",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page_size",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_date",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_date",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "title",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "recipient_email",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "order_asc",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.surveymonkey.neget_survey_list"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://api.surveymonkey.net/v2/surveys/get_collector_list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "get_collector_list",
          "path" : "get_collector_list",
          "params" : [
            {
              "name" : "survey_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "page",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page_size",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_date",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_date",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "order_asc",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.surveymonkey.neget_collector_list"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://api.surveymonkey.net/v2/collectors/create_collector"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "create_collector",
          "path" : "create_collector",
          "params" : [
            {
              "name" : "survey_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "collector.type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "collector.name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.surveymonkey.necreate_collector"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://api.surveymonkey.net/v2/surveys/get_respondent_list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "get_respondent_list",
          "path" : "get_respondent_list",
          "params" : [
            {
              "name" : "survey_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "collector_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page_size",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_date",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_date",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_modified_date",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_modified_date",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "order_asc",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "order_by",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.surveymonkey.neget_respondent_list"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://api.surveymonkey.net/v2/surveys/get_responses"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "get_responses",
          "path" : "get_responses",
          "params" : [
            {
              "name" : "respondent_ids",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "survey_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.surveymonkey.neget_responses"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://api.surveymonkey.net/v2/surveys/get_response_counts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "get_response_counts",
          "path" : "get_response_counts",
          "params" : [
            {
              "name" : "collector_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.surveymonkey.neget_response_counts"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://developer.surveymonkey.com/api_console",
    "enabled" : true,
    "logo" : "http://blog.leadsquared.com/wp-content/uploads/2013/07/SurveyMOnkey-edited.jpg",
    "name" : "SURVEY MONKEY",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:survey_monkey"
  },
  {
    "_id" : "53e3fab413c57e0267403a89",
    "__v" : 0,
    "application" : {
      "base" : "https://api.xero.com/api.xro/2.0",
      "resources" : [
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "displayName" : "Attachments",
          "path" : "/Attachments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/attachments/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Attachments"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/Attachments",
          "displayName" : "/Attachments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/attachments/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.xero.com/api.xro/2.0/Attachments"
        },
        {
          "path" : "/Attachments",
          "displayName" : "/Attachments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/attachments/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.xero.com/api.xro/2.0/Attachments"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "AccountID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/Accounts",
          "displayName" : "/Accounts",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/accounts/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Accounts"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Code"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Name"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Tax Type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "EnablePaymentsToAccount"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ShowInExpenseClaims"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            }
          ],
          "path" : "/Accounts",
          "displayName" : "/Accounts",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/accounts/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.xero.com/api.xro/2.0/Accounts"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/banktransactions/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/BankTransactions",
          "path" : "/BankTransactions",
          "params" : [
            {
              "name" : "Type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "Contact",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "Lineitems",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "BankAccount",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "IsReconciled",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Date",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Reference",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "CurrencyCode",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "CurrencyRate",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "LineAmountTypes",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SubTotal",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "TotalTax",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Total",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.xero.com/api.xro/2.0/BankTransactions"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Type"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Contact"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Lineitems"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "BankAccount"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "IsReconciled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Reference"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CurrencyCode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CurrencyRate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Url"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LineAmountTypes"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SubTotal"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "TotalTax"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Total"
            }
          ],
          "path" : "/BankTransactions",
          "displayName" : "/BankTransactions",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/banktransactions/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.xero.com/api.xro/2.0/BankTransactions"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Record filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Modified After"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/BankTransactions",
          "displayName" : "/BankTransactions",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/banktransactions/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/BankTransactions"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "FromBankAccount"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "ToBankAccount"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Amount"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Date"
            }
          ],
          "path" : "/BankTransfers",
          "displayName" : "/BankTransfers",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/bank-transfers/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.xero.com/api.xro/2.0/BankTransfers"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Record filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Modified After"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/BankTransfers",
          "displayName" : "/BankTransfers",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/bank-transfers/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/BankTransfers"
        },
        {
          "path" : "/BrandingThemes",
          "displayName" : "/BrandingThemes",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/branding-themes/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/BrandingThemes"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ContactID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ContactNumber"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ContactStatus"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FirstName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LastName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "EmailAddress"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SkypeUserName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ContactPersons"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "BankAccountDetails"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "TaxNumber"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "AccountsReceivableTaxType"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "AccountsPayableTaxType"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Addresses"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Phones"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "UpdatedDateUTC"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "IsSupplier"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "IsCustomer"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "DefaultCurrency"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "XeroNetworkKey"
            }
          ],
          "path" : "/Contacts",
          "displayName" : "/Contacts",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/contacts/#POST"
          },
          "httpMethod" : "POST",
          "url" : "https://api.xero.com/api.xro/2.0/Contacts"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ContactID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ContactNumber"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ContactStatus"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FirstName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LastName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "EmailAddress"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SkypeUserName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ContactPersons"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "BankAccountDetails"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "TaxNumber"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "AccountsReceivableTaxType"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "AccountsPayableTaxType"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Addresses"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Phones"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "UpdatedDateUTC"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "IsSupplier"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "IsCustomer"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "DefaultCurrency"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "XeroNetworkKey"
            }
          ],
          "path" : "/Contacts",
          "displayName" : "/Contacts",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/contacts/#PUT"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.xero.com/api.xro/2.0/Contacts"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Record filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Modified After"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "includeArchived"
            }
          ],
          "path" : "/contacts",
          "displayName" : "/contacts",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/contacts/#PUT"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/contacts"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Reference"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Contact"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LineAmountTypes"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LineItems"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SubTotal"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Total Tax"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Total"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "UpdatedDateUTC"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CurrencyCode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FullyPaidOnDate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CreditNoteID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CreditNoteNumber"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SentToContact"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "BrandingThemeID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HasAttachments"
            }
          ],
          "path" : "/CreditNotes",
          "displayName" : "/CreditNotes",
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/credit-notes/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.xero.com/api.xro/2.0/CreditNotes"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Reference"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Contact"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LineAmountTypes"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LineItems"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SubTotal"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Total Tax"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Total"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "UpdatedDateUTC"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CurrencyCode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FullyPaidOnDate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CreditNoteID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CreditNoteNumber"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SentToContact"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "BrandingThemeID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HasAttachments"
            }
          ],
          "path" : "/CreditNotes",
          "displayName" : "/CreditNotes",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/credit-notes/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.xero.com/api.xro/2.0/CreditNotes"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Record filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Modified After"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/CreditNotes",
          "displayName" : "/CreditNotes",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/credit-notes/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/CreditNotes"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "ModifiedAfter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/Currencies",
          "displayName" : "/Currencies",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/currencies/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Currencies"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "EmployeeID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FirstName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LastName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "External Link"
            }
          ],
          "path" : "Employees",
          "displayName" : "Employees",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/employees/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.xero.com/api.xro/2.0Employees"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "EmployeeID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FirstName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LastName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "External Link"
            }
          ],
          "path" : "/Employees",
          "displayName" : "/Employees",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/employees/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.xero.com/api.xro/2.0/Employees"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Record filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "EmployeeID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Modified After"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/Employees",
          "displayName" : "/Employees",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/employees/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Employees"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "User"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Receipts"
            }
          ],
          "path" : "/ExpenseClaims",
          "displayName" : "/ExpenseClaims",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/expense-claims/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.xero.com/api.xro/2.0/ExpenseClaims"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Receipts"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "User"
            }
          ],
          "path" : "/ExpenseClaims",
          "displayName" : "/ExpenseClaims",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/expense-claims/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.xero.com/api.xro/2.0/ExpenseClaims"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Record filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Modified After"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "displayName" : "/ExpenseClaims",
          "path" : "/ExpenseClaims",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/expense-claims/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/ExpenseClaims"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Type"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Contact"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LineItems"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "DueDate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LineAmountTypes"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "InvoiceNumber"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Reference"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "BrandingThemeID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Url"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CurrencyCode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CurrencyRate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SentToContact"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ExpectedPaymentDate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "PlannedPaymentDate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SubTotal"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "TotalTax"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Total"
            }
          ],
          "path" : "/Invoices",
          "displayName" : "/Invoices",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/invoices/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.xero.com/api.xro/2.0/Invoices"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Type"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Contact"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LineItems"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "DueDate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LineAmountTypes"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "InvoiceNumber"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Reference"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "BrandingThemeID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Url"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CurrencyCode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CurrencyRate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SentToContact"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ExpectedPaymentDate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "PlannedPaymentDate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SubTotal"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "TotalTax"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Total"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            }
          ],
          "path" : "/Invoices",
          "displayName" : "/Invoices",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/invoices/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.xero.com/api.xro/2.0/Invoices"
        },
        {
          "path" : "/Invoices",
          "displayName" : "/Invoices",
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Record filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Modified After"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "page"
            }
          ],
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/invoices/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Invoices"
        },
        {
          "path" : "/Items",
          "displayName" : "/Items",
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Code"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "PurchaseDetails"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SalesDetails"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/items/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.xero.com/api.xro/2.0/Items"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Code"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "PurchaseDetails"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SalesDetails"
            }
          ],
          "path" : "/Items",
          "displayName" : "/Items",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/items/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.xero.com/api.xro/2.0/Items"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Record filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Modified After"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/Items",
          "displayName" : "/Items",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/items/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Items"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Record filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Modified After"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "offset"
            }
          ],
          "path" : "/Journals",
          "displayName" : "/Journals",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/journals/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Journals"
        },
        {
          "path" : "/ManualJournals",
          "displayName" : "/ManualJournals",
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Narration"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "JournalLines"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LineAmountTypes"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Url"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ShowOnCashBasisReports"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            }
          ],
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/manual-journals/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.xero.com/api.xro/2.0/ManualJournals"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Narration"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "JournalLines"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LineAmountTypes"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Url"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ShowOnCashBasisReports"
            }
          ],
          "path" : "/ManualJournals",
          "displayName" : "/ManualJournals",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/manual-journals/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.xero.com/api.xro/2.0/ManualJournals"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Record filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Modified After"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/ManualJournals",
          "displayName" : "/ManualJournals",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/manual-journals/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/ManualJournals"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "APIKey"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "LegalName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "PaysTax"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Version"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "BaseCurrency"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "CountryCode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "IsDemoCompany"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "OrganisationStatus"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "RegistrationNumber"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "TaxNumber"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "FinancialYearEndDay"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "FinancialYearEndMonth"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "SalesTaxBasis"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "SalesTaxPeriod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "PeriodLockDate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "EndOfYearLockDate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "CreatedDateUTC"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "OrganisationEntityType"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Timezone"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "ShortCode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "LineOfBusiness"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Addresses"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Phones"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "ExternalLinks"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "PaymentTerms"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : ""
            }
          ],
          "path" : "/Organisation",
          "displayName" : "/Organisation",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/organisation/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Organisation"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Invoice"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "InvoiceID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CreditNoteID"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Account"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "AccountID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Code"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CurrencyRate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Amount"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Reference"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "IsReconciled"
            }
          ],
          "path" : "/Payments",
          "displayName" : "/Payments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/payments/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.xero.com/api.xro/2.0/Payments"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CreditNote"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "InvoiceNumber"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CreditNoteNumber"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Account"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "AccountID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Code"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CurrencyRate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Amount"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Reference"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "IsReconciled"
            }
          ],
          "path" : "/Payments",
          "displayName" : "/Payments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/payments/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.xero.com/api.xro/2.0/Payments"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Record filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "PaymentID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Modified After"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/Payments",
          "displayName" : "/Payments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/payments/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Payments"
        },
        {
          "path" : "/Receipts",
          "displayName" : "/Receipts",
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Date"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Contact"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Lineitems"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "User"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Reference"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LineAmountTypes"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SubTotal"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "TotalTax"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Total"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            }
          ],
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/receipts/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.xero.com/api.xro/2.0/Receipts"
        },
        {
          "path" : "/Receipts",
          "displayName" : "/Receipts",
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Date"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Contact"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Lineitems"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "User"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Reference"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "LineAmountTypes"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SubTotal"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "TotalTax"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Total"
            }
          ],
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/receipts/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.xero.com/api.xro/2.0/Receipts"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Record filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Modified After"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/Receipts",
          "displayName" : "/Receipts",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/receipts/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Receipts"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Type"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Contact"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Schedule"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "LineItems"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "LineAmountTypes"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Reference"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "BrandingThemeID"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "CurrencyCode"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Status"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "SubTotal"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "TotalTax"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Total"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "RepeatingInvoiceID"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "HasAttachments"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Record filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "RepeatingInvoiceID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/RepeatingInvoices",
          "displayName" : "/RepeatingInvoices",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/repeating-invoices/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/RepeatingInvoices"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "reportYear"
            }
          ],
          "path" : "/TenNinetyNine",
          "displayName" : "/TenNinetyNine",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/reports/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/TenNinetyNine"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "contactID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fromDate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "toDate"
            }
          ],
          "path" : "/AgedPayablesByContact",
          "displayName" : "/AgedPayablesByContact",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://app.octoblu.com/connect/advanced/custom_channels/editor/53e3fab413c57e0267403a89"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/AgedPayablesByContact"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "contactID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fromDate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "toDate"
            }
          ],
          "path" : "/AgedReceivablesByContact",
          "displayName" : "/AgedReceivablesByContact",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/reports/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/AgedReceivablesByContact"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "trackingOptionID1"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "trackingOptionID2"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "standardLayout"
            }
          ],
          "path" : "/Reports/BalanceSheet",
          "displayName" : "/Reports/BalanceSheet",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/reports/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Reports/BalanceSheet"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "bankAccountID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fromDate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "toDate"
            }
          ],
          "path" : "/Reports/BankStatement",
          "displayName" : "/Reports/BankStatement",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/reports/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Reports/BankStatement"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "periods"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "timeframe"
            }
          ],
          "path" : "/Reports/BudgetSummary",
          "displayName" : "/Reports/BudgetSummary",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/reports/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Reports/BudgetSummary"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "date"
            }
          ],
          "path" : "/Reports/ExecutiveSummary",
          "displayName" : "/Reports/ExecutiveSummary",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/reports/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Reports/ExecutiveSummary"
        },
        {
          "path" : "/Reports",
          "displayName" : "/Reports",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/reports/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Reports"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fromDate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "toDate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "trackingCategoryID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "trackingOptionID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "standardLayout"
            }
          ],
          "path" : "/Reports/ProfitAndLoss",
          "displayName" : "/Reports/ProfitAndLoss",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/reports/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Reports/ProfitAndLoss"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "paymentsOnly"
            }
          ],
          "path" : "/Reports/TrialBalance",
          "displayName" : "/Reports/TrialBalance",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/reports/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Reports/TrialBalance"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "TaxType"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "TaxComponents"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ReportTaxType"
            }
          ],
          "path" : "/TaxRates",
          "displayName" : "/TaxRates",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/tax-rates/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.xero.com/api.xro/2.0/TaxRates"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "TaxType"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "TaxComponents"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ReportTaxType"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/TaxRates",
          "displayName" : "/TaxRates",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/tax-rates/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.xero.com/api.xro/2.0/TaxRates"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "TaxType"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/TaxRates",
          "displayName" : "/TaxRates",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/tax-rates/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/TaxRates"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "TrackingCategoryID"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Name"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Status"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Options"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "TrackingOptionID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Status"
            }
          ],
          "path" : "/TrackingCategories",
          "displayName" : "/TrackingCategories",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/tracking-categories/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/TrackingCategories"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "UserID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Modified After"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "where"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/Users",
          "displayName" : "/Users",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://developer.xero.com/documentation/api/users/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.xero.com/api.xro/2.0/Users"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "http://developer.xero.com/documentation/",
    "enabled" : true,
    "logo" : "http://upload.wikimedia.org/wikipedia/commons/5/57/Xero-logo-hires-RGB.png",
    "name" : "Xero",
    "oauth" : {
      "version" : "1.0",
      "key" : "LL0EHLCTLVNV3PCTUEDZDVY8OLGCTT",
      "secret" : "9I2TI2L1I9JGVQPTVAIZLWQH3U5LVZ",
      "accessTokenURL" : "https://api.xero.com/oauth/AccessToken",
      "requestTokenURL" : "https://api.xero.com/oauth/RequestToken",
      "authTokenURL" : "https://api.xero.com/oauth/Authorize"
    },
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:xero"
  },
  {
    "_id" : "53eb92c7dfc4201817c77aca",
    "__v" : 0,
    "application" : {
      "base" : "https://na1.salesforce.com/services/data/v31.0",
      "resources" : [
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.salesforce.com/us/developer/docs/chatterapi/index_Left.htm#StartTopic=Content/quickstart.htm"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/connect/action-link-group-definitions",
          "path" : "/connect/action-link-group-definitions",
          "params" : [
            {
              "name" : "category",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "executionsAllowed",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "expirationDate",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://na1.salesforce.com/services/data/v31.0/connect/action-link-group-definitions"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.salesforce.com/us/developer/docs/chatterapi/index_Left.htm#StartTopic=Content/quickstart.htm"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/connect/action-link-group-definitions/actionLinkGroupId",
          "path" : "/connect/action-link-group-definitions/actionLinkGroupId",
          "url" : "https://na1.salesforce.com/services/data/v31.0/connect/action-link-group-definitions/actionLinkGroupId"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://www.salesforce.com/us/developer/docs/chatterapi/index_Left.htm#StartTopic=Content/quickstart.htm"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/connect/action-link-group-definitions/actionLinkGroupId",
          "path" : "/connect/action-link-group-definitions/actionLinkGroupId",
          "url" : "https://na1.salesforce.com/services/data/v31.0/connect/action-link-group-definitions/actionLinkGroupId"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.salesforce.com/us/developer/docs/chatterapi/index_Left.htm#StartTopic=Content/quickstart.htm"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/connect/action-link-groups/actionLinkGroupId",
          "path" : "/connect/action-link-groups/actionLinkGroupId",
          "url" : "https://na1.salesforce.com/services/data/v31.0/connect/action-link-groups/actionLinkGroupId"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.salesforce.com/us/developer/docs/chatterapi/index_Left.htm#StartTopic=Content/quickstart.htm"
          },
          "authentication" : {
            "required" : "true"
          },
          "params" : [
            {
              "name" : "status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "path" : "/connect/action-links/actionLinkId",
          "displayName" : "/connect/action-links/actionLinkId",
          "url" : "https://na1.salesforce.com/services/data/v31.0/connect/action-links/actionLinkId"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "http://www.salesforce.com/us/developer/docs/chatterapi/Content/connect_resources_overview.htm",
    "enabled" : true,
    "logo" : "http://www.cirrusinsight.com/wp-content/uploads/2014/06/ChatterLogo.jpg",
    "name" : "Chatter",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:chatter"
  },
  {
    "_id" : "53eb9f4cdfc4201817c77acf",
    "__v" : 0,
    "application" : {
      "base" : "https://agilezen.com/api/v1/",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/attachments.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/attachments",
          "path" : "/attachments",
          "params" : [
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://agilezen.com/api/v1//attachments"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/attachments.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/attachments",
          "path" : "/attachments",
          "url" : "https://agilezen.com/api/v1//attachments"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/attachments.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/{attachmentid}",
          "path" : "/{attachmentid}",
          "url" : "https://agilezen.com/api/v1//{attachmentid}"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/attachments.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/{attachmentid}",
          "path" : "/{attachmentid}",
          "params" : [
            {
              "name" : "filename",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://agilezen.com/api/v1//{attachmentid}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/attachments.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/{attachmentid}",
          "path" : "/{attachmentid}",
          "url" : "https://agilezen.com/api/v1//{attachmentid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/comments.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/comments",
          "path" : "/comments",
          "url" : "https://agilezen.com/api/v1//comments"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/comments.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/comments",
          "path" : "/comments",
          "params" : [
            {
              "name" : "text",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://agilezen.com/api/v1//comments"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/comments.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/{commentid}",
          "path" : "/{commentid}",
          "url" : "https://agilezen.com/api/v1//{commentid}"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/comments.html"
          },
          "authentication" : {
            "required" : "false"
          },
          "displayName" : "/{commentid}",
          "path" : "/{commentid}",
          "params" : [
            {
              "name" : "text",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://agilezen.com/api/v1//{commentid}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/comments.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/{commentid}",
          "path" : "/{commentid}",
          "url" : "https://agilezen.com/api/v1//{commentid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/invites.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/invites",
          "path" : "/invites",
          "url" : "https://agilezen.com/api/v1//invites"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/invites.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/{inviteid}",
          "path" : "/{inviteid}",
          "url" : "https://agilezen.com/api/v1//{inviteid}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/invites.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/invites",
          "path" : "/invites",
          "params" : [
            {
              "name" : "email",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "role",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://agilezen.com/api/v1//invites"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/invites.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/{inviteid}",
          "path" : "/{inviteid}",
          "url" : "https://agilezen.com/api/v1//{inviteid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/me.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/me",
          "path" : "/me",
          "url" : "https://agilezen.com/api/v1//me"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/me.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/me",
          "path" : "/me",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "username",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "email",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "bio",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://agilezen.com/api/v1//me"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/me.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/me/stories",
          "displayName" : "/me/stories",
          "url" : "https://agilezen.com/api/v1//me/stories"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/me.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/me?with=stories",
          "path" : "/me?with=stories",
          "url" : "https://agilezen.com/api/v1//me?with=stories"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/phases.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/phases",
          "path" : "/phases",
          "url" : "https://agilezen.com/api/v1//phases"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/phases.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "params" : [
            {
              "name" : "name",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "description",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "index",
              "style" : "",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "displayName" : "/phases",
          "path" : "/phases",
          "url" : "https://agilezen.com/api/v1//phases"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/phases.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/phases/{phaseid}",
          "path" : "/phases/{phaseid}",
          "url" : "https://agilezen.com/api/v1//phases/{phaseid}"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/phases.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/phases/{phaseid}",
          "path" : "/phases/{phaseid}",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "index",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://agilezen.com/api/v1//phases/{phaseid}"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/phases.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/phases",
          "path" : "/phases",
          "url" : "https://agilezen.com/api/v1//phases"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/phases.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/phases/{phaseid}",
          "path" : "/phases/{phaseid}",
          "url" : "https://agilezen.com/api/v1//phases/{phaseid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/phases.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/phases/{phaseid}/stories",
          "path" : "/phases/{phaseid}/stories",
          "url" : "https://agilezen.com/api/v1//phases/{phaseid}/stories"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/phases.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/phases/{phaseid}/stories",
          "path" : "/phases/{phaseid}/stories",
          "url" : "https://agilezen.com/api/v1//phases/{phaseid}/stories"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/projects.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects",
          "path" : "/projects",
          "url" : "https://agilezen.com/api/v1//projects"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/projects.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{projectid}",
          "path" : "/projects/{projectid}",
          "url" : "https://agilezen.com/api/v1//projects/{projectid}"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/projects.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{projectid}",
          "path" : "/projects/{projectid}",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "details",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "owner",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://agilezen.com/api/v1//projects/{projectid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/projects.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{projectid}/members",
          "path" : "/projects/{projectid}/members",
          "url" : "https://agilezen.com/api/v1//projects/{projectid}/members"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/projects.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{projectid}/members",
          "path" : "/projects/{projectid}/members",
          "url" : "https://agilezen.com/api/v1//projects/{projectid}/members"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/projects.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{projectid}/members",
          "path" : "/projects/{projectid}/members",
          "url" : "https://agilezen.com/api/v1//projects/{projectid}/members"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : "details"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "",
              "name" : "id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "",
              "name" : "owner"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : "owner"
            }
          ],
          "path" : "/projects/{projectid}/members/{userid}",
          "displayName" : "/projects/{projectid}/members/{userid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/projects.html"
          },
          "httpMethod" : "DELETE",
          "url" : "https://agilezen.com/api/v1//projects/{projectid}/members/{userid}"
        },
        {
          "path" : "/...?with=details",
          "displayName" : "/...?with=details",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/projects.html"
          },
          "httpMethod" : "GET",
          "url" : "https://agilezen.com/api/v1//...?with=details"
        },
        {
          "path" : "/...?with=invites",
          "displayName" : "/...?with=invites",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/projects.html"
          },
          "httpMethod" : "GET",
          "url" : "https://agilezen.com/api/v1//...?with=invites"
        },
        {
          "path" : "/...?with=members",
          "displayName" : "/...?with=members",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/projects.html"
          },
          "httpMethod" : "GET",
          "url" : "https://agilezen.com/api/v1//...?with=members"
        },
        {
          "path" : "/...?with=metrics",
          "displayName" : "/...?with=metrics",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/projects.html"
          },
          "httpMethod" : "GET",
          "url" : "https://agilezen.com/api/v1//...?with=metrics"
        },
        {
          "path" : "/...?with=phases",
          "displayName" : "/...?with=phases",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/projects.html"
          },
          "httpMethod" : "GET",
          "url" : "https://agilezen.com/api/v1//...?with=phases"
        },
        {
          "path" : "/...?with=roles",
          "displayName" : "/...?with=roles",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/projects.html"
          },
          "httpMethod" : "GET",
          "url" : "https://agilezen.com/api/v1//...?with=roles"
        },
        {
          "path" : "/tags",
          "displayName" : "/tags",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/tags.html"
          },
          "httpMethod" : "GET",
          "url" : "https://agilezen.com/api/v1//tags"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            }
          ],
          "path" : "/tags",
          "displayName" : "/tags",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/tags.html"
          },
          "httpMethod" : "POST",
          "url" : "https://agilezen.com/api/v1//tags"
        },
        {
          "path" : "/tags/{tag}",
          "displayName" : "/tags/{tag}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/tags.html"
          },
          "httpMethod" : "GET",
          "url" : "https://agilezen.com/api/v1//tags/{tag}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            }
          ],
          "path" : "/tags/{tag}",
          "displayName" : "/tags/{tag}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/tags.html"
          },
          "httpMethod" : "PUT",
          "url" : "https://agilezen.com/api/v1//tags/{tag}"
        },
        {
          "path" : "/tags/{tag}",
          "displayName" : "/tags/{tag}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/tags.html"
          },
          "httpMethod" : "DELETE",
          "url" : "https://agilezen.com/api/v1//tags/{tag}"
        },
        {
          "path" : "/tags/{tag}/stories",
          "displayName" : "/tags/{tag}/stories",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/tags.html"
          },
          "httpMethod" : "GET",
          "url" : "https://agilezen.com/api/v1//tags/{tag}/stories"
        },
        {
          "path" : "/tags/{tag}/stories",
          "displayName" : "/tags/{tag}/stories",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/tags.html"
          },
          "httpMethod" : "POST",
          "url" : "https://agilezen.com/api/v1//tags/{tag}/stories"
        },
        {
          "path" : "/tags/{tag}/stories",
          "displayName" : "/tags/{tag}/stories",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/tags.html"
          },
          "httpMethod" : "PUT",
          "url" : "https://agilezen.com/api/v1//tags/{tag}/stories"
        },
        {
          "path" : "/tags/{tag}/stories/{storyid}",
          "displayName" : "/tags/{tag}/stories/{storyid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/tags.html"
          },
          "httpMethod" : "DELETE",
          "url" : "https://agilezen.com/api/v1//tags/{tag}/stories/{storyid}"
        },
        {
          "path" : "/tasks",
          "displayName" : "/tasks",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/tasks.html"
          },
          "httpMethod" : "GET",
          "url" : "https://agilezen.com/api/v1//tasks"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "text"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "status"
            }
          ],
          "path" : "/tasks",
          "displayName" : "/tasks",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/tasks.html"
          },
          "httpMethod" : "POST",
          "url" : "https://agilezen.com/api/v1//tasks"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/tasks.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/tasks",
          "path" : "/tasks",
          "url" : "https://agilezen.com/api/v1//tasks"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/tasks.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/tasks/{taskid}",
          "path" : "/tasks/{taskid}",
          "url" : "https://agilezen.com/api/v1//tasks/{taskid}"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/tasks.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/tasks/{taskid}",
          "path" : "/tasks/{taskid}",
          "params" : [
            {
              "name" : "text",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://agilezen.com/api/v1//tasks/{taskid}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/tasks.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/tasks/{taskid}",
          "path" : "/tasks/{taskid}",
          "url" : "https://agilezen.com/api/v1//tasks/{taskid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/roles.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/roles",
          "path" : "/roles",
          "url" : "https://agilezen.com/api/v1//roles"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/roles.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/roles",
          "path" : "/roles",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "access",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://agilezen.com/api/v1//roles"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/roles.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/roles/{roleid}",
          "path" : "/roles/{roleid}",
          "url" : "https://agilezen.com/api/v1//roles/{roleid}"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/roles.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/roles/{roleid}",
          "path" : "/roles/{roleid}",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "access",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://agilezen.com/api/v1//roles/{roleid}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/roles.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/roles/{roleid}",
          "path" : "/roles/{roleid}",
          "url" : "https://agilezen.com/api/v1//roles/{roleid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/roles.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/roles/{roleid}/members",
          "path" : "/roles/{roleid}/members",
          "url" : "https://agilezen.com/api/v1//roles/{roleid}/members"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/roles.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/roles/{roleid}/members",
          "path" : "/roles/{roleid}/members",
          "url" : "https://agilezen.com/api/v1//roles/{roleid}/members"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/roles.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/roles/{roleid}/members",
          "path" : "/roles/{roleid}/members",
          "url" : "https://agilezen.com/api/v1//roles/{roleid}/members"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/roles.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/roles/{roleid}/members/{userid}",
          "path" : "/roles/{roleid}/members/{userid}",
          "params" : [
            {
              "name" : "name",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://agilezen.com/api/v1//roles/{roleid}/members/{userid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/stories",
          "path" : "/stories",
          "url" : "https://agilezen.com/api/v1//stories"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/stories",
          "path" : "/stories",
          "params" : [
            {
              "name" : "text",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "details",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "size",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "priority",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "color",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "phase",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "owner",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tags",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tasks",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://agilezen.com/api/v1//stories"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/stories/{storyid}",
          "path" : "/stories/{storyid}",
          "url" : "https://agilezen.com/api/v1//stories/{storyid}"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/stories/{storyid}",
          "path" : "/stories/{storyid}",
          "params" : [
            {
              "name" : "text",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "details",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "size",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "priority",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "color",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "blockedReason",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "phase",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "owner",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://agilezen.com/api/v1//stories/{storyid}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/stories/{storyid}",
          "path" : "/stories/{storyid}",
          "url" : "https://agilezen.com/api/v1//stories/{storyid}"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/stories?where={filter}",
          "path" : "/stories?where={filter}",
          "url" : "https://agilezen.com/api/v1//stories?where={filter}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/stories?where={filter}",
          "path" : "/stories?where={filter}",
          "url" : "https://agilezen.com/api/v1//stories?where={filter}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/stories/{storyid}/tags",
          "path" : "/stories/{storyid}/tags",
          "url" : "https://agilezen.com/api/v1//stories/{storyid}/tags"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/stories/{storyid}/tags",
          "path" : "/stories/{storyid}/tags",
          "url" : "https://agilezen.com/api/v1//stories/{storyid}/tags"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/stories/{storyid}/tags",
          "path" : "/stories/{storyid}/tags",
          "url" : "https://agilezen.com/api/v1//stories/{storyid}/tags"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/stories/{storyid}/tags",
          "path" : "/stories/{storyid}/tags",
          "url" : "https://agilezen.com/api/v1//stories/{storyid}/tags"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/stories/{storyid}/tags/{tag}",
          "path" : "/stories/{storyid}/tags/{tag}",
          "url" : "https://agilezen.com/api/v1//stories/{storyid}/tags/{tag}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/...?with=comments",
          "path" : "/...?with=comments",
          "url" : "https://agilezen.com/api/v1//...?with=comments"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/...?with=details",
          "path" : "/...?with=details",
          "url" : "https://agilezen.com/api/v1//...?with=details"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/...?with=metrics",
          "path" : "/...?with=metrics",
          "url" : "https://agilezen.com/api/v1//...?with=metrics"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/...?with=milestones",
          "path" : "/...?with=milestones",
          "url" : "https://agilezen.com/api/v1//...?with=milestones"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/...?with=steps",
          "path" : "/...?with=steps",
          "url" : "https://agilezen.com/api/v1//...?with=steps"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/...?with=tags",
          "path" : "/...?with=tags",
          "url" : "https://agilezen.com/api/v1//...?with=tags"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://dev.agilezen.com/resources/stories.html"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/...?with=tasks",
          "path" : "/...?with=tasks",
          "url" : "https://agilezen.com/api/v1//...?with=tasks"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "http://dev.agilezen.com",
    "enabled" : true,
    "logo" : "http://www.agilezen.com/content/css/content/images/external/logo-NEW.png",
    "name" : "AgileZen",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:agile_zen"
  },
  {
    "_id" : "53e8ea018e3257fb7d6fdae0",
    "__v" : 0,
    "application" : {
      "base" : "https://localhost:8089",
      "resources" : [
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/alerts/fired_alerts",
          "displayName" : "/alerts/fired_alerts",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#alerts.2Ffired_alerts"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/alerts/fired_alerts"
        },
        {
          "path" : "/alerts/fired_alerts/{name}",
          "displayName" : "/alerts/fired_alerts/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#alerts.2Ffired_alerts.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/alerts/fired_alerts/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/alerts/fired_alerts/{name}",
          "displayName" : "/alerts/fired_alerts/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#alerts.2Ffired_alerts.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/alerts/fired_alerts/{name}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "update"
            }
          ],
          "path" : "/apps/appinstall",
          "displayName" : "/apps/appinstall",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTapps#apps.2Fappinstall"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/apps/appinstall"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/apps/apptemplates",
          "displayName" : "/apps/apptemplates",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTapps#apps.2Fapptemplates"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/apps/apptemplates"
        },
        {
          "path" : "/apps/apptemplates/{name}",
          "displayName" : "/apps/apptemplates/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTapps#apps.2Fapptemplates.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/apps/apptemplates/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "refresh"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/apps/local",
          "displayName" : "/apps/local",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTapps#apps.2Flocal"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/apps/local"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "auth"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "author"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "configured"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "explicit_appname"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "filename"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "label"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "session"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "template"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "update"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "version"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "visible"
            }
          ],
          "path" : "/apps/local",
          "displayName" : "/apps/local",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTapps#apps.2Flocal"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/apps/local"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "refresh"
            }
          ],
          "path" : "/apps/local/{name}",
          "displayName" : "/apps/local/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTapps#apps.2Flocal.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/apps/local/{name}"
        },
        {
          "path" : "/apps/local/{name}",
          "displayName" : "/apps/local/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTapps#apps.2Flocal.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/apps/local/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "author"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "check_for_updates"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "configured"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "label"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "version"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "visible"
            }
          ],
          "path" : "/apps/local/{name}",
          "displayName" : "/apps/local/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTapps#apps.2Flocal.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/apps/local/{name}"
        },
        {
          "path" : "/apps/local/{name}/package",
          "displayName" : "/apps/local/{name}/package",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTapps#apps.2Flocal.2F.7Bname.7D.2Fpackage"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/apps/local/{name}/package"
        },
        {
          "path" : "/apps/local/{name}/setup",
          "displayName" : "/apps/local/{name}/setup",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTapps#apps.2Flocal.2F.7Bname.7D.2Fsetup"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/apps/local/{name}/setup"
        },
        {
          "path" : "/apps/local/{name}/update",
          "displayName" : "/apps/local/{name}/update",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTapps#apps.2Flocal.2F.7Bname.7D.2Fupdate"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/apps/local/{name}/update"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "password"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "username"
            }
          ],
          "path" : "/auth/login",
          "displayName" : "/auth/login",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#auth.2Flogin"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/auth/login"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/authentication/current-context",
          "displayName" : "/authentication/current-context",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authentication.2Fcurrent-context"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/authentication/current-context"
        },
        {
          "path" : "/authentication/current-context/{name}",
          "displayName" : "/authentication/current-context/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authentication.2Fcurrent-context.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/authentication/current-context/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/authentication/httpauth-tokens",
          "displayName" : "/authentication/httpauth-tokens",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authentication.2Fhttpauth-tokens"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/authentication/httpauth-tokens"
        },
        {
          "path" : "/authentication/httpauth-tokens/{name}",
          "displayName" : "/authentication/httpauth-tokens/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authentication.2Fhttpauth-tokens.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/authentication/httpauth-tokens/{name}"
        },
        {
          "path" : "/authentication/httpauth-tokens/{name}",
          "displayName" : "/authentication/httpauth-tokens/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authentication.2Fhttpauth-tokens.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/authentication/httpauth-tokens/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/authentication/users",
          "displayName" : "/authentication/users",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authentication.2Fusers"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/authentication/users"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "password"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "createrole"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "defaultApp"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "email"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "realname"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "restart_background_jobs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "roles"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "tz"
            }
          ],
          "path" : "/authentication/users",
          "displayName" : "/authentication/users",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authentication.2Fusers"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/authentication/users"
        },
        {
          "path" : "/authentication/users/{name}",
          "displayName" : "/authentication/users/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authentication.2Fusers.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/authentication/users/{name}"
        },
        {
          "path" : "/authentication/users/{name}",
          "displayName" : "/authentication/users/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authentication.2Fusers.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/authentication/users/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "defaultApp"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "email"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "password"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "realname"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "restart_background_jobs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "roles"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "tz"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            }
          ],
          "path" : "/authentication/users/{name}",
          "displayName" : "/authentication/users/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authentication.2Fusers.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/authentication/users/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/authorization/capabilities",
          "displayName" : "/authorization/capabilities",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/latest/RESTAPI/RESTlist"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/authorization/capabilities"
        },
        {
          "path" : "/authorization/capabilities/{name}",
          "displayName" : "/authorization/capabilities/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authorization.2Fcapabilities.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/authorization/capabilities/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sort_mode"
            }
          ],
          "displayName" : "/authorization/roles",
          "path" : "/authorization/roles",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authorization.2Froles"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/authorization/roles"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "capabilities"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "cumulativeRTSrchJobsQuota"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "cumulativeSrchJobsQuota"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "defaultApp"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "imported_roles"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "rtSrchJobsQuota"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "srchDiskQuota"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "srchFilter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "srchIndexesAllowed"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "srchIndexesDefault"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "srchJobsQuota"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "srchTimeWin"
            }
          ],
          "path" : "/authorization/roles",
          "displayName" : "/authorization/roles",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authorization.2Froles"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/authorization/roles"
        },
        {
          "path" : "/authorization/roles/{name}",
          "displayName" : "/authorization/roles/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authorization.2Froles.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/authorization/roles/{name}"
        },
        {
          "path" : "/authorization/roles/{name}",
          "displayName" : "/authorization/roles/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authorization.2Froles.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/authorization/roles/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "capabilities"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "cumulativeRTSrchJobsQuota"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "cumulativeSrchJobsQuota"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "defaultApp"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "imported_roles"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "rtSrchJobsQuota"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "srchDiskQuota"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "srchFilter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "srchIndexesAllowed"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "srchIndexesDefault"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "srchJobsQuota"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "srchTimeWin"
            }
          ],
          "path" : "/authorization/roles/{name}",
          "displayName" : "/authorization/roles/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#authorization.2Froles.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/authorization/roles/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/cluster/config",
          "displayName" : "/cluster/config",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fconfig"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/config"
        },
        {
          "path" : "/cluster/config/{name}",
          "displayName" : "/cluster/config/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fconfig.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/config/{name}"
        },
        {
          "path" : "/cluster/config/{name}",
          "displayName" : "/cluster/config/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fconfig.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/cluster/config/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/cluster/master/buckets",
          "displayName" : "/cluster/master/buckets",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fmaster.2Fbuckets"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/master/buckets"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "filter"
            }
          ],
          "path" : "/cluster/master/buckets/{name}",
          "displayName" : "/cluster/master/buckets/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fmaster.2Fbuckets.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/master/buckets/{name}"
        },
        {
          "path" : "/cluster/master/control/control/rebalance_primaries",
          "displayName" : "/cluster/master/control/control/rebalance_primaries",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fmaster.2Fcontrol"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/cluster/master/control/control/rebalance_primaries"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/cluster/master/generation",
          "displayName" : "/cluster/master/generation",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fmaster.2Fgeneration"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/master/generation"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "generation_poll_interval"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "label"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "mgmt_port"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "register_search_address"
            }
          ],
          "path" : "/cluster/master/generation",
          "displayName" : "/cluster/master/generation",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fmaster.2Fgeneration"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/cluster/master/generation"
        },
        {
          "path" : "/cluster/master/generation/{name}",
          "displayName" : "/cluster/master/generation/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fmaster.2Fgeneration.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/master/generation/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "generation_poll_interval"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "label"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "mgmt_port"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "register_search_address"
            }
          ],
          "path" : "/cluster/master/generation/{name}",
          "displayName" : "/cluster/master/generation/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fmaster.2Fgeneration.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/cluster/master/generation/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/cluster/master/indexes",
          "displayName" : "/cluster/master/indexes",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fmaster.2Findexes"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/master/indexes"
        },
        {
          "path" : "/cluster/master/indexes/{name}",
          "displayName" : "/cluster/master/indexes/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fmaster.2Findexes.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/master/indexes/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/cluster/master/info",
          "displayName" : "/cluster/master/info",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fmaster.2Finfo"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/master/info"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "list_buckets"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/cluster/master/peers",
          "displayName" : "/cluster/master/peers",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fmaster.2Fpeers"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/master/peers"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "list_buckets"
            }
          ],
          "path" : "/cluster/master/peers/{name}",
          "displayName" : "/cluster/master/peers/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fmaster.2Fpeers.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/master/peers/{name}"
        },
        {
          "path" : "/cluster/master/sites",
          "displayName" : "/cluster/master/sites",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "t" : "",
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fmaster.2Fsites"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/master/sites"
        },
        {
          "path" : "/cluster/master/sites/{name}",
          "displayName" : "/cluster/master/sites/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fmaster.2Fsites.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/master/sites/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/cluster/searchhead/generation",
          "displayName" : "/cluster/searchhead/generation",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fsearchhead.2Fgeneration"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/searchhead/generation"
        },
        {
          "path" : "/cluster/searchhead/generation/{name}",
          "displayName" : "/cluster/searchhead/generation/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fsearchhead.2Fgeneration.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/searchhead/generation/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "header",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/cluster/searchhead/searchheadconfig",
          "displayName" : "/cluster/searchhead/searchheadconfig",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fsearchhead.2Fsearchheadconfig"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/searchhead/searchheadconfig"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "secret"
            }
          ],
          "path" : "/cluster/searchhead/searchheadconfig",
          "displayName" : "/cluster/searchhead/searchheadconfig",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fsearchhead.2Fsearchheadconfig"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/cluster/searchhead/searchheadconfig"
        },
        {
          "path" : "/cluster/searchhead/searchheadconfig/{name}",
          "displayName" : "/cluster/searchhead/searchheadconfig/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fsearchhead.2Fsearchheadconfig.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/searchhead/searchheadconfig/{name}"
        },
        {
          "path" : "/cluster/searchhead/searchheadconfig/{name}",
          "displayName" : "/cluster/searchhead/searchheadconfig/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fsearchhead.2Fsearchheadconfig.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/cluster/searchhead/searchheadconfig/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "master_uri"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "secret"
            }
          ],
          "path" : "/cluster/searchhead/searchheadconfig/{name}",
          "displayName" : "/cluster/searchhead/searchheadconfig/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fsearchhead.2Fsearchheadconfig.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/cluster/searchhead/searchheadconfig/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "generation_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/cluster/slave/buckets",
          "displayName" : "/cluster/slave/buckets",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/latest/RESTAPI/RESTlist"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/slave/buckets"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "bucket_id"
            }
          ],
          "path" : "/cluster/slave/buckets/{name}",
          "displayName" : "/cluster/slave/buckets/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fslave.2Fbuckets.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/cluster/slave/buckets/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "generation_id"
            }
          ],
          "path" : "/cluster/slave/buckets/{name}",
          "displayName" : "/cluster/slave/buckets/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fslave.2Fbuckets.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/slave/buckets/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/cluster/slave/info",
          "displayName" : "/cluster/slave/info",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fslave.2Finfo"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/slave/info"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "generation_id"
            }
          ],
          "path" : "/cluster/slave/info/{name}",
          "displayName" : "/cluster/slave/info/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTcluster#cluster.2Fslave.2Finfo.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/cluster/slave/info/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/configs/conf-{file}",
          "displayName" : "/configs/conf-{file}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTconfig#configs.2Fconf-.7Bfile.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/configs/conf-{file}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "key"
            }
          ],
          "path" : "/configs/conf-{file}",
          "displayName" : "/configs/conf-{file}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTconfig#configs.2Fconf-.7Bfile.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/configs/conf-{file}"
        },
        {
          "path" : "/configs/conf-{file}/{name}",
          "displayName" : "/configs/conf-{file}/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTconfig#configs.2Fconf-.7Bfile.7D.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/configs/conf-{file}/{name}"
        },
        {
          "path" : "/configs/conf-{file}/{name}",
          "displayName" : "/configs/conf-{file}/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTconfig#configs.2Fconf-.7Bfile.7D.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/configs/conf-{file}/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "key"
            }
          ],
          "path" : "/configs/conf-{file}/{name}",
          "displayName" : "/configs/conf-{file}/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTconfig#configs.2Fconf-.7Bfile.7D.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/configs/conf-{file}/{name}"
        },
        {
          "path" : "/data/commands/{name}",
          "displayName" : "/data/commands/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#data.2Fcommands.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/commands/{name}"
        },
        {
          "path" : "/data/index-volumes",
          "displayName" : "/data/index-volumes",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTindex#data.2Findex-volumes"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/index-volumes"
        },
        {
          "path" : "/data/index-volumes/{name}",
          "displayName" : "/data/index-volumes/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTindex#data.2Findex-volumes.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/index-volumes/{name}"
        },
        {
          "path" : "/data/indexes",
          "displayName" : "/data/indexes",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTindex#data.2Findexes"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/indexes"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "blockSignSize"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "bucketRebuildMemoryHint"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "coldPath"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "coldToFrozenDir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "coldToFrozenScript"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "compressRawdata"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "enableOnlineBucketRepair"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "frozenTimePeriodInSecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "homePath"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxBloomBackfillBucketAge"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxConcurrentOptimizes"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxDataSize"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxHotBuckets"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxHotIdleSecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxHotSpanSecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxMemMB"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxMetaEntries"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxTimeUnreplicatedNoAcks"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxTimeUnreplicatedWithAcks"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxTotalDataSizeMB"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxWarmDBCount"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "minRawFileSyncSecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "minStreamGroupQueueSize"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "partialServiceMetaPeriod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "processTrackerServiceInterval"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "quarantineFutureSecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "quarantinePastSecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "rawChunkSizeBytes"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "repFactor"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "rotatePeriodInSecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "serviceMetaPeriod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "syncMeta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "thawedPath"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "throttleCheckPeriod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "tstatsHomePath"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "warmToColdScript"
            }
          ],
          "path" : "/data/indexes",
          "displayName" : "/data/indexes",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTindex#data.2Findexes"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/indexes"
        },
        {
          "path" : "/data/indexes/{name}",
          "displayName" : "/data/indexes/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTindex#data.2Findexes.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/data/indexes/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "summarize"
            }
          ],
          "path" : "/data/indexes/{name}",
          "displayName" : "/data/indexes/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTindex#data.2Findexes.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/indexes/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "blockSignSize"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "bucketRebuildMemoryHint"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "coldToFrozenDir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "coldToFrozenScript"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "compressRawdata"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "enableOnlineBucketRepair"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "frozenTimePeriodInSecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxBloomBackfillBucketAge"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxConcurrentOptimizes"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxDataSize"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxHotBuckets"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxHotIdleSecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxHotSpanSecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxMemMB"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxMetaEntries"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxTimeUnreplicatedNoAcks"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxTimeUnreplicatedWithAcks"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxTotalDataSizeMB"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxWarmDBCount"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "minRawFileSyncSecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "minStreamGroupQueueSize"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "partialServiceMetaPeriod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "processTrackerServiceInterval"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "quarantineFutureSecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "quarantinePastSecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "rawChunkSizeBytes"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "repFactor"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "rotatePeriodInSecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "serviceMetaPeriod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "syncMeta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "throttleCheckPeriod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "tstatsHomePath"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "warmToColdScript"
            }
          ],
          "path" : "/data/indexes/{name}",
          "displayName" : "/data/indexes/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTindex#data.2Findexes.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/indexes/{name}"
        },
        {
          "path" : "/data/indexes-extended",
          "displayName" : "/data/indexes-extended",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTindex#data.2Findexes-extended"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/indexes-extended"
        },
        {
          "path" : "/data/indexes-extended/{name}",
          "displayName" : "/data/indexes-extended/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTindex#data.2Findexes-extended.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/indexes-extended/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/data/inputs/ad",
          "displayName" : "/data/inputs/ad",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fad"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/ad"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "baseline"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "monitorSubtree"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "printSchema"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "source"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sourcetype"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "startingNode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "targetDc"
            }
          ],
          "path" : "/data/inputs/ad",
          "displayName" : "/data/inputs/ad",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fad"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/ad"
        },
        {
          "path" : "/data/inputs/ad/{name}",
          "displayName" : "/data/inputs/ad/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fad.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/data/inputs/ad/{name}"
        },
        {
          "path" : "/data/inputs/ad/{name}",
          "displayName" : "/data/inputs/ad/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fad.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/ad/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "baseline"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "monitorSubtree"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "printSchema"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "source"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sourcetype"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "startingNode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "targetDc"
            }
          ],
          "path" : "/data/inputs/ad/{name}",
          "displayName" : "/data/inputs/ad/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fad.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/ad/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "common"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/data/inputs/all",
          "displayName" : "/data/inputs/all",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fall"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/all"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "common"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/data/inputs/all/{name}",
          "displayName" : "/data/inputs/all/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fall.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/all/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/data/inputs/monitor",
          "displayName" : "/data/inputs/monitor",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fmonitor"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/monitor"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "blacklist"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "check-index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "check-path"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "crc-salt"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "followTail"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host_regex"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "host_segment"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ignore-older-than"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "recursive"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "rename-source"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sourcetype"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "time-before-close"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "whitelist"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            }
          ],
          "path" : "/data/inputs/monitor",
          "displayName" : "/data/inputs/monitor",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fmonitor"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/monitor"
        },
        {
          "path" : "/data/inputs/monitor/{name}",
          "displayName" : "/data/inputs/monitor/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fmonitor.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/data/inputs/monitor/{name}"
        },
        {
          "path" : "/data/inputs/monitor/{name}",
          "displayName" : "/data/inputs/monitor/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fmonitor.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/monitor/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "blacklist"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "check-index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "check-path"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "crc-salt"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "followTail"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host_regex"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "host_segment"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ignore-older-than"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "recursive"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "rename-source"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sourcetype"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "time-before-close"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "whitelist"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : ""
            }
          ],
          "path" : "/data/inputs/monitor/{name}",
          "displayName" : "/data/inputs/monitor/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fmonitor.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/monitor/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/data/inputs/monitor/{name}/members",
          "displayName" : "/data/inputs/monitor/{name}/members",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fmonitor.2F.7Bname.7D.2Fmembers"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/monitor/{name}/members"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/data/inputs/oneshot",
          "displayName" : "/data/inputs/oneshot",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/latest/RESTAPI/RESTlist"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/oneshot"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host_regex"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "host_segment"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "rename-source"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sourcetype"
            }
          ],
          "path" : "/data/inputs/oneshot",
          "displayName" : "/data/inputs/oneshot",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Foneshot"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/oneshot"
        },
        {
          "path" : "/data/inputs/oneshot/{name}",
          "displayName" : "/data/inputs/oneshot/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Foneshot.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/oneshot/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/data/inputs/registry",
          "displayName" : "/data/inputs/registry",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fregistry"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/registry"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "baseline"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "hive"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "proc"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "monitorSubnodes"
            }
          ],
          "path" : "/data/inputs/registry",
          "displayName" : "/data/inputs/registry",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fregistry"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/registry"
        },
        {
          "path" : "/data/inputs/registry/{name}",
          "displayName" : "/data/inputs/registry/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fregistry.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/data/inputs/registry/{name}"
        },
        {
          "path" : "/data/inputs/registry/{name}",
          "displayName" : "/data/inputs/registry/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fregistry.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/registry/{name}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "baseline"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "hive"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "proc"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "monitorSubnodes"
            }
          ],
          "path" : "/data/inputs/registry/{name}",
          "displayName" : "/data/inputs/registry/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fregistry.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/registry/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/data/inputs/script",
          "displayName" : "/data/inputs/script",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fscript"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/script"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "interval"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "passAuth"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "rename-source"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "source"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sourcetype"
            }
          ],
          "path" : "/data/inputs/script",
          "displayName" : "/data/inputs/script",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fscript"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/script"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "script"
            }
          ],
          "path" : "/data/inputs/script/restart",
          "displayName" : "/data/inputs/script/restart",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fscript.2Frestart"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/script/restart"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/data/inputs/script/{name}",
          "displayName" : "/data/inputs/script/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fscript.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/data/inputs/script/{name}"
        },
        {
          "path" : "/data/inputs/script/{name}",
          "displayName" : "/data/inputs/script/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fscript.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/script/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "interval"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "passAuth"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "rename-source"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "source"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sourcetype"
            }
          ],
          "path" : "/data/inputs/script/{name}",
          "displayName" : "/data/inputs/script/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fscript.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/script/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/data/inputs/tcp/cooked",
          "displayName" : "/data/inputs/tcp/cooked",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Ftcp.2Fcooked"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/tcp/cooked"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "SSL"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "connection_host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "restrictToHost"
            }
          ],
          "path" : "/data/inputs/tcp/cooked",
          "displayName" : "/data/inputs/tcp/cooked",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Ftcp.2Fcooked"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/tcp/cooked"
        },
        {
          "path" : "/data/inputs/tcp/cooked/{name}",
          "displayName" : "/data/inputs/tcp/cooked/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Ftcp.2Fcooked.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/data/inputs/tcp/cooked/{name}"
        },
        {
          "path" : "/data/inputs/tcp/cooked/{name}",
          "displayName" : "/data/inputs/tcp/cooked/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Ftcp.2Fcooked.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/tcp/cooked/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "SSL"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "connection_host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "restrictToHost"
            }
          ],
          "path" : "/data/inputs/tcp/cooked/{name}",
          "displayName" : "/data/inputs/tcp/cooked/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Ftcp.2Fcooked.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/tcp/cooked/{name}"
        },
        {
          "path" : "/data/inputs/tcp/cooked/{name}/connections",
          "displayName" : "/data/inputs/tcp/cooked/{name}/connections",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Ftcp.2Fcooked.2F.7Bname.7D.2Fconnections"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/tcp/cooked/{name}/connections"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/data/inputs/tcp/raw",
          "displayName" : "/data/inputs/tcp/raw",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Ftcp.2Fraw"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/tcp/raw"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "SSL"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "connection_host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "queue"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "rawTcpDoneTimeout"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "restrictToHost"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "source"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sourcetype"
            }
          ],
          "path" : "/data/inputs/tcp/raw",
          "displayName" : "/data/inputs/tcp/raw",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Ftcp.2Fraw"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/tcp/raw"
        },
        {
          "path" : "/data/inputs/tcp/raw/{name}",
          "displayName" : "/data/inputs/tcp/raw/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Ftcp.2Fraw.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/data/inputs/tcp/raw/{name}"
        },
        {
          "path" : "/data/inputs/tcp/raw/{name}",
          "displayName" : "/data/inputs/tcp/raw/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Ftcp.2Fraw.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/tcp/raw/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "SSL"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "connection_host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "queue"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "rawTcpDoneTimeout"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "restrictToHost"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "source"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sourcetype"
            }
          ],
          "path" : "/data/inputs/tcp/raw/{name}",
          "displayName" : "/data/inputs/tcp/raw/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Ftcp.2Fraw.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/tcp/raw/{name}"
        },
        {
          "path" : "/data/inputs/tcp/raw/{name}/connections",
          "displayName" : "/data/inputs/tcp/raw/{name}/connections",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Ftcp.2Fraw.2F.7Bname.7D.2Fconnections"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/tcp/raw/{name}/connections"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/data/inputs/tcp/ssl",
          "displayName" : "/data/inputs/tcp/ssl",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Ftcp.2Fssl"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/tcp/ssl"
        },
        {
          "path" : "/data/inputs/tcp/ssl/{name}",
          "displayName" : "/data/inputs/tcp/ssl/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Ftcp.2Fssl.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/tcp/ssl/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "password"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "requireClientCert"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "rootCA"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "serverCert"
            }
          ],
          "path" : "/data/inputs/tcp/ssl/{name}",
          "displayName" : "/data/inputs/tcp/ssl/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Ftcp.2Fssl.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/tcp/ssl/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/data/inputs/udp",
          "displayName" : "/data/inputs/udp",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fudp"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/udp"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "connection_host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "no_appending_timestamp"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "no_priority_stripping"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "queue"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "restrictToHost"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "source"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sourcetype"
            }
          ],
          "path" : "/data/inputs/udp",
          "displayName" : "/data/inputs/udp",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fudp"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/udp"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/data/inputs/udp/{name}",
          "displayName" : "/data/inputs/udp/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fudp.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/data/inputs/udp/{name}"
        },
        {
          "path" : "/data/inputs/udp/{name}",
          "displayName" : "/data/inputs/udp/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fudp.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/udp/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "connection_host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "no_appending_timestamp"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "no_priority_stripping"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "queue"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "restrictToHost"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "source"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sourcetype"
            }
          ],
          "path" : "/data/inputs/udp/{name}",
          "displayName" : "/data/inputs/udp/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fudp.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/udp/{name}"
        },
        {
          "path" : "/data/inputs/udp/{name}/connections",
          "displayName" : "/data/inputs/udp/{name}/connections",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fudp.2F.7Bname.7D.2Fconnections"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/udp/{name}/connections"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "lookup_host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/data/inputs/win-event-log-collections",
          "displayName" : "/data/inputs/win-event-log-collections",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fwin-event-log-collections"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/win-event-log-collections"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "lookup_host"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "hosts"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "logs"
            }
          ],
          "path" : "/data/inputs/win-event-log-collections",
          "displayName" : "/data/inputs/win-event-log-collections",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fwin-event-log-collections"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/win-event-log-collections"
        },
        {
          "path" : "/data/inputs/win-event-log-collections/{name}",
          "displayName" : "/data/inputs/win-event-log-collections/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fwin-event-log-collections.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/data/inputs/win-event-log-collections/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "lookup_host"
            }
          ],
          "path" : "/data/inputs/win-event-log-collections/{name}",
          "displayName" : "/data/inputs/win-event-log-collections/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fwin-event-log-collections.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/inputs/win-event-log-collections/{name}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "lookup_host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "hosts"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "logs"
            }
          ],
          "path" : "/data/inputs/win-event-log-collections/{name}",
          "displayName" : "/data/inputs/win-event-log-collections/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fwin-event-log-collections.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/inputs/win-event-log-collections/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fwin-perfmon"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/inputs/win-perfmon",
          "path" : "/data/inputs/win-perfmon",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/inputs/win-perfmon"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fwin-perfmon"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/inputs/win-perfmon",
          "path" : "/data/inputs/win-perfmon",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "counters",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "host",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "index",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "instances",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "interval",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "object",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "source",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sourcetype",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/inputs/win-perfmon"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fwin-perfmon.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/inputs/win-perfmon/{name}",
          "path" : "/data/inputs/win-perfmon/{name}",
          "url" : "https://localhost:8089/data/inputs/win-perfmon/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fwin-perfmon.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/inputs/win-perfmon/{name}",
          "path" : "/data/inputs/win-perfmon/{name}",
          "url" : "https://localhost:8089/data/inputs/win-perfmon/{name}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fwin-perfmon.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/inputs/win-perfmon/{name}",
          "path" : "/data/inputs/win-perfmon/{name}",
          "params" : [
            {
              "name" : "counters",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "host",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "index",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "instances",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "interval",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "object",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "source",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sourcetype",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/inputs/win-perfmon/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fwin-wmi-collections"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/inputs/win-wmi-collections",
          "path" : "/data/inputs/win-wmi-collections",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/inputs/win-wmi-collections"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fwin-wmi-collections"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/inputs/win-wmi-collections",
          "path" : "/data/inputs/win-wmi-collections",
          "params" : [
            {
              "name" : "classes",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "interval",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "lookup_host",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "disabled",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "index",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "instances",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "server",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/inputs/win-wmi-collections"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fwin-wmi-collections.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/inputs/win-wmi-collections/{name}",
          "path" : "/data/inputs/win-wmi-collections/{name}",
          "params" : [
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/inputs/win-wmi-collections/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fwin-wmi-collections.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/inputs/win-wmi-collections/{name}",
          "path" : "/data/inputs/win-wmi-collections/{name}",
          "url" : "https://localhost:8089/data/inputs/win-wmi-collections/{name}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Finputs.2Fwin-wmi-collections.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/inputs/win-wmi-collections/{name}",
          "path" : "/data/inputs/win-wmi-collections/{name}",
          "params" : [
            {
              "name" : "classes",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "interval",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "lookup_host",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "disabled",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "index",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "instances",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "server",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/inputs/win-wmi-collections/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Flookup-table-files"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/lookup-table-files",
          "path" : "/data/lookup-table-files",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/lookup-table-files"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Flookup-table-files"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/lookup-table-files",
          "path" : "/data/lookup-table-files",
          "params" : [
            {
              "name" : "eai:data",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://localhost:8089/data/lookup-table-files"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Flookup-table-files.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/lookup-table-files/{name}",
          "path" : "/data/lookup-table-files/{name}",
          "url" : "https://localhost:8089/data/lookup-table-files/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Flookup-table-files.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/lookup-table-files/{name}",
          "path" : "/data/lookup-table-files/{name}",
          "url" : "https://localhost:8089/data/lookup-table-files/{name}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Flookup-table-files.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/lookup-table-files/{name}",
          "path" : "/data/lookup-table-files/{name}",
          "params" : [
            {
              "name" : "eai:data",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://localhost:8089/data/lookup-table-files/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Fmodular-inputs"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/modular-inputs",
          "path" : "/data/modular-inputs",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/modular-inputs"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#data.2Fmodular-inputs.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/modular-inputs/{name}",
          "path" : "/data/modular-inputs/{name}",
          "url" : "https://localhost:8089/data/modular-inputs/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fdefault"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/outputs/tcp/default",
          "path" : "/data/outputs/tcp/default",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/outputs/tcp/default"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fdefault"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/outputs/tcp/default",
          "path" : "/data/outputs/tcp/default",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "defaultGroup",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "disabled",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dropEventsOnQueueFull",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "heartbeatFrequency",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "indexAndForward",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "maxQueueSize",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sendCookedData",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/outputs/tcp/default"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fdefault"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/outputs/tcp/default/{name}",
          "path" : "/data/outputs/tcp/default/{name}",
          "url" : "https://localhost:8089/data/outputs/tcp/default/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fdefault"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/outputs/tcp/default/{name}",
          "path" : "/data/outputs/tcp/default/{name}",
          "url" : "https://localhost:8089/data/outputs/tcp/default/{name}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fdefault"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/outputs/tcp/default/{name}",
          "path" : "/data/outputs/tcp/default/{name}",
          "params" : [
            {
              "name" : "defaultGroup",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "disabled",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dropEventsOnQueueFull",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "heartbeatFrequency",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "indexAndForward",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "maxQueueSize",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sendCookedData",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/outputs/tcp/default/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fgroup"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/outputs/tcp/group",
          "path" : "/data/outputs/tcp/group",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/outputs/tcp/group"
        },
        {
          "httpMethod" : "POST",
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/outputs/tcp/group",
          "path" : "/data/outputs/tcp/group",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "servers",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "compressed",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "disabled",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dropEventsOnQueueFull",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "heartbeatFrequency",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "maxQueueSize",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "method",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sendCookedData",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fgroup"
          },
          "url" : "https://localhost:8089/data/outputs/tcp/group"
        },
        {
          "path" : "/data/outputs/tcp/group/{name}",
          "displayName" : "/data/outputs/tcp/group/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fgroup.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/data/outputs/tcp/group/{name}"
        },
        {
          "path" : "/data/outputs/tcp/group/{name}",
          "displayName" : "/data/outputs/tcp/group/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fgroup.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/outputs/tcp/group/{name}"
        },
        {
          "path" : "/data/outputs/tcp/group/{name}",
          "displayName" : "/data/outputs/tcp/group/{name}",
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "servers"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "compressed"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "dropEventsOnQueueFull"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "heartbeatFrequency"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "maxQueueSize"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "method"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "sendCookedData"
            }
          ],
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fgroup.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/outputs/tcp/group/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/data/outputs/tcp/server",
          "displayName" : "/data/outputs/tcp/server",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fserver"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/outputs/tcp/server"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "method"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sslAltNameToCheck"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sslCertPath"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sslCipher"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sslCommonNameToCheck"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sslPassword"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sslRootCAPath"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "sslVerifyServerCert"
            }
          ],
          "path" : "/data/outputs/tcp/server",
          "displayName" : "/data/outputs/tcp/server",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fserver"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/outputs/tcp/server"
        },
        {
          "path" : "/data/outputs/tcp/server/{name}",
          "displayName" : "/data/outputs/tcp/server/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fserver.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/data/outputs/tcp/server/{name}"
        },
        {
          "path" : "/data/outputs/tcp/server/{name}",
          "displayName" : "/data/outputs/tcp/server/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://app.octoblu.com/connect/advanced/custom_channels/editor/53e8ea018e3257fb7d6fdae0"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/outputs/tcp/server/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "method"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sslAltNameToCheck"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sslCertPath"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sslCipher"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sslCommonNameToCheck"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sslPassword"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sslRootCAPath"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "sslVerifyServerCert"
            }
          ],
          "path" : "/data/outputs/tcp/server/{name}",
          "displayName" : "/data/outputs/tcp/server/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fserver.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/outputs/tcp/server/{name}"
        },
        {
          "path" : "/data/outputs/tcp/server/{name}/allconnections",
          "displayName" : "/data/outputs/tcp/server/{name}/allconnections",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fserver.2F.7Bname.7D.2Fallconnections"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/outputs/tcp/server/{name}/allconnections"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/data/outputs/tcp/syslog",
          "displayName" : "/data/outputs/tcp/syslog",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fsyslog"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/outputs/tcp/syslog"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "priority"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "server"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "syslogSourceType"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "timestampformat"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "type"
            }
          ],
          "path" : "/data/outputs/tcp/syslog",
          "displayName" : "/data/outputs/tcp/syslog",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fsyslog"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/outputs/tcp/syslog"
        },
        {
          "path" : "/data/outputs/tcp/syslog/{name}",
          "displayName" : "/data/outputs/tcp/syslog/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fsyslog.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/data/outputs/tcp/syslog/{name}"
        },
        {
          "path" : "/data/outputs/tcp/syslog/{name}",
          "displayName" : "/data/outputs/tcp/syslog/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fsyslog.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/data/outputs/tcp/syslog/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "priority"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "server"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "syslogSourceType"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "timestampformat"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "type"
            }
          ],
          "path" : "/data/outputs/tcp/syslog/{name}",
          "displayName" : "/data/outputs/tcp/syslog/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESToutput#data.2Foutputs.2Ftcp.2Fsyslog.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/outputs/tcp/syslog/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Fcalcfields"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/calcfields",
          "path" : "/data/props/calcfields",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/props/calcfields"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Fcalcfields"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/calcfields",
          "path" : "/data/props/calcfields",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "stanza",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "value",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://localhost:8089/data/props/calcfields"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Fcalcfields.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/calcfields/{name}",
          "path" : "/data/props/calcfields/{name}",
          "url" : "https://localhost:8089/data/props/calcfields/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Fcalcfields.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/calcfields/{name}",
          "path" : "/data/props/calcfields/{name}",
          "url" : "https://localhost:8089/data/props/calcfields/{name}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Fcalcfields.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/calcfields/{name}",
          "path" : "/data/props/calcfields/{name}",
          "params" : [
            {
              "name" : "value",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/props/calcfields/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Fextractions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/extractions",
          "path" : "/data/props/extractions",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/props/extractions"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "stanza"
            },
            {
              "name" : "type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "value",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "path" : "/data/props/extractions",
          "displayName" : "/data/props/extractions",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Fextractions"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/data/props/extractions"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Fextractions.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/extractions/{name}",
          "path" : "/data/props/extractions/{name}",
          "url" : "https://localhost:8089/data/props/extractions/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Fextractions.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/extractions/{name}",
          "path" : "/data/props/extractions/{name}",
          "url" : "https://localhost:8089/data/props/extractions/{name}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Fextractions.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/extractions/{name}",
          "path" : "/data/props/extractions/{name}",
          "params" : [
            {
              "name" : "value",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://localhost:8089/data/props/extractions/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Ffieldaliases"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/fieldaliases",
          "path" : "/data/props/fieldaliases",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/props/fieldaliases"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Ffieldaliases"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/fieldaliases",
          "path" : "/data/props/fieldaliases",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "stanza",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "alias.*",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/props/fieldaliases"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Ffieldaliases.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/fieldaliases/{name}",
          "path" : "/data/props/fieldaliases/{name}",
          "url" : "https://localhost:8089/data/props/fieldaliases/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Ffieldaliases.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/fieldaliases/{name}",
          "path" : "/data/props/fieldaliases/{name}",
          "url" : "https://localhost:8089/data/props/fieldaliases/{name}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Ffieldaliases.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/fieldaliases/{name}",
          "path" : "/data/props/fieldaliases/{name}",
          "params" : [
            {
              "name" : "alias.*",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/props/fieldaliases/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Flookups"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/lookups",
          "path" : "/data/props/lookups",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/props/lookups"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Flookups"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/lookups",
          "path" : "/data/props/lookups",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "overwrite",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "stanza",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "transform",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "lookup.field.input.*",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "lookup.field.output.*",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/props/lookups"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/latest/RESTAPI/RESTlist"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/lookups/{name}",
          "path" : "/data/props/lookups/{name}",
          "url" : "https://localhost:8089/data/props/lookups/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Flookups.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/lookups/{name}",
          "path" : "/data/props/lookups/{name}",
          "url" : "https://localhost:8089/data/props/lookups/{name}"
        },
        {
          "httpMethod" : "POST",
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/lookups/{name}",
          "path" : "/data/props/lookups/{name}",
          "params" : [
            {
              "name" : "overwrite",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "transform",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "lookup.field.input.*",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "lookup.field.output.*",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/props/lookups/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Fsourcetype-rename"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/sourcetype-rename",
          "path" : "/data/props/sourcetype-rename",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/props/sourcetype-rename"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Fsourcetype-rename"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/sourcetype-rename",
          "path" : "/data/props/sourcetype-rename",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "value",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://localhost:8089/data/props/sourcetype-rename"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Fsourcetype-rename.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/sourcetype-rename/{name}",
          "path" : "/data/props/sourcetype-rename/{name}",
          "url" : "https://localhost:8089/data/props/sourcetype-rename/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Fsourcetype-rename.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/sourcetype-rename/{name}",
          "path" : "/data/props/sourcetype-rename/{name}",
          "url" : "https://localhost:8089/data/props/sourcetype-rename/{name}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Fprops.2Fsourcetype-rename.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/props/sourcetype-rename/{name}",
          "path" : "/data/props/sourcetype-rename/{name}",
          "params" : [
            {
              "name" : "value",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://localhost:8089/data/props/sourcetype-rename/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Ftransforms.2Fextractions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/transforms/extractions",
          "path" : "/data/transforms/extractions",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/transforms/extractions"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Ftransforms.2Fextractions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/transforms/extractions",
          "path" : "/data/transforms/extractions",
          "params" : [
            {
              "name" : "REGEX",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "SOURCE_KEY",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "name CAN_OPTIMIZE",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "CLEAN_KEYS",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "FORMAT",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "KEEP_EMPTY_VALS",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "MV_ADD",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "disabled",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/transforms/extractions"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Ftransforms.2Fextractions.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/transforms/extractions/{name}",
          "path" : "/data/transforms/extractions/{name}",
          "url" : "https://localhost:8089/data/transforms/extractions/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Ftransforms.2Fextractions.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/transforms/extractions/{name}",
          "path" : "/data/transforms/extractions/{name}",
          "url" : "https://localhost:8089/data/transforms/extractions/{name}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Ftransforms.2Fextractions.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/transforms/extractions/{name}",
          "path" : "/data/transforms/extractions/{name}",
          "params" : [
            {
              "name" : "REGEX",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "SOURCE_KEY",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "CAN_OPTIMIZE",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "CLEAN_KEYS",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "FORMAT",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "KEEP_EMPTY_VALS",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "MV_ADD",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "disabled",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/transforms/extractions/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Ftransforms.2Flookups"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/transforms/lookups",
          "path" : "/data/transforms/lookups",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/transforms/lookups"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Ftransforms.2Flookups"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/transforms/lookups",
          "path" : "/data/transforms/lookups",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "default_match",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "disabled",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "external_cmd",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields_list",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields_list",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "max_matches",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "max_offset_secs",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "min_matches",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "min_offset_secs",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_field",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_format",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/transforms/lookups"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Ftransforms.2Flookups.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/transforms/lookups/{name}",
          "path" : "/data/transforms/lookups/{name}",
          "url" : "https://localhost:8089/data/transforms/lookups/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Ftransforms.2Flookups.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/transforms/lookups/{name}",
          "path" : "/data/transforms/lookups/{name}",
          "url" : "https://localhost:8089/data/transforms/lookups/{name}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#data.2Ftransforms.2Flookups.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/data/transforms/lookups/{name}",
          "path" : "/data/transforms/lookups/{name}",
          "params" : [
            {
              "name" : "default_match",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "disabled",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "external_cmd",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields_list",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filename",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "max_matches",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "max_offset_secs",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "min_matches",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "min_offset_secs",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_field",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_format",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/data/transforms/lookups/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "concise"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/datamodel/model",
          "displayName" : "/datamodel/model",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#datamodel.2Fmodel"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/datamodel/model"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "acceleration"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "concise"
            }
          ],
          "path" : "/datamodel/model",
          "displayName" : "/datamodel/model",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#datamodel.2Fmodel"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/datamodel/model"
        },
        {
          "path" : "/datamodel/model/{name}",
          "displayName" : "/datamodel/model/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#datamodel.2Fmodel.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/datamodel/model/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "concise"
            }
          ],
          "path" : "/datamodel/model/{name}",
          "displayName" : "/datamodel/model/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#datamodel.2Fmodel.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/datamodel/model/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "acceleration"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "concise"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "provisional"
            }
          ],
          "path" : "/datamodel/model/{name}",
          "displayName" : "/datamodel/model/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#datamodel.2Fmodel.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/datamodel/model/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/datamodel/acceleration",
          "displayName" : "/datamodel/acceleration",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#datamodel.2Facceleration"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/datamodel/acceleration"
        },
        {
          "path" : "/datamodel/acceleration/{name}",
          "displayName" : "/datamodel/acceleration/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#datamodel.2Facceleration.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/datamodel/acceleration/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "pivot_json"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "pivot_search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : ""
            }
          ],
          "path" : "/datamodel/pivot/{name}",
          "displayName" : "/datamodel/pivot/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#datamodel.2Fpivot"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/datamodel/pivot/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/deployment/client",
          "displayName" : "/deployment/client",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fclient"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/deployment/client"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/deployment/client/config",
          "displayName" : "/deployment/client/config",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fclient.2Fconfig"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/deployment/client/config"
        },
        {
          "path" : "/deployment/client/config/listIsDisabled",
          "displayName" : "/deployment/client/config/listIsDisabled",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fclient.2Fconfig.2FlistIsDisabled"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/deployment/client/config/listIsDisabled"
        },
        {
          "path" : "/deployment/client/config/reload",
          "displayName" : "/deployment/client/config/reload",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fclient.2Fconfig.2Freload"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/deployment/client/config/reload"
        },
        {
          "path" : "/deployment/client/{name}/reload",
          "displayName" : "/deployment/client/{name}/reload",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fclient.2F.7Bname.7D.2Freload"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/deployment/client/{name}/reload"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "clientId"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "hasDeploymentError"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/deployment/server/applications",
          "displayName" : "/deployment/server/applications",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fapplications"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/deployment/server/applications"
        },
        {
          "path" : "/deployment/server/applications/{name}",
          "displayName" : "/deployment/server/applications/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fapplications"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/deployment/server/applications/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "blacklist.*"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "continueMatching"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "deinstall"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "filterType"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "machineTypesFilter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "repositoryLocation"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "restartSplunkWeb"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "restartSplunkd"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "serverclass"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "stateOnClient"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "targetRepositoryLocation"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "tmpFolder"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "unmap"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "whitelist.*"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/deployment/server/applications/{name}",
          "displayName" : "/deployment/server/applications/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fapplications"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/deployment/server/applications/{name}"
        },
        {
          "path" : "/deployment/server/clients/countClients_by_machineType",
          "displayName" : "/deployment/server/clients/countClients_by_machineType",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fclients.2FcountClients_by_machineType"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/deployment/server/clients/countClients_by_machineType"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "maxAgeSecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "application"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "hasDeploymentError"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "maxPhonehome_latency_to_avgInterval_ratio"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "minLatestPhonehomeTime"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "minPhonehome_latency_to_avgInterval_ratio"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "serverclasses"
            }
          ],
          "path" : "/deployment/server/clients/countRecentDownloads",
          "displayName" : "/deployment/server/clients/countRecentDownloads",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fclients.2FcountRecentDownloads"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/deployment/server/clients/countRecentDownloads"
        },
        {
          "path" : "/deployment/server/clients/{name}",
          "displayName" : "/deployment/server/clients/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fclients.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/deployment/server/clients/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "application"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "hasDeploymentError"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "maxPhonehome_latency_to_avgInterval_ratio"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "minLatestPhonehomeTime"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "minPhonehome_latency_to_avgInterval_ratio"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "serverclasses"
            }
          ],
          "path" : "/deployment/server/clients/{name}",
          "displayName" : "/deployment/server/clients/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fclients.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/deployment/server/clients/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/deployment/server/config",
          "displayName" : "/deployment/server/config",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fconfig"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/deployment/server/config"
        },
        {
          "path" : "/deployment/server/config/attributesUnsupportedInUI",
          "displayName" : "/deployment/server/config/attributesUnsupportedInUI",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fconfig.2FattributesUnsupportedInUI"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/deployment/server/config/attributesUnsupportedInUI"
        },
        {
          "path" : "/deployment/server/config/listIsDisabled",
          "displayName" : "/deployment/server/config/listIsDisabled",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fconfig.2FlistIsDisabled"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/deployment/server/config/listIsDisabled"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "clientId"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "hasDeploymentError"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/deployment/server/serverclasses",
          "displayName" : "/deployment/server/serverclasses",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fserverclasses"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/deployment/server/serverclasses"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "blacklist.*"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "continueMatching"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "filterType"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "machineTypesFilter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "repositoryLocation"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "restartSplunkWeb"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "restartSplunkd"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "stateOnClient"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "targetRepositoryLocation"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "tmpFolder"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "whitelist.*"
            }
          ],
          "path" : "/deployment/server/serverclasses",
          "displayName" : "/deployment/server/serverclasses",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fserverclasses"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/deployment/server/serverclasses"
        },
        {
          "path" : "/deployment/server/serverclasses/{name}",
          "displayName" : "/deployment/server/serverclasses/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fserverclasses.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/deployment/server/serverclasses/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "clientId"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "hasDeploymentError"
            }
          ],
          "path" : "/deployment/server/serverclasses/{name}",
          "displayName" : "/deployment/server/serverclasses/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fserverclasses.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/deployment/server/serverclasses/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "blacklist.*"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "continueMatching"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "filterType"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "machineTypesFilter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "repositoryLocation"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "restartSplunkWeb"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "restartSplunkd"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "stateOnClient"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "targetRepositoryLocation"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "tmpFolder"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "whitelist.*"
            }
          ],
          "path" : "/deployment/server/serverclasses/{name}",
          "displayName" : "/deployment/server/serverclasses/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fserverclasses.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/deployment/server/serverclasses/{name}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "newName"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "oldName"
            }
          ],
          "path" : "/deployment/server/serverclasses/rename",
          "displayName" : "/deployment/server/serverclasses/rename",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#deployment.2Fserver.2Fserverclasses.2Frename"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/deployment/server/serverclasses/rename"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/directory",
          "displayName" : "/directory",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#directory"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/directory"
        },
        {
          "path" : "/directory/{name}",
          "displayName" : "/directory/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#directory"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/directory/{name}"
        },
        {
          "path" : "/indexing/preview",
          "displayName" : "/indexing/preview",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#indexing.2Fpreview"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/indexing/preview"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "input.path"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "props.<props_attr>"
            }
          ],
          "path" : "/indexing/preview",
          "displayName" : "/indexing/preview",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#indexing.2Fpreview"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/indexing/preview"
        },
        {
          "path" : "/indexing/preview/{job_id}",
          "displayName" : "/indexing/preview/{job_id}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#indexing.2Fpreview.2F.7Bjob_id.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/indexing/preview/{job_id}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/licenser/groups",
          "displayName" : "/licenser/groups",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Fgroups"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/licenser/groups"
        },
        {
          "path" : "/licenser/groups/{name}",
          "displayName" : "/licenser/groups/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Fgroups.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/licenser/groups/{name}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "is_active"
            }
          ],
          "path" : "/licenser/groups/{name}",
          "displayName" : "/licenser/groups/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Fgroups.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/licenser/groups/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/licenser/licenses",
          "displayName" : "/licenser/licenses",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Flicenses"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/licenser/licenses"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "payload"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/licenser/licenses",
          "displayName" : "/licenser/licenses",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Flicenses"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/licenser/licenses"
        },
        {
          "path" : "/licenser/licenses/{name}",
          "displayName" : "/licenser/licenses/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Flicenses.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/licenser/licenses/{name}"
        },
        {
          "path" : "/licenser/licenses/{name}",
          "displayName" : "/licenser/licenses/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Flicenses.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/licenser/licenses/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/licenser/messages",
          "displayName" : "/licenser/messages",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Fmessages"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/licenser/messages"
        },
        {
          "path" : "/licenser/messages/{name}",
          "displayName" : "/licenser/messages/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Fmessages.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/licenser/messages/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/licenser/pools",
          "displayName" : "/licenser/pools",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Fpools"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/licenser/pools"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "quota"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "stack_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "slaves"
            }
          ],
          "path" : "/licenser/pools",
          "displayName" : "/licenser/pools",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Fpools"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/licenser/pools"
        },
        {
          "path" : "/licenser/pools/{name}",
          "displayName" : "/licenser/pools/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Fpools.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/licenser/pools/{name}"
        },
        {
          "path" : "/licenser/pools/{name}",
          "displayName" : "/licenser/pools/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Fpools.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/licenser/pools/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "append_slaves"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "quota"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "slaves"
            }
          ],
          "path" : "/licenser/pools/{name}",
          "displayName" : "/licenser/pools/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Fpools.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/licenser/pools/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/licenser/slaves",
          "displayName" : "/licenser/slaves",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Fslaves"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/licenser/slaves"
        },
        {
          "path" : "/licenser/slaves/{name}",
          "displayName" : "/licenser/slaves/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Fslaves.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/licenser/slaves/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/licenser/stacks",
          "displayName" : "/licenser/stacks",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Fstacks"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/licenser/stacks"
        },
        {
          "path" : "/licenser/stacks/{name}",
          "displayName" : "/licenser/stacks/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTlicense#licenser.2Fstacks.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/licenser/stacks/{name}"
        },
        {
          "path" : "/messages",
          "displayName" : "/messages",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#messages"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/messages"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "value"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "severity"
            }
          ],
          "path" : "/messages",
          "displayName" : "/messages",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#messages"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/messages"
        },
        {
          "path" : "/messages/{name}",
          "displayName" : "/messages/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#messages.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/messages/{name}"
        },
        {
          "path" : "/messages/{name}",
          "displayName" : "/messages/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#messages.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/messages/{name}"
        },
        {
          "path" : "/properties",
          "displayName" : "/properties",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTconfig#properties"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/properties"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "__conf"
            }
          ],
          "path" : "/properties",
          "displayName" : "/properties",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTconfig#properties"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/properties"
        },
        {
          "path" : "/properties/{file_name}",
          "displayName" : "/properties/{file_name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTconfig#properties.2F.7Bfile_name.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/properties/{file_name}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "__stanza"
            }
          ],
          "path" : "/properties/{file_name}",
          "displayName" : "/properties/{file_name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTconfig#properties.2F.7Bfile_name.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/properties/{file_name}"
        },
        {
          "path" : "/properties/{file_name}/{stanza_name}",
          "displayName" : "/properties/{file_name}/{stanza_name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTconfig#properties.2F.7Bfile_name.7D.2F.7Bstanza_name.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/properties/{file_name}/{stanza_name}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "key_name"
            }
          ],
          "path" : "/properties/{file_name}/{stanza_name}",
          "displayName" : "/properties/{file_name}/{stanza_name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTconfig#properties.2F.7Bfile_name.7D.2F.7Bstanza_name.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/properties/{file_name}/{stanza_name}"
        },
        {
          "path" : "/properties/{file_name}/{stanza_name}/{key_name}",
          "displayName" : "/properties/{file_name}/{stanza_name}/{key_name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTconfig#properties.2F.7Bfile_name.7D.2F.7Bstanza_name.7D.2F.7Bkey_name.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/properties/{file_name}/{stanza_name}/{key_name}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "value"
            }
          ],
          "path" : "/properties/{file_name}/{stanza_name}/{key_name}",
          "displayName" : "/properties/{file_name}/{stanza_name}/{key_name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTconfig#properties.2F.7Bfile_name.7D.2F.7Bstanza_name.7D.2F.7Bkey_name.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/properties/{file_name}/{stanza_name}/{key_name}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "arbitrary_data"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host_regex"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "source"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sourcetype"
            }
          ],
          "path" : "/receivers/simple",
          "displayName" : "/receivers/simple",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#receivers.2Fsimple"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/receivers/simple"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "data_stream"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "host_regex"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "source"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sourcetype"
            }
          ],
          "path" : "/receivers/stream",
          "displayName" : "/receivers/stream",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTinput#receivers.2Fstream"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/receivers/stream"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#saved.2Feventtypes"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/saved/eventtypes",
          "path" : "/saved/eventtypes",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/saved/eventtypes"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#saved.2Feventtypes"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/saved/eventtypes",
          "path" : "/saved/eventtypes",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "search",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "disabled",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "priority",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tags",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/saved/eventtypes"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#saved.2Feventtypes.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/saved/eventtypes/{name}",
          "path" : "/saved/eventtypes/{name}",
          "url" : "https://localhost:8089/saved/eventtypes/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#saved.2Feventtypes.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/saved/eventtypes/{name}",
          "path" : "/saved/eventtypes/{name}",
          "url" : "https://localhost:8089/saved/eventtypes/{name}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#saved.2Feventtypes.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/saved/eventtypes/{name}",
          "path" : "/saved/eventtypes/{name}",
          "params" : [
            {
              "name" : "search",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "disabled",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "priority",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tags",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/saved/eventtypes/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#saved.2Fsearches"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/saved/searches",
          "path" : "/saved/searches",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "earliest_time",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "latest_time",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "listDefaultActionArgs",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/saved/searches"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#saved.2Fsearches"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/saved/searches",
          "path" : "/saved/searches",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "search",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "action.*",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.auth_password",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.auth_username",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.bcc",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.cc",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.command",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.format",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.from",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.hostname",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.inline",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.mailserver",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.maxresults",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.maxtime",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.pdfview",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.preprocess_results",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.reportCIDFontList",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.reportIncludeSplunkLogo",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.reportPaperOrientation",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.reportPaperSize",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.reportServerEnabled",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.reportServerURL",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.sendpdf",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.sendresults",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.subject",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.to",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.track_alert",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.ttl",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.use_ssl",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.use_tls",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.email.width_sort_columns",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.populate_lookup",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.populate_lookup.command",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.populate_lookup.dest",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.populate_lookup.hostname",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.populate_lookup.maxresults",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.populate_lookup.maxtime",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.populate_lookup.track_alert",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.populate_lookup.ttl",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.rss",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.rss.command",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.rss.hostname",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.rss.maxresults",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.rss.maxtime",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.rss.track_alert",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.rss.ttl",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.script",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.script.command",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.script.filename",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.script.hostname",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.script.maxresults",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.script.maxtime",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.script.track_alert",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.script.ttl",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.summary_index",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.summary_index._name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.summary_index.command",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.summary_index.hostname",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.summary_index.inline",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.summary_index.maxresults",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.summary_index.maxtime",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.summary_index.track_alert",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action.summary_index.ttl",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "actions",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "alert.digest_mode",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "alert.expires",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "alert.severity",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "alert.suppress",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "alert.suppress.fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "alert.suppress.period",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "alert.track",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "alert_comparator",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "alert_condition",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "alert_threshold",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "alert_type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "args.*",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auto_summarize",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auto_summarize.command",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auto_summarize.cron_schedule",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auto_summarize.dispatch.earliest_time",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auto_summarize.dispatch.latest_time",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auto_summarize.dispatch.time_format",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auto_summarize.dispatch.ttl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auto_summarize.max_disabled_buckets",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auto_summarize.max_summary_ratio",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auto_summarize.max_summary_size",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auto_summarize.max_time",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auto_summarize.suspend_period",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auto_summarize.timespan",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "cron_schedule",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "disabled",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dispatch.*",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dispatch.buckets",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dispatch.earliest_time",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dispatch.indexedRealtime",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dispatch.latest_time",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dispatch.lookups",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dispatch.max_count",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dispatch.max_time",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dispatch.reduce_freq",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dispatch.rt_backfill",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dispatch.spawn_process",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dispatch.time_format",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "dispatch.ttl",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "displayview",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "is_scheduled",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "is_visible",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "max_concurrent",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "next_scheduled_time",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "qualifiedSearch",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "realtime_schedule",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "request.ui_dispatch_app",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "request.ui_dispatch_view",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "restart_on_searchpeer_add",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "run_on_startup",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "vsid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/saved/searches"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#saved.2Fsearches.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/saved/searches/{name}",
          "path" : "/saved/searches/{name}",
          "url" : "https://localhost:8089/saved/searches/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#saved.2Fsearches.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/saved/searches/{name}",
          "path" : "/saved/searches/{name}",
          "params" : [
            {
              "name" : "earliest_time",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "latest_time",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "listDefaultActionArgs",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/saved/searches/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.*"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.email"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.auth_password"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.auth_username"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.bcc"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.cc"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.command"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.format"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.from"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.hostname"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.email.inline"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.mailserver"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "action.email.maxresults"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "action.email.maxtime"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.pdfview"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.preprocess_results"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.reportCIDFontList"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.email.reportIncludeSplunkLogo"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.reportPaperOrientation"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.reportPaperSize"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.email.reportServerEnabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.reportServerURL"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.email.sendpdf"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.email.sendresults"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.subject"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.to"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.email.track_alert"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "action.email.ttl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.email.use_ssl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.email.use_tls"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.email.width_sort_columns"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.populate_lookup"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.populate_lookup.command"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.populate_lookup.dest"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.populate_lookup.hostname"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "action.populate_lookup.maxresults"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "action.populate_lookup.maxtime"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.populate_lookup.track_alert"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "action.populate_lookup.ttl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.rss"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.rss.command"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.rss.hostname"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "action.rss.maxresults"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "action.rss.maxtime"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.rss.track_alert"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "action.rss.ttl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.script"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.script.command"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.script.filename"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.script.hostname"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "action.script.maxresults"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "action.script.maxtime"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.script.track_alert"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "action.script.ttl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.summary_index"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.summary_index._name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.summary_index.command"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.summary_index.hostname"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.summary_index.inline"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "action.summary_index.maxresults"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "action.summary_index.maxtime"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "action.summary_index.track_alert"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "action.summary_index.ttl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "actions"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "alert.digest_mode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "alert.expires"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "alert.severity"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "alert.suppress"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "alert.suppress.fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "alert.suppress.period"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "alert.track"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "alert_comparator"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "alert_condition"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "alert_threshold"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "alert_type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "args.*"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "auto_summarize"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "auto_summarize.command"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "auto_summarize.cron_schedule"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "auto_summarize.dispatch.earliest_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "auto_summarize.dispatch.latest_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "auto_summarize.dispatch.time_format"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "auto_summarize.dispatch.ttl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "auto_summarize.max_disabled_buckets"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "auto_summarize.max_summary_ratio"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "auto_summarize.max_summary_size"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "auto_summarize.max_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "auto_summarize.suspend_period"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "auto_summarize.timespan"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "cron_schedule"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "dispatch.*"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "dispatch.buckets"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "dispatch.earliest_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "dispatch.indexedRealtime"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "dispatch.latest_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "dispatch.lookups"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "dispatch.max_count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "dispatch.max_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "dispatch.reduce_freq"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "dispatch.rt_backfill"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "dispatch.spawn_process"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "dispatch.time_format"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "dispatch.ttl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "displayview"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "is_scheduled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "is_visible"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "max_concurrent"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "next_scheduled_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "qualifiedSearch"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "realtime_schedule"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "request.ui_dispatch_app"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "request.ui_dispatch_view"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "restart_on_searchpeer_add"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "run_on_startup"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "vsid"
            }
          ],
          "path" : "/saved/searches/{name}",
          "displayName" : "/saved/searches/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#saved.2Fsearches.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/saved/searches/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "key"
            }
          ],
          "path" : "/saved/searches/{name}/acknowledge",
          "displayName" : "/saved/searches/{name}/acknowledge",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#saved.2Fsearches.2F.7Bname.7D.2Facknowledge"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/saved/searches/{name}/acknowledge"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "args.*"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "dispatch.*"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "dispatch.now"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "force_dispatch"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "now"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "trigger_actions"
            }
          ],
          "path" : "/saved/searches/{name}/dispatch",
          "displayName" : "/saved/searches/{name}/dispatch",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#saved.2Fsearches.2F.7Bname.7D.2Fdispatch"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/saved/searches/{name}/dispatch"
        },
        {
          "path" : "/saved/searches/{name}/history",
          "displayName" : "/saved/searches/{name}/history",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#saved.2Fsearches.2F.7Bname.7D.2Fhistory"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/saved/searches/{name}/history"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "schedule_time"
            }
          ],
          "path" : "/saved/searches/{name}/reschedule",
          "displayName" : "/saved/searches/{name}/reschedule",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#saved.2Fsearches.2F.7Bname.7D.2Freschedule"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/saved/searches/{name}/reschedule"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "earliest_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "latest_time"
            }
          ],
          "path" : "/saved/searches/{name}/scheduled_times",
          "displayName" : "/saved/searches/{name}/scheduled_times",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#saved.2Fsearches.2F.7Bname.7D.2Fscheduled_times"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/saved/searches/{name}/scheduled_times"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "expiration"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "key"
            }
          ],
          "path" : "/saved/searches/{name}/suppress",
          "displayName" : "/saved/searches/{name}/suppress",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#saved.2Fsearches.2F.7Bname.7D.2Fsuppress"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/saved/searches/{name}/suppress"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/scheduled/views",
          "displayName" : "/scheduled/views",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#scheduled.2Fviews"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/scheduled/views"
        },
        {
          "path" : "/scheduled/views/{name}",
          "displayName" : "/scheduled/views/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#scheduled.2Fviews.2F.7Bname.7D"
          },
          "httpMethod" : "DELETE",
          "url" : "https://localhost:8089/scheduled/views/{name}"
        },
        {
          "path" : "/scheduled/views/{name}",
          "displayName" : "/scheduled/views/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#scheduled.2Fviews.2F.7Bname.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/scheduled/views/{name}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email.to"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "cron_schedule"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "is_scheduled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "action.email*"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "disabled"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "next_scheduled_time"
            }
          ],
          "path" : "/scheduled/views/{name}",
          "displayName" : "/scheduled/views/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#scheduled.2Fviews.2F.7Bname.7D"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/scheduled/views/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "args.*"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "dispatch.*"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "dispatch.now"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "force_dispatch"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "now"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "trigger_actions"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/scheduled/views/{name}/dispatch",
          "displayName" : "/scheduled/views/{name}/dispatch",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#scheduled.2Fviews.2F.7Bname.7D.2Fdispatch"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/scheduled/views/{name}/dispatch"
        },
        {
          "path" : "/scheduled/views/{name}/history",
          "displayName" : "/scheduled/views/{name}/history",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#scheduled.2Fviews.2F.7Bname.7D.2Fhistory"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/scheduled/views/{name}/history"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "schedule_time"
            }
          ],
          "path" : "/scheduled/views/{name}/reschedule",
          "displayName" : "/scheduled/views/{name}/reschedule",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#scheduled.2Fviews.2F.7Bname.7D.2Freschedule"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/scheduled/views/{name}/reschedule"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "earliest_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "latest_time"
            }
          ],
          "path" : "/scheduled/views/{name}/scheduled_times",
          "displayName" : "/scheduled/views/{name}/scheduled_times",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#scheduled.2Fviews.2F.7Bname.7D.2Fscheduled_times"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/scheduled/views/{name}/scheduled_times"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "force_list_all"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/search/distributed/bundle-replication-files",
          "displayName" : "/search/distributed/bundle-replication-files",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#search.2Fdistributed.2Fbundle-replication-files"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/search/distributed/bundle-replication-files"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "force_list_all"
            }
          ],
          "path" : "/search/distributed/bundle-replication-files/{name}",
          "displayName" : "/search/distributed/bundle-replication-files/{name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/latest/RESTAPI/RESTlist"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/search/distributed/bundle-replication-files/{name}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : ""
            }
          ],
          "path" : "/search/distributed/config",
          "displayName" : "/search/distributed/config",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#search.2Fdistributed.2Fconfig"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/search/distributed/config"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_mode"
            }
          ],
          "path" : "/search/distributed/peers",
          "displayName" : "/search/distributed/peers",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#search.2Fdistributed.2Fpeers"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/search/distributed/peers"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "remotePassword"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "remoteUsername"
            }
          ],
          "path" : "/search/distributed/peers",
          "displayName" : "/search/distributed/peers",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTdeploy#search.2Fdistributed.2Fpeers"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/search/distributed/peers"
        },
        {
          "path" : "/search/fields",
          "displayName" : "/search/fields",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#search.2Ffields"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/search/fields"
        },
        {
          "path" : "/search/fields/{field_name}",
          "displayName" : "/search/fields/{field_name}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#search.2Ffields.2F.7Bfield_name.7D"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/search/fields/{field_name}"
        },
        {
          "path" : "/search/fields/{field_name}/tags",
          "displayName" : "/search/fields/{field_name}/tags",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#search.2Ffields.2F.7Bfield_name.7D.2Ftags"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/search/fields/{field_name}/tags"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "value"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "add"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "delete"
            }
          ],
          "path" : "/search/fields/{field_name}/tags",
          "displayName" : "/search/fields/{field_name}/tags",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#search.2Ffields.2F.7Bfield_name.7D.2Ftags"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/search/fields/{field_name}/tags"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_dir"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort_key"
            }
          ],
          "path" : "/search/jobs",
          "displayName" : "/search/jobs",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#search.2Fjobs"
          },
          "httpMethod" : "GET",
          "url" : "https://localhost:8089/search/jobs"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "auto_cancel"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "auto_finalize_ec"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "auto_pause"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "custom"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "earliest_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "enable_lookups"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "exec_mode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "force_bundle_replication"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index_earliest"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "index_latest"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "indexedRealtime"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "indexedRealtimeOffset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "latest_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "max_count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "max_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "namespace"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "now"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "reduce_freq"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "reload_macros"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "remote_server_list"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "required_field_list"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "reuse_max_seconds_ago"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "rf"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "rt_blocking"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "rt_indexfilter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "rt_maxblocksecs"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "rt_queue_size"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "search_listener"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "search_mode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "spawn_process"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "status_buckets"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "sync_bundle_replication"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "time_format"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "timeout"
            }
          ],
          "path" : "/search/jobs",
          "displayName" : "/search/jobs",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#search.2Fjobs"
          },
          "httpMethod" : "POST",
          "url" : "https://localhost:8089/search/jobs"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#search.2Fjobs.2F.7Bsearch_id.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/jobs/{search_id}",
          "path" : "/search/jobs/{search_id}",
          "url" : "https://localhost:8089/search/jobs/{search_id}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#search.2Fjobs.2F.7Bsearch_id.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/jobs/{search_id}",
          "path" : "/search/jobs/{search_id}",
          "url" : "https://localhost:8089/search/jobs/{search_id}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#search.2Fjobs.2F.7Bsearch_id.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/jobs/{search_id}",
          "path" : "/search/jobs/{search_id}",
          "params" : [
            {
              "name" : "custom",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://localhost:8089/search/jobs/{search_id}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#search.2Fjobs.2F.7Bsearch_id.7D.2Fcontrol"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/jobs/{search_id}/control",
          "path" : "/search/jobs/{search_id}/control",
          "params" : [
            {
              "name" : "action",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://localhost:8089/search/jobs/{search_id}/control"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#search.2Fjobs.2F.7Bsearch_id.7D.2Fevents"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/jobs/{search_id}/events",
          "path" : "/search/jobs/{search_id}/events",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "earliest_time",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "field_list",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "latest_time",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "max_lines",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "output_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "output_time_format",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "segmentation",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_format",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "truncation_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/search/jobs/{search_id}/events"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#search.2Fjobs.2F.7Bsearch_id.7D.2Fresults"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/jobs/{search_id}/results",
          "path" : "/search/jobs/{search_id}/results",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "field_list",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "output_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/search/jobs/{search_id}/results"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#search.2Fjobs.2F.7Bsearch_id.7D.2Fsummary"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/jobs/{search_id}/search.log",
          "path" : "/search/jobs/{search_id}/search.log",
          "params" : [
            {
              "name" : "attachment",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/search/jobs/{search_id}/search.log"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#search.2Fjobs.2F.7Bsearch_id.7D.2Fsummary"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/jobs/{search_id}/summary",
          "path" : "/search/jobs/{search_id}/summary",
          "params" : [
            {
              "name" : "earliest_time",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "field_list",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "histogram",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "latest_time",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "min_freq",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "output_time_format",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_format",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "top_count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/search/jobs/{search_id}/summary"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#search.2Fjobs.2F.7Bsearch_id.7D.2Ftimeline"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/jobs/{search_id}/timeline",
          "path" : "/search/jobs/{search_id}/timeline",
          "params" : [
            {
              "name" : "output_time_format",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_format",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/search/jobs/{search_id}/timeline"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#search.2Fjobs.2Fexport"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/jobs/export",
          "path" : "/search/jobs/export",
          "params" : [
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "auto_cancel",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auto_finalize_ec",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "auto_pause",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "earliest_time",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "enable_lookups",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "force_bundle_replication",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "index_earliest",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "index_latest",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "latest_time",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "max_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "namespace",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "now",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "output_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "reduce_freq",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "reload_macros",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "remote_server_list",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "required_field_list",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "rf",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "rt_blocking",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "rt_indexfilter",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "rt_maxblocksecs",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "rt_queue_size",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search_listener",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sync_bundle_replication",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_format",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "timeout",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/search/jobs/export"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#search.2Fparser"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/parser",
          "path" : "/search/parser",
          "params" : [
            {
              "name" : "q",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "enable_lookups",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "output_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "parse_only",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "reload_macros",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/search/parser"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#search.2Ftags"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/tags",
          "path" : "/search/tags",
          "url" : "https://localhost:8089/search/tags"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#search.2Ftags"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/tags/{tag_name}",
          "path" : "/search/tags/{tag_name}",
          "url" : "https://localhost:8089/search/tags/{tag_name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#search.2Ftags"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/tags/{tag_name}",
          "path" : "/search/tags/{tag_name}",
          "url" : "https://localhost:8089/search/tags/{tag_name}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTknowledge#search.2Ftags"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/tags/{tag_name}",
          "path" : "/search/tags/{tag_name}",
          "params" : [
            {
              "name" : "add",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "delete",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/search/tags/{tag_name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#search.2Ftimeparser"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/timeparser",
          "path" : "/search/timeparser",
          "params" : [
            {
              "name" : "time",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "now",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "output_time_format",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_format",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/search/timeparser"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsearch#search.2Ftypeahead"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search/typeahead",
          "path" : "/search/typeahead",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "prefix",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "output_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/search/typeahead"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#server.2Fcontrol"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/control",
          "path" : "/server/control",
          "url" : "https://localhost:8089/server/control"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#server.2Fcontrol.2Frestart"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/control/restart",
          "path" : "/server/control/restart",
          "url" : "https://localhost:8089/server/control/restart"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#server.2Finfo"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/info",
          "path" : "/server/info",
          "url" : "https://localhost:8089/server/info"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#server.2Flogger"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/logger",
          "path" : "/server/logger",
          "url" : "https://localhost:8089/server/logger"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#server.2Flogger.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/logger/{name}",
          "path" : "/server/logger/{name}",
          "url" : "https://localhost:8089/server/logger/{name}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#server.2Flogger.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/logger/{name}",
          "path" : "/server/logger/{name}",
          "params" : [
            {
              "name" : "level",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://localhost:8089/server/logger/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#server.2Froles"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/roles",
          "path" : "/server/roles",
          "url" : "https://localhost:8089/server/roles"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "stem#server.2Fsettings"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/settings",
          "path" : "/server/settings",
          "url" : "https://localhost:8089/server/settings"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#server.2Fstatus"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/status",
          "path" : "/server/status",
          "url" : "https://localhost:8089/server/status"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#server.2Fstatus.2Fdispatch-artifacts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/status/dispatch-artifacts",
          "path" : "/server/status/dispatch-artifacts",
          "url" : "https://localhost:8089/server/status/dispatch-artifacts"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#server.2Fstatus.2Ffishbucket"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/status/fishbucket",
          "path" : "/server/status/fishbucket",
          "url" : "https://localhost:8089/server/status/fishbucket"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#server.2Fstatus.2Flimits.2Fsearch-concurrency"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/status/limits/search-concurrency",
          "path" : "/server/status/limits/search-concurrency",
          "url" : "https://localhost:8089/server/status/limits/search-concurrency"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#server.2Fstatus.2Fpartitions-space"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/status/partitions-space",
          "path" : "/server/status/partitions-space",
          "url" : "https://localhost:8089/server/status/partitions-space"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#server.2Fstatus.2Fresource-usage"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/status/resource-usage",
          "path" : "/server/status/resource-usage",
          "url" : "https://localhost:8089/server/status/resource-usage"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#server.2Fstatus.2Fresource-usage.2Fhostwide"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/status/resource-usage/hostwide",
          "path" : "/server/status/resource-usage/hostwide",
          "url" : "https://localhost:8089/server/status/resource-usage/hostwide"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTsystem#server.2Fstatus.2Fresource-usage.2Fsplunk-processes"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/server/status/resource-usage/splunk-processes",
          "path" : "/server/status/resource-usage/splunk-processes",
          "url" : "https://localhost:8089/server/status/resource-usage/splunk-processes"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#storage.2Fpasswords"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/storage/passwords",
          "path" : "/storage/passwords",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_dir",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_mode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/storage/passwords"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#storage.2Fpasswords"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/storage/passwords",
          "path" : "/storage/passwords",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "password",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "realm",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://localhost:8089/storage/passwords"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#storage.2Fpasswords.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/storage/passwords/{name}",
          "path" : "/storage/passwords/{name}",
          "url" : "https://localhost:8089/storage/passwords/{name}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#storage.2Fpasswords.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/storage/passwords/{name}",
          "path" : "/storage/passwords/{name}",
          "url" : "https://localhost:8089/storage/passwords/{name}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://docs.splunk.com/Documentation/Splunk/6.1.3/RESTAPI/RESTaccess#storage.2Fpasswords.2F.7Bname.7D"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/storage/passwords/{name}",
          "path" : "/storage/passwords/{name}",
          "params" : [
            {
              "name" : "password",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://localhost:8089/storage/passwords/{name}"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "http://docs.splunk.com/Documentation/Splunk/latest/RESTAPI/RESTlist",
    "enabled" : true,
    "logo" : "https://www.okta.com/blog/wp-content/uploads/2013/10/splunk-logo.jpg",
    "name" : "Splunk API",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:splunk_api"
  },
  {
    "_id" : "53e11cd28e3257fb7d6fdad0",
    "__v" : 0,
    "application" : {
      "base" : "https://api.automatic.com/v1/",
      "resources" : [
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "per_page"
            }
          ],
          "path" : "/trips",
          "displayName" : "/trips",
          "authentication" : {
            "required" : "true"
          },
          "httpMethod" : "GET",
          "url" : "https://api.automatic.com/v1//trips"
        },
        {
          "path" : "/trips/:id",
          "displayName" : "/trips/:id",
          "authentication" : {
            "required" : "true"
          },
          "httpMethod" : "GET",
          "url" : "https://api.automatic.com/v1//trips/:id"
        },
        {
          "path" : "/user",
          "displayName" : "/user",
          "authentication" : {
            "required" : "true"
          },
          "httpMethod" : "GET",
          "url" : "https://api.automatic.com/v1//user"
        },
        {
          "path" : "/vehicles",
          "displayName" : "/vehicles",
          "authentication" : {
            "required" : "true"
          },
          "httpMethod" : "GET",
          "url" : "https://api.automatic.com/v1//vehicles"
        },
        {
          "path" : "/vehicles/:id",
          "displayName" : "/vehicles/:id",
          "authentication" : {
            "required" : "true"
          },
          "httpMethod" : "GET",
          "url" : "https://api.automatic.com/v1//vehicles/:id"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://www.automatic.com/developer/documentation/",
    "enabled" : true,
    "logo" : "http://www.swaroopch.com/files/images/2013/08/automatic_rgb_vertical_logo-d73eccede466.jpg",
    "name" : "Automatic",
    "oauth" : {
      "version" : "1.0",
      "key" : "4b5389d6f88d65547629",
      "secret" : "87e9526aa0b267ab58d92768b8a82c30c9e0314a",
      "accessTokenURL" : "https://www.automatic.com/oauth/access_token",
      "requestTokenURL" : "https://www.automatic.com/oauth/request_token",
      "authTokenURL" : "https://www.automatic.com/oauth/authorize",
      "tokenMethod" : "oauth_signed",
      "scope" : "scope:trip:summary scope:location scope:vehicle scope:notification:hard_accel scope:notification:hard_brake scope:notification:speeding",
      "is0LegAuth" : false
    },
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:automatic"
  },
  {
    "_id" : "53ee4de563a8751728a5a3bf",
    "__v" : 0,
    "application" : {
      "base" : "http://www.example.com/wc-api/v1/orders",
      "resources" : [
        {
          "path" : "/",
          "displayName" : "/",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get"
          },
          "httpMethod" : "GET",
          "url" : "http://www.example.com/wc-api/v1/orders/"
        },
        {
          "path" : "/coupons",
          "displayName" : "/coupons",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-coupons"
          },
          "httpMethod" : "GET",
          "url" : "http://www.example.com/wc-api/v1/orders/coupons"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-coupons-count"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/coupons/count",
          "path" : "/coupons/count",
          "url" : "http://www.example.com/wc-api/v1/orders/coupons/count"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-coupons-id"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/coupons/{id}",
          "path" : "/coupons/{id}",
          "url" : "http://www.example.com/wc-api/v1/orders/coupons/{id}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-coupons-code-code"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/coupons/code/{code}",
          "path" : "/coupons/code/{code}",
          "url" : "http://www.example.com/wc-api/v1/orders/coupons/code/{code}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-customers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/customers",
          "path" : "/customers",
          "url" : "http://www.example.com/wc-api/v1/orders/customers"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-customers-count"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/customers/count",
          "path" : "/customers/count",
          "url" : "http://www.example.com/wc-api/v1/orders/customers/count"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-customers-id"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/customers/{id}",
          "path" : "/customers/{id}",
          "url" : "http://www.example.com/wc-api/v1/orders/customers/{id}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-coupons-id"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/customers/#{id}/orders",
          "path" : "/customers/#{id}/orders",
          "url" : "http://www.example.com/wc-api/v1/orders/customers/#{id}/orders"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-orders"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/orders",
          "path" : "/orders",
          "url" : "http://www.example.com/wc-api/v1/orders/orders"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-orders-count"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/orders/count",
          "path" : "/orders/count",
          "url" : "http://www.example.com/wc-api/v1/orders/orders/count"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-orders-id"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/orders/{id}",
          "path" : "/orders/{id}",
          "url" : "http://www.example.com/wc-api/v1/orders/orders/{id}"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#put-orders-id-status-status"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/orders/{id}",
          "path" : "/orders/{id}",
          "params" : [
            {
              "name" : "status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://www.example.com/wc-api/v1/orders/orders/{id}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-orders-id-notes"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/orders/{id}/notes",
          "path" : "/orders/{id}/notes",
          "url" : "http://www.example.com/wc-api/v1/orders/orders/{id}/notes"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-products"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/products",
          "path" : "/products",
          "url" : "http://www.example.com/wc-api/v1/orders/products"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-products-count"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/products/count",
          "path" : "/products/count",
          "url" : "http://www.example.com/wc-api/v1/orders/products/count"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-products-id"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/products/{id}",
          "path" : "/products/{id}",
          "url" : "http://www.example.com/wc-api/v1/orders/products/{id}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-products-id-reviews"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/products/{id}/reviews",
          "path" : "/products/{id}/reviews",
          "url" : "http://www.example.com/wc-api/v1/orders/products/{id}/reviews"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-reports"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/reports",
          "path" : "/reports",
          "url" : "http://www.example.com/wc-api/v1/orders/reports"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://woothemes.github.io/woocommerce/rest-api/#get-reports-sales"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/reports/sales",
          "path" : "/reports/sales",
          "url" : "http://www.example.com/wc-api/v1/orders/reports/sales"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "http://woothemes.github.io/woocommerce/rest-api/#endpoints",
    "enabled" : true,
    "logo" : "http://colorlib.com/wp/wp-content/uploads/2013/07/woocommerce-travelify.jpg",
    "name" : "WooCommerce",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:woo_commerce"
  },
  {
    "_id" : "53ee6fb263a8751728a5a3c0",
    "__v" : 0,
    "application" : {
      "base" : "http://crisply.com/api/v1",
      "resources" : [
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359043-activity-item"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/activity_items.xml",
          "path" : "/activity_items.xml",
          "url" : "http://crisply.com/api/v1/activity_items.xml"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359043-activity-item"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/activity_items.xml",
          "path" : "/activity_items.xml",
          "params" : [
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://crisply.com/api/v1/activity_items.xml"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359130-client"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/clients.xml",
          "path" : "/clients.xml",
          "url" : "http://crisply.com/api/v1/clients.xml"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359130-client"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/clients/{id}.xml",
          "path" : "/clients/{id}.xml",
          "url" : "http://crisply.com/api/v1/clients/{id}.xml"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359130-client"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/clients.xml",
          "path" : "/clients.xml",
          "url" : "http://crisply.com/api/v1/clients.xml"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359130-client"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/clients/{id}.xml",
          "path" : "/clients/{id}.xml",
          "url" : "http://crisply.com/api/v1/clients/{id}.xml"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359062-project"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects.xml",
          "path" : "/projects.xml",
          "url" : "http://crisply.com/api/v1/projects.xml"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359062-project"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{id}.xml",
          "path" : "/projects/{id}.xml",
          "url" : "http://crisply.com/api/v1/projects/{id}.xml"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359062-project"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects.xml",
          "path" : "/projects.xml",
          "url" : "http://crisply.com/api/v1/projects.xml"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359062-project"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{id}.xml",
          "path" : "/projects/{id}.xml",
          "url" : "http://crisply.com/api/v1/projects/{id}.xml"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359380-user"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users.xml",
          "path" : "/users.xml",
          "url" : "http://crisply.com/api/v1/users.xml"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359380-user"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/user/{id}.xml",
          "displayName" : "/user/{id}.xml",
          "url" : "http://crisply.com/api/v1/user/{id}.xml"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359380-user"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users.xml",
          "path" : "/users.xml",
          "url" : "http://crisply.com/api/v1/users.xml"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359380-user"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/{id}.xml",
          "path" : "/users/{id}.xml",
          "url" : "http://crisply.com/api/v1/users/{id}.xml"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359380-user"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/me.xml",
          "path" : "/users/me.xml",
          "url" : "http://crisply.com/api/v1/users/me.xml"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359425-project-assignment"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/project_assignments.xml",
          "path" : "/project_assignments.xml",
          "url" : "http://crisply.com/api/v1/project_assignments.xml"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359425-project-assignment"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/project_assignments.xml",
          "path" : "/project_assignments.xml",
          "params" : [
            {
              "name" : "project_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://crisply.com/api/v1/project_assignments.xml"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://support.crisply.com/customer/portal/articles/359563-time-entry"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/time_entries.xml",
          "path" : "/time_entries.xml",
          "params" : [
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://crisply.com/api/v1/time_entries.xml"
        }
      ]
    },
    "auth_strategy" : "basic",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "http://support.crisply.com/customer/portal/articles/250733-overview",
    "enabled" : true,
    "logo" : "http://s3.amazonaws.com/FirmPlay/companies/logos/000/000/008/original/new-crisply-logo.png?1403819571",
    "name" : "Crisply",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:crisply"
  },
  {
    "_id" : "53ee9881bacd88b6355f4504",
    "__v" : 0,
    "application" : {
      "base" : "https://api.telapi.com/v2/",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/accounts/view/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}",
          "path" : "/Accounts/{AccountSid}",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/usage/view/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Usages/{UsageSid}",
          "path" : "/Accounts/{AccountSid}/Usages/{UsageSid}",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Usages/{UsageSid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/usage/list/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Usages",
          "path" : "/Accounts/{AccountSid}/Usages",
          "params" : [
            {
              "name" : "Day",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Month",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Year",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Product",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "PageSize",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Usages"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/sms/view/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/SMS/Messages/{SMSMessageSid}",
          "path" : "/Accounts/{AccountSid}/SMS/Messages/{SMSMessageSid}",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/SMS/Messages/{SMSMessageSid}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/sms/list/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/SMS/Messages",
          "path" : "/Accounts/{AccountSid}/SMS/Messages",
          "params" : [
            {
              "name" : "To",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "From",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "DateSent",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Page",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "PageSize",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/SMS/Messages"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/sms/send/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/SMS/Messages",
          "path" : "/Accounts/{AccountSid}/SMS/Messages",
          "params" : [
            {
              "name" : "To",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "From",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "Body",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "StatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/SMS/Messages"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/calls/view/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Calls/{CallSid}",
          "path" : "/Accounts/{AccountSid}/Calls/{CallSid}",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Calls/{CallSid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/calls/list/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Calls",
          "path" : "/Accounts/{AccountSid}/Calls",
          "params" : [
            {
              "name" : "To",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "From",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StartTime",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "PageSize",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Calls"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/calls/make/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Calls",
          "path" : "/Accounts/{AccountSid}/Calls",
          "params" : [
            {
              "name" : "To",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "From",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "Url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "Method",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "FallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "FallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "HeartbeatUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "HeartbeatMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ForwardedFrom",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "PlayDtmf",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Timeout",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "HideCallerId",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Record",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "RecordCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "RecordCallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Transcribe",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "TranscribeQuality",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "TranscribeCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StraightToVoicemail",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "IfMachine",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "IfMachineUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "IfMachineMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Calls"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/calls/interrupt/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Calls/{CallSid}",
          "path" : "/Accounts/{AccountSid}/Calls/{CallSid}",
          "params" : [
            {
              "name" : "Url",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Method",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Calls/{CallSid}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/calls/play-audio/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Calls/{CallSid}/Play",
          "path" : "/Accounts/{AccountSid}/Calls/{CallSid}/Play",
          "params" : [
            {
              "name" : "AudioUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "Length",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Direction",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Loop",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Mix",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Calls/{CallSid}/Play"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/calls/voice-effects/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Calls/{CallSid}/Effect",
          "path" : "/Accounts/{AccountSid}/Calls/{CallSid}/Effect",
          "params" : [
            {
              "name" : "AudioDirection",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Pitch",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "PitchSemiTones",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "PitchOctaves",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Rate",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Tempo",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Calls/{CallSid}/Effect"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/calls/record/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Calls/{CallSid}/Recordings",
          "path" : "/Accounts/{AccountSid}/Calls/{CallSid}/Recordings",
          "params" : [
            {
              "name" : "Record",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "Direction",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "TimeLimit",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "CallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "FileFormat",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "TrimSilence",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Transcribe",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "TranscribeQuality",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "TranscribeCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Digits",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "RecordDuration",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "RecordingUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Calls/{CallSid}/Recordings"
        },
        {
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}",
          "displayName" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/conferences/view/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Conferences/{ConferenceSid}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "FriendlyName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "DateCreate"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "DateUpdated"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "PageSize"
            }
          ],
          "path" : "/Accounts/{AccountSid}/Conferences",
          "displayName" : "/Accounts/{AccountSid}/Conferences",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/conferences/list/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Conferences"
        },
        {
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{ParticipantSid}",
          "displayName" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{ParticipantSid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/conferences/view-participant/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{ParticipantSid}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Muted"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Deaf"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "PageSize"
            }
          ],
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants",
          "displayName" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/conferences/list-participants/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Muted"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Deaf"
            }
          ],
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participant/{ParticipantSid}",
          "displayName" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participant/{ParticipantSid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/conferences/deaf-or-mute/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participant/{ParticipantSid}"
        },
        {
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{ParticipantSid}",
          "displayName" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{ParticipantSid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/conferences/hangup-participant/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{ParticipantSid}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "AudioUrl"
            }
          ],
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{ParticipantSid}/Play",
          "displayName" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{ParticipantSid}/Play",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/conferences/play-audio/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{ParticipantSid}/Play"
        },
        {
          "path" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}",
          "displayName" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/applications/view/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Applications/{ApplicationSid}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "FriendlyName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "PageSize"
            }
          ],
          "path" : "/Accounts/{AccountSid}/Applications",
          "displayName" : "/Accounts/{AccountSid}/Applications",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/applications/list/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Applications"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FriendlyName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceFallbackUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceFallbackMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceCallerIdLookup"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsFallbackUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsFallbackMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HeartbeatUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HeartbeatMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HangupCallback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HangupCallbackMethod"
            }
          ],
          "path" : "/Accounts/{AccountSid}/Applications",
          "displayName" : "/Accounts/{AccountSid}/Applications",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/applications/create/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Applications"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FriendlyName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceFallbackUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceFallbackMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceCallerIdLookup"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsFallbackUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsFallbackMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HeartbeatUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HeartbeatMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HangupCallback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HangupCallbackMethod"
            }
          ],
          "path" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}",
          "displayName" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/applications/update/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Applications/{ApplicationSid}"
        },
        {
          "path" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}",
          "displayName" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/applications/delete/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Applications/{ApplicationSid}"
        },
        {
          "path" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}/Clients/{ClientSid}",
          "displayName" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}/Clients/{ClientSid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/application-clients/view/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Applications/{ApplicationSid}/Clients/{ClientSid}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "PageSize"
            }
          ],
          "path" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}/Clients",
          "displayName" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}/Clients",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/application-clients/list/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Applications/{ApplicationSid}/Clients"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Nickname"
            }
          ],
          "displayName" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}/Clients/Tokens",
          "path" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}/Clients/Tokens",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/application-clients/create/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Applications/{ApplicationSid}/Clients/Tokens"
        },
        {
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}",
          "displayName" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/incoming-phone-numbers/view/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Contains"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "FriendlyName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "PageSize"
            }
          ],
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers",
          "displayName" : "/Accounts/{AccountSid}/IncomingPhoneNumbers",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/incoming-phone-numbers/list/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/IncomingPhoneNumbers"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FriendlyName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceFallbackUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceFallbackMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceCallerIdLookup"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsFallbackUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsFallbackMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HeartbeatUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HeartbeatMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HangupCallback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HangupCallbackMethod"
            }
          ],
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}",
          "displayName" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/incoming-phone-numbers/update/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "PhoneNumber"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "AreaCode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FriendlyName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceFallbackUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceFallbackMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceCallerIdLookup"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsFallbackUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsFallbackMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HeartbeatUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HeartbeatMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HangupCallback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "HangupCallbackMethod"
            }
          ],
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/",
          "displayName" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/incoming-phone-numbers/add-or-delete/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/IncomingPhoneNumbers/"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Contains"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "AreaCode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "InRegion"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "InPostalCode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "PageSize"
            }
          ],
          "path" : "/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/{Local/TollFree}",
          "displayName" : "/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/{Local/TollFree}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/available-phone-numbers/list/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/{Local/TollFree}"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Record"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Direction"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "TimeLimit"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CallbackUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FileFormat"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "TrimSilence"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Transcribe"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "TranscribeQuality"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "TranscribeCallback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Digits"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "RecordDuration"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "RecordingUrl"
            }
          ],
          "path" : "/Accounts/{AccountSid}/Calls/{CallSid}/Recordings",
          "displayName" : "/Accounts/{AccountSid}/Calls/{CallSid}/Recordings",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/calls/record/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Calls/{CallSid}/Recordings"
        },
        {
          "path" : "/Accounts/{AccountSid}/Recordings/{RecordingSid}",
          "displayName" : "/Accounts/{AccountSid}/Recordings/{RecordingSid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/recordings/view/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Recordings/{RecordingSid}"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "CallSid"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "DateCreated"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "PageSize"
            }
          ],
          "path" : "/Accounts/{AccountSid}/Recordings",
          "displayName" : "/Accounts/{AccountSid}/Recordings",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/recordings/list/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Recordings"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "CallSid"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "DateCreated"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "PageSize"
            }
          ],
          "path" : "/Accounts/{AccountSid}/Calls/{CallSid}/Recordings",
          "displayName" : "/Accounts/{AccountSid}/Calls/{CallSid}/Recordings",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/recordings/list/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Calls/{CallSid}/Recordings"
        },
        {
          "path" : "/Accounts/{AccountSid}/Recordings/{RecordingSid}",
          "displayName" : "/Accounts/{AccountSid}/Recordings/{RecordingSid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/recordings/delete/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Recordings/{RecordingSid}"
        },
        {
          "path" : "/Accounts/{AccountSid}/Notifications/{NotificationSid}",
          "displayName" : "/Accounts/{AccountSid}/Notifications/{NotificationSid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/notifications/view/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Notifications/{NotificationSid}"
        },
        {
          "path" : "/Accounts/{AccountSid}/Notifications",
          "displayName" : "/Accounts/{AccountSid}/Notifications",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/notifications/list/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Notifications"
        },
        {
          "displayName" : "/Accounts/{AccountSid}/Calls/{CallSid}/Notifications",
          "path" : "/Accounts/{AccountSid}/Calls/{CallSid}/Notifications",
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Log"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "PageSize"
            }
          ],
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/notifications/list/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Calls/{CallSid}/Notifications"
        },
        {
          "path" : "/Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}",
          "displayName" : "/Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/transcriptions/view/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}"
        },
        {
          "path" : "/Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}.txt",
          "displayName" : "/Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}.txt",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/transcriptions/view/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}.txt"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/transcriptions/list/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Transcriptions/",
          "path" : "/Accounts/{AccountSid}/Transcriptions/",
          "params" : [
            {
              "name" : "Status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "DateTranscribed",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "PageSize",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Transcriptions/"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/transcriptions/list/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/{RecordingSid}/Transcriptions",
          "path" : "/Accounts/{AccountSid}/{RecordingSid}/Transcriptions",
          "params" : [
            {
              "name" : "Status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "DateTranscribed",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "PageSize",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/{RecordingSid}/Transcriptions"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/transcriptions/transcribe-audio-url/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Transcriptions",
          "path" : "/Accounts/{AccountSid}/Transcriptions",
          "params" : [
            {
              "name" : "AudioUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "TranscribeCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SliceStart",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SliceDuration",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "CallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Quality",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Transcriptions"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/transcriptions/transcribe-recording/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions",
          "path" : "/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions",
          "params" : [
            {
              "name" : "TranscribeCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "CallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SliceStart",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SliceDuration",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Quality",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "TranscriptionStatus",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "TranscriptionSid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "RecordingUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "RecordingSid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "TranscriptionText",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/carrier-services/carrier-lookup/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Lookups/Carrier",
          "path" : "/Accounts/{AccountSid}/Lookups/Carrier",
          "params" : [
            {
              "name" : "PhoneNumber",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Lookups/Carrier"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/carrier-services/carrier-lookup-list/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Lookups/Carrier",
          "path" : "/Accounts/{AccountSid}/Lookups/Carrier",
          "params" : [
            {
              "name" : "Page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "PageSize",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Lookups/Carrier"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/carrier-services/cnam-lookup/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Lookups/Cnam",
          "path" : "/Accounts/{AccountSid}/Lookups/Cnam",
          "params" : [
            {
              "name" : "PhoneNumber",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Lookups/Cnam"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/carrier-services/cnam-lookup-list/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Lookups/Cnam",
          "path" : "/Accounts/{AccountSid}/Lookups/Cnam",
          "params" : [
            {
              "name" : "Page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "PageSize",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Lookups/Cnam"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/carrier-services/bna-lookup/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Lookups/Bna",
          "path" : "/Accounts/{AccountSid}/Lookups/Bna",
          "params" : [
            {
              "name" : "PhoneNumber",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Lookups/Bna"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/carrier-services/bna-lookup-list/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Lookups/Bna",
          "path" : "/Accounts/{AccountSid}/Lookups/Bna",
          "params" : [
            {
              "name" : "Page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "PageSize",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Lookups/Bna"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/fraud-control/list/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Fraud",
          "path" : "/Accounts/{AccountSid}/Fraud",
          "params" : [
            {
              "name" : "Page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "PageSize",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Fraud"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/fraud-control/authorize/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Fraud/Authorize/{CountryCode}",
          "path" : "/Accounts/{AccountSid}/Fraud/Authorize/{CountryCode}",
          "params" : [
            {
              "name" : "MobileEnabled",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "LandlineEnabled",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsEnabled",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Fraud/Authorize/{CountryCode}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/fraud-control/block/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Fraud/Block/{CountryCode}",
          "path" : "/Accounts/{AccountSid}/Fraud/Block/{CountryCode}",
          "params" : [
            {
              "name" : "MobileEnabled",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "LandlineEnabled",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsEnabled",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Fraud/Block/{CountryCode}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/fraud-control/extend/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Fraud/Extend/{CountryCode}",
          "path" : "/Accounts/{AccountSid}/Fraud/Extend/{CountryCode}",
          "params" : [
            {
              "name" : "MobileEnabled",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "LandlineEnabled",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsEnabled",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Fraud/Extend/{CountryCode}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.telapi.com/docs/api/rest/fraud-control/whitelist/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Fraud/Whitelist/{CountryCode}",
          "path" : "/Accounts/{AccountSid}/Fraud/Whitelist/{CountryCode}",
          "params" : [
            {
              "name" : "MobileEnabled",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "LandlineEnabled",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsEnabled",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.telapi.com/v2//Accounts/{AccountSid}/Fraud/Whitelist/{CountryCode}"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "http://www.telapi.com/docs/api/rest/",
    "enabled" : true,
    "logo" : "https://s3.amazonaws.com/toolatlas/logos/telapi.png",
    "name" : "TELAPI",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:telapi"
  },
  {
    "_id" : "53e268e18e3257fb7d6fdad4",
    "__v" : 0,
    "application" : {
      "base" : "https://api.twilio.com/2010-04-01",
      "resources" : [
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/making-calls",
            "t" : "Use for making POTS calls"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Calls.json",
          "path" : "/Accounts/{AccountSid}/Calls.json",
          "params" : [
            {
              "name" : "From",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "To",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "ApplicationSid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Method",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "FallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "FallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SendDigits",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "IfMachine",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Timeout",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Record",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "AnsweredBy",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "CallDuration",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "RecordingUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "RecordingSid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "RecordingDuration",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/making-calls-sip",
            "t" : "Use for making SIP Voice over IP Calls"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Calls.json",
          "path" : "/Accounts/{AccountSid}/Calls.json",
          "params" : [
            {
              "name" : "To",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "From",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SipAuthUsername",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SipAuthPassword",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/call"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Calls/{CallSid}.json",
          "path" : "/Accounts/{AccountSid}/Calls/{CallSid}.json",
          "params" : [
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/change-call-state"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Calls/{CallSid}.json",
          "path" : "/Accounts/{AccountSid}/Calls/{CallSid}.json",
          "params" : [
            {
              "name" : "Url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Method",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "FallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "FallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/outgoing-caller-ids"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json",
          "path" : "/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/outgoing-caller-ids"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json",
          "path" : "/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json",
          "params" : [
            {
              "name" : "FriendlyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/outgoing-caller-ids"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json",
          "path" : "/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json",
          "params" : [
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{OutgoingCallerIdSid}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/outgoing-caller-ids"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/OutgoingCallerIds.json",
          "path" : "/Accounts/{AccountSid}/OutgoingCallerIds.json",
          "params" : [
            {
              "name" : "PhoneNumber",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "FriendlyName",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/outgoing-caller-ids"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/OutgoingCallerIds.json",
          "path" : "/Accounts/{AccountSid}/OutgoingCallerIds.json",
          "params" : [
            {
              "name" : "PhoneNumber",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "FriendlyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "CallDelay",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Extension",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/transcription"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}.json",
          "path" : "/Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/transcription"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}.json",
          "path" : "/Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Transcriptions/{TranscriptionSid}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/transcription#list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Transcriptions.json",
          "path" : "/Accounts/{AccountSid}/Transcriptions.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Transcriptions.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/recording"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Recordings/{RecordingSid}.json",
          "path" : "/Accounts/{AccountSid}/Recordings/{RecordingSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/recording"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Recordings.json",
          "path" : "/Accounts/{AccountSid}/Recordings.json",
          "params" : [
            {
              "name" : "CallSid",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "DateCreated",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Recordings.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/conference"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}.json",
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/conference"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Conferences.json",
          "path" : "/Accounts/{AccountSid}/Conferences.json",
          "params" : [
            {
              "name" : "Status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "FriendlyName",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "DateCreated",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "DateUpdated",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/participant"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json",
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/participant"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json",
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json",
          "params" : [
            {
              "name" : "Muted",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/participant"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json",
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/participant"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json",
          "path" : "/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json",
          "params" : [
            {
              "name" : "Muted",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/queue"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Queues/{QueueSid}.json",
          "path" : "/Accounts/{AccountSid}/Queues/{QueueSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/queue"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Queues/{QueueSid}.json",
          "path" : "/Accounts/{AccountSid}/Queues/{QueueSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/queue"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Queues/{QueueSid}.json",
          "path" : "/Accounts/{AccountSid}/Queues/{QueueSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/queue"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Queues.json",
          "path" : "/Accounts/{AccountSid}/Queues.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Queues.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/member"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}.json",
          "path" : "/Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/member"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}.json",
          "path" : "/Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}.json"
        },
        {
          "httpMethod" : "GET",
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Queues/{QueueSid}/Members.json",
          "path" : "/Accounts/{AccountSid}/Queues/{QueueSid}/Members.json",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/member"
          },
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/sending-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Messages.json",
          "path" : "/Accounts/{AccountSid}/Messages.json",
          "params" : [
            {
              "name" : "From",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "To",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "Body",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "MediaUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ApplicationSid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "MessageStatus",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ErrorCode",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Messages.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/short-codes"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/SMS/ShortCodes/{ShortCodeSid}.json",
          "path" : "/Accounts/{AccountSid}/SMS/ShortCodes/{ShortCodeSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes/{ShortCodeSid}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/short-codes"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/SMS/ShortCodes/{ShortCodeSid}.json",
          "path" : "/Accounts/{AccountSid}/SMS/ShortCodes/{ShortCodeSid}.json",
          "params" : [
            {
              "name" : "FriendlyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ApiVersion",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsFallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsFallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes/{ShortCodeSid}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/short-codes"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/SMS/ShortCodes.json",
          "path" : "/Accounts/{AccountSid}/SMS/ShortCodes.json",
          "params" : [
            {
              "name" : "ShortCode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "FriendlyName",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/message"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Messages/{MessageSid}.json",
          "path" : "/Accounts/{AccountSid}/Messages/{MessageSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/message"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Messages.json",
          "path" : "/Accounts/{AccountSid}/Messages.json",
          "params" : [
            {
              "name" : "To",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "From",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "DateSent",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Messages.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/message"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Messages.json",
          "path" : "/Accounts/{AccountSid}/Messages.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Messages.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/available-phone-numbers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/Local.json",
          "path" : "/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/Local.json",
          "params" : [
            {
              "name" : "AreaCode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Contains",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsEnabled",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "MmsEnabled",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceEnabled",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "NearNumber",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "NearLatLong",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Distance",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "InPostalCode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "InRegion",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "InRateCenter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "InLata",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/Local.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/available-phone-numbers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/TollFree.json",
          "path" : "/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/TollFree.json",
          "params" : [
            {
              "name" : "AreaCode",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Contains",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/TollFree.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/available-phone-numbers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/Mobile.json",
          "path" : "/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/Mobile.json",
          "params" : [
            {
              "name" : "Contains",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsEnabled",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "MmsEnabled",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceEnabled",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{IsoCountryCode}/Mobile.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/incoming-phone-numbers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json",
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/incoming-phone-numbers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json",
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json",
          "params" : [
            {
              "name" : "FriendlyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ApiVersion",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceFallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceFallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceCallerIdLookup",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceApplicationSid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsFallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsFallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsApplicationSid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "AccountSid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/incoming-phone-numbers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json",
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json",
          "params" : [
            {
              "name" : "FriendlyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ApiVersion",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceFallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceFallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceCallerIdLookup",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceApplicationSid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsFallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsFallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsApplicationSid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "AccountSid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/incoming-phone-numbers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json",
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{IncomingPhoneNumberSid}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/incoming-phone-numbers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/IncomingPhoneNumbers.json",
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers.json",
          "params" : [
            {
              "name" : "PhoneNumber",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "FriendlyName",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/incoming-phone-numbers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/IncomingPhoneNumbers.json",
          "path" : "/Accounts/{AccountSid}/IncomingPhoneNumbers.json",
          "params" : [
            {
              "name" : "PhoneNumber",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "AreaCode",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "FriendlyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceFallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceFallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceCallerIdLookup",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceApplicationSid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsFallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsFallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsApplicationSid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ApiVersion",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/incoming-phone-numbers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{YourAccountSid}/IncomingPhoneNumbers/Local.json",
          "path" : "/Accounts/{YourAccountSid}/IncomingPhoneNumbers/Local.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{YourAccountSid}/IncomingPhoneNumbers/Local.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/incoming-phone-numbers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{YourAccountSid}/IncomingPhoneNumbers/Local.json",
          "path" : "/Accounts/{YourAccountSid}/IncomingPhoneNumbers/Local.json",
          "params" : [
            {
              "name" : "PhoneNumber",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{YourAccountSid}/IncomingPhoneNumbers/Local.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/incoming-phone-numbers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{YourAccountSid}/IncomingPhoneNumbers/TollFree.json",
          "path" : "/Accounts/{YourAccountSid}/IncomingPhoneNumbers/TollFree.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{YourAccountSid}/IncomingPhoneNumbers/TollFree.json"
        },
        {
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/incoming-phone-numbers"
          },
          "httpMethod" : "POST",
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{YourAccountSid}/IncomingPhoneNumbers/TollFree.json",
          "path" : "/Accounts/{YourAccountSid}/IncomingPhoneNumbers/TollFree.json",
          "params" : [
            {
              "name" : "PhoneNumber",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{YourAccountSid}/IncomingPhoneNumbers/TollFree.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/incoming-phone-numbers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{YourAccountSid}/IncomingPhoneNumbers/Mobile.json",
          "path" : "/Accounts/{YourAccountSid}/IncomingPhoneNumbers/Mobile.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{YourAccountSid}/IncomingPhoneNumbers/Mobile.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/incoming-phone-numbers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{YourAccountSid}/IncomingPhoneNumbers/Mobile.json",
          "path" : "/Accounts/{YourAccountSid}/IncomingPhoneNumbers/Mobile.json",
          "params" : [
            {
              "name" : "PhoneNumber",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{YourAccountSid}/IncomingPhoneNumbers/Mobile.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/usage-records"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Usage/Records.json",
          "path" : "/Accounts/{AccountSid}/Usage/Records.json",
          "params" : [
            {
              "name" : "Category",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StartDate",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "EndDate",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Usage/Records.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/usage-triggers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}.json",
          "path" : "/Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/usage-triggers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}.json",
          "path" : "/Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}.json",
          "params" : [
            {
              "name" : "FriendlyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "CallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "CallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}.json"
        },
        {
          "httpMethod" : "DELETE",
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}.json",
          "path" : "/Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}.json",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/usage-triggers"
          },
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{UsageTriggerSid}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/usage-triggers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Usage/Triggers.json",
          "path" : "/Accounts/{AccountSid}/Usage/Triggers.json",
          "params" : [
            {
              "name" : "Recurring",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "UsageCategory",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "TriggerBy",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Usage/Triggers.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/usage-triggers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Usage/Triggers.json",
          "path" : "/Accounts/{AccountSid}/Usage/Triggers.json",
          "params" : [
            {
              "name" : "UsageCategory",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "TriggerValue",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "CallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "FriendlyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "TriggerBy",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Recurring",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "CallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Usage/Triggers.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/account"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}.json",
          "path" : "/Accounts/{AccountSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/account"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}.json",
          "path" : "/Accounts/{AccountSid}.json",
          "params" : [
            {
              "name" : "FriendlyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/account"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts.json",
          "path" : "/Accounts.json",
          "params" : [
            {
              "name" : "FriendlyName",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/account"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}.json",
          "path" : "/Accounts/{AccountSid}.json",
          "params" : [
            {
              "name" : "FriendlyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/account"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts.json",
          "path" : "/Accounts.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/subaccounts",
            "t" : "subaccounts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts.json",
          "path" : "/Accounts.json",
          "params" : [
            {
              "name" : "FriendlyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/applications"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}.json",
          "path" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Applications/{ApplicationSid}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/applications"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}.json",
          "path" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}.json",
          "params" : [
            {
              "name" : "FriendlyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ApiVersion",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceFallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceFallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceCallerIdLookup",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsFallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsFallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsStatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "MessageStatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Applications/{ApplicationSid}.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/applications"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}.json",
          "path" : "/Accounts/{AccountSid}/Applications/{ApplicationSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Applications/{ApplicationSid}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/applications"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Applications.json",
          "path" : "/Accounts/{AccountSid}/Applications.json",
          "params" : [
            {
              "name" : "FriendlyName",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Applications.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/applications"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/Applications.json",
          "path" : "/Accounts/{AccountSid}/Applications.json",
          "params" : [
            {
              "name" : "FriendlyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "ApiVersion",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceFallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceFallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "StatusCallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceCallerIdLookup",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsFallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsFallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "SmsStatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "MessageStatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Applications.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/connect-apps"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/ConnectApps/{ConnectAppSid}.json",
          "path" : "/Accounts/{AccountSid}/ConnectApps/{ConnectAppSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/ConnectApps/{ConnectAppSid}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/connect-apps"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/ConnectApps/{ConnectAppSid}.json",
          "path" : "/Accounts/{AccountSid}/ConnectApps/{ConnectAppSid}.json",
          "params" : [
            {
              "name" : "FriendlyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "AuthorizeRedirectUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "DeauthorizeCallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "DeauthorizeCallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Permissions",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Description",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "CompanyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "HomepageUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/ConnectApps/{ConnectAppSid}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/connect-apps"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/ConnectApps.json",
          "path" : "/Accounts/{AccountSid}/ConnectApps.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/ConnectApps.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/authorized-connect-apps"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/AuthorizedConnectApps/{ConnectAppSid}.json",
          "path" : "/Accounts/{AccountSid}/AuthorizedConnectApps/{ConnectAppSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/AuthorizedConnectApps/{ConnectAppSid}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/authorized-connect-apps"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/AuthorizedConnectApps.json",
          "path" : "/Accounts/{AccountSid}/AuthorizedConnectApps.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/AuthorizedConnectApps.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/domain"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/SIP/Domains.json",
          "path" : "/Accounts/{AccountSid}/SIP/Domains.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/Domains.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/domain"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/SIP/Domains.json",
          "path" : "/Accounts/{AccountSid}/SIP/Domains.json",
          "params" : [
            {
              "name" : "DomainName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "FriendlyName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceFallbackUrl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceFallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceStatusCallback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "VoiceStatusCallbackMethod",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/Domains.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/domain"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}.json",
          "path" : "/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}.json",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/domain"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/domain"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/domain"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "IpAccessControlListSid"
            }
          ],
          "path" : "/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/domain"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/domain"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/domain"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "CredentialListSid"
            }
          ],
          "path" : "/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/domain"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/domain"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{SipDomainSid}/CredentialListMappings.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP/IpAccessControlLists.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/IpAccessControlLists.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/ip-access-control-list"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FriendlyName"
            }
          ],
          "path" : "/Accounts/{AccountSid}/SIP/IpAccessControlLists.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/IpAccessControlLists.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/ip-access-control-list"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/ip-access-control-list"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FriendlyName"
            }
          ],
          "path" : "/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/ip-access-control-list"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/ip-access-control-list"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/ip-access-control-list"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FriendlyName"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "IpAddress"
            }
          ],
          "path" : "/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/ip-access-control-list"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP//IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}.json",
          "displayName" : "/Accounts/{AccountSid}/SIP//IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/ip-access-control-list"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP//IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FriendlyName"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "IpAddress"
            }
          ],
          "path" : "/Accounts/{AccountSid}/SIP//IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}.json",
          "displayName" : "/Accounts/{AccountSid}/SIP//IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/ip-access-control-list"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP//IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP//IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}.json",
          "displayName" : "/Accounts/{AccountSid}/SIP//IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/ip-access-control-list"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP//IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{IpAddressSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP/CredentialLists/.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/CredentialLists/.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/credential-list"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FriendlyName"
            }
          ],
          "path" : "/Accounts/{AccountSid}/SIP/CredentialLists/.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/CredentialLists/.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/credential-list"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/credential-list"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "FriendlyName"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/credential-list"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/credential-list"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/credential-list"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Username"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Password"
            }
          ],
          "path" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/credential-list"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/credential-list"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}.json"
        },
        {
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/credential-list"
          },
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Username"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "Password"
            }
          ],
          "path" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}.json",
          "displayName" : "/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/credential-list"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CLSid}/Credentials/{CredentialSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Notifications/{NotificationSid}.json",
          "displayName" : "/Accounts/{AccountSid}/Notifications/{NotificationSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/notification"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Notifications/{NotificationSid}.json"
        },
        {
          "path" : "/Accounts/{AccountSid}/Notifications/{NotificationSid}.json",
          "displayName" : "/Accounts/{AccountSid}/Notifications/{NotificationSid}.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/notification"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Notifications/{NotificationSid}.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Log"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "MessageDate"
            }
          ],
          "path" : "/Accounts/{AccountSid}/Notifications.json",
          "displayName" : "/Accounts/{AccountSid}/Notifications.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/notification"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Notifications.json"
        },
        {
          "path" : "/Accounts/{YourAccountSid}/Sandbox.json",
          "displayName" : "/Accounts/{YourAccountSid}/Sandbox.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/sandbox"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{YourAccountSid}/Sandbox.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "VoiceMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsUrl"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "SmsMethod"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "StatusCallback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "StatusCallbackMethod"
            }
          ],
          "path" : "/Accounts/{YourAccountSid}/Sandbox.json",
          "displayName" : "/Accounts/{YourAccountSid}/Sandbox.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://www.twilio.com/docs/api/rest/sandbox"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twilio.com/2010-04-01/Accounts/{YourAccountSid}/Sandbox.json"
        }
      ]
    },
    "auth_strategy" : "basic",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "http://www.twilio.com/docs/api/rest",
    "enabled" : true,
    "logo" : "http://www.desk.com/resources/images/pages/features/apps/twilio/logo.jpg",
    "name" : "Twilio",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:twilio"
  },
  {
    "_id" : "53f4dff4710850ee08e28479",
    "__v" : 0,
    "application" : {
      "base" : "https://api.unbounce.com/",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/accounts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/accounts",
          "path" : "/accounts",
          "url" : "https://api.unbounce.com//accounts"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/accounts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/:account_id",
          "path" : "/:account_id",
          "url" : "https://api.unbounce.com//:account_id"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/sub_accounts?context=843992"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/accounts/:account_id/sub_accounts",
          "path" : "/accounts/:account_id/sub_accounts",
          "params" : [
            {
              "name" : "from",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "to",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "count",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.unbounce.com//accounts/:account_id/sub_accounts"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/sub_accounts?context=843992"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sub_accounts/:sub_account_id",
          "path" : "/sub_accounts/:sub_account_id",
          "url" : "https://api.unbounce.com//sub_accounts/:sub_account_id"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/domains?context=848952"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/domains/:domain_id",
          "displayName" : "/domains/:domain_id",
          "url" : "https://api.unbounce.com//domains/:domain_id"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/pages?context=697202"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/pages",
          "path" : "/pages",
          "params" : [
            {
              "name" : "from",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "to",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "count",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "with_stats",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "role",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.unbounce.com//pages"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/pages?context=697202"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/accounts/:account_id/pages",
          "path" : "/accounts/:account_id/pages",
          "params" : [
            {
              "name" : "from",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "to",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "count",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "with_stats",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.unbounce.com//accounts/:account_id/pages"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/pages?context=697202"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sub_accounts/:sub_account_id/pages",
          "path" : "/sub_accounts/:sub_account_id/pages",
          "params" : [
            {
              "name" : "from",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "to",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "count",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "with_stats",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.unbounce.com//sub_accounts/:sub_account_id/pages"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/pages?context=697202"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/page_groups/:page_group_id/pages",
          "path" : "/page_groups/:page_group_id/pages",
          "params" : [
            {
              "name" : "from",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "to",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "count",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "with_stats",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.unbounce.com//page_groups/:page_group_id/pages"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/pages?context=697202"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/domains/:domain_id/pages",
          "path" : "/domains/:domain_id/pages",
          "params" : [
            {
              "name" : "from",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "to",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "count",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "with_stats",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.unbounce.com//domains/:domain_id/pages"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/pages?context=697202"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/pages/:page_id",
          "path" : "/pages/:page_id",
          "url" : "https://api.unbounce.com//pages/:page_id"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/form_fields?context=843782"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/pages/:page_id/form_fields",
          "path" : "/pages/:page_id/form_fields",
          "params" : [
            {
              "name" : "count",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.unbounce.com//pages/:page_id/form_fields"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/page_groups?context=802052"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sub_accounts/:sub_account_id/page_groups",
          "path" : "/sub_accounts/:sub_account_id/page_groups",
          "params" : [
            {
              "name" : "from",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "to",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "count",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.unbounce.com//sub_accounts/:sub_account_id/page_groups"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/leads?context=529882"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sub_accounts/:sub_account_id/leads",
          "path" : "/sub_accounts/:sub_account_id/leads",
          "params" : [
            {
              "name" : "from",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "to",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "count",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.unbounce.com//sub_accounts/:sub_account_id/leads"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/leads?context=529882"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/pages/:page_id/leads",
          "path" : "/pages/:page_id/leads",
          "params" : [
            {
              "name" : "from",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "to",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "count",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.unbounce.com//pages/:page_id/leads"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/leads?context=529882"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/leads/:lead_id",
          "path" : "/leads/:lead_id",
          "url" : "https://api.unbounce.com//leads/:lead_id"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://api.unbounce.com/doc/leads?context=529882"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/pages/:page_id/leads",
          "path" : "/pages/:page_id/leads",
          "params" : [
            {
              "name" : "form_submission[form_data]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "form_submission[submitter_ip]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "form_submission[variant_id]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "conversion",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "visitor_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.unbounce.com//pages/:page_id/leads"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://api.unbounce.com/doc/",
    "enabled" : true,
    "logo" : "http://www.searchandperch.com/wp-content/uploads/2011/10/unbounce.png",
    "name" : "UNBOUNCE",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:unbounce"
  },
  {
    "_id" : "53fb878b710850ee08e28487",
    "__v" : 0,
    "application" : {
      "base" : "https://api.uber.com",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uber.com/v1/endpoints/#product-types"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/v1/products",
          "path" : "/v1/products",
          "params" : [
            {
              "name" : "latitude",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "longitude",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "product_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "description",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "display_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "capacity",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "image",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.uber.com/v1/products"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uber.com/v1/endpoints/#price-estimates"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/v1/estimates/price",
          "path" : "/v1/estimates/price",
          "params" : [
            {
              "name" : "start_latitude",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "start_longitude",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "end_latitude",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "end_longitude",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "product_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "currency_code",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "display_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "estimate",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "low_estimate",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "high_estimate",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "surge_multiplier",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.uber.com/v1/estimates/price"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uber.com/v1/endpoints/#time-estimates"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/v1/estimates/time",
          "path" : "/v1/estimates/time",
          "params" : [
            {
              "name" : "start_latitude",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "start_longitude",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "customer_uuid",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "product_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "product_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "display_name",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "estimate",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.uber.com/v1/estimates/time"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uber.com/v1/endpoints"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/v1/history",
          "path" : "/v1/history",
          "params" : [
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "count",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "history",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.uber.com/v1/history"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uber.com/v1/endpoints/#user-profile"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/v1/me",
          "path" : "/v1/me",
          "params" : [
            {
              "name" : "first_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "last_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "email",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "picture",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "promo_code",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.uber.com/v1/me"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://developer.uber.com/v1/endpoints",
    "enabled" : true,
    "logo" : "http://allthingsd.com/files/2013/08/uber-logo.jpg",
    "name" : "UBER",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:uber"
  },
  {
    "_id" : "53fd0bea710850ee08e28489",
    "__v" : 0,
    "application" : {
      "base" : "https://www.yammer.com/api/v1",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/messages.json",
          "path" : "/messages.json",
          "params" : [
            {
              "name" : "older_than",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "newer_than",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "threaded",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/messages.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/messages/my_feed.json",
          "path" : "/messages/my_feed.json",
          "params" : [
            {
              "name" : "older_than",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "newer_than",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "threaded",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/messages/my_feed.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "params" : [
            {
              "name" : "older_than",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "newer_than",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "threaded",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "displayName" : "/messages/algo.json",
          "path" : "/messages/algo.json",
          "url" : "https://www.yammer.com/api/v1/messages/algo.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/messages/following.json",
          "path" : "/messages/following.json",
          "params" : [
            {
              "name" : "older_than",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "newer_than",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "threaded",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/messages/following.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/messages/sent.json",
          "path" : "/messages/sent.json",
          "params" : [
            {
              "name" : "older_than",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "newer_than",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "threaded",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/messages/sent.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/messages/private.json",
          "path" : "/messages/private.json",
          "params" : [
            {
              "name" : "older_than",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "newer_than",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "threaded",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/messages/private.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/messages/received.json",
          "path" : "/messages/received.json",
          "params" : [
            {
              "name" : "older_than",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "newer_than",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "threaded",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/messages/received.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/messages.json",
          "path" : "/messages.json",
          "params" : [
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "group_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "replied_to_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "direct_to_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "broadcast",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "topicn",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "attachmentn",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pending_attachmentn",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_<property>",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "og_title",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_image",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_description",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_object_type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_site_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_meta",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_fetch",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/messages.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/messages/[:id]",
          "path" : "/messages/[:id]",
          "params" : [
            {
              "name" : "body",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "group_id",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "replied_to_id",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "direct_to_id",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "broadcast",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "topicn",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "attachmentn",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pending_attachmentn",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_<property>",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_url",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "og_title",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_image",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_description",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_object_type",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_site_name",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_meta",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "og_fetch",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/messages/[:id]"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/pending_attachments",
          "displayName" : "/pending_attachments",
          "params" : [
            {
              "name" : "attachment",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/pending_attachments"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/pending_attachments/[:id]",
          "path" : "/pending_attachments/[:id]",
          "params" : [
            {
              "name" : "attachment",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/pending_attachments/[:id]"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/messages/email",
          "path" : "/messages/email",
          "url" : "https://www.yammer.com/api/v1/messages/email"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/threads/[:id].json",
          "path" : "/threads/[:id].json",
          "url" : "https://www.yammer.com/api/v1/threads/[:id].json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/messages/liked_by/current.json",
          "path" : "/messages/liked_by/current.json",
          "params" : [
            {
              "name" : "message_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/messages/liked_by/current.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/messages/liked_by/current.json",
          "displayName" : "/messages/liked_by/current.json",
          "params" : [
            {
              "name" : "message_id",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/messages/liked_by/current.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/topics/[:id].json",
          "path" : "/topics/[:id].json",
          "url" : "https://www.yammer.com/api/v1/topics/[:id].json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/messages/about_topic/[:id].json",
          "path" : "/messages/about_topic/[:id].json",
          "url" : "https://www.yammer.com/api/v1/messages/about_topic/[:id].json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-groups"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/group_memberships.json",
          "path" : "/group_memberships.json",
          "params" : [
            {
              "name" : "group_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/group_memberships.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-groups"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/group_memberships.json",
          "path" : "/group_memberships.json",
          "params" : [
            {
              "name" : "group_id",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/group_memberships.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users.json",
          "path" : "/users.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "letter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_by",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "reverse",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "delete",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/users.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/current.json",
          "path" : "/users/current.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "letter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_by",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "reverse",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "delete",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/users/current.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-users"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/users/[:id].json",
          "displayName" : "/users/[:id].json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "letter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_by",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "reverse",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "delete",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/users/[:id].json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/by_email.json",
          "path" : "/users/by_email.json",
          "params" : [
            {
              "name" : "email",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "letter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_by",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "reverse",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "delete",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/users/by_email.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/in_group/[:id].json",
          "path" : "/users/in_group/[:id].json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "letter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_by",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "reverse",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "delete",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/users/in_group/[:id].json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users.json",
          "path" : "/users.json",
          "params" : [
            {
              "name" : "email",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "full_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "job_title",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "department_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "location",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "im_provider",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "im_username",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "work_telephone",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "work_extension",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "mobile_telephone",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "external_profiles",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "significant_other",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "kids_names",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "interests",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "summary",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "expertise",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "education[] (school,degree,description,start_year,end_year)",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "previous_companies[] (company,position,description,start_year,end_year)",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/users.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/[:id].json",
          "path" : "/users/[:id].json",
          "params" : [
            {
              "name" : "email",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "full_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "job_title",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "department_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "location",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "im_provider",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "im_username",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "work_telephone",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "work_extension",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "mobile_telephone",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "external_profiles",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "significant_other",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "kids_names",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "interests",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "summary",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "expertise",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "education[] (school,degree,description,start_year,end_year)",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "previous_companies[] (company,position,description,start_year,end_year)",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/users/[:id].json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/[:id].json",
          "path" : "/users/[:id].json",
          "params" : [
            {
              "name" : "page",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "letter",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort_by",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "reverse",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "delete",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/users/[:id].json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-relationships"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/relationships.json",
          "path" : "/relationships.json",
          "params" : [
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "email_address",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "relationship_type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/relationships.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-relationships"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/relationships.json",
          "path" : "/relationships.json",
          "params" : [
            {
              "name" : "user_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "email_address",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "relationship_type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/relationships.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-relationships"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/relationships/[:id].json",
          "path" : "/relationships/[:id].json",
          "params" : [
            {
              "name" : "user_id",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "email_address",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "id",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "relationship_type",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/relationships/[:id].json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-notifications"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/streams/notifications.json",
          "path" : "/streams/notifications.json",
          "url" : "https://www.yammer.com/api/v1/streams/notifications.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-suggestions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/suggestions.json",
          "path" : "/suggestions.json",
          "params" : [
            {
              "name" : "limit",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/suggestions.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-suggestions"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/suggestions/[:id].json",
          "displayName" : "/suggestions/[:id].json",
          "params" : [
            {
              "name" : "limit",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/suggestions/[:id].json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-subscriptions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/subscriptions/to_user/[:id].json",
          "path" : "/subscriptions/to_user/[:id].json",
          "params" : [
            {
              "name" : "target_type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "target_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/subscriptions/to_user/[:id].json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-subscriptions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/subscriptions/to_thread/[:id].json",
          "path" : "/subscriptions/to_thread/[:id].json",
          "params" : [
            {
              "name" : "target_type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "target_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/subscriptions/to_thread/[:id].json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-subscriptions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/subscriptions/to_topic/[:id].json",
          "path" : "/subscriptions/to_topic/[:id].json",
          "params" : [
            {
              "name" : "target_type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "target_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/subscriptions/to_topic/[:id].json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-subscriptions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/subscriptions",
          "path" : "/subscriptions",
          "params" : [
            {
              "name" : "target_type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "target_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/subscriptions"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-subscriptions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/subscriptions",
          "path" : "/subscriptions",
          "params" : [
            {
              "name" : "target_type",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "target_id",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/subscriptions"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-autocomplete"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/autocomplete/ranked",
          "path" : "/autocomplete/ranked",
          "params" : [
            {
              "name" : "prefix",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "models",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/autocomplete/ranked"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-invitations"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/invitations.json",
          "path" : "/invitations.json",
          "params" : [
            {
              "name" : "email",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/invitations.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-search"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/search.json",
          "path" : "/search.json",
          "params" : [
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "num_per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/search.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.yammer.com/restapi/#rest-networks"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/networks/current.json",
          "path" : "/networks/current.json",
          "params" : [
            {
              "name" : "include_suspended",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "exclude_own_messages_from_unseen",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.yammer.com/api/v1/networks/current.json"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://developer.yammer.com/restapi/",
    "enabled" : true,
    "logo" : "http://www.bloggersblog.com/pics/yammer_logo.jpg",
    "name" : "YAMMER",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:yammer"
  },
  {
    "_id" : "54122934675080635d89c3cc",
    "__v" : 0,
    "application" : {
      "base" : "https://api.connectsense.com/v1/{API_TOKEN}",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://www.connectsense.com/developer/user_devices_list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/devices",
          "path" : "/devices",
          "url" : "https://api.connectsense.com/v1/{API_TOKEN}/devices"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://www.connectsense.com/developer/user_device"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/devices/{DEVICE_SERIAL_NUMBER}",
          "path" : "/devices/{DEVICE_SERIAL_NUMBER}",
          "params" : [
            {
              "name" : "DEVICE_SERIAL_NUMBER",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.connectsense.com/v1/{API_TOKEN}/devices/{DEVICE_SERIAL_NUMBER}"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://www.connectsense.com/developer/user_devices_list",
    "enabled" : true,
    "logo" : "http://postscapes.com/internet-of-things-award/wp-content/uploads/2014/01/connectsense-logo-663x378.jpg",
    "name" : "Connect Sense",
    "oauth" : {
      "version" : "1.0"
    },
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:connect_sense"
  },
  {
    "_id" : "53f28ad9710850ee08e28478",
    "__v" : 0,
    "application" : {
      "base" : "https://account.sf-api.com/sf/v3",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=AccessControls"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/AccessControls",
          "path" : "/AccessControls",
          "params" : [
            {
              "name" : "principalid",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "itemid",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/AccessControls"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=AccessControls"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)/AccessControls",
          "path" : "/Items(id)/AccessControls",
          "params" : [
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "recursive",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "message",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sendDefaultNotification",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/AccessControls"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=AccessControls"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)/AccessControls",
          "path" : "/Items(id)/AccessControls",
          "params" : [
            {
              "name" : "id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "accessControl",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "recursive",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/AccessControls"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=AccessControls"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/AccessControls",
          "path" : "/AccessControls",
          "params" : [
            {
              "name" : "principalid",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "itemid",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/AccessControls"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts",
          "path" : "/Accounts",
          "url" : "https://account.sf-api.com/sf/v3/Accounts"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/Branding",
          "path" : "/Accounts/Branding",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/Branding"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/Employees",
          "path" : "/Accounts/Employees",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/Employees"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/Accounts/Clients",
          "displayName" : "/Accounts/Clients",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/Clients"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/AddressBook",
          "path" : "/Accounts/AddressBook",
          "params" : [
            {
              "name" : "type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "searchTerm",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Accounts/AddressBook"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Accounts/MobileSecuritySettings",
          "path" : "/Accounts/MobileSecuritySettings",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/MobileSecuritySettings"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/Accounts/SSO",
          "displayName" : "/Accounts/SSO",
          "params" : [
            {
              "name" : "provider",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Accounts/SSO"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "username"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "password"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "employeesonly"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "requirehomefolders"
            }
          ],
          "displayName" : "/Accounts/GetByUser",
          "path" : "/Accounts/GetByUser",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "httpMethod" : "POST",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/GetByUser"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "email"
            }
          ],
          "path" : "/Accounts/SendToEmail",
          "displayName" : "/Accounts/SendToEmail",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "httpMethod" : "POST",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/SendToEmail"
        },
        {
          "path" : "/Accounts/LoginAccessControlDomains",
          "displayName" : "/Accounts/LoginAccessControlDomains",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/LoginAccessControlDomains"
        },
        {
          "path" : "/Accounts/LoginAccessControlDomains",
          "displayName" : "/Accounts/LoginAccessControlDomains",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/LoginAccessControlDomains"
        },
        {
          "path" : "/Accounts/LoginAccessControlDomains",
          "displayName" : "/Accounts/LoginAccessControlDomains",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "httpMethod" : "POST",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/LoginAccessControlDomains"
        },
        {
          "path" : "/Accounts/FolderAccessControlDomains",
          "displayName" : "/Accounts/FolderAccessControlDomains",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "httpMethod" : "POST",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/FolderAccessControlDomains"
        },
        {
          "path" : "/Accounts/LoginAccessControlDomains",
          "displayName" : "/Accounts/LoginAccessControlDomains",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts",
            "t" : "patch"
          },
          "httpMethod" : "PUT",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/LoginAccessControlDomains"
        },
        {
          "displayName" : "/Accounts/FolderAccessControlDomains",
          "path" : "/Accounts/FolderAccessControlDomains",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "t" : "patch",
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "httpMethod" : "PUT",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/FolderAccessControlDomains"
        },
        {
          "path" : "/Accounts/LoginAccessControlDomains",
          "displayName" : "/Accounts/LoginAccessControlDomains",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "httpMethod" : "DELETE",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/LoginAccessControlDomains"
        },
        {
          "path" : "/Accounts/FolderAccessControlDomains",
          "displayName" : "/Accounts/FolderAccessControlDomains",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "httpMethod" : "DELETE",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/FolderAccessControlDomains"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "subdomain"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "username"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "singlePlane"
            }
          ],
          "path" : "/Accounts/RequireWebPop",
          "displayName" : "/Accounts/RequireWebPop",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/RequireWebPop"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "username"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "singlePlane"
            }
          ],
          "path" : "/Accounts/RequireSubdomain",
          "displayName" : "/Accounts/RequireSubdomain",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/RequireSubdomain"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "singlePlane"
            }
          ],
          "path" : "/Accounts/FindSubdomain",
          "displayName" : "/Accounts/FindSubdomain",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "httpMethod" : "POST",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/FindSubdomain"
        },
        {
          "path" : "/Accounts/OutlookInformation",
          "displayName" : "/Accounts/OutlookInformation",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/OutlookInformation"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "subdomain"
            }
          ],
          "path" : "/Accounts/SSOInfo",
          "displayName" : "/Accounts/SSOInfo",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Accounts"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Accounts/SSOInfo"
        },
        {
          "path" : "/AsyncOperations(id)",
          "displayName" : "/AsyncOperations(id)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=AsyncOperations"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/AsyncOperations(id)"
        },
        {
          "path" : "/AsyncOperations/GetByBatch(id)",
          "displayName" : "/AsyncOperations/GetByBatch(id)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=AsyncOperations"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/AsyncOperations/GetByBatch(id)"
        },
        {
          "path" : "/AsyncOperations/GetByFolder(id)",
          "displayName" : "/AsyncOperations/GetByFolder(id)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=AsyncOperations"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/AsyncOperations/GetByFolder(id)"
        },
        {
          "path" : "/AsyncOperations(id)/Cancel",
          "displayName" : "/AsyncOperations(id)/Cancel",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=AsyncOperations"
          },
          "httpMethod" : "POST",
          "url" : "https://account.sf-api.com/sf/v3/AsyncOperations(id)/Cancel"
        },
        {
          "path" : "/AsyncOperations(id)",
          "displayName" : "/AsyncOperations(id)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=AsyncOperations"
          },
          "httpMethod" : "DELETE",
          "url" : "https://account.sf-api.com/sf/v3/AsyncOperations(id)"
        },
        {
          "path" : "/AsyncOperations/CancelBatch(id)",
          "displayName" : "/AsyncOperations/CancelBatch(id)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=AsyncOperations"
          },
          "httpMethod" : "POST",
          "url" : "https://account.sf-api.com/sf/v3/AsyncOperations/CancelBatch(id)"
        },
        {
          "path" : "/AsyncOperations/CancelBatch(id)",
          "displayName" : "/AsyncOperations/CancelBatch(id)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=AsyncOperations"
          },
          "httpMethod" : "POST",
          "url" : "https://account.sf-api.com/sf/v3/AsyncOperations/CancelBatch(id)"
        },
        {
          "path" : "/AsyncOperations(id)",
          "displayName" : "/AsyncOperations(id)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "t" : "patch",
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=AsyncOperations"
          },
          "httpMethod" : "PUT",
          "url" : "https://account.sf-api.com/sf/v3/AsyncOperations(id)"
        },
        {
          "path" : "/Capabilities",
          "displayName" : "/Capabilities",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Capabilities"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Capabilities"
        },
        {
          "path" : "/Devices(id)",
          "displayName" : "/Devices(id)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Devices"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Devices(id)"
        },
        {
          "path" : "/Devices(id)",
          "displayName" : "/Devices(id)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Devices"
          },
          "httpMethod" : "DELETE",
          "url" : "https://account.sf-api.com/sf/v3/Devices(id)"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "userid"
            }
          ],
          "path" : "/Devices(deviceID)/Wipe",
          "displayName" : "/Devices(deviceID)/Wipe",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Devices"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Devices(deviceID)/Wipe"
        },
        {
          "path" : "/Devices",
          "displayName" : "/Devices",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Devices"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Devices"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "singlePlane"
            }
          ],
          "path" : "/Devices(deviceID)/WipeDone",
          "displayName" : "/Devices(deviceID)/WipeDone",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Devices"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Devices(deviceID)/WipeDone"
        },
        {
          "path" : "/Devices(deviceID)/Status",
          "displayName" : "/Devices(deviceID)/Status",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Devices"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Devices(deviceID)/Status"
        },
        {
          "path" : "/Users(id)/FavoriteFolders",
          "displayName" : "/Users(id)/FavoriteFolders",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=FavoriteFolders"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Users(id)/FavoriteFolders"
        },
        {
          "path" : "/Users(userid)/FavoriteFolders(itemid)",
          "displayName" : "/Users(userid)/FavoriteFolders(itemid)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=FavoriteFolders"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Users(userid)/FavoriteFolders(itemid)"
        },
        {
          "path" : "/FavoriteFolders(userid=userid,itemid=itemid)",
          "displayName" : "/FavoriteFolders(userid=userid,itemid=itemid)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=FavoriteFolders"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/FavoriteFolders(userid=userid,itemid=itemid)"
        },
        {
          "displayName" : "/Users(id)/FavoriteFolders",
          "path" : "/Users(id)/FavoriteFolders",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=FavoriteFolders"
          },
          "httpMethod" : "POST",
          "url" : "https://account.sf-api.com/sf/v3/Users(id)/FavoriteFolders"
        },
        {
          "path" : "/Users(id)/FavoriteFolders(itemid)",
          "displayName" : "/Users(id)/FavoriteFolders(itemid)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=FavoriteFolders"
          },
          "httpMethod" : "DELETE",
          "url" : "https://account.sf-api.com/sf/v3/Users(id)/FavoriteFolders(itemid)"
        },
        {
          "path" : "/Groups",
          "displayName" : "/Groups",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Groups"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Groups"
        },
        {
          "path" : "/Groups(id)",
          "displayName" : "/Groups(id)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Groups"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Groups(id)"
        },
        {
          "path" : "/Groups(id)",
          "displayName" : "/Groups(id)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Groups"
          },
          "httpMethod" : "DELETE",
          "url" : "https://account.sf-api.com/sf/v3/Groups(id)"
        },
        {
          "path" : "/Groups",
          "displayName" : "/Groups",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Groups"
          },
          "httpMethod" : "POST",
          "url" : "https://account.sf-api.com/sf/v3/Groups"
        },
        {
          "path" : "/Groups(id)",
          "displayName" : "/Groups(id)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Groups",
            "t" : "patch"
          },
          "httpMethod" : "PUT",
          "url" : "https://account.sf-api.com/sf/v3/Groups(id)"
        },
        {
          "path" : "/Groups(id)/Contacts",
          "displayName" : "/Groups(id)/Contacts",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Groups"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Groups(id)/Contacts"
        },
        {
          "path" : "/Groups(id)/Contacts",
          "displayName" : "/Groups(id)/Contacts",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Groups"
          },
          "httpMethod" : "POST",
          "params" : [
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Groups(id)/Contacts"
        },
        {
          "path" : "/Groups(id)/Contacts",
          "displayName" : "/Groups(id)/Contacts",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Groups"
          },
          "httpMethod" : "DELETE",
          "url" : "https://account.sf-api.com/sf/v3/Groups(id)/Contacts"
        },
        {
          "path" : "/Items",
          "displayName" : "/Items",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Items"
        },
        {
          "displayName" : "/Items(id)",
          "path" : "/Items(id)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "includeDeleted"
            }
          ],
          "path" : "/Items(id)/Stream",
          "displayName" : "/Items(id)/Stream",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/Stream"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "path"
            }
          ],
          "path" : "/Items/ByPath",
          "displayName" : "/Items/ByPath",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Items/ByPath"
        },
        {
          "displayName" : "/Items(id)/Parent",
          "path" : "/Items(id)/Parent",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/Parent"
        },
        {
          "path" : "/Items(id)/Children",
          "displayName" : "/Items(id)/Children",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/Children"
        },
        {
          "path" : "/Items(id)/Info",
          "displayName" : "/Items(id)/Info",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/Info"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "redirect"
            }
          ],
          "path" : "/Items(id)/Download",
          "displayName" : "/Items(id)/Download",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "httpMethod" : "GET",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/Download"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "overwrite"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "passthrough"
            }
          ],
          "path" : "/Items(parentid)/Folder",
          "displayName" : "/Items(parentid)/Folder",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "httpMethod" : "POST",
          "url" : "https://account.sf-api.com/sf/v3/Items(parentid)/Folder"
        },
        {
          "path" : "/Items(parentid)/Note",
          "displayName" : "/Items(parentid)/Note",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "httpMethod" : "POST",
          "url" : "https://account.sf-api.com/sf/v3/Items(parentid)/Note"
        },
        {
          "path" : "/Items(parentid)/Link",
          "displayName" : "/Items(parentid)/Link",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "httpMethod" : "POST",
          "url" : "https://account.sf-api.com/sf/v3/Items(parentid)/Link"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "overwrite"
            }
          ],
          "path" : "/Items/SymbolicLink",
          "displayName" : "/Items/SymbolicLink",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "httpMethod" : "POST",
          "url" : "https://account.sf-api.com/sf/v3/Items/SymbolicLink"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)/Subscribe",
          "path" : "/Items(id)/Subscribe",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/Subscribe"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items",
            "t" : "patch"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)",
          "path" : "/Items(id)",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items",
            "t" : "patch"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items/Link(id)",
          "path" : "/Items/Link(id)",
          "params" : [
            {
              "name" : "notify",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Items/Link(id)"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items",
            "t" : "patch"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items/Note(id)",
          "path" : "/Items/Note(id)",
          "params" : [
            {
              "name" : "notify",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Items/Note(id)"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items",
            "t" : "patch"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items/SymbolicLink(id)",
          "path" : "/Items/SymbolicLink(id)",
          "url" : "https://account.sf-api.com/sf/v3/Items/SymbolicLink(id)"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)/BulkDelete",
          "path" : "/Items(id)/BulkDelete",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/BulkDelete"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)/Breadcrumbs",
          "path" : "/Items(id)/Breadcrumbs",
          "params" : [
            {
              "name" : "path",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/Breadcrumbs"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)/Copy",
          "path" : "/Items(id)/Copy",
          "params" : [
            {
              "name" : "targetid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "overwrite",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/Copy"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)/Upload",
          "path" : "/Items(id)/Upload",
          "params" : [
            {
              "name" : "method",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "raw",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fileName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fileSize",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "batchId",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "batchLast",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "canResume",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "startOver",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "unzip",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tool",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "overwrite",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "title",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "details",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "isSend",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sendGuid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "opid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "threadCount",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "responseFormat",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "notify",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "clientCreatedDateUTC",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "clientModifiedDateUTC",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/Upload"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)/CheckIn",
          "path" : "/Items(id)/CheckIn",
          "params" : [
            {
              "name" : "message",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/CheckIn"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)/CheckOut",
          "path" : "/Items(id)/CheckOut",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/CheckOut"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items/Search",
          "path" : "/Items/Search",
          "params" : [
            {
              "name" : "query",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Items/Search"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items/AdvancedSearch",
          "path" : "/Items/AdvancedSearch",
          "url" : "https://account.sf-api.com/sf/v3/Items/AdvancedSearch"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)/WebView",
          "path" : "/Items(id)/WebView",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/WebView"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)/ProtocolLinks",
          "path" : "/Items(id)/ProtocolLinks",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/ProtocolLinks"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Items"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)/ProtocolLinks(protocol)",
          "path" : "/Items(id)/ProtocolLinks(protocol)",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/ProtocolLinks(protocol)"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=MetaData"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Metadata",
          "path" : "/Metadata",
          "params" : [
            {
              "name" : "name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "itemid",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Metadata"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=MetaData"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)/Metadata",
          "path" : "/Items(id)/Metadata",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/Metadata"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=MetaData"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)/Metadata",
          "path" : "/Items(id)/Metadata",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/Metadata"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=MetaData",
            "t" : "patch"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Metadata(metadataId)",
          "path" : "/Metadata(metadataId)",
          "url" : "https://account.sf-api.com/sf/v3/Metadata(metadataId)"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "t" : "patch",
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=MetaData"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Metadata",
          "path" : "/Metadata",
          "url" : "https://account.sf-api.com/sf/v3/Metadata"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=MetaData"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Items(id)/Metadata(metadataId)",
          "path" : "/Items(id)/Metadata(metadataId)",
          "url" : "https://account.sf-api.com/sf/v3/Items(id)/Metadata(metadataId)"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=MetaData"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Metadata(name=name,itemid=itemid)",
          "path" : "/Metadata(name=name,itemid=itemid)",
          "url" : "https://account.sf-api.com/sf/v3/Metadata(name=name,itemid=itemid)"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Queues"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Queues",
          "path" : "/Queues",
          "url" : "https://account.sf-api.com/sf/v3/Queues"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Queues"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Queues(id)",
          "path" : "/Queues(id)",
          "url" : "https://account.sf-api.com/sf/v3/Queues(id)"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Queues"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Queues(qid)/Entries(eid)",
          "path" : "/Queues(qid)/Entries(eid)",
          "url" : "https://account.sf-api.com/sf/v3/Queues(qid)/Entries(eid)"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Queues"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Queues(id)/Entries",
          "path" : "/Queues(id)/Entries",
          "url" : "https://account.sf-api.com/sf/v3/Queues(id)/Entries"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Queues"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/Queues(id)/Receive",
          "displayName" : "/Queues(id)/Receive",
          "url" : "https://account.sf-api.com/sf/v3/Queues(id)/Receive"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Queues"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Queues(id)/Complete",
          "path" : "/Queues(id)/Complete",
          "url" : "https://account.sf-api.com/sf/v3/Queues(id)/Complete"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Queues",
            "t" : "patch"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Queues(qid)/Entries(eid)",
          "path" : "/Queues(qid)/Entries(eid)",
          "url" : "https://account.sf-api.com/sf/v3/Queues(qid)/Entries(eid)"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Queues"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Queues(qid)/Entries(eid)",
          "path" : "/Queues(qid)/Entries(eid)",
          "url" : "https://account.sf-api.com/sf/v3/Queues(qid)/Entries(eid)"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Sessions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Sessions",
          "path" : "/Sessions",
          "url" : "https://account.sf-api.com/sf/v3/Sessions"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Sessions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Sessions",
          "path" : "/Sessions",
          "url" : "https://account.sf-api.com/sf/v3/Sessions"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Sessions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Sessions/Login",
          "path" : "/Sessions/Login",
          "params" : [
            {
              "name" : "authmethod",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "authcomparison",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Sessions/Login"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Shares"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Shares",
          "path" : "/Shares",
          "url" : "https://account.sf-api.com/sf/v3/Shares"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Shares"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Shares(id)",
          "path" : "/Shares(id)",
          "url" : "https://account.sf-api.com/sf/v3/Shares(id)"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Shares"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Shares(id)/Recipients",
          "path" : "/Shares(id)/Recipients",
          "url" : "https://account.sf-api.com/sf/v3/Shares(id)/Recipients"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Shares"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Shares(id)/Items",
          "path" : "/Shares(id)/Items",
          "url" : "https://account.sf-api.com/sf/v3/Shares(id)/Items"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Shares"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Shares(shareid)/Items(itemid)",
          "path" : "/Shares(shareid)/Items(itemid)",
          "url" : "https://account.sf-api.com/sf/v3/Shares(shareid)/Items(itemid)"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Shares"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Shares(id)/Download",
          "path" : "/Shares(id)/Download",
          "params" : [
            {
              "name" : "shareId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Email",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Company",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "redirect",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Shares(id)/Download"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Shares"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Shares",
          "path" : "/Shares",
          "params" : [
            {
              "name" : "notify",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Shares"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Shares",
            "t" : "patch"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Shares(id)",
          "path" : "/Shares(id)",
          "url" : "https://account.sf-api.com/sf/v3/Shares(id)"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Shares"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Shares(id)",
          "path" : "/Shares(id)",
          "url" : "https://account.sf-api.com/sf/v3/Shares(id)"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Shares"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Shares(id)/Alias",
          "path" : "/Shares(id)/Alias",
          "params" : [
            {
              "name" : "email",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "notify",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Shares(id)/Alias"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Shares"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Shares/Send",
          "path" : "/Shares/Send",
          "params" : [
            {
              "name" : "Items",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "Emails",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "Subject",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Shares/Send"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Shares"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Shares/Request",
          "path" : "/Shares/Request",
          "params" : [
            {
              "name" : "FolderId",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "FolderPath",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Emails",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "Subject",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Shares/Request"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Shares"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Shares(id)/Upload",
          "path" : "/Shares(id)/Upload",
          "params" : [
            {
              "name" : "method",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "raw",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fileName",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fileSize",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "batchId",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "batchLast",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "canResume",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "startOver",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "unzip",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tool",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "overwrite",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "title",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "details",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "isSend",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sendGuid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "opid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "threadCount",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "responseFormat",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "notify",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Shares(id)/Upload"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Storage%20Centers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/StorageCenters(id)",
          "path" : "/StorageCenters(id)",
          "url" : "https://account.sf-api.com/sf/v3/StorageCenters(id)"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Storage%20Centers",
            "t" : "patch"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/StorageCenters(id)",
          "path" : "/StorageCenters(id)",
          "url" : "https://account.sf-api.com/sf/v3/StorageCenters(id)"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Storage%20Centers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/StorageCenters(id)",
          "path" : "/StorageCenters(id)",
          "url" : "https://account.sf-api.com/sf/v3/StorageCenters(id)"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Storage%20Centers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones(id)/StorageCenters",
          "path" : "/Zones(id)/StorageCenters",
          "url" : "https://account.sf-api.com/sf/v3/Zones(id)/StorageCenters"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Storage%20Centers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones(id)/StorageCenters",
          "path" : "/Zones(id)/StorageCenters",
          "url" : "https://account.sf-api.com/sf/v3/Zones(id)/StorageCenters"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Storage%20Centers",
            "t" : "patch"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones(zid)/StorageCenters(scid)",
          "path" : "/Zones(zid)/StorageCenters(scid)",
          "url" : "https://account.sf-api.com/sf/v3/Zones(zid)/StorageCenters(scid)"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Storage%20Centers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones(zid)/StorageCenter(scid)",
          "path" : "/Zones(zid)/StorageCenter(scid)",
          "url" : "https://account.sf-api.com/sf/v3/Zones(zid)/StorageCenter(scid)"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Storage%20Centers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones(zid)/StorageCenter(scid)/Metadata",
          "path" : "/Zones(zid)/StorageCenter(scid)/Metadata",
          "url" : "https://account.sf-api.com/sf/v3/Zones(zid)/StorageCenter(scid)/Metadata"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Storage%20Centers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones(zid)/StorageCenter(scid)/Metadata",
          "path" : "/Zones(zid)/StorageCenter(scid)/Metadata",
          "url" : "https://account.sf-api.com/sf/v3/Zones(zid)/StorageCenter(scid)/Metadata"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Storage%20Centers"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones(zid)/StorageCenter(scid)/Metadata",
          "path" : "/Zones(zid)/StorageCenter(scid)/Metadata",
          "params" : [
            {
              "name" : "name",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Zones(zid)/StorageCenter(scid)/Metadata"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users(id)",
          "path" : "/Users(id)",
          "params" : [
            {
              "name" : "emailAddress",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Users(id)"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users",
          "path" : "/Users",
          "params" : [
            {
              "name" : "pushCreatorDefaultSettings",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "addshared",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "notify",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ifNecessary",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Users"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users/AccountUser",
          "path" : "/Users/AccountUser",
          "params" : [
            {
              "name" : "pushCreatorDefaultSettings",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "addshared",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "notify",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ifNecessary",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Users/AccountUser"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users",
            "t" : "patch"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users(id)",
          "path" : "/Users(id)",
          "url" : "https://account.sf-api.com/sf/v3/Users(id)"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users",
            "t" : "patch"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users(id)/Roles",
          "path" : "/Users(id)/Roles",
          "params" : [
            {
              "name" : "parentid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Users(id)/Roles"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "t" : "put",
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users(id)/Roles",
          "path" : "/Users(id)/Roles",
          "params" : [
            {
              "name" : "parentid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Users(id)/Roles"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users",
            "t" : "patch"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users/AccountUser(id)",
          "path" : "/Users/AccountUser(id)",
          "url" : "https://account.sf-api.com/sf/v3/Users/AccountUser(id)"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users(id)/HomeFolder",
          "path" : "/Users(id)/HomeFolder",
          "url" : "https://account.sf-api.com/sf/v3/Users(id)/HomeFolder"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users(id)/Preferences",
          "path" : "/Users(id)/Preferences",
          "url" : "https://account.sf-api.com/sf/v3/Users(id)/Preferences"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users(id)/Security",
          "path" : "/Users(id)/Security",
          "url" : "https://account.sf-api.com/sf/v3/Users(id)/Security"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users(id)/Security",
          "path" : "/Users(id)/Security",
          "url" : "https://account.sf-api.com/sf/v3/Users(id)/Security"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users(id)/ResetPassword",
          "path" : "/Users(id)/ResetPassword",
          "params" : [
            {
              "name" : "properties",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "notify",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Users(id)/ResetPassword"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users(id)/ResendWelcome",
          "path" : "/Users(id)/ResendWelcome",
          "url" : "https://account.sf-api.com/sf/v3/Users(id)/ResendWelcome"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users(id)",
          "path" : "/Users(id)",
          "params" : [
            {
              "name" : "completely",
              "style" : "",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Users(id)"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users/AllSharedFolders",
          "path" : "/Users/AllSharedFolders",
          "url" : "https://account.sf-api.com/sf/v3/Users/AllSharedFolders"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users/TopFolders",
          "path" : "/Users/TopFolders",
          "url" : "https://account.sf-api.com/sf/v3/Users/TopFolders"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/Users/NetworkShareConnectors",
          "displayName" : "/Users/NetworkShareConnectors",
          "url" : "https://account.sf-api.com/sf/v3/Users/NetworkShareConnectors"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users/SharepointConnectors",
          "path" : "/Users/SharepointConnectors",
          "url" : "https://account.sf-api.com/sf/v3/Users/SharepointConnectors"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users/Confirm",
          "path" : "/Users/Confirm",
          "params" : [
            {
              "name" : "settings",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Users/Confirm"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Users"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Users/Info",
          "path" : "/Users/Info",
          "url" : "https://account.sf-api.com/sf/v3/Users/Info"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Zones"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones",
          "path" : "/Zones",
          "params" : [
            {
              "name" : "services",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "includeDisabled",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Zones"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Zones"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones(id)",
          "path" : "/Zones(id)",
          "params" : [
            {
              "name" : "secret",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Zones(id)"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Zones"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones",
          "path" : "/Zones",
          "url" : "https://account.sf-api.com/sf/v3/Zones"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "t" : "patch",
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Zones"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones(id)",
          "path" : "/Zones(id)",
          "url" : "https://account.sf-api.com/sf/v3/Zones(id)"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Zones"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones(id)",
          "path" : "/Zones(id)",
          "params" : [
            {
              "name" : "force",
              "style" : "",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Zones(id)"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Zones"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones(id)/ResetSecret",
          "path" : "/Zones(id)/ResetSecret",
          "url" : "https://account.sf-api.com/sf/v3/Zones(id)/ResetSecret"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Zones"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones(id)/Metadata",
          "path" : "/Zones(id)/Metadata",
          "url" : "https://account.sf-api.com/sf/v3/Zones(id)/Metadata"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Zones"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones(id)/Metadata",
          "path" : "/Zones(id)/Metadata",
          "url" : "https://account.sf-api.com/sf/v3/Zones(id)/Metadata"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://api.sharefile.com/rest/docs/resource.aspx?name=Zones"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/Zones(id)/Metadata",
          "path" : "/Zones(id)/Metadata",
          "params" : [
            {
              "name" : "name",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://account.sf-api.com/sf/v3/Zones(id)/Metadata"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "http://api.sharefile.com/rest/doc.aspx",
    "enabled" : true,
    "logo" : "http://infotechlead.com/wp-content/uploads/2013/11/Sharefile-Citrix.jpg",
    "name" : "CITRIX SHAREFILE",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:citrix_sharefile"
  },
  {
    "_id" : "53f616b5710850ee08e28482",
    "__v" : 0,
    "application" : {
      "base" : "http://uservoice.uservoice.com/api/v1/oauth/",
      "resources" : [
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "admin_permission[tickets]"
            },
            {
              "name" : "admin_permission[feedback]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "admin_permission[knowledgebase]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "admin_permission[settings]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "httpMethod" : "PUT",
          "displayName" : "/api/v1/users/user_id/admin_permission.json",
          "path" : "/api/v1/users/user_id/admin_permission.json",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_user_id_admin_permission_put"
          },
          "authentication" : {
            "required" : "true"
          },
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/user_id/admin_permission.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_user_id_admin_permission_delete"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/users/user_id/admin_permission.json",
          "path" : "/api/v1/users/user_id/admin_permission.json",
          "params" : [
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/user_id/admin_permission.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_user_id_admin_permission_delete"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/articles.json",
          "path" : "/api/v1/articles.json",
          "params" : [
            {
              "name" : "article[question]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "article[answer_html]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "article[published]",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "article[topic_id]",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "article[topic_name]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/articles.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_articles_article_id_delete"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/articles/article_id.json",
          "path" : "/api/v1/articles/article_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/articles/article_id.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_articles_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/articles.json",
          "path" : "/api/v1/articles.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/articles.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_topics_topic_id_articles_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/topics/topic_id/articles.json",
          "path" : "/api/v1/topics/topic_id/articles.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/topics/topic_id/articles.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_articles_search_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/articles/search.json",
          "path" : "/api/v1/articles/search.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "query",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/articles/search.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_topics_topic_id_articles_search_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/topics/topic_id/articles/search.json",
          "path" : "/api/v1/topics/topic_id/articles/search.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "query",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/topics/topic_id/articles/search.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_articles_article_id_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/articles/article_id.json",
          "path" : "/api/v1/articles/article_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/articles/article_id.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_articles_article_id_put"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/articles/article_id.json",
          "path" : "/api/v1/articles/article_id.json",
          "params" : [
            {
              "name" : "article[question]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "article[answer_html]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "article[published]",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "article[topic_id]",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "article[topic_name]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/articles/article_id.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_categories_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/categories.json",
          "path" : "/api/v1/forums/forum_id/categories.json",
          "params" : [
            {
              "name" : "category[name]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/categories.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_categories_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/categories/category_id.json",
          "path" : "/api/v1/forums/forum_id/categories/category_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/categories/category_id.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_categories_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/categories.json",
          "path" : "/api/v1/forums/forum_id/categories.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/categories.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_categories_category_id_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/categories/category_id.json",
          "path" : "/api/v1/forums/forum_id/categories/category_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/categories/category_id.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_categories_category_id_put"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/categories/category_id.json",
          "path" : "/api/v1/forums/forum_id/categories/category_id.json",
          "params" : [
            {
              "name" : "category[name]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/categories/category_id.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_comments_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/comments.json",
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/comments.json",
          "params" : [
            {
              "name" : "comment[text]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/comments.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_comments_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/comments/comment_id.json",
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/comments/comment_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/comments/comment_id.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_comments_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/comments/identify.json",
          "path" : "/api/v1/comments/identify.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/comments/identify.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_comments_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/comments.json",
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/comments.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/comments.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_comments_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/comments.json",
          "path" : "/api/v1/comments.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/comments.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_user_id_comments_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/users/user_id/comments.json",
          "path" : "/api/v1/users/user_id/comments.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/user_id/comments.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_comments_comment_id_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/comments/comment_id.json",
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/comments/comment_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/comments/comment_id.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_comments_comment_id_put"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/comments/comment_id.json",
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/comments/comment_id.json",
          "params" : [
            {
              "name" : "comment[text]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/comments/comment_id.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_custom_fields_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/custom_fields.json",
          "path" : "/api/v1/custom_fields.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/custom_fields.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_custom_fields_public_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/custom_fields/public.json",
          "path" : "/api/v1/custom_fields/public.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/custom_fields/public.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_comments_comment_id_flags_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/comments/comment_id/flags.json",
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/comments/comment_id/flags.json",
          "params" : [
            {
              "name" : "code",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/comments/comment_id/flags.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_flags_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/flags.json",
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/flags.json",
          "params" : [
            {
              "name" : "code",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/flags.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_flags_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/faqs/faq_id/flags.json",
          "path" : "/api/v1/faqs/faq_id/flags.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/faqs/faq_id/flags.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_flags_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/comments/comment_id/flags.json",
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/comments/comment_id/flags.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/comments/comment_id/flags.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_comments_comment_id_flags_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/flags.json",
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/flags.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/flags.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_flags_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/faqs/faq_id/flags.json",
          "path" : "/api/v1/faqs/faq_id/flags.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/faqs/faq_id/flags.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_flags_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums.json",
          "path" : "/api/v1/forums.json",
          "params" : [
            {
              "name" : "forum[name]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "forum[welcome]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[prompt]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[example]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[state]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[closed_at]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[default_locale]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[private]",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[access_denied_message]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[authorization_operator]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[allow_by_ip]",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[allowed_ips][][ip]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[allow_by_email_domain]",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[allowed_email_domains][][domain]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id.json",
          "path" : "/api/v1/forums/forum_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums.json",
          "path" : "/api/v1/forums.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id.json",
          "path" : "/api/v1/forums/forum_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id.json",
          "path" : "/api/v1/forums/forum_id.json",
          "params" : [
            {
              "name" : "forum[name]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "forum[welcome]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[prompt]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[example]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[state]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[closed_at]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[default_locale]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[private]",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[access_denied_message]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[authorization_operator]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[allow_by_ip]",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[allowed_ips][][ip]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[allow_by_email_domain]",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "forum[allowed_email_domains][][domain]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_gadgets_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/gadgets.json",
          "path" : "/api/v1/gadgets.json",
          "params" : [
            {
              "name" : "gadget[name]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "gadget[gadget_type]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "gadget[data][url]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "gadget[order]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/gadgets.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_gadgets_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/gadgets/gadget_id.json",
          "path" : "/api/v1/gadgets/gadget_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/gadgets/gadget_id.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_gadgets_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/gadgets.json",
          "path" : "/api/v1/gadgets.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/gadgets.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_gadgets_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/gadgets/gadget_id.json",
          "path" : "/api/v1/gadgets/gadget_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/gadgets/gadget_id.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_gadgets_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/gadgets/gadget_id.json",
          "path" : "/api/v1/gadgets/gadget_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/gadgets/gadget_id.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_gadgets_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/manual_actions.json",
          "path" : "/api/v1/manual_actions.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/manual_actions.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_gadgets_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/manual_actions/id.json",
          "path" : "/api/v1/manual_actions/id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/manual_actions/id.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_gadgets_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/api/v1/manual_actions.json",
          "displayName" : "/api/v1/manual_actions.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/manual_actions.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_gadgets_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/manual_actions/id.json",
          "path" : "/api/v1/manual_actions/id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/manual_actions/id.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_gadgets_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/manual_actions/id.json",
          "path" : "/api/v1/manual_actions/id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/manual_actions/id.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_notes_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/notes.json",
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/notes.json",
          "params" : [
            {
              "name" : "note[text]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/notes.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_notes_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/notes/note_id.json",
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/notes/note_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/notes/note_id.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_notes_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/notes/identify.json",
          "path" : "/api/v1/notes/identify.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/notes/identify.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_notes_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/notes.json",
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/notes.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/notes.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_notes_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/notes.json",
          "path" : "/api/v1/notes.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/notes.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_user_id_notes_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/users/user_id/notes.json",
          "path" : "/api/v1/users/user_id/notes.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/user_id/notes.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_notes_note_id_put"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/notes/note_id.json",
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/notes/note_id.json",
          "params" : [
            {
              "name" : "note[text]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/notes/note_id.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_oembed_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/oembed.json",
          "path" : "/api/v1/oembed.json",
          "params" : [
            {
              "name" : "url",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/oembed.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "stale_threshold"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "agent_ids"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "exclude_weekends"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "custom_fields[custom_field_name]"
            }
          ],
          "path" : "/api/v1/reports/agent_backlog.json (BETA, subject to change)",
          "displayName" : "/api/v1/reports/agent_backlog.json (BETA, subject to change)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_agent_backlog_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/reports/agent_backlog.json (BETA, subject to change)"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "start_date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "end_date"
            }
          ],
          "path" : "/api/v1/reports/agent_leaderboard.json (BETA, subject to change)",
          "displayName" : "/api/v1/reports/agent_leaderboard.json (BETA, subject to change)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_agent_leaderboard_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/reports/agent_leaderboard.json (BETA, subject to change)"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "start_date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "end_date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "granularity"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "custom_fields[custom_field_name]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "support_queue_id"
            }
          ],
          "path" : "/api/v1/reports/agent_performance.json (BETA, subject to change)",
          "displayName" : "/api/v1/reports/agent_performance.json (BETA, subject to change)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_agent_performance_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/reports/agent_performance.json (BETA, subject to change)"
        },
        {
          "path" : "/api/v1/reports/backlog.json",
          "displayName" : "/api/v1/reports/backlog.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_agent_performance_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/reports/backlog.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "start_date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "end_date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "granularity"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "custom_fields[custom_field_name]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "support_queue_id"
            }
          ],
          "path" : "/api/v1/reports/channel_performance.json (BETA, subject to change)",
          "displayName" : "/api/v1/reports/channel_performance.json (BETA, subject to change)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_agent_performance_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/reports/channel_performance.json (BETA, subject to change)"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "start_date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "end_date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "granularity"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "custom_fields[custom_field_name]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "support_queue_id"
            }
          ],
          "path" : "/api/v1/reports/custom_field_performance.json (BETA, subject to change)",
          "displayName" : "/api/v1/reports/custom_field_performance.json (BETA, subject to change)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_custom_field_performance_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/reports/custom_field_performance.json (BETA, subject to change)"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "start_date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "end_date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "granularity"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "custom_fields[custom_field_name]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "support_queue_id"
            }
          ],
          "path" : "/api/v1/reports/hourly_performance.json (BETA, subject to change)",
          "displayName" : "/api/v1/reports/hourly_performance.json (BETA, subject to change)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_hourly_performance_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/reports/hourly_performance.json (BETA, subject to change)"
        },
        {
          "path" : "/api/v1/reports/instant_answers.json",
          "displayName" : "/api/v1/reports/instant_answers.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_hourly_performance_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/reports/instant_answers.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "support_queue_ids"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "stale_threshold"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "exclude_weekends"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "custom_fields[custom_field_name]"
            }
          ],
          "displayName" : "/api/v1/reports/queue_backlog.json (BETA, subject to change)",
          "path" : "/api/v1/reports/queue_backlog.json (BETA, subject to change)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_queue_backlog_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/reports/queue_backlog.json (BETA, subject to change)"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "start_date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "end_date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "granularity"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "custom_fields[custom_field_name]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "support_queue_id"
            }
          ],
          "path" : "/api/v1/reports/support_performance.json (BETA, subject to change)",
          "displayName" : "/api/v1/reports/support_performance.json (BETA, subject to change)",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_support_performance_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/reports/support_performance.json (BETA, subject to change)"
        },
        {
          "path" : "/api/v1/reports/user_insights.json",
          "displayName" : "/api/v1/reports/user_insights.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_support_performance_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/reports/user_insights.json"
        },
        {
          "path" : "/api/v1/reports/user_satisfaction.json",
          "displayName" : "/api/v1/reports/user_satisfaction.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_support_performance_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/reports/user_satisfaction.json"
        },
        {
          "path" : "/api/v1/reports/user_satisfaction_by_traits.json",
          "displayName" : "/api/v1/reports/user_satisfaction_by_traits.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_support_performance_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/reports/user_satisfaction_by_traits.json"
        },
        {
          "path" : "/api/v1/reports/user_satisfaction_responses.json",
          "displayName" : "/api/v1/reports/user_satisfaction_responses.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_support_performance_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/reports/user_satisfaction_responses.json"
        },
        {
          "path" : "/api/v1/search.json",
          "displayName" : "/api/v1/search.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_support_performance_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/search.json"
        },
        {
          "path" : "/api/v1/instant_answers/search.json",
          "displayName" : "/api/v1/instant_answers/search.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_reports_support_performance_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/instant_answers/search.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "service_hook[name]"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "service_hook[service_type]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "service_hook[data]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "service_hook[data]"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "service_hook[events]"
            }
          ],
          "path" : "/api/v1/service_hooks.json",
          "displayName" : "/api/v1/service_hooks.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_service_hooks_post"
          },
          "httpMethod" : "POST",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/service_hooks.json"
        },
        {
          "path" : "/api/v1/service_hooks/id.json",
          "displayName" : "/api/v1/service_hooks/id.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_service_hooks_id_delete"
          },
          "httpMethod" : "DELETE",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/service_hooks/id.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_service_hooks_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/service_hooks.json",
          "path" : "/api/v1/service_hooks.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/service_hooks.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_service_hooks_id_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/service_hooks/id.json",
          "path" : "/api/v1/service_hooks/id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/service_hooks/id.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_statuses_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/statuses.json",
          "path" : "/api/v1/statuses.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/statuses.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_statuses_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/statuses/status_id.json",
          "path" : "/api/v1/statuses/status_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/statuses/status_id.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_stream_private_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/stream/private.json",
          "path" : "/api/v1/forums/forum_id/stream/private.json",
          "params" : [
            {
              "name" : "filter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "since",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/stream/private.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_stream_private_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/stream/private.json",
          "path" : "/api/v1/stream/private.json",
          "params" : [
            {
              "name" : "filter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "since",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/stream/private.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_stream_public_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/stream/public.json",
          "path" : "/api/v1/forums/forum_id/stream/public.json",
          "params" : [
            {
              "name" : "filter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "since",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/stream/public.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_stream_public_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/stream/public.json",
          "path" : "/api/v1/stream/public.json",
          "params" : [
            {
              "name" : "filter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "since",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/stream/public.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_subdomains_key_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/api/v1/subdomains/key.json",
          "displayName" : "/api/v1/subdomains/key.json",
          "params" : [
            {
              "name" : "key",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/subdomains/key.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "suggestion[title]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "suggestion[text]"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "suggestion[votes]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "suggestion[category_id]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "suggestion[referrer]"
            }
          ],
          "path" : "/api/v1/forums/forum_id/suggestions.json",
          "displayName" : "/api/v1/forums/forum_id/suggestions.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_subdomains_key_get"
          },
          "httpMethod" : "POST",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions.json"
        },
        {
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id.json",
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_post"
          },
          "httpMethod" : "DELETE",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id.json"
        },
        {
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/dissociate.json",
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/dissociate.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_post"
          },
          "httpMethod" : "DELETE",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/dissociate.json"
        },
        {
          "path" : "/api/v1/suggestions/identify.json",
          "displayName" : "/api/v1/suggestions/identify.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_post"
          },
          "httpMethod" : "PUT",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/suggestions/identify.json"
        },
        {
          "path" : "/api/v1/suggestions.json",
          "displayName" : "/api/v1/suggestions.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_post"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/suggestions.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "per_page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "category"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "status_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "updated_after_date"
            }
          ],
          "path" : "/api/v1/forums/forum_id/suggestions.json",
          "displayName" : "/api/v1/forums/forum_id/suggestions.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_post"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "per_page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "status_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "category"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort"
            }
          ],
          "path" : "/api/v1/users/user_id/suggestions.json",
          "displayName" : "/api/v1/users/user_id/suggestions.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_user_id_suggestions_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/user_id/suggestions.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "per_page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "filter"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "status_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "category"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort"
            }
          ],
          "path" : "/api/v1/forums/forum_id/users/user_id/suggestions.json",
          "displayName" : "/api/v1/forums/forum_id/users/user_id/suggestions.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_users_user_id_suggestions_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/users/user_id/suggestions.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "per_page"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "query"
            }
          ],
          "path" : "/api/v1/suggestions/search.json",
          "displayName" : "/api/v1/suggestions/search.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_suggestions_search_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/suggestions/search.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "per_page"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "query"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "category_id"
            }
          ],
          "path" : "/api/v1/forums/forum_id/suggestions/search.json",
          "displayName" : "/api/v1/forums/forum_id/suggestions/search.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_search_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/search.json"
        },
        {
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id.json",
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id.json"
        },
        {
          "path" : "/api/v1/suggestions/suggestion_id.json",
          "displayName" : "/api/v1/suggestions/suggestion_id.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/suggestions/suggestion_id.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "suggestion[title]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "suggestion[text]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "suggestion[category_id]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "suggestion[category_name]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "suggestion[forum_id]"
            }
          ],
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id.json",
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_put"
          },
          "httpMethod" : "PUT",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "to"
            }
          ],
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/votes.json",
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/votes.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_votes_post"
          },
          "httpMethod" : "POST",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/votes.json"
        },
        {
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/watch.json",
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/watch.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_votes_post"
          },
          "httpMethod" : "POST",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/watch.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "support_queue[name]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "support_queue[member_ids]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "support_queue[member_emails]"
            }
          ],
          "path" : "/api/v1/support_queues.json",
          "displayName" : "/api/v1/support_queues.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_votes_post"
          },
          "httpMethod" : "POST",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/support_queues.json"
        },
        {
          "path" : "/api/v1/support_queues/id.json",
          "displayName" : "/api/v1/support_queues/id.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_support_queues_post"
          },
          "httpMethod" : "DELETE",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/support_queues/id.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_support_queues_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/support_queues.json",
          "path" : "/api/v1/support_queues.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/support_queues.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_support_queues_id_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/support_queues/id.json",
          "path" : "/api/v1/support_queues/id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/support_queues/id.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_support_queues_sort_put"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/support_queues/sort.json",
          "path" : "/api/v1/support_queues/sort.json",
          "params" : [
            {
              "name" : "order",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/support_queues/sort.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_support_queues_id_put"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/support_queues/id.json",
          "path" : "/api/v1/support_queues/id.json",
          "params" : [
            {
              "name" : "support_queue[name]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "support_queue[member_ids]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "support_queue[member_emails]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/support_queues/id.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_supporters_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/forums/forum_id/suggestions/suggestion_id/supporters.json",
          "path" : "/api/v1/forums/forum_id/suggestions/suggestion_id/supporters.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/forums/forum_id/suggestions/suggestion_id/supporters.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_forums_forum_id_suggestions_suggestion_id_supporters_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/tickets/ticket_id/history.json",
          "path" : "/api/v1/tickets/ticket_id/history.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket_id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/tickets/ticket_id/history.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_ticket_id_history_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/tickets/ticket_id/ticket_messages.json",
          "path" : "/api/v1/tickets/ticket_id/ticket_messages.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/tickets/ticket_id/ticket_messages.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_ticket_id_history_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/ticket_messages/identify.json",
          "path" : "/api/v1/ticket_messages/identify.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/ticket_messages/identify.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_ticket_id_history_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/tickets/ticket_id/ticket_messages.json",
          "path" : "/api/v1/tickets/ticket_id/ticket_messages.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/tickets/ticket_id/ticket_messages.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_ticket_id_history_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/ticket_messages.json",
          "path" : "/api/v1/ticket_messages.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/ticket_messages.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_ticket_id_notes_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/tickets/ticket_id/notes.json",
          "path" : "/api/v1/tickets/ticket_id/notes.json",
          "params" : [
            {
              "name" : "note[text]",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "note[attachments][][name]",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "note[attachments][][data]",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "note[attachments][][content_type]",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/tickets/ticket_id/notes.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_ticket_id_notes_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/tickets/ticket_id/notes/note_id.json",
          "path" : "/api/v1/tickets/ticket_id/notes/note_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/tickets/ticket_id/notes/note_id.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_ticket_id_notes_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/ticket_notes/identify.json",
          "path" : "/api/v1/ticket_notes/identify.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/ticket_notes/identify.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_ticket_id_notes_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/tickets/ticket_id/notes.json",
          "path" : "/api/v1/tickets/ticket_id/notes.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/tickets/ticket_id/notes.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/tickets.json",
          "path" : "/api/v1/tickets.json",
          "params" : [
            {
              "name" : "email",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[state]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[subject]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "ticket[message]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "ticket[referrer]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[attachments][][name]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[attachments][][data]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[attachments][][content_type]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[support_queue_id]",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[support_queue]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[user_agent]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[lang]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[custom_field_values][_field_name_]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/tickets.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_create_via_jsonp_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/tickets/create_via_jsonp.json",
          "path" : "/api/v1/tickets/create_via_jsonp.json",
          "params" : [
            {
              "name" : "format",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "email",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[state]",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[subject]",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "ticket[message]",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "ticket[referrer]",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[user_agent]",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[lang]",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[custom_field_values][_field_name_]",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/tickets/create_via_jsonp.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_create_via_jsonp_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/api/v1/tickets/identify.json",
          "displayName" : "/api/v1/tickets/identify.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/tickets/identify.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/tickets.json",
          "path" : "/api/v1/tickets.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "state",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "assignee_id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "support_queue_id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "support_queue",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "updated_after_date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/tickets.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_search_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/tickets/search.json",
          "path" : "/api/v1/tickets/search.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "query",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "old_query",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/tickets/search.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_ticket_id_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/tickets/ticket_id.json",
          "path" : "/api/v1/tickets/ticket_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/tickets/ticket_id.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_ticket_id_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/tickets/ticket_id.json",
          "path" : "/api/v1/tickets/ticket_id.json",
          "params" : [
            {
              "name" : "ticket[subject]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[state]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[support_queue_id]",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[support_queue]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[assignee_id]",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ticket[custom_field_values][_field_name_]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/tickets/ticket_id.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_tickets_ticket_id_put"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/tickets/upsert.json",
          "path" : "/api/v1/tickets/upsert.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/tickets/upsert.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_topics_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/topics.json",
          "path" : "/api/v1/topics.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/topics.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_topics_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/topics/topic_id.json",
          "path" : "/api/v1/topics/topic_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/topics/topic_id.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_topics_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/users.json",
          "path" : "/api/v1/users.json",
          "params" : [
            {
              "name" : "user[email]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "user[display_name]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "request_token",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_post"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/users/current.json",
          "path" : "/api/v1/users/current.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/current.json"
        },
        {
          "path" : "/api/v1/users/user_id.json",
          "displayName" : "/api/v1/users/user_id.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_user_id_delete"
          },
          "httpMethod" : "DELETE",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/user_id.json"
        },
        {
          "path" : "/api/v1/users/find_or_create.json",
          "displayName" : "/api/v1/users/find_or_create.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_user_id_delete"
          },
          "httpMethod" : "POST",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/find_or_create.json"
        },
        {
          "path" : "/api/v1/users/forgot_password.json",
          "displayName" : "/api/v1/users/forgot_password.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_user_id_delete"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/forgot_password.json"
        },
        {
          "path" : "/api/v1/users/identify.json",
          "displayName" : "/api/v1/users/identify.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_user_id_delete"
          },
          "httpMethod" : "PUT",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/identify.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "per_page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "filter"
            }
          ],
          "path" : "/api/v1/users.json",
          "displayName" : "/api/v1/users.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_get"
          },
          "httpMethod" : "GET",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users.json"
        },
        {
          "path" : "/api/v1/users/login_as.json",
          "displayName" : "/api/v1/users/login_as.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_get"
          },
          "httpMethod" : "POST",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/login_as.json"
        },
        {
          "path" : "/api/v1/users/login_as_owner.json",
          "displayName" : "/api/v1/users/login_as_owner.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_get"
          },
          "httpMethod" : "POST",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/login_as_owner.json"
        },
        {
          "path" : "/api/v1/users/reconfirm_email.json",
          "displayName" : "/api/v1/users/reconfirm_email.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_get"
          },
          "httpMethod" : "POST",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/reconfirm_email.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_search_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/users/search.json",
          "path" : "/api/v1/users/search.json",
          "params" : [
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "guid",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "query",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/search.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_user_id_get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/users/user_id.json",
          "path" : "/api/v1/users/user_id.json",
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/user_id.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.uservoice.com/docs/api/reference/#_api_v1_users_user_id_put"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/api/v1/users/user_id.json",
          "path" : "/api/v1/users/user_id.json",
          "params" : [
            {
              "name" : "user[email]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[display_name]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[title]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[guid]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[agent_signature]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[locale]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[password]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[password_confirmation]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[email_updates]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[email_comment_updates]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[admin_emails][own]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[admin_emails][suggestions]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[admin_emails][responses]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[admin_emails][statuses]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[admin_emails][digests]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[admin_emails][notes]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[admin_emails][moderation]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[admin_emails][tickets]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[admin_emails][newsletter]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[admin_emails][watched_tickets]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user[admin_emails][support_queue_ids][]",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://uservoice.uservoice.com/api/v1/oauth//api/v1/users/user_id.json"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://developer.uservoice.com/docs/api/reference",
    "enabled" : true,
    "logo" : "http://b1.splcdn.net/wp-content/uploads/2009/03/uservoice-logo.jpg",
    "name" : "USERVOICE",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:uservoice"
  },
  {
    "_id" : "53f77117710850ee08e28484",
    "__v" : 0,
    "application" : {
      "base" : "https://public-api.wordpress.com/rest/v1",
      "resources" : [
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "number"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order_by"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "authors_only"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "type"
            }
          ],
          "path" : "/sites/$site/users",
          "displayName" : "/sites/$site/users",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/users/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/users"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/me",
          "displayName" : "/me",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/me/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/me"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site",
          "displayName" : "/sites/$site",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site"
        },
        {
          "path" : "/sites/$site/posts/",
          "displayName" : "/sites/$site/posts/",
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "number"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "offset"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order_by"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "after"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "before"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "tag"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "category"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "sticky"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "author"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "search"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta_key"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta_value"
            }
          ],
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "http://app.octoblu.com/connect/advanced/custom_channels/editor/53f77117710850ee08e28484"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/posts/"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "$post_ID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/posts/$post_ID",
          "displayName" : "/sites/$site/posts/$post_ID",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/posts/%24post_ID/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/posts/$post_ID"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "$post_ID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/posts/$post_ID",
          "displayName" : "/sites/$site/posts/$post_ID",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/posts/%24post_ID/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/posts/$post_ID"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$post_slug"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/posts/slug:$post_slug",
          "displayName" : "/sites/$site/posts/slug:$post_slug",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/posts/slug:%24post_slug/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/posts/slug:$post_slug"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/posts/new",
          "displayName" : "/sites/$site/posts/new",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/posts/new/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/posts/new"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "$post_ID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/posts/$post_ID/delete",
          "displayName" : "/sites/$site/posts/$post_ID/delete",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/posts/%24post_ID/delete/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/posts/$post_ID/delete"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "$post_ID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/posts/$post_ID/likes/",
          "displayName" : "/sites/$site/posts/$post_ID/likes/",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/posts/%24post_ID/likes/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/posts/$post_ID/likes/"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "$post_ID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/posts/$post_ID/likes/new",
          "displayName" : "/sites/$site/posts/$post_ID/likes/new",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/posts/%24post_ID/likes/new/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/posts/$post_ID/likes/new"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "$post_ID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/posts/$post_ID/likes/mine/delete",
          "displayName" : "/sites/$site/posts/$post_ID/likes/mine/delete",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/posts/%24post_ID/likes/mine/delete/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/posts/$post_ID/likes/mine/delete"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "$post_ID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/posts/$post_ID/likes/mine/",
          "displayName" : "/sites/$site/posts/$post_ID/likes/mine/",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/posts/%24post_ID/likes/mine/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/posts/$post_ID/likes/mine/"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "$post_ID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/posts/$post_ID/reblogs/mine",
          "displayName" : "/sites/$site/posts/$post_ID/reblogs/mine",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/posts/%24post_ID/reblogs/mine/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/posts/$post_ID/reblogs/mine"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "$post_ID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/posts/$post_ID/reblogs/new",
          "displayName" : "/sites/$site/posts/$post_ID/reblogs/new",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/posts/%24post_ID/reblogs/new/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/posts/$post_ID/reblogs/new"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/posts/%24post/related/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/posts/$post/related",
          "path" : "/sites/$site/posts/$post/related",
          "params" : [
            {
              "name" : "$site",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "$post",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/posts/$post/related"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/comments/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/comments/",
          "path" : "/sites/$site/comments/",
          "params" : [
            {
              "name" : "$site",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "number",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "order",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "hierarchical",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "after",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "before",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/comments/"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/posts/%24post_ID/replies/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/posts/$post_ID/replies/",
          "path" : "/sites/$site/posts/$post_ID/replies/",
          "params" : [
            {
              "name" : "$site",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "$post_ID",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "number",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "order",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "hierarchical",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "after",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "before",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/posts/$post_ID/replies/"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/comments/%24comment_ID/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/comments/$comment_ID",
          "path" : "/sites/$site/comments/$comment_ID",
          "params" : [
            {
              "name" : "$site",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "$comment_ID",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/comments/$comment_ID"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/comments/%24comment_ID/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/comments/$comment_ID",
          "path" : "/sites/$site/comments/$comment_ID",
          "params" : [
            {
              "name" : "$site",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "$comment_ID",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/comments/$comment_ID"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/posts/%24post_ID/replies/new/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/posts/$post_ID/replies/new",
          "path" : "/sites/$site/posts/$post_ID/replies/new",
          "params" : [
            {
              "name" : "$site",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "$post_ID",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/posts/$post_ID/replies/new"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/comments/%24comment_ID/replies/new/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/comments/$comment_ID/replies/new",
          "path" : "/sites/$site/comments/$comment_ID/replies/new",
          "params" : [
            {
              "name" : "$site",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "$comment_ID",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/comments/$comment_ID/replies/new"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/comments/%24comment_ID/delete/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/comments/$comment_ID/delete",
          "path" : "/sites/$site/comments/$comment_ID/delete",
          "params" : [
            {
              "name" : "$site",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "$comment_ID",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/comments/$comment_ID/delete"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/comments/%24comment_ID/likes/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/comments/$comment_ID/likes/",
          "path" : "/sites/$site/comments/$comment_ID/likes/",
          "params" : [
            {
              "name" : "$site",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "$comment_ID",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/comments/$comment_ID/likes/"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "$comment_ID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/comments/$comment_ID/likes/new",
          "displayName" : "/sites/$site/comments/$comment_ID/likes/new",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/comments/%24comment_ID/likes/new/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/comments/$comment_ID/likes/new"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "$comment_ID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "displayName" : "/sites/$site/comments/$comment_ID/likes/mine/delete",
          "path" : "/sites/$site/comments/$comment_ID/likes/mine/delete",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/comments/%24comment_ID/likes/mine/delete/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/comments/$comment_ID/likes/mine/delete"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "$comment_ID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/comments/$comment_ID/likes/mine/",
          "displayName" : "/sites/$site/comments/$comment_ID/likes/mine/",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/comments/%24comment_ID/likes/mine/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/comments/$comment_ID/likes/mine/"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$category"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/categories/slug:$category",
          "displayName" : "/sites/$site/categories/slug:$category",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/categories/slug:%24category/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/categories/slug:$category"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$category"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/categories/slug:$category",
          "displayName" : "/sites/$site/categories/slug:$category",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/categories/slug:%24category/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/categories/slug:$category"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/categories",
          "displayName" : "/sites/$site/categories",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/categories/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/categories"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/tags",
          "displayName" : "/sites/$site/tags",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/tags/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/tags"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$tag"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/tags/slug:$tag",
          "displayName" : "/sites/$site/tags/slug:$tag",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/tags/slug:%24tag/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/tags/slug:$tag"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$tag"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/tags/slug:$tag",
          "displayName" : "/sites/$site/tags/slug:$tag",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/tags/slug:%24tag/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/tags/slug:$tag"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/categories/new",
          "displayName" : "/sites/$site/categories/new",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/categories/new/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/categories/new"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/tags/new",
          "displayName" : "/sites/$site/tags/new",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/tags/new/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/tags/new"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$category"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/categories/slug:$category/delete",
          "displayName" : "/sites/$site/categories/slug:$category/delete",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/categories/slug:%24category/delete/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/categories/slug:$category/delete"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$tag"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/tags/slug:$tag/delete",
          "displayName" : "/sites/$site/tags/slug:$tag/delete",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/tags/slug:%24tag/delete/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/tags/slug:$tag/delete"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "number"
            }
          ],
          "path" : "/sites/$site/follows/",
          "displayName" : "/sites/$site/follows/",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/follows/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/follows/"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/follows/new",
          "displayName" : "/sites/$site/follows/new",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/follows/new/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/follows/new"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/follows/mine/delete",
          "displayName" : "/sites/$site/follows/mine/delete",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/follows/mine/delete/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/follows/mine/delete"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/follows/mine",
          "displayName" : "/sites/$site/follows/mine",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/follows/mine/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/follows/mine"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "number"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "after"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "before"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "content_width"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "thumb_width"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "thumb_height"
            }
          ],
          "path" : "/freshly-pressed/",
          "displayName" : "/freshly-pressed/",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/freshly-pressed/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/freshly-pressed/"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "ids"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "unread"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "read"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "number"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "since"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "before"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "num_note_items"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "trap"
            }
          ],
          "path" : "/notifications/",
          "displayName" : "/notifications/",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/notifications/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/notifications/"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "$note_ID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "num_note_items"
            }
          ],
          "path" : "/notifications/$note_ID",
          "displayName" : "/notifications/$note_ID",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/notifications/%24note_ID/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/notifications/$note_ID"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/notifications/seen",
          "displayName" : "/notifications/seen",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/notifications/seen/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/notifications/seen"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/notifications/read",
          "displayName" : "/notifications/read",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/notifications/read/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/notifications/read"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/insights",
          "displayName" : "/insights",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/insights/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/insights"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$slug"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "unit"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "after"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "before"
            }
          ],
          "path" : "/insights/$slug",
          "displayName" : "/insights/$slug",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/insights/%24slug/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/insights/$slug"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/read/menu/",
          "displayName" : "/read/menu/",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/read/menu/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/read/menu/"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$feed_url"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/read/feed/$feed_url",
          "displayName" : "/read/feed/$feed_url",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/read/feed/%24feed_url/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/read/feed/$feed_url"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "number"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "after"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "before"
            }
          ],
          "displayName" : "/read/following/",
          "path" : "/read/following/",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/read/following/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/read/following/"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "number"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "after"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "before"
            }
          ],
          "path" : "/read/liked/",
          "displayName" : "/read/liked/",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/read/liked/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/read/liked/"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$tag"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "number"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "after"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "before"
            }
          ],
          "path" : "/read/tags/$tag/posts",
          "displayName" : "/read/tags/$tag/posts",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/read/tags/%24tag/posts/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/read/tags/$tag/posts"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "$tag"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/read/tags/$tag/mine",
          "displayName" : "/read/tags/$tag/mine",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/read/tags/%24tag/mine/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/read/tags/$tag/mine"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$tag"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/read/tags/$tag/mine/new",
          "displayName" : "/read/tags/$tag/mine/new",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/read/tags/%24tag/mine/new/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/read/tags/$tag/mine/new"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$tag"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/read/tags/$tag/mine/delete",
          "displayName" : "/read/tags/$tag/mine/delete",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/read/tags/%24tag/mine/delete/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/read/tags/$tag/mine/delete"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "displayName" : "/read/following/mine",
          "path" : "/read/following/mine",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/read/following/mine/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/read/following/mine"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "url"
            }
          ],
          "displayName" : "/read/following/mine/new",
          "path" : "/read/following/mine/new",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/read/following/mine/new/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/read/following/mine/new"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "url"
            }
          ],
          "path" : "/read/following/mine/delete",
          "displayName" : "/read/following/mine/delete",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/read/following/mine/delete/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/read/following/mine/delete"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "exclude"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "number"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "lang"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "source"
            }
          ],
          "path" : "/read/recommendations/mine/",
          "displayName" : "/read/recommendations/mine/",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/read/recommendations/mine/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/read/recommendations/mine/"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/stats/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/stats",
          "path" : "/sites/$site/stats",
          "params" : [
            {
              "name" : "$site",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/stats"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/stats/visits/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/stats/visits",
          "path" : "/sites/$site/stats/visits",
          "params" : [
            {
              "name" : "$site",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "unit",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "quantity",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/stats/visits"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/stats/referrers/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/stats/referrers",
          "path" : "/sites/$site/stats/referrers",
          "params" : [
            {
              "name" : "$site",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "days",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/stats/referrers"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/stats/top-posts/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/stats/top-posts",
          "path" : "/sites/$site/stats/top-posts",
          "params" : [
            {
              "name" : "$site",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "days",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/stats/top-posts"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/stats/country-views/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/stats/country-views",
          "path" : "/sites/$site/stats/country-views",
          "params" : [
            {
              "name" : "$site",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "days",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/stats/country-views"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/stats/clicks/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/stats/clicks",
          "path" : "/sites/$site/stats/clicks",
          "params" : [
            {
              "name" : "$site",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "days",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/stats/clicks"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/stats/search-terms/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/stats/search-terms",
          "path" : "/sites/$site/stats/search-terms",
          "params" : [
            {
              "name" : "$site",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "days",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/stats/search-terms"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/media/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/media/",
          "path" : "/sites/$site/media/",
          "params" : [
            {
              "name" : "$site",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "number",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "parent_id",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "mime_type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/media/"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/sites/%24site/media/%24media_ID/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/media/$media_ID",
          "path" : "/sites/$site/media/$media_ID",
          "params" : [
            {
              "name" : "$site",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "$media_ID",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/media/$media_ID"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/media/%24media_ID/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sites/$site/media/$media_ID",
          "path" : "/sites/$site/media/$media_ID",
          "params" : [
            {
              "name" : "$site",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "$media_ID",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "context",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_envelope",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pretty",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meta",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fields",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/media/$media_ID"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/sites/$site/media/new",
          "displayName" : "/sites/$site/media/new",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/media/new/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/media/new"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "$site"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "$media_ID"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "callback"
            }
          ],
          "path" : "/sites/$site/media/$media_ID/delete",
          "displayName" : "/sites/$site/media/$media_ID/delete",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/post/sites/%24site/media/%24media_ID/delete/"
          },
          "httpMethod" : "POST",
          "url" : "https://public-api.wordpress.com/rest/v1/sites/$site/media/$media_ID/delete"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "http_envelope"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "pretty"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "meta"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "fields"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "urls"
            }
          ],
          "path" : "/batch/",
          "displayName" : "/batch/",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.wordpress.com/docs/api/1/get/batch/"
          },
          "httpMethod" : "GET",
          "url" : "https://public-api.wordpress.com/rest/v1/batch/"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://developer.wordpress.com/docs/api/",
    "enabled" : true,
    "logo" : "http://winebloggersconference.org/america/wp-content/uploads/2013/06/Wordpress.com-LOGO-use-this.jpg",
    "name" : "WordPress",
    "oauth" : {
      "version" : "2.0"
    },
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:word_press"
  },
  {
    "_id" : "53fe63446b465e1815c63732",
    "__v" : 0,
    "application" : {
      "base" : "https://wpremote.com/api/json/",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/sites/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site",
          "path" : "/site",
          "url" : "https://wpremote.com/api/json//site"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/sites/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site",
          "path" : "/site",
          "params" : [
            {
              "name" : "domain",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "nicename",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "group",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}",
          "path" : "/site/{SITE_ID}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}",
          "path" : "/site/{SITE_ID}",
          "params" : [
            {
              "name" : "domain",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "nicename",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_auth_username",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_auth_password",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filesystem_method",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filesystem_hostname",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filesystem_username",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filesystem_password",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}",
          "path" : "/site/{SITE_ID}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/themes/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/theme",
          "path" : "/site/{SITE_ID}/theme",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/theme"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/theme/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/theme/{THEME_SLUG}",
          "path" : "/site/{SITE_ID}/theme/{THEME_SLUG}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/theme/{THEME_SLUG}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/theme/lock-update/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/theme/{THEME_SLUG}/lock-update",
          "path" : "/site/{SITE_ID}/theme/{THEME_SLUG}/lock-update",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/theme/{THEME_SLUG}/lock-update"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/theme/lock-update/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/theme/{THEME_SLUG}/lock-update",
          "path" : "/site/{SITE_ID}/theme/{THEME_SLUG}/lock-update",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/theme/{THEME_SLUG}/lock-update"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/theme/install/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/theme/{THEME_SLUG}/install",
          "path" : "/site/{SITE_ID}/theme/{THEME_SLUG}/install",
          "params" : [
            {
              "name" : "version",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/theme/{THEME_SLUG}/install"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/theme/update/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/theme/{THEME_SLUG}/update",
          "path" : "/site/{SITE_ID}/theme/{THEME_SLUG}/update",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/theme/{THEME_SLUG}/update"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/theme/delete/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/theme/{THEME_SLUG}/delete",
          "path" : "/site/{SITE_ID}/theme/{THEME_SLUG}/delete",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/theme/{THEME_SLUG}/delete"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/theme/activate/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/theme/{THEME_SLUG}/activate",
          "path" : "/site/{SITE_ID}/theme/{THEME_SLUG}/activate",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/theme/{THEME_SLUG}/activate"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/posts/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/post",
          "path" : "/site/{SITE_ID}/post",
          "params" : [
            {
              "name" : "author",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "author_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "author__in",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "author__not_in",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "cat",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "category_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "category__and",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "category__in",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "category__not_in",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tag",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tag_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tag__and",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tag__in",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tag__not_in",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tag_slug__and",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tag_slug__in",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "s",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "pagename",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_parent",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_parent__in",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_parent__not_in",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post__in",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post__not_in",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "order",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "orderby",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "nopaging",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "posts_per_page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "paged",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ignore_sticky_posts",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/post"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/posts/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/https://wpremote.com/api-docs/site/posts/",
          "path" : "/https://wpremote.com/api-docs/site/posts/",
          "params" : [
            {
              "name" : "post_parent",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "menu_order",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ping_status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_author",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_content",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_date",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_date_gmt",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_excerpt",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_password",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_title",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tags_input",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//https://wpremote.com/api-docs/site/posts/"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/post/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/post/{POST_ID}",
          "path" : "/site/{SITE_ID}/post/{POST_ID}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/post/{POST_ID}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/post/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/post/{POST_ID}",
          "path" : "/site/{SITE_ID}/post/{POST_ID}",
          "params" : [
            {
              "name" : "menu_order",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ping_status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_author",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_content",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_date",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_date_gmt",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_excerpt",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_parent",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_password",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_title",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tags_input",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/post/{POST_ID}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/post/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/post/{POST_ID}",
          "path" : "/site/{SITE_ID}/post/{POST_ID}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/post/{POST_ID}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/post/metas/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/post/{POST_ID}/meta",
          "path" : "/site/{SITE_ID}/post/{POST_ID}/meta",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/post/{POST_ID}/meta"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/post/metas/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/post/{POST_ID}/meta",
          "path" : "/site/{SITE_ID}/post/{POST_ID}/meta",
          "params" : [
            {
              "name" : "meta_key",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "meta_value",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/post/{POST_ID}/meta"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/post/meta/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/post/{POST_ID}/meta/{META_KEY}",
          "path" : "/site/{SITE_ID}/post/{POST_ID}/meta/{META_KEY}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/post/{POST_ID}/meta/{META_KEY}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/post/meta/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/post/{POST_ID}/meta/{META_KEY}",
          "path" : "/site/{SITE_ID}/post/{POST_ID}/meta/{META_KEY}",
          "params" : [
            {
              "name" : "meta_value",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/post/{POST_ID}/meta/{META_KEY}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/post/meta/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/post/{POST_ID}/meta/{META_KEY}",
          "path" : "/site/{SITE_ID}/post/{POST_ID}/meta/{META_KEY}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/post/{POST_ID}/meta/{META_KEY}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/email-notification/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/email-notification",
          "path" : "/site/{SITE_ID}/email-notification",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/email-notification"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/email-notification/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/email-notification",
          "path" : "/site/{SITE_ID}/email-notification",
          "params" : [
            {
              "name" : "frequency",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/email-notification"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/users/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/user",
          "path" : "/site/{SITE_ID}/user",
          "params" : [
            {
              "name" : "include",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "exclude",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "search",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "orderby",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "order",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "number",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/user"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/users/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/user",
          "path" : "/site/{SITE_ID}/user",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/user"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/user/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/user/{USER_ID}",
          "path" : "/site/{SITE_ID}/user/{USER_ID}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/user/{USER_ID}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/user/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/user/{USER_ID}",
          "path" : "/site/{SITE_ID}/user/{USER_ID}",
          "params" : [
            {
              "name" : "user_email",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "display_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "first_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "last_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user_nicename",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user_pass",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user_url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/user/{USER_ID}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/user/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/user/{USER_ID}",
          "path" : "/site/{SITE_ID}/user/{USER_ID}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/user/{USER_ID}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/post/metas/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/user/{USER_ID}/meta",
          "path" : "/site/{SITE_ID}/user/{USER_ID}/meta",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/user/{USER_ID}/meta"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/post/metas/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/user/{USER_ID}/meta",
          "path" : "/site/{SITE_ID}/user/{USER_ID}/meta",
          "params" : [
            {
              "name" : "meta_key",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "meta_value",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/user/{USER_ID}/meta"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/user/meta/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/user/{USER_ID}/meta/{META_KEY}",
          "path" : "/site/{SITE_ID}/user/{USER_ID}/meta/{META_KEY}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/user/{USER_ID}/meta/{META_KEY}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/user/meta/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/user/{USER_ID}/meta/{META_KEY}",
          "path" : "/site/{SITE_ID}/user/{USER_ID}/meta/{META_KEY}",
          "params" : [
            {
              "name" : "meta_value",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/user/{USER_ID}/meta/{META_KEY}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/user/meta/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/user/{USER_ID}/meta/{META_KEY}",
          "path" : "/site/{SITE_ID}/user/{USER_ID}/meta/{META_KEY}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/user/{USER_ID}/meta/{META_KEY}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/plugins/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/plugin",
          "path" : "/site/{SITE_ID}/plugin",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/plugin"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/plugin/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}",
          "path" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/plugin/{PLUGIN_SLUG}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/plugin/deactivate/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}/deactivate",
          "path" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}/deactivate",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/plugin/{PLUGIN_SLUG}/deactivate"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/plugin/lock-update/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}/lock-update",
          "path" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}/lock-update",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/plugin/{PLUGIN_SLUG}/lock-update"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/plugin/lock-update/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}/lock-update",
          "path" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}/lock-update",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/plugin/{PLUGIN_SLUG}/lock-update"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/plugin/update/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}/update",
          "path" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}/update",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/plugin/{PLUGIN_SLUG}/update"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/plugin/uninstall/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}/uninstall",
          "path" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}/uninstall",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/plugin/{PLUGIN_SLUG}/uninstall"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/plugin/install/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}/install",
          "path" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}/install",
          "params" : [
            {
              "name" : "version",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/plugin/{PLUGIN_SLUG}/install"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/plugin/activate/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}/activate",
          "path" : "/site/{SITE_ID}/plugin/{PLUGIN_SLUG}/activate",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/plugin/{PLUGIN_SLUG}/activate"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/auto-theme-update/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/auto-theme-update",
          "path" : "/site/{SITE_ID}/auto-theme-update",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/auto-theme-update"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/auto-theme-update/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/auto-theme-update",
          "path" : "/site/{SITE_ID}/auto-theme-update",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/auto-theme-update"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/auto-plugin-update/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/auto-plugin-update",
          "path" : "/site/{SITE_ID}/auto-plugin-update",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/auto-plugin-update"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/auto-plugin-update/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/auto-plugin-update",
          "path" : "/site/{SITE_ID}/auto-plugin-update",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/auto-plugin-update"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/webhooks/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/webhook",
          "path" : "/site/{SITE_ID}/webhook",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/webhook"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/webhooks/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/webhook",
          "path" : "/site/{SITE_ID}/webhook",
          "params" : [
            {
              "name" : "url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/webhook"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/webhooks/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/webhook",
          "path" : "/site/{SITE_ID}/webhook",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/webhook"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/webhook/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/webhook/{WEBHOOK_ID}",
          "path" : "/site/{SITE_ID}/webhook/{WEBHOOK_ID}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/webhook/{WEBHOOK_ID}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/comments/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/comment",
          "path" : "/site/{SITE_ID}/comment",
          "params" : [
            {
              "name" : "status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "orderby",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "order",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "post_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/comment"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/comments/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/comment",
          "path" : "/site/{SITE_ID}/comment",
          "params" : [
            {
              "name" : "comment_post_ID",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_author",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_author_email",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_author_url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_date",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_date_gmt",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_content",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_approved",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_parent",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/comment"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/comment/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/comment/{COMMENT_ID}",
          "path" : "/site/{SITE_ID}/comment/{COMMENT_ID}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/comment/{COMMENT_ID}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/comment/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/comment/{COMMENT_ID}",
          "path" : "/site/{SITE_ID}/comment/{COMMENT_ID}",
          "params" : [
            {
              "name" : "comment_post_ID",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_author",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_author_email",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_author_url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_date",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_date_gmt",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_content",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_approved",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "comment_parent",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/comment/{COMMENT_ID}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/comment/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/comment/{COMMENT_ID}",
          "path" : "/site/{SITE_ID}/comment/{COMMENT_ID}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/comment/{COMMENT_ID}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/comment/metas/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/comment/{COMMENT_ID}/meta",
          "path" : "/site/{SITE_ID}/comment/{COMMENT_ID}/meta",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/comment/{COMMENT_ID}/meta"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/comment/metas/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/comment/{COMMENT_ID}/meta",
          "path" : "/site/{SITE_ID}/comment/{COMMENT_ID}/meta",
          "params" : [
            {
              "name" : "meta_key",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "meta_value",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/comment/{COMMENT_ID}/meta"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/comment/meta/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/comment/{COMMENT_ID}/meta/{META_KEY}",
          "path" : "/site/{SITE_ID}/comment/{COMMENT_ID}/meta/{META_KEY}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/comment/{COMMENT_ID}/meta/{META_KEY}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/comment/meta/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/comment/{COMMENT_ID}/meta/{META_KEY}",
          "path" : "/site/{SITE_ID}/comment/{COMMENT_ID}/meta/{META_KEY}",
          "params" : [
            {
              "name" : "meta_value",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/comment/{COMMENT_ID}/meta/{META_KEY}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/comment/meta/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/comment/{COMMENT_ID}/meta/{META_KEY}",
          "path" : "/site/{SITE_ID}/comment/{COMMENT_ID}/meta/{META_KEY}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/comment/{COMMENT_ID}/meta/{META_KEY}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backups/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup",
          "path" : "/site/{SITE_ID}/backup",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/location/"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/site/{SITE_ID}/backup/location",
          "displayName" : "/site/{SITE_ID}/backup/location",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/location"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/location/"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/site/{SITE_ID}/backup/location",
          "displayName" : "/site/{SITE_ID}/backup/location",
          "params" : [
            {
              "name" : "location",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/location"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/location/ftp/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/location/ftp",
          "path" : "/site/{SITE_ID}/backup/location/ftp",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/location/ftp"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/location/ftp/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/location/ftp",
          "path" : "/site/{SITE_ID}/backup/location/ftp",
          "params" : [
            {
              "name" : "host",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "username",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "password",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "port",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "path",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/location/ftp"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/location/ftp/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/location/ftp",
          "path" : "/site/{SITE_ID}/backup/location/ftp",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/location/ftp"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/location/sftp/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/location/sftp",
          "path" : "/site/{SITE_ID}/backup/location/sftp",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/location/sftp"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/location/sftp/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/location/sftp",
          "path" : "/site/{SITE_ID}/backup/location/sftp",
          "params" : [
            {
              "name" : "host",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "username",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "password",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "port",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "path",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/location/sftp"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/location/sftp/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/location/sftp",
          "path" : "/site/{SITE_ID}/backup/location/sftp",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/location/sftp"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/location/s3/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/location/s3",
          "path" : "/site/{SITE_ID}/backup/location/s3",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/location/s3"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/location/s3/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/location/s3",
          "path" : "/site/{SITE_ID}/backup/location/s3",
          "params" : [
            {
              "name" : "aws_secret_key",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "aws_access_key",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "aws_bucket_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/location/s3"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/location/s3/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/location/s3",
          "path" : "/site/{SITE_ID}/backup/location/s3",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/location/s3"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/location/dropbox/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/location/dropbox",
          "path" : "/site/{SITE_ID}/backup/location/dropbox",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/location/dropbox"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/location/dropbox/"
          },
          "authentication" : {
            "required" : "true"
          },
          "params" : [
            {
              "name" : "access_token",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "displayName" : "/site/{SITE_ID}/backup/location/dropbox",
          "path" : "/site/{SITE_ID}/backup/location/dropbox",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/location/dropbox"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/location/dropbox/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/location/dropbox",
          "path" : "/site/{SITE_ID}/backup/location/dropbox",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/location/dropbox"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/exclude/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/exclude",
          "path" : "/site/{SITE_ID}/backup/exclude",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/exclude"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/exclude/"
          },
          "authentication" : {
            "required" : "true"
          },
          "params" : [
            {
              "name" : "rules",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "displayName" : "/site/{SITE_ID}/backup/exclude",
          "path" : "/site/{SITE_ID}/backup/exclude",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/exclude"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/exclude/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/exclude",
          "path" : "/site/{SITE_ID}/backup/exclude",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/exclude"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/{BACKUP_ID}",
          "path" : "/site/{SITE_ID}/backup/{BACKUP_ID}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/{BACKUP_ID}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/{BACKUP_ID}",
          "path" : "/site/{SITE_ID}/backup/{BACKUP_ID}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/{BACKUP_ID}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/download/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/{BACKUP_ID}/download",
          "path" : "/site/{SITE_ID}/backup/{BACKUP_ID}/download",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/{BACKUP_ID}/download"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/auto-backups/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/auto-backup",
          "path" : "/site/{SITE_ID}/backup/auto-backup",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/auto-backup"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/backup/auto-backups/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/backup/auto-backup",
          "path" : "/site/{SITE_ID}/backup/auto-backup",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/backup/auto-backup"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/refresh-data/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/refresh-data",
          "path" : "/site/{SITE_ID}/refresh-data",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/refresh-data"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/history/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/history",
          "path" : "/site/{SITE_ID}/history",
          "params" : [
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_timestamp",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_timestamp",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/history"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/history/enable-remote-history/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/history/enable-remote-history",
          "path" : "/site/{SITE_ID}/history/enable-remote-history",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/history/enable-remote-history"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/history/enable-remote-history/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/history/enable-remote-history",
          "path" : "/site/{SITE_ID}/history/enable-remote-history",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/history/enable-remote-history"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/core/lock-update/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/core/lock-update",
          "path" : "/site/{SITE_ID}/core/lock-update",
          "params" : [
            {
              "name" : "domain",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "nicename",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_auth_username",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_auth_password",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filesystem_method",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filesystem_hostname",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filesystem_username",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filesystem_password",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/core/lock-update"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/core/lock-update/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/core/lock-update",
          "path" : "/site/{SITE_ID}/core/lock-update",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/core/lock-update"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/core/auto-update/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/core/auto-update",
          "path" : "/site/{SITE_ID}/core/auto-update",
          "params" : [
            {
              "name" : "type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/core/auto-update"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/core/auto-update/"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/site/{SITE_ID}/core/auto-update",
          "displayName" : "/site/{SITE_ID}/core/auto-update",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/core/auto-update"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/core/update/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/core/update",
          "path" : "/site/{SITE_ID}/core/update",
          "params" : [
            {
              "name" : "domain",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "nicename",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_auth_username",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "http_auth_password",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filesystem_method",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filesystem_hostname",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filesystem_username",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filesystem_password",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/core/update"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/lock/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/lock",
          "path" : "/site/{SITE_ID}/lock",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/lock"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/lock/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/lock",
          "path" : "/site/{SITE_ID}/lock",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/lock"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/note/"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/site/{SITE_ID}/note",
          "displayName" : "/site/{SITE_ID}/note",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/note"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/note/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/note",
          "path" : "/site/{SITE_ID}/note",
          "params" : [
            {
              "name" : "note",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/note"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/group/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/group",
          "path" : "/site/{SITE_ID}/group",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/group"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/group/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/group",
          "path" : "/site/{SITE_ID}/group",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/group"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/download/"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/site/{SITE_ID}/download",
          "displayName" : "/site/{SITE_ID}/download",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/download"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/download/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/download",
          "path" : "/site/{SITE_ID}/download",
          "params" : [
            {
              "name" : "type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/download"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/download/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/download",
          "path" : "/site/{SITE_ID}/download",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/download"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/premium/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/premium",
          "path" : "/site/{SITE_ID}/premium",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/premium"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/premium/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/premium",
          "path" : "/site/{SITE_ID}/premium",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/premium"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/api-key/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/api-key",
          "path" : "/site/{SITE_ID}/api-key",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/api-key"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/api-key/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/api-key",
          "path" : "/site/{SITE_ID}/api-key",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/api-key"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/option/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/option/{OPTION_NAME}",
          "path" : "/site/{SITE_ID}/option/{OPTION_NAME}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/option/{OPTION_NAME}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/option/"
          },
          "authentication" : {
            "required" : "true"
          },
          "params" : [
            {
              "name" : "option_value",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "displayName" : "/site/{SITE_ID}/option/{OPTION_NAME}",
          "path" : "/site/{SITE_ID}/option/{OPTION_NAME}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/option/{OPTION_NAME}"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/option/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/{SITE_ID}/option/{OPTION_NAME}",
          "path" : "/site/{SITE_ID}/option/{OPTION_NAME}",
          "url" : "https://wpremote.com/api/json//site/{SITE_ID}/option/{OPTION_NAME}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/site/historys/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/site/history",
          "path" : "/site/history",
          "params" : [
            {
              "name" : "site_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "per_page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "action",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_timestamp",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_timestamp",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//site/history"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/account/webhooks/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account/webhook",
          "path" : "/account/webhook",
          "url" : "https://wpremote.com/api/json//account/webhook"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/account/webhooks/"
          },
          "authentication" : {
            "required" : "true"
          },
          "params" : [
            {
              "name" : "url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "displayName" : "/account/webhook",
          "path" : "/account/webhook",
          "url" : "https://wpremote.com/api/json//account/webhook"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/account/webhooks/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account/webhook",
          "path" : "/account/webhook",
          "url" : "https://wpremote.com/api/json//account/webhook"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/account/webhook/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account/webhook/{WEBHOOK_ID}",
          "path" : "/account/webhook/{WEBHOOK_ID}",
          "url" : "https://wpremote.com/api/json//account/webhook/{WEBHOOK_ID}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/account/subscription/"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/account/subscription",
          "displayName" : "/account/subscription",
          "params" : [
            {
              "name" : "stripe_token",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "coupon",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://wpremote.com/api/json//account/subscription"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/account/subscription/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account/subscription",
          "path" : "/account/subscription",
          "url" : "https://wpremote.com/api/json//account/subscription"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://wpremote.com/api-docs/account/subscription/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account/subscription",
          "path" : "/account/subscription",
          "url" : "https://wpremote.com/api/json//account/subscription"
        }
      ]
    },
    "auth_strategy" : "basic",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://wpremote.com/api-docs/",
    "enabled" : true,
    "logo" : "http://danielbachhuber.com/content/uploads/sites/2/2013/10/logo.png",
    "name" : "WP REMOTE",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:wp_remote"
  },
  {
    "_id" : "540107bdb6df48bb4ec6d62f",
    "__v" : 0,
    "application" : {
      "base" : "https://jawbone.com/nudge/api/v.1.1/",
      "resources" : [
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "start_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "end_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "created_after"
            }
          ],
          "path" : "/users/@me/bandevents",
          "displayName" : "/users/@me/bandevents",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/bandevents"
          },
          "httpMethod" : "GET",
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/bandevents"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "page_token"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "start_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "end_time"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "updated_after"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "limit"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "xid"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "title"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "time_created"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "time_updated"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "date"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "place_lat"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "place_lon"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "place_acc"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "place_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Note"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "lean_mass"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "Weight"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "body_fat"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "bmi"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "tz"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "size"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "next"
            }
          ],
          "path" : "/users/@me/body_events",
          "displayName" : "/users/@me/body_events",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/body"
          },
          "httpMethod" : "GET",
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/body_events"
        },
        {
          "path" : "/body_events/{event_xid}",
          "displayName" : "/body_events/{event_xid}",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/body"
          },
          "httpMethod" : "GET",
          "url" : "https://jawbone.com/nudge/api/v.1.1//body_events/{event_xid}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/body"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/body_events",
          "path" : "/users/@me/body_events",
          "params" : [
            {
              "name" : "title",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "weight",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "body_fat",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "lean_mass",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "bmi",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "note",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_created",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "share",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/body_events"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/body"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/body_events/{event_xid}",
          "path" : "/body_events/{event_xid}",
          "url" : "https://jawbone.com/nudge/api/v.1.1//body_events/{event_xid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/custom"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/generic_events",
          "path" : "/users/@me/generic_events",
          "params" : [
            {
              "name" : "date",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page_token",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "updated_after",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "xid",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "title",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_created",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_updated",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lat",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lon",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_acc",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "image",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "attributes",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "size",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "next",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/generic_events"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/custom"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/generic_events",
          "path" : "/users/@me/generic_events",
          "params" : [
            {
              "name" : "title",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "verb",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "attributes",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "note",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "image_url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lat",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lon",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_acc",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_created",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "share",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/generic_events"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/custom"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/generic_events/{xid}/partialUpdate",
          "path" : "/generic_events/{xid}/partialUpdate",
          "params" : [
            {
              "name" : "title",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "verb",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "attributes",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "note",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "image_url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lat",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lon",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_acc",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_created",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "share",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//generic_events/{xid}/partialUpdate"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/custom"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/generic_events/{xid}",
          "path" : "/generic_events/{xid}",
          "url" : "https://jawbone.com/nudge/api/v.1.1//generic_events/{xid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/goals"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/goals",
          "path" : "/users/@me/goals",
          "params" : [
            {
              "name" : "move_steps",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sleep_total",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "body_weight",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "body_weight_intent",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "intake_calories_remaining",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "move_steps_remaining",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sleep_seconds_remaining",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/goals"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/goals"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/goals",
          "path" : "/users/@me/goals",
          "params" : [
            {
              "name" : "move_steps",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sleep_total",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "body_weight",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "body_weight_intent",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/goals"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/meals"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/meals",
          "path" : "/users/@me/meals",
          "params" : [
            {
              "name" : "date",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page_token",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "updated_after",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "xid",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "title",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "note",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sub_type",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_created",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_updated",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_completed",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lat",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lon",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_acc",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "num_drinks",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "num_foods",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fiber",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "polyunsaturated_fat",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "potassium",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fat",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Carbohydrate",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "saturated_fat",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "protein",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "monounsaturated_fat",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sodium",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "vitamin_c",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "vitamin_a",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "calories",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "unsaturated_fat",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sugar",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "calcium",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "iron",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "cholesterol",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "caffeine",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "size",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "next",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/meals"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/meals"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/meals/{xid}",
          "path" : "/meals/{xid}",
          "url" : "https://jawbone.com/nudge/api/v.1.1//meals/{xid}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/meals"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/meals",
          "path" : "/users/@me/meals",
          "params" : [
            {
              "name" : "note",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sub_type",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "image_url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "photo",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lat",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lon",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_acc",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_created",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "share",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "items",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "amount",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "measurement",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "type",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sub_type",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "category",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "food_type",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "calcium",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "calories",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "carbohydrate",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "cholesterol",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fiber",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "protein",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "saturated_fat",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sodium",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sugar",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "unsaturated_fat",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "caffeine",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/meals"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/meals"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/meals/{xid}/partialUpdate",
          "path" : "/meals/{xid}/partialUpdate",
          "params" : [
            {
              "name" : "note",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sub_type",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "image_url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "photo",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lat",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lon",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_acc",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_created",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "share",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "items",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "amount",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "measurement",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "type",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sub_type",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "category",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "food_type",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "calcium",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "calories",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "carbohydrate",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "cholesterol",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "fiber",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "protein",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "saturated_fat",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sodium",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sugar",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "unsaturated_fat",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "caffeine",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//meals/{xid}/partialUpdate"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/meals"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/meals/{xid}",
          "path" : "/meals/{xid}",
          "url" : "https://jawbone.com/nudge/api/v.1.1//meals/{xid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/mood"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/mood",
          "path" : "/users/@me/mood",
          "params" : [
            {
              "name" : "date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "xid",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "title",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_created",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_updated",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sub_type",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lat",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lon",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_acc",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/mood"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/mood"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/mood/{xid}",
          "path" : "/mood/{xid}",
          "url" : "https://jawbone.com/nudge/api/v.1.1//mood/{xid}"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/mood"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/mood",
          "path" : "/users/@me/mood",
          "params" : [
            {
              "name" : "title",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sub_type",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_created",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "share",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/mood"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/mood"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/mood/{xid}",
          "path" : "/mood/{xid}",
          "url" : "https://jawbone.com/nudge/api/v.1.1//mood/{xid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/moves"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/moves",
          "path" : "/users/@me/moves",
          "params" : [
            {
              "name" : "date",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page_token",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_time",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_time",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "updated_after",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "xid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "title",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_created",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_updated",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_completed",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "snapshot_image",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "distance",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "km",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "steps",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "active_time",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "longest_active",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "inactive_time",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "longest_idle",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "calories",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "bmr_day",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "bmr",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "bg_calories",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "wo_calories",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "wo_time",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "wo_active_time",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "wo_count",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "wo_longest",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tzs",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "hourly_totals",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "size",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "Next",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/moves"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/moves"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/moves/{move_xid}",
          "path" : "/moves/{move_xid}",
          "url" : "https://jawbone.com/nudge/api/v.1.1//moves/{move_xid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/moves"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/moves/{move_xid}/image",
          "path" : "/moves/{move_xid}/image",
          "url" : "https://jawbone.com/nudge/api/v.1.1//moves/{move_xid}/image"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/moves"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/moves/{move_xid}/ticks",
          "displayName" : "/moves/{move_xid}/ticks",
          "params" : [
            {
              "name" : "distance",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "active_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "calories",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "steps",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "speed",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//moves/{move_xid}/ticks"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/refreshtoken"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/refreshToken",
          "path" : "/users/@me/refreshToken",
          "params" : [
            {
              "name" : "secret",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "refresh_token",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/refreshToken"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/settings"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/settings",
          "path" : "/users/@me/settings",
          "params" : [
            {
              "name" : "XID",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "metric",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "share_sleep",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "share_mood",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "share_body",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "share_eat",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "share_move",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/settings"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/sleeps"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/sleeps",
          "path" : "/users/@me/sleeps",
          "params" : [
            {
              "name" : "date",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page_token",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "updated_after",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "xid",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "title",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sub_type",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_created",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_completed",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lat",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lon",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_acc",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "snapshot_image",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "smart_alarm_fire",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "awake_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "asleep_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "awakenings",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "rem",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "light",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sound",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "awake",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "duration",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "quality",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "size",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "next",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/sleeps"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/sleeps"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sleeps/{xid}",
          "path" : "/sleeps/{xid}",
          "url" : "https://jawbone.com/nudge/api/v.1.1//sleeps/{xid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/sleeps"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sleeps/{xid}/image",
          "path" : "/sleeps/{xid}/image",
          "url" : "https://jawbone.com/nudge/api/v.1.1//sleeps/{xid}/image"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/sleeps"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sleeps/{xid}/ticks",
          "path" : "/sleeps/{xid}/ticks",
          "params" : [
            {
              "name" : "depth",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//sleeps/{xid}/ticks"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/sleeps"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/sleeps",
          "path" : "/users/@me/sleeps",
          "params" : [
            {
              "name" : "time_created",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_completed",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "share",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/sleeps"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/sleeps"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/sleeps/{xid}",
          "path" : "/sleeps/{xid}",
          "url" : "https://jawbone.com/nudge/api/v.1.1//sleeps/{xid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/timezone"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/timezone",
          "path" : "/users/@me/timezone",
          "params" : [
            {
              "name" : "start_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "timestamp",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/timezone"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/trends"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/trends",
          "path" : "/users/@me/trends",
          "params" : [
            {
              "name" : "end_date",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "bucket_size",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "num_buckets",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "earliest",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "weight",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "gender",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "age",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "bmr",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "body_fat",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "m_steps",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "m_calories",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "m_total_calories",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "m_active_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "m_workout_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "m_distance",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "e_calories",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "e_carbs",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "e_cholesterol",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "e_protein",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "e_calcium",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "e_unsat_fat",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "e_sat_fat",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "e_sodium",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "e_sugar",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "e_fiber",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "s_bedtime",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "s_asleep_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "s_awake_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "s_awakenings",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "s_light",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "s_sound",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "s_awake",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "s_duration",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "s_quality",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "n_bedtime",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "n_asleep_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "n_awake_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "n_awakenings",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "n_light",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "n_sound",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "n_awake",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "n_duration",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "n_quality",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "next",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/trends"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/user"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me",
          "path" : "/users/@me",
          "params" : [
            {
              "name" : "xid",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "first",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "last",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "image",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "weight",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "height",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/user"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/friends",
          "path" : "/users/@me/friends",
          "params" : [
            {
              "name" : "xid",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/friends"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/workouts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/workouts",
          "path" : "/users/@me/workouts",
          "params" : [
            {
              "name" : "date",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "page_token",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "updated_after",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "limit",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "xid",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "title",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "type",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sub_type",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_created",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_updated",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_completed",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lat",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lon",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_acc",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "route",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "image",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "snapshot_image",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "steps",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "bg_active_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "meters",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "km",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "intensity",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "calories",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "bmr",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "bg_calories",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "size",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "next",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/workouts"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/workouts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/workouts/{xid}",
          "path" : "/workouts/{xid}",
          "url" : "https://jawbone.com/nudge/api/v.1.1//workouts/{xid}"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/workouts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/workouts/{xid}/image",
          "path" : "/workouts/{xid}/image",
          "url" : "https://jawbone.com/nudge/api/v.1.1//workouts/{xid}/image"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/workouts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/workouts/{xid}/ticks",
          "path" : "/workouts/{xid}/ticks",
          "params" : [
            {
              "name" : "distance",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "active_time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "calories",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "steps",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "speed",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//workouts/{xid}/ticks"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/workouts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/@me/workouts",
          "path" : "/users/@me/workouts",
          "params" : [
            {
              "name" : "sub_type",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_created",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_completed",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lat",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lon",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_acc",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "share",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "calories",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "distance",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "image_url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "intensity",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//users/@me/workouts"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/workouts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/workouts/{xid}/partialUpdate",
          "path" : "/workouts/{xid}/partialUpdate",
          "params" : [
            {
              "name" : "sub_type",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_created",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_completed",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lat",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_lon",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_acc",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "place_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tz",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "share",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "calories",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "distance",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "image_url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "intensity",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://jawbone.com/nudge/api/v.1.1//workouts/{xid}/partialUpdate"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://jawbone.com/up/developer/endpoints/workouts"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/workouts/{xid}",
          "path" : "/workouts/{xid}",
          "url" : "https://jawbone.com/nudge/api/v.1.1//workouts/{xid}"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://jawbone.com/up/developer/endpoints",
    "enabled" : true,
    "logo" : "http://www.maxicoche.com/media/wysiwyg/Home/slider/jawbone-up/jawbone-up-logo.png",
    "name" : "UP by Jawbone",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:up_by_jawbone"
  },
  {
    "_id" : "540e0fed675080635d89c3cb",
    "__v" : 0,
    "application" : {
      "base" : "https://api.github.com",
      "resources" : [
        {
          "path" : "/events",
          "displayName" : "/events",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/events/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/events"
        },
        {
          "path" : "/repos/:owner/:repo/events",
          "displayName" : "/repos/:owner/:repo/events",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/events/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/events"
        },
        {
          "path" : "/repos/:owner/:repo/issues/events",
          "displayName" : "/repos/:owner/:repo/issues/events",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/events/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/issues/events"
        },
        {
          "path" : "/networks/:owner/:repo/events",
          "displayName" : "/networks/:owner/:repo/events",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/events/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/networks/:owner/:repo/events"
        },
        {
          "path" : "/orgs/:org/events",
          "displayName" : "/orgs/:org/events",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/events/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/orgs/:org/events"
        },
        {
          "path" : "/users/:username/received_events",
          "displayName" : "/users/:username/received_events",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/events/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/users/:username/received_events"
        },
        {
          "path" : "/users/:username/received_events/public",
          "displayName" : "/users/:username/received_events/public",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/events/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/users/:username/received_events/public"
        },
        {
          "displayName" : "/users/:username/events",
          "path" : "/users/:username/events",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/events/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/users/:username/events"
        },
        {
          "path" : "/users/:username/events/public",
          "displayName" : "/users/:username/events/public",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/events/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/users/:username/events/public"
        },
        {
          "path" : "/users/:username/events/orgs/:org",
          "displayName" : "/users/:username/events/orgs/:org",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/events/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/users/:username/events/orgs/:org"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/feeds/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/feeds",
          "path" : "/feeds",
          "url" : "https://api.github.com/feeds"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/notifications/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/notifications",
          "path" : "/notifications",
          "params" : [
            {
              "name" : "all",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "participating",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "since",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/notifications"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/notifications/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/notifications",
          "path" : "/repos/:owner/:repo/notifications",
          "params" : [
            {
              "name" : "all",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "participating",
              "style" : "query",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "since",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/notifications"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/notifications/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/notifications",
          "path" : "/notifications",
          "params" : [
            {
              "name" : "last_read_at",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/notifications"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/notifications/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/notifications",
          "path" : "/repos/:owner/:repo/notifications",
          "params" : [
            {
              "name" : "last_read_at",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/notifications"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/notifications/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/notifications/threads/:id",
          "path" : "/notifications/threads/:id",
          "url" : "https://api.github.com/notifications/threads/:id"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/notifications/",
            "t" : "PATCH"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/notifications/threads/:id",
          "path" : "/notifications/threads/:id",
          "url" : "https://api.github.com/notifications/threads/:id"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/notifications/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/notifications/threads/:id/subscription",
          "path" : "/notifications/threads/:id/subscription",
          "url" : "https://api.github.com/notifications/threads/:id/subscription"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/notifications/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/notifications/threads/:id/subscription",
          "path" : "/notifications/threads/:id/subscription",
          "params" : [
            {
              "name" : "subscribed",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ignored",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/notifications/threads/:id/subscription"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/notifications/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/notifications/threads/:id/subscription",
          "path" : "/notifications/threads/:id/subscription",
          "url" : "https://api.github.com/notifications/threads/:id/subscription"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/starring/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/stargazers",
          "path" : "/repos/:owner/:repo/stargazers",
          "url" : "https://api.github.com/repos/:owner/:repo/stargazers"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/starring/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/:username/starred",
          "path" : "/users/:username/starred",
          "url" : "https://api.github.com/users/:username/starred"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/starring/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/user/starred",
          "path" : "/user/starred",
          "params" : [
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "direction",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/user/starred"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/starring/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/user/starred/:owner/:repo",
          "path" : "/user/starred/:owner/:repo",
          "url" : "https://api.github.com/user/starred/:owner/:repo"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/starring/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/user/starred/:owner/:repo",
          "path" : "/user/starred/:owner/:repo",
          "url" : "https://api.github.com/user/starred/:owner/:repo"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/starring/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/user/starred/:owner/:repo",
          "path" : "/user/starred/:owner/:repo",
          "url" : "https://api.github.com/user/starred/:owner/:repo"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/watching/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/subscribers",
          "path" : "/repos/:owner/:repo/subscribers",
          "url" : "https://api.github.com/repos/:owner/:repo/subscribers"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/watching/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/:username/subscriptions",
          "path" : "/users/:username/subscriptions",
          "url" : "https://api.github.com/users/:username/subscriptions"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/watching/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/user/subscriptions",
          "path" : "/user/subscriptions",
          "url" : "https://api.github.com/user/subscriptions"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/watching/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/subscription",
          "path" : "/repos/:owner/:repo/subscription",
          "url" : "https://api.github.com/repos/:owner/:repo/subscription"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/watching/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/subscription",
          "path" : "/repos/:owner/:repo/subscription",
          "params" : [
            {
              "name" : "subscribed",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ignored",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/subscription"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/watching/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/subscription",
          "path" : "/repos/:owner/:repo/subscription",
          "url" : "https://api.github.com/repos/:owner/:repo/subscription"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/watching/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/user/subscriptions/:owner/:repo",
          "path" : "/user/subscriptions/:owner/:repo",
          "url" : "https://api.github.com/user/subscriptions/:owner/:repo"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/watching/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/user/subscriptions/:owner/:repo",
          "path" : "/user/subscriptions/:owner/:repo",
          "url" : "https://api.github.com/user/subscriptions/:owner/:repo"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.github.com/v3/activity/watching/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/user/subscriptions/:owner/:repo",
          "path" : "/user/subscriptions/:owner/:repo",
          "url" : "https://api.github.com/user/subscriptions/:owner/:repo"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/:username/gists",
          "path" : "/users/:username/gists",
          "url" : "https://api.github.com/users/:username/gists"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists",
          "path" : "/gists",
          "url" : "https://api.github.com/gists"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/public",
          "path" : "/gists/public",
          "url" : "https://api.github.com/gists/public"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/starred",
          "path" : "/gists/starred",
          "params" : [
            {
              "name" : "since",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/gists/starred"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/:id",
          "path" : "/gists/:id",
          "url" : "https://api.github.com/gists/:id"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists",
          "path" : "/gists",
          "params" : [
            {
              "name" : "files",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "public",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/gists"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "t" : "patch",
            "url" : "https://developer.github.com/v3/gists/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/:id",
          "path" : "/gists/:id",
          "params" : [
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "files",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "content",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "filename",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/gists/:id"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/:id/commits",
          "path" : "/gists/:id/commits",
          "url" : "https://api.github.com/gists/:id/commits"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/:id/star",
          "path" : "/gists/:id/star",
          "url" : "https://api.github.com/gists/:id/star"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/:id/star",
          "path" : "/gists/:id/star",
          "url" : "https://api.github.com/gists/:id/star"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/:id/star",
          "path" : "/gists/:id/star",
          "url" : "https://api.github.com/gists/:id/star"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/:id/forks",
          "path" : "/gists/:id/forks",
          "url" : "https://api.github.com/gists/:id/forks"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/:id/forks",
          "path" : "/gists/:id/forks",
          "url" : "https://api.github.com/gists/:id/forks"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/:id",
          "path" : "/gists/:id",
          "url" : "https://api.github.com/gists/:id"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/comments/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/:gist_id/comments",
          "path" : "/gists/:gist_id/comments",
          "url" : "https://api.github.com/gists/:gist_id/comments"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/comments/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/:gist_id/comments/:id",
          "path" : "/gists/:gist_id/comments/:id",
          "url" : "https://api.github.com/gists/:gist_id/comments/:id"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/comments/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/:gist_id/comments",
          "path" : "/gists/:gist_id/comments",
          "params" : [
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.github.com/gists/:gist_id/comments"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "t" : "patch",
            "url" : "https://developer.github.com/v3/gists/comments/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/:gist_id/comments/:id",
          "path" : "/gists/:gist_id/comments/:id",
          "params" : [
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.github.com/gists/:gist_id/comments/:id"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.github.com/v3/gists/comments/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/gists/:gist_id/comments/:id",
          "path" : "/gists/:gist_id/comments/:id",
          "url" : "https://api.github.com/gists/:gist_id/comments/:id"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/git/blobs/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/blobs/:sha",
          "path" : "/repos/:owner/:repo/git/blobs/:sha",
          "url" : "https://api.github.com/repos/:owner/:repo/git/blobs/:sha"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.github.com/v3/git/blobs/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/blobs",
          "path" : "/repos/:owner/:repo/git/blobs",
          "url" : "https://api.github.com/repos/:owner/:repo/git/blobs"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/git/commits/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/commits/:sha",
          "path" : "/repos/:owner/:repo/git/commits/:sha",
          "url" : "https://api.github.com/repos/:owner/:repo/git/commits/:sha"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.github.com/v3/git/commits/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/commits",
          "path" : "/repos/:owner/:repo/git/commits",
          "params" : [
            {
              "name" : "message",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "tree",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "parents",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "email",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/commits"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/git/refs/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/refs/:ref",
          "path" : "/repos/:owner/:repo/git/refs/:ref",
          "url" : "https://api.github.com/repos/:owner/:repo/git/refs/:ref"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/git/refs/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/refs/heads/skunkworkz/featureA",
          "path" : "/repos/:owner/:repo/git/refs/heads/skunkworkz/featureA",
          "url" : "https://api.github.com/repos/:owner/:repo/git/refs/heads/skunkworkz/featureA"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/git/refs/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/refs",
          "path" : "/repos/:owner/:repo/git/refs",
          "url" : "https://api.github.com/repos/:owner/:repo/git/refs"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/git/refs/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/refs/tags",
          "path" : "/repos/:owner/:repo/git/refs/tags",
          "url" : "https://api.github.com/repos/:owner/:repo/git/refs/tags"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.github.com/v3/git/refs/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/refs",
          "path" : "/repos/:owner/:repo/git/refs",
          "params" : [
            {
              "name" : "ref",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sha",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/refs"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "t" : "patch",
            "url" : "https://developer.github.com/v3/git/refs/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/refs/:ref",
          "path" : "/repos/:owner/:repo/git/refs/:ref",
          "params" : [
            {
              "name" : "sha",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "force",
              "style" : "body",
              "type" : "boolean",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/refs/:ref"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.github.com/v3/git/refs/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/refs/:ref",
          "path" : "/repos/:owner/:repo/git/refs/:ref",
          "url" : "https://api.github.com/repos/:owner/:repo/git/refs/:ref"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/git/tags/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/tags/:sha",
          "path" : "/repos/:owner/:repo/git/tags/:sha",
          "url" : "https://api.github.com/repos/:owner/:repo/git/tags/:sha"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.github.com/v3/git/tags/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/tags",
          "path" : "/repos/:owner/:repo/git/tags",
          "params" : [
            {
              "name" : "tag",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "message",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "object",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tagger",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "email",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "date",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/tags"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/git/trees/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/trees/:sha",
          "path" : "/repos/:owner/:repo/git/trees/:sha",
          "url" : "https://api.github.com/repos/:owner/:repo/git/trees/:sha"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/git/trees/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/trees/:sha?recursive=1",
          "path" : "/repos/:owner/:repo/git/trees/:sha?recursive=1",
          "url" : "https://api.github.com/repos/:owner/:repo/git/trees/:sha?recursive=1"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.github.com/v3/git/trees/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/git/trees",
          "path" : "/repos/:owner/:repo/git/trees",
          "params" : [
            {
              "name" : "tree",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "base_tree",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "path",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "mode",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sha",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "content",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/git/trees"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/issues",
          "path" : "/issues",
          "url" : "https://api.github.com/issues"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/user/issues",
          "path" : "/user/issues",
          "url" : "https://api.github.com/user/issues"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/orgs/:org/issues",
          "path" : "/orgs/:org/issues",
          "params" : [
            {
              "name" : "filter",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "state",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "labels",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "direction",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "since",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/orgs/:org/issues"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/issues",
          "path" : "/repos/:owner/:repo/issues",
          "params" : [
            {
              "name" : "milestone",
              "style" : "query",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "state",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "assignee",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "creator",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "mentioned",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "labels",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "direction",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "since",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/issues/:number",
          "path" : "/repos/:owner/:repo/issues/:number",
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/issues",
          "path" : "/repos/:owner/:repo/issues",
          "params" : [
            {
              "name" : "title",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "assignee",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "milestone",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "labels",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "t" : "patch",
            "url" : "https://developer.github.com/v3/issues/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/issues/:number",
          "path" : "/repos/:owner/:repo/issues/:number",
          "params" : [
            {
              "name" : "title",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "assignee",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "state",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "milestone",
              "style" : "body",
              "type" : "number",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "labels",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/assignees/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/assignees",
          "path" : "/repos/:owner/:repo/assignees",
          "url" : "https://api.github.com/repos/:owner/:repo/assignees"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/assignees/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/assignees/:assignee",
          "path" : "/repos/:owner/:repo/assignees/:assignee",
          "url" : "https://api.github.com/repos/:owner/:repo/assignees/:assignee"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/comments/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/issues/:number/comments",
          "path" : "/repos/:owner/:repo/issues/:number/comments",
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number/comments"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/comments/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/issues/comments",
          "path" : "/repos/:owner/:repo/issues/comments",
          "params" : [
            {
              "name" : "sort",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "direction",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "since",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/comments"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/comments/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/issues/comments/:id",
          "path" : "/repos/:owner/:repo/issues/comments/:id",
          "url" : "https://api.github.com/repos/:owner/:repo/issues/comments/:id"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/comments/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/issues/:number/comments",
          "path" : "/repos/:owner/:repo/issues/:number/comments",
          "params" : [
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number/comments"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "t" : "patch",
            "url" : "https://developer.github.com/v3/issues/comments/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/issues/comments/:id",
          "path" : "/repos/:owner/:repo/issues/comments/:id",
          "params" : [
            {
              "name" : "body",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/issues/comments/:id"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/comments/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/issues/comments/:id",
          "path" : "/repos/:owner/:repo/issues/comments/:id",
          "url" : "https://api.github.com/repos/:owner/:repo/issues/comments/:id"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/events/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/issues/:issue_number/events",
          "path" : "/repos/:owner/:repo/issues/:issue_number/events",
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:issue_number/events"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/events/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/issues/events",
          "path" : "/repos/:owner/:repo/issues/events",
          "url" : "https://api.github.com/repos/:owner/:repo/issues/events"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/events/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/issues/events/:id",
          "path" : "/repos/:owner/:repo/issues/events/:id",
          "url" : "https://api.github.com/repos/:owner/:repo/issues/events/:id"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/labels/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/labels",
          "path" : "/repos/:owner/:repo/labels",
          "url" : "https://api.github.com/repos/:owner/:repo/labels"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/labels/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/labels/:name",
          "path" : "/repos/:owner/:repo/labels/:name",
          "url" : "https://api.github.com/repos/:owner/:repo/labels/:name"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/labels/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/labels",
          "path" : "/repos/:owner/:repo/labels",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "color",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/labels"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/labels/",
            "t" : "patch"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/labels/:name",
          "path" : "/repos/:owner/:repo/labels/:name",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "color",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.github.com/repos/:owner/:repo/labels/:name"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/labels/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/labels/:name",
          "path" : "/repos/:owner/:repo/labels/:name",
          "url" : "https://api.github.com/repos/:owner/:repo/labels/:name"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/labels/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/issues/:number/labels",
          "path" : "/repos/:owner/:repo/issues/:number/labels",
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number/labels"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/labels/"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/repos/:owner/:repo/issues/:number/labels",
          "path" : "/repos/:owner/:repo/issues/:number/labels",
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number/labels"
        },
        {
          "path" : "/repos/:owner/:repo/issues/:number/labels/:name",
          "displayName" : "/repos/:owner/:repo/issues/:number/labels/:name",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/labels/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number/labels/:name"
        },
        {
          "path" : "/repos/:owner/:repo/issues/:number/labels",
          "displayName" : "/repos/:owner/:repo/issues/:number/labels",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/labels/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number/labels"
        },
        {
          "path" : "/repos/:owner/:repo/issues/:number/labels",
          "displayName" : "/repos/:owner/:repo/issues/:number/labels",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/labels/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/repos/:owner/:repo/issues/:number/labels"
        },
        {
          "path" : "/repos/:owner/:repo/milestones/:number/labels",
          "displayName" : "/repos/:owner/:repo/milestones/:number/labels",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/labels/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/milestones/:number/labels"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "state"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "direction"
            }
          ],
          "path" : "/repos/:owner/:repo/milestones",
          "displayName" : "/repos/:owner/:repo/milestones",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/milestones/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/milestones"
        },
        {
          "path" : "/repos/:owner/:repo/milestones/:number",
          "displayName" : "/repos/:owner/:repo/milestones/:number",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/milestones/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/milestones/:number"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "title"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "state"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "due_on"
            }
          ],
          "path" : "/repos/:owner/:repo/milestones",
          "displayName" : "/repos/:owner/:repo/milestones",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/milestones/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/repos/:owner/:repo/milestones"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "title"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "state"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "due_on"
            }
          ],
          "path" : "/repos/:owner/:repo/milestones/:number",
          "displayName" : "/repos/:owner/:repo/milestones/:number",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/milestones/",
            "t" : "patch"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/repos/:owner/:repo/milestones/:number"
        },
        {
          "path" : "/repos/:owner/:repo/milestones/:number",
          "displayName" : "/repos/:owner/:repo/milestones/:number",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/issues/milestones/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/repos/:owner/:repo/milestones/:number"
        },
        {
          "path" : "/emojis",
          "displayName" : "/emojis",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/emojis/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/emojis"
        },
        {
          "path" : "/gitignore/templates",
          "displayName" : "/gitignore/templates",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/gitignore/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/gitignore/templates"
        },
        {
          "path" : "/gitignore/templates/C",
          "displayName" : "/gitignore/templates/C",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/gitignore/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/gitignore/templates/C"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "text"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "mode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            }
          ],
          "path" : "/markdown",
          "displayName" : "/markdown",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/markdown/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/markdown"
        },
        {
          "path" : "/markdown/raw",
          "displayName" : "/markdown/raw",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/markdown/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/markdown/raw"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "hooks"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "git"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "query",
              "name" : "verifiable_password_authentication"
            }
          ],
          "path" : "/meta",
          "displayName" : "/meta",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/meta/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/meta"
        },
        {
          "path" : "/rate_limit",
          "displayName" : "/rate_limit",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/rate_limit/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/rate_limit"
        },
        {
          "path" : "/users/:username/orgs",
          "displayName" : "/users/:username/orgs",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/orgs/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/users/:username/orgs"
        },
        {
          "path" : "/user/orgs",
          "displayName" : "/user/orgs",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/orgs/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/user/orgs"
        },
        {
          "path" : "/orgs/:org",
          "displayName" : "/orgs/:org",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/orgs/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/orgs/:org"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "billing_email"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "company"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "email"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "location"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            }
          ],
          "path" : "/orgs/:org",
          "displayName" : "/orgs/:org",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "t" : "patch",
            "url" : "https://developer.github.com/v3/orgs/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/orgs/:org"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "filter"
            }
          ],
          "path" : "/orgs/:org/members",
          "displayName" : "/orgs/:org/members",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/orgs/members/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/orgs/:org/members"
        },
        {
          "path" : "/orgs/:org/members/:username",
          "displayName" : "/orgs/:org/members/:username",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/orgs/members/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/orgs/:org/members/:username"
        },
        {
          "path" : "/orgs/:org/members/:username",
          "displayName" : "/orgs/:org/members/:username",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/orgs/members/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/orgs/:org/members/:username"
        },
        {
          "path" : "/orgs/:org/public_members",
          "displayName" : "/orgs/:org/public_members",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/orgs/members/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/orgs/:org/public_members"
        },
        {
          "path" : "/orgs/:org/public_members/:username",
          "displayName" : "/orgs/:org/public_members/:username",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/orgs/members/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/orgs/:org/public_members/:username"
        },
        {
          "path" : "/orgs/:org/public_members/:username",
          "displayName" : "/orgs/:org/public_members/:username",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/orgs/members/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/orgs/:org/public_members/:username"
        },
        {
          "path" : "/orgs/:org/public_members/:username",
          "displayName" : "/orgs/:org/public_members/:username",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/orgs/members/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/orgs/:org/public_members/:username"
        },
        {
          "path" : "/user/memberships/orgs/:org",
          "displayName" : "/user/memberships/orgs/:org",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/orgs/members/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/user/memberships/orgs/:org"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "state"
            }
          ],
          "path" : "/user/memberships/orgs/:org",
          "displayName" : "/user/memberships/orgs/:org",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/orgs/members/",
            "t" : "patch"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/user/memberships/orgs/:org"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "state"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "head"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "base"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "direction"
            }
          ],
          "path" : "/repos/:owner/:repo/pulls",
          "displayName" : "/repos/:owner/:repo/pulls",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/pulls/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/pulls"
        },
        {
          "path" : "/repos/:owner/:repo/pulls/:number",
          "displayName" : "/repos/:owner/:repo/pulls/:number",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/pulls/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/:number"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "title"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "head"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "base"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "body"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "issue"
            }
          ],
          "path" : "/repos/:owner/:repo/pulls",
          "displayName" : "/repos/:owner/:repo/pulls",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/pulls/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/repos/:owner/:repo/pulls"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "title"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "body"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "state"
            }
          ],
          "path" : "/repos/:owner/:repo/pulls/:number",
          "displayName" : "/repos/:owner/:repo/pulls/:number",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/pulls/",
            "t" : "patch"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/:number"
        },
        {
          "path" : "/repos/:owner/:repo/pulls/:number/commits",
          "displayName" : "/repos/:owner/:repo/pulls/:number/commits",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/pulls/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/:number/commits"
        },
        {
          "path" : "/repos/:owner/:repo/pulls/:number/files",
          "displayName" : "/repos/:owner/:repo/pulls/:number/files",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/pulls/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/:number/files"
        },
        {
          "path" : "/repos/:owner/:repo/pulls/:number/merge",
          "displayName" : "/repos/:owner/:repo/pulls/:number/merge",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/pulls/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/:number/merge"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "commit_message"
            }
          ],
          "path" : "/repos/:owner/:repo/pulls/:number/merge",
          "displayName" : "/repos/:owner/:repo/pulls/:number/merge",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/pulls/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/:number/merge"
        },
        {
          "path" : "/repos/:owner/:repo/pulls/:number/comments",
          "displayName" : "/repos/:owner/:repo/pulls/:number/comments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/pulls/comments/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/:number/comments"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "direction"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "since"
            }
          ],
          "path" : "/repos/:owner/:repo/pulls/comments",
          "displayName" : "/repos/:owner/:repo/pulls/comments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/pulls/comments/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/comments"
        },
        {
          "path" : "/repos/:owner/:repo/pulls/comments/:number",
          "displayName" : "/repos/:owner/:repo/pulls/comments/:number",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/pulls/comments/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/comments/:number"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "body"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "commit_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "path"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "position"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "body"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "in_reply_to"
            }
          ],
          "path" : "/repos/:owner/:repo/pulls/:number/comments",
          "displayName" : "/repos/:owner/:repo/pulls/:number/comments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/pulls/comments/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/:number/comments"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "body"
            }
          ],
          "path" : "/repos/:owner/:repo/pulls/comments/:number",
          "displayName" : "/repos/:owner/:repo/pulls/comments/:number",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/pulls/comments/",
            "t" : "patch"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/comments/:number"
        },
        {
          "path" : "/repos/:owner/:repo/pulls/comments/:number",
          "displayName" : "/repos/:owner/:repo/pulls/comments/:number",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/pulls/comments/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/repos/:owner/:repo/pulls/comments/:number"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "direction"
            }
          ],
          "path" : "/user/repos",
          "displayName" : "/user/repos",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/user/repos"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "direction"
            }
          ],
          "path" : "/users/:username/repos",
          "displayName" : "/users/:username/repos",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/users/:username/repos"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "type"
            }
          ],
          "path" : "/orgs/:org/repos",
          "displayName" : "/orgs/:org/repos",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/orgs/:org/repos"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "since"
            }
          ],
          "path" : "/repositories",
          "displayName" : "/repositories",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repositories"
        },
        {
          "path" : "/user/repos",
          "displayName" : "/user/repos",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/user/repos"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "homepage"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "private"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "has_issues"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "has_wiki"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "has_downloads"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "team_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "auto_init"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "gitignore_template"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "license_template"
            }
          ],
          "path" : "/orgs/:org/repos",
          "displayName" : "/orgs/:org/repos",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/orgs/:org/repos"
        },
        {
          "path" : "/repos/:owner/:repo",
          "displayName" : "/repos/:owner/:repo",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo"
        },
        {
          "path" : "/repositories/:id",
          "displayName" : "/repositories/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repositories/:id"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "homepage"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "private"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "has_issues"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "has_wiki"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "has_downloads"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "default_branch"
            }
          ],
          "path" : "/repos/:owner/:repo",
          "displayName" : "/repos/:owner/:repo",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/",
            "t" : "patch"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/repos/:owner/:repo"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "anon"
            }
          ],
          "path" : "/repos/:owner/:repo/contributors",
          "displayName" : "/repos/:owner/:repo/contributors",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/contributors"
        },
        {
          "path" : "/repos/:owner/:repo/languages",
          "displayName" : "/repos/:owner/:repo/languages",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/languages"
        },
        {
          "path" : "/repos/:owner/:repo/teams",
          "displayName" : "/repos/:owner/:repo/teams",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/teams"
        },
        {
          "path" : "/repos/:owner/:repo/tags",
          "displayName" : "/repos/:owner/:repo/tags",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/tags"
        },
        {
          "path" : "/repos/:owner/:repo/branches",
          "displayName" : "/repos/:owner/:repo/branches",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/branches"
        },
        {
          "path" : "/repos/:owner/:repo/branches/:branch",
          "displayName" : "/repos/:owner/:repo/branches/:branch",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/branches/:branch"
        },
        {
          "path" : "/repos/:owner/:repo",
          "displayName" : "/repos/:owner/:repo",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/repos/:owner/:repo"
        },
        {
          "path" : "/repos/:owner/:repo/collaborators",
          "displayName" : "/repos/:owner/:repo/collaborators",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/collaborators/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/collaborators"
        },
        {
          "path" : "/repos/:owner/:repo/collaborators/:username",
          "displayName" : "/repos/:owner/:repo/collaborators/:username",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/collaborators/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/collaborators/:username"
        },
        {
          "path" : "/repos/:owner/:repo/collaborators/:username",
          "displayName" : "/repos/:owner/:repo/collaborators/:username",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/collaborators/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/repos/:owner/:repo/collaborators/:username"
        },
        {
          "displayName" : "/repos/:owner/:repo/collaborators/:username",
          "path" : "/repos/:owner/:repo/collaborators/:username",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/collaborators/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/repos/:owner/:repo/collaborators/:username"
        },
        {
          "path" : "/repos/:owner/:repo/comments",
          "displayName" : "/repos/:owner/:repo/comments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/comments/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/comments"
        },
        {
          "path" : "/repos/:owner/:repo/commits/:ref/comments",
          "displayName" : "/repos/:owner/:repo/commits/:ref/comments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/comments/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/commits/:ref/comments"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sha"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "body"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "path"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "position"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "number",
              "style" : "body",
              "name" : "line"
            }
          ],
          "path" : "/repos/:owner/:repo/commits/:sha/comments",
          "displayName" : "/repos/:owner/:repo/commits/:sha/comments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/comments/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/repos/:owner/:repo/commits/:sha/comments"
        },
        {
          "path" : "/repos/:owner/:repo/comments/:id",
          "displayName" : "/repos/:owner/:repo/comments/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/comments/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/comments/:id"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "body"
            }
          ],
          "path" : "/repos/:owner/:repo/comments/:id",
          "displayName" : "/repos/:owner/:repo/comments/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "t" : "patch",
            "url" : "https://developer.github.com/v3/repos/comments/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/repos/:owner/:repo/comments/:id"
        },
        {
          "path" : "/repos/:owner/:repo/comments/:id",
          "displayName" : "/repos/:owner/:repo/comments/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/comments/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/repos/:owner/:repo/comments/:id"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sha"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "path"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "author"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "since"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "until"
            }
          ],
          "path" : "/repos/:owner/:repo/commits",
          "displayName" : "/repos/:owner/:repo/commits",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/commits/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/commits"
        },
        {
          "path" : "/repos/:owner/:repo/commits/:sha",
          "displayName" : "/repos/:owner/:repo/commits/:sha",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/commits/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/commits/:sha"
        },
        {
          "path" : "/repos/:owner/:repo/compare/:base...:head",
          "displayName" : "/repos/:owner/:repo/compare/:base...:head",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/commits/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/compare/:base...:head"
        },
        {
          "path" : "/repos/:owner/:repo/compare/user1:branchname...user2:branchname",
          "displayName" : "/repos/:owner/:repo/compare/user1:branchname...user2:branchname",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/commits/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/compare/user1:branchname...user2:branchname"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "ref"
            }
          ],
          "path" : "/repos/:owner/:repo/readme",
          "displayName" : "/repos/:owner/:repo/readme",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/contents/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/readme"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "path"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "ref"
            }
          ],
          "path" : "/repos/:owner/:repo/contents/:path",
          "displayName" : "/repos/:owner/:repo/contents/:path",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/contents/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/contents/:path"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "path"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "message"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "content"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "branch"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "email"
            }
          ],
          "path" : "/repos/:owner/:repo/contents/:path",
          "displayName" : "/repos/:owner/:repo/contents/:path",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/contents/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/repos/:owner/:repo/contents/:path"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "path"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "message"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "content"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "sha"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "branch"
            }
          ],
          "path" : "/repos/:owner/:repo/contents/:path",
          "displayName" : "/repos/:owner/:repo/contents/:path",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/contents/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/repos/:owner/:repo/contents/:path"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : "path"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : "message"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : "sha"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : "branch"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : "email"
            }
          ],
          "path" : "/repos/:owner/:repo/contents/:path",
          "displayName" : "/repos/:owner/:repo/contents/:path",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/contents/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/repos/:owner/:repo/contents/:path"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "archive_format"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "ref"
            }
          ],
          "path" : "/repos/:owner/:repo/:archive_format/:ref",
          "displayName" : "/repos/:owner/:repo/:archive_format/:ref",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/contents/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/:archive_format/:ref"
        },
        {
          "path" : "/repos/:owner/:repo/keys",
          "displayName" : "/repos/:owner/:repo/keys",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/keys/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/keys"
        },
        {
          "path" : "/repos/:owner/:repo/keys/:id",
          "displayName" : "/repos/:owner/:repo/keys/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/keys/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/keys/:id"
        },
        {
          "path" : "/repos/:owner/:repo/keys",
          "displayName" : "/repos/:owner/:repo/keys",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/keys/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/repos/:owner/:repo/keys"
        },
        {
          "path" : "/repos/:owner/:repo/keys/:id",
          "displayName" : "/repos/:owner/:repo/keys/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/keys/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/repos/:owner/:repo/keys/:id"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sha"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "ref"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "task"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "environment"
            }
          ],
          "path" : "/repos/:owner/:repo/deployments",
          "displayName" : "/repos/:owner/:repo/deployments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/deployments/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/deployments"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "ref"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "task"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "auto_merge"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "required_contexts"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "payload"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "environment"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            }
          ],
          "path" : "/repos/:owner/:repo/deployments",
          "displayName" : "/repos/:owner/:repo/deployments",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/deployments/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/repos/:owner/:repo/deployments"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "id"
            }
          ],
          "path" : "/repos/:owner/:repo/deployments/:id/statuses",
          "displayName" : "/repos/:owner/:repo/deployments/:id/statuses",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/deployments/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/deployments/:id/statuses"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "state"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "target_url"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            }
          ],
          "path" : "/repos/:owner/:repo/deployments/:id/statuses",
          "displayName" : "/repos/:owner/:repo/deployments/:id/statuses",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/deployments/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/repos/:owner/:repo/deployments/:id/statuses"
        },
        {
          "path" : "/repos/:owner/:repo/downloads",
          "displayName" : "/repos/:owner/:repo/downloads",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/downloads/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/downloads"
        },
        {
          "path" : "/repos/:owner/:repo/downloads/:id",
          "displayName" : "/repos/:owner/:repo/downloads/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/downloads/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/downloads/:id"
        },
        {
          "path" : "/repos/:owner/:repo/downloads/:id",
          "displayName" : "/repos/:owner/:repo/downloads/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/downloads/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/repos/:owner/:repo/downloads/:id"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort"
            }
          ],
          "path" : "/repos/:owner/:repo/forks",
          "displayName" : "/repos/:owner/:repo/forks",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/forks/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/forks"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "organization"
            }
          ],
          "path" : "/repos/:owner/:repo/forks",
          "displayName" : "/repos/:owner/:repo/forks",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/forks/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/repos/:owner/:repo/forks"
        },
        {
          "path" : "/repos/:owner/:repo/hooks",
          "displayName" : "/repos/:owner/:repo/hooks",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/hooks/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/hooks"
        },
        {
          "path" : "/repos/:owner/:repo/hooks/:id",
          "displayName" : "/repos/:owner/:repo/hooks/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/hooks/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/hooks/:id"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "config"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "events"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "active"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/repos/:owner/:repo/hooks",
          "displayName" : "/repos/:owner/:repo/hooks",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/hooks/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/repos/:owner/:repo/hooks"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "config"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "events"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "add_events"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "remove_events"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "active"
            }
          ],
          "path" : "/repos/:owner/:repo/hooks/:id",
          "displayName" : "/repos/:owner/:repo/hooks/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/hooks/",
            "t" : "patch"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/repos/:owner/:repo/hooks/:id"
        },
        {
          "path" : "/repos/:owner/:repo/hooks/:id/tests",
          "displayName" : "/repos/:owner/:repo/hooks/:id/tests",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/hooks/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/repos/:owner/:repo/hooks/:id/tests"
        },
        {
          "path" : "/repos/:owner/:repo/hooks/:id/pings",
          "displayName" : "/repos/:owner/:repo/hooks/:id/pings",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/hooks/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/repos/:owner/:repo/hooks/:id/pings"
        },
        {
          "path" : "/repos/:owner/:repo/hooks/:id",
          "displayName" : "/repos/:owner/:repo/hooks/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/hooks/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/repos/:owner/:repo/hooks/:id"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "base"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "head"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "commit_message"
            }
          ],
          "path" : "/repos/:owner/:repo/merges",
          "displayName" : "/repos/:owner/:repo/merges",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/merging/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/repos/:owner/:repo/merges"
        },
        {
          "path" : "/repos/:owner/:repo/pages",
          "displayName" : "/repos/:owner/:repo/pages",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/pages/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/pages"
        },
        {
          "path" : "/repos/:owner/:repo/pages/builds",
          "displayName" : "/repos/:owner/:repo/pages/builds",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/pages/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/pages/builds"
        },
        {
          "path" : "/repos/:owner/:repo/pages/builds/latest",
          "displayName" : "/repos/:owner/:repo/pages/builds/latest",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/pages/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/pages/builds/latest"
        },
        {
          "path" : "/repos/:owner/:repo/releases",
          "displayName" : "/repos/:owner/:repo/releases",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/releases/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/releases"
        },
        {
          "path" : "/repos/:owner/:repo/releases/:id",
          "displayName" : "/repos/:owner/:repo/releases/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/releases/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/releases/:id"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "tag_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "target_commitish"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "body"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "draft"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "prerelease"
            }
          ],
          "path" : "/repos/:owner/:repo/releases",
          "displayName" : "/repos/:owner/:repo/releases",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/releases/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/repos/:owner/:repo/releases"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "tag_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "target_commitish"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "body"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "draft"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "prerelease"
            }
          ],
          "path" : "/repos/:owner/:repo/releases/:id",
          "displayName" : "/repos/:owner/:repo/releases/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/releases/",
            "t" : "patch"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/repos/:owner/:repo/releases/:id"
        },
        {
          "path" : "/repos/:owner/:repo/releases/:id",
          "displayName" : "/repos/:owner/:repo/releases/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/releases/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/repos/:owner/:repo/releases/:id"
        },
        {
          "path" : "/repos/:owner/:repo/releases/:id/assets",
          "displayName" : "/repos/:owner/:repo/releases/:id/assets",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/releases/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/releases/:id/assets"
        },
        {
          "path" : "/repos/:owner/:repo/releases/assets/:id",
          "displayName" : "/repos/:owner/:repo/releases/assets/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/releases/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/releases/assets/:id"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "label"
            }
          ],
          "path" : "/repos/:owner/:repo/releases/assets/:id",
          "displayName" : "/repos/:owner/:repo/releases/assets/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/releases/",
            "t" : "patch"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/repos/:owner/:repo/releases/assets/:id"
        },
        {
          "path" : "/repos/:owner/:repo/releases/assets/:id",
          "displayName" : "/repos/:owner/:repo/releases/assets/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/releases/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/repos/:owner/:repo/releases/assets/:id"
        },
        {
          "path" : "/repos/:owner/:repo/stats/contributors",
          "displayName" : "/repos/:owner/:repo/stats/contributors",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/statistics/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/stats/contributors"
        },
        {
          "path" : "/repos/:owner/:repo/stats/commit_activity",
          "displayName" : "/repos/:owner/:repo/stats/commit_activity",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/statistics/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/stats/commit_activity"
        },
        {
          "path" : "/repos/:owner/:repo/stats/participation",
          "displayName" : "/repos/:owner/:repo/stats/participation",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/statistics/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/stats/participation"
        },
        {
          "path" : "/repos/:owner/:repo/stats/punch_card",
          "displayName" : "/repos/:owner/:repo/stats/punch_card",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/statistics/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/stats/punch_card"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "state"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "target_url"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "context"
            }
          ],
          "path" : "/repos/:owner/:repo/statuses/:sha",
          "displayName" : "/repos/:owner/:repo/statuses/:sha",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/statuses/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/repos/:owner/:repo/statuses/:sha"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "ref"
            }
          ],
          "path" : "/repos/:owner/:repo/commits/:ref/statuses",
          "displayName" : "/repos/:owner/:repo/commits/:ref/statuses",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/statuses/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/commits/:ref/statuses"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "ref"
            }
          ],
          "path" : "/repos/:owner/:repo/commits/:ref/status",
          "displayName" : "/repos/:owner/:repo/commits/:ref/status",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/repos/statuses/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/repos/:owner/:repo/commits/:ref/status"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "q"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/search/repositories",
          "displayName" : "/search/repositories",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/search/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/search/repositories"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "q"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/search/code",
          "displayName" : "/search/code",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/search/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/search/code"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "q"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/search/issues",
          "displayName" : "/search/issues",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/search/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/search/issues"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "q"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/search/users",
          "displayName" : "/search/users",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/search/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/search/users"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "state"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "keyword"
            }
          ],
          "path" : "/legacy/issues/search/:owner/:repository/:state/:keyword",
          "displayName" : "/legacy/issues/search/:owner/:repository/:state/:keyword",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/search/legacy/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/legacy/issues/search/:owner/:repository/:state/:keyword"
        },
        {
          "path" : "/legacy/repos/search/:keyword",
          "displayName" : "/legacy/repos/search/:keyword",
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "keyword"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "language"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "start_page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/search/legacy/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/legacy/repos/search/:keyword"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "keyword"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "start_page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "sort"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "order"
            }
          ],
          "path" : "/legacy/user/search/:keyword",
          "displayName" : "/legacy/user/search/:keyword",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/search/legacy/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/legacy/user/search/:keyword"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "email"
            }
          ],
          "path" : "/legacy/user/email/:email",
          "displayName" : "/legacy/user/email/:email",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/search/legacy/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/legacy/user/email/:email"
        },
        {
          "path" : "/users/:username",
          "displayName" : "/users/:username",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/users/:username"
        },
        {
          "path" : "/user",
          "displayName" : "/user",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/user"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "email"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "blog"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "company"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "location"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "boolean",
              "style" : "body",
              "name" : "hireable"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "bio"
            }
          ],
          "path" : "/user",
          "displayName" : "/user",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/",
            "t" : "patch"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/user"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "since"
            }
          ],
          "path" : "/users",
          "displayName" : "/users",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/users"
        },
        {
          "path" : "/user/emails",
          "displayName" : "/user/emails",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/emails/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/user/emails"
        },
        {
          "path" : "/user/emails",
          "displayName" : "/user/emails",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/emails/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/user/emails"
        },
        {
          "path" : "/user/emails",
          "displayName" : "/user/emails",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/emails/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/user/emails"
        },
        {
          "path" : "/users/:username/followers",
          "displayName" : "/users/:username/followers",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/followers/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/users/:username/followers"
        },
        {
          "path" : "/user/followers",
          "displayName" : "/user/followers",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/followers/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/user/followers"
        },
        {
          "path" : "/users/:username/following",
          "displayName" : "/users/:username/following",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/followers/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/users/:username/following"
        },
        {
          "path" : "/user/following",
          "displayName" : "/user/following",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/followers/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/user/following"
        },
        {
          "path" : "/user/following/:username",
          "displayName" : "/user/following/:username",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/followers/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/user/following/:username"
        },
        {
          "path" : "/users/:username/following/:target_user",
          "displayName" : "/users/:username/following/:target_user",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/followers/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/users/:username/following/:target_user"
        },
        {
          "path" : "/user/following/:username",
          "displayName" : "/user/following/:username",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/followers/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/user/following/:username"
        },
        {
          "path" : "/user/following/:username",
          "displayName" : "/user/following/:username",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/followers/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/user/following/:username"
        },
        {
          "path" : "/users/:username/keys",
          "displayName" : "/users/:username/keys",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/keys/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/users/:username/keys"
        },
        {
          "path" : "/user/keys",
          "displayName" : "/user/keys",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/keys/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/user/keys"
        },
        {
          "path" : "/user/keys/:id",
          "displayName" : "/user/keys/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/keys/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/user/keys/:id"
        },
        {
          "path" : "/user/keys",
          "displayName" : "/user/keys",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/keys/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/user/keys"
        },
        {
          "path" : "/user/keys/:id",
          "displayName" : "/user/keys/:id",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/keys/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/user/keys/:id"
        },
        {
          "path" : "/user/:username/site_admin",
          "displayName" : "/user/:username/site_admin",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/administration/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/user/:username/site_admin"
        },
        {
          "path" : "/user/:username/site_admin",
          "displayName" : "/user/:username/site_admin",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/administration/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/user/:username/site_admin"
        },
        {
          "path" : "/user/:username/suspended",
          "displayName" : "/user/:username/suspended",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/administration/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/user/:username/suspended"
        },
        {
          "path" : "/user/:username/suspended",
          "displayName" : "/user/:username/suspended",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/users/administration/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/user/:username/suspended"
        },
        {
          "path" : "/enterprise/stats/:type",
          "displayName" : "/enterprise/stats/:type",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/enterprise/admin_stats/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/enterprise/stats/:type"
        },
        {
          "path" : "/enterprise/settings/license",
          "displayName" : "/enterprise/settings/license",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/enterprise/license/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/enterprise/settings/license"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "target"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : ""
            }
          ],
          "path" : "/staff/indexing_jobs",
          "displayName" : "/staff/indexing_jobs",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/enterprise/search_indexing/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/staff/indexing_jobs"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "license"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "package"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "settings"
            }
          ],
          "path" : "/setup/api/start",
          "displayName" : "/setup/api/start",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/enterprise/management_console/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/setup/api/start"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "license"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "package"
            }
          ],
          "path" : "/setup/api/upgrade",
          "displayName" : "/setup/api/upgrade",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/enterprise/management_console/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/setup/api/upgrade"
        },
        {
          "path" : "/setup/api/configcheck",
          "displayName" : "/setup/api/configcheck",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/enterprise/management_console/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/setup/api/configcheck"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "complete"
            }
          ],
          "path" : "/setup/api/configure",
          "displayName" : "/setup/api/configure",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/enterprise/management_console/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/setup/api/configure"
        },
        {
          "path" : "/setup/api/settings",
          "displayName" : "/setup/api/settings",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/enterprise/management_console/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/setup/api/settings"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "settings"
            }
          ],
          "path" : "/setup/api/settings",
          "displayName" : "/setup/api/settings",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/enterprise/management_console/"
          },
          "httpMethod" : "PUT",
          "url" : "https://api.github.com/setup/api/settings"
        },
        {
          "path" : "/setup/api/maintenance",
          "displayName" : "/setup/api/maintenance",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/enterprise/management_console/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/setup/api/maintenance"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "maintenance"
            }
          ],
          "path" : "/setup/api/maintenance",
          "displayName" : "/setup/api/maintenance",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/enterprise/management_console/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/setup/api/maintenance"
        },
        {
          "path" : "/setup/api/settings/authorized-keys",
          "displayName" : "/setup/api/settings/authorized-keys",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/enterprise/management_console/"
          },
          "httpMethod" : "GET",
          "url" : "https://api.github.com/setup/api/settings/authorized-keys"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "authorized_key"
            }
          ],
          "path" : "/setup/api/settings/authorized-keys",
          "displayName" : "/setup/api/settings/authorized-keys",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/enterprise/management_console/"
          },
          "httpMethod" : "POST",
          "url" : "https://api.github.com/setup/api/settings/authorized-keys"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "",
              "name" : "authorized_key"
            }
          ],
          "path" : "/setup/api/settings/authorized-keys",
          "displayName" : "/setup/api/settings/authorized-keys",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://developer.github.com/v3/enterprise/management_console/"
          },
          "httpMethod" : "DELETE",
          "url" : "https://api.github.com/setup/api/settings/authorized-keys"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://developer.github.com/v3/",
    "enabled" : true,
    "logo" : "http://www.revive-adserver.com/media/GitHub.jpg",
    "name" : "Github",
    "type" : "channel:github"
  },
  {
    "_id" : "541230cd03f1d8b163401371",
    "__v" : 0,
    "application" : {
      "base" : "https://www.googleapis.com/drive/v2",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://developers.google.com/drive/v2/reference/files/get"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/files/fileId",
          "path" : "/files/fileId",
          "params" : [
            {
              "name" : "fileId",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "projection",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "updateViewedDate",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://www.googleapis.com/drive/v2/files/fileId"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://developers.google.com/drive/v2/reference",
    "enabled" : true,
    "logo" : "http://howsecure.com/wp-content/uploads/2013/03/Google-Drive-Logo.jpg",
    "name" : "Google Drive",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:google_drive"
  },
  {
    "_id" : "532b67ab98a9690b58864076",
    "owner" : "5d6e9c91-820e-11e3-a399-f5b85b6b9fd0",
    "auth_strategy" : "",
    "logo" : "",
    "name" : "",
    "description" : "",
    "documentation" : "",
    "enabled" : true,
    "application" : {
      "base" : "",
      "resources" : [ ]
    },
    "custom_tokens" : [ ],
    "__v" : 0,
    "type" : "channel:"
  },
  {
    "_id" : "532b67e098a9690b58864077",
    "owner" : "5d6e9c91-820e-11e3-a399-f5b85b6b9fd0",
    "auth_strategy" : "",
    "logo" : "",
    "name" : "",
    "description" : "",
    "documentation" : "",
    "enabled" : true,
    "application" : {
      "base" : "",
      "resources" : [ ]
    },
    "custom_tokens" : [ ],
    "__v" : 0,
    "type" : "channel:"
  },
  {
    "_id" : "532b62b498a9690b58864075",
    "owner" : "5d6e9c91-820e-11e3-a399-f5b85b6b9fd0",
    "auth_strategy" : "",
    "logo" : "",
    "name" : "",
    "description" : "",
    "documentation" : "",
    "enabled" : true,
    "application" : {
      "base" : "",
      "resources" : [ ]
    },
    "custom_tokens" : [ ],
    "__v" : 0,
    "type" : "channel:"
  },
  {
    "_id" : "53bed2e8cd172ffc1a95ab60",
    "__v" : 0,
    "application" : {
      "base" : "demoAPI.com",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "Demoapi.com/getdata",
            "t" : "Demo API Get Data"
          },
          "authentication" : {

          },
          "displayName" : "Get Data",
          "path" : "Demo",
          "curl" : "Demo",
          "url" : "demoAPI.comDemo"
        }
      ]
    },
    "auth_strategy" : "basic",
    "custom_tokens" : [ ],
    "description" : "DEMO API",
    "documentation" : "DemoAPI.com/DemoDoc",
    "enabled" : true,
    "logo" : "DemoAPI.com/DEMO.png",
    "name" : "Demo API",
    "owner" : "5c2dd8d1-f254-11e3-ba2e-0b078550b2fe",
    "type" : "channel:demo_api"
  },
  {
    "_id" : "53c403b467605b33c1d4b09b",
    "name" : "Nest",
    "auth_strategy" : "oauth",
    "documentation" : "https://developer.nest.com/documentation",
    "enabled" : true,
    "useCustom" : true,
    "logo" : "https://nest.com/images/social/nest_thermostat_share_icon.jpg",
    "oauth" : {
      "production" : {
        "version" : "2.0",
        "clientId" : "7b86404d-c06d-4890-9671-e878216761da",
        "secret" : "AIDRmuhzwphNP2zV7GzrLbWCm",
        "authTokenURL" : "https://home.nest.com/login/oauth2",
        "baseURL" : "https://home.nest.com",
        "authTokenPath" : "/login/oauth2",
        "key" : "",
        "accessTokenURL" : "https://api.home.nest.com/oauth2/access_token",
        "requestTokenURL" : "",
        "isManual" : true,
        "scope" : "",
        "protocol" : "https",
        "host" : "home.nest.com",
        "grant_type" : "authorization_code",
        "accessTokenIncludeClientInfo" : true,
        "tokenQueryParam" : "auth",
        "tokenMethod" : "access_token_query",
        "passTokenInQuery" : true,
        "useOAuthLib" : false
      },
      "development" : {
        "version" : "2.0",
        "clientId" : "e7fc0b28-b6e0-4a1f-a441-ac699d95a779",
        "secret" : "rjjkqCP39AFIOZv6tmE1uhK3q",
        "authTokenURL" : "https://home.nest.com/login/oauth2",
        "baseURL" : "https://home.nest.com",
        "authTokenPath" : "/login/oauth2",
        "key" : "",
        "accessTokenURL" : "https://api.home.nest.com/oauth2/access_token",
        "requestTokenURL" : "",
        "isManual" : true,
        "scope" : "",
        "protocol" : "https",
        "host" : "home.nest.com",
        "grant_type" : "authorization_code",
        "accessTokenIncludeClientInfo" : true,
        "tokenQueryParam" : "auth",
        "tokenMethod" : "access_token_query",
        "passTokenInQuery" : true,
        "useOAuthLib" : false
      }
    },
    "application" : {
      "resources" : [
        {
          "httpMethod" : "GET",
          "fullURL" : "https://developer-api.nest.com/devices.json",
          "path" : "/devices.json",
          "displayName" : "/devices.json",
          "doc" : {
            "t" : "Retrieves information about your Nest devices."
          },
          "url" : "https://developer-api.nest.com/devices.json"
        },
        {
          "httpMethod" : "PUT",
          "fullURL" : "https://developer-api.nest.com/structures/:device_id",
          "path" : "/structures/:device_id",
          "displayName" : "/structures/:device_id",
          "doc" : {
            "t" : "Update information on your Nest devices."
          },
          "params" : [
            {
              "name" : ":device_id",
              "required" : true,
              "style" : "url",
              "doc" : {
                "t" : "Device Id"
              }
            },
            {
              "name" : "locale",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : "en-US"
              }
            },
            {
              "name" : "software_version",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : "4.0"
              }
            },
            {
              "name" : "structure_id",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : "VqFabWH21nwVyd4RWgJgNb292wa7hG_dUwo2i2SG7j3-BOLY0BA4sw"
              }
            },
            {
              "name" : "name",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : "Hallway (upstairs)"
              }
            },
            {
              "name" : "name_long",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : "Hallway Thermostat (upstairs)"
              }
            },
            {
              "name" : "last_connection",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : "2014-03-02T23:20:19+00:00"
              }
            },
            {
              "name" : "is_online",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : true
              }
            },
            {
              "name" : "can_cool",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : true
              }
            },
            {
              "name" : "can_heat",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : true
              }
            },
            {
              "name" : "is_using_emergency_heat",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : true
              }
            },
            {
              "name" : "has_fan",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : true
              }
            },
            {
              "name" : "fan_timer_active",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : true
              }
            },
            {
              "name" : "fan_timer_timeout",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : "2014-03-02T23:20:19+00:00"
              }
            },
            {
              "name" : "has_leaf",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : true
              }
            },
            {
              "name" : "temperature_scale",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : "C"
              }
            },
            {
              "name" : "target_temperature_f",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : 72
              }
            },
            {
              "name" : "target_temperature_c",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : 21.5
              }
            },
            {
              "name" : "target_temperature_high_f",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : 72
              }
            },
            {
              "name" : "target_temperature_high_c",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : 21.5
              }
            },
            {
              "name" : "target_temperature_low_f",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : 64
              }
            },
            {
              "name" : "target_temperature_low_c",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : 17.5
              }
            },
            {
              "name" : "away_temperature_high_f",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : 72
              }
            },
            {
              "name" : "away_temperature_high_c",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : 21.5
              }
            },
            {
              "name" : "away_temperature_low_f",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : 64
              }
            },
            {
              "name" : "away_temperature_low_c",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : 17.5
              }
            },
            {
              "name" : "hvac_mode",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : "heat"
              }
            },
            {
              "name" : "ambient_temperature_f",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : 72
              }
            },
            {
              "name" : "ambient_temperature_c",
              "required" : false,
              "style" : "body",
              "doc" : {
                "t" : 21
              }
            }
          ],
          "url" : "https://developer-api.nest.com/structures/:device_id"
        }
      ],
      "base" : "https://developer-api.nest.com"
    },
    "requestTokenURL" : "",
    "type" : "channel:nest"
  },
  {
    "_id" : "52f97cc5a9909344830004ec",
    "application" : {
      "base" : "http://api.fitbit.com/1",
      "resources" : [
        {
          "path" : "/user/-/activities/frequent.json",
          "doc" : {
            "t" : "Get a list of a user's frequent activities in the format requested using units in the unit system which corresponds to the Accept-Language header provided. A frequent activity record contains the distance and duration values recorded the last time the activity was logged. The record retrieved can therefore be used to log the activity via the Log Activity with the same or adjusted values for distance and duration.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Frequent-Activities"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/-/activities/frequent.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ACTIVITIES",
          "displayName" : "ACTIVITIES_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/-/activities/frequent.json"
        },
        {
          "path" : "/user/{user-id}/activities/date/{date}.json",
          "doc" : {
            "t" : "Get a summary and list of a user's activities and activity log entries for a given day in the format requested using units in the unit system which corresponds to the Accept-Language header provided.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Activities"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/{user-id}/activities/date/{date}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ACTIVITIES",
          "displayName" : "ACTIVITIES_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/{user-id}/activities/date/{date}.json"
        },
        {
          "path" : "/user/-/activities.json",
          "doc" : {
            "t" : "Create log entry for an activity using units in the unit system which corresponds to the Accept-Language header provided (or using optional custom distanceUnit).",
            "url" : "http://wiki.fitbit.com/display/API/API-Log-Activity"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.fitbit.com/1/user/-/activities.{format}?activityId=90009&startTime=12:20&durationMillis=600000&date=2011-07-11&distance=1.5",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ACTIVITIES",
          "displayName" : "ACTIVITIES_POST",
          "httpMethod" : "POST",
          "url" : "http://api.fitbit.com/1/user/-/activities.json"
        },
        {
          "path" : "/user/-/activities/log/favorite/{id}.json",
          "doc" : {
            "t" : "Delete the activity with the given id from user's list of favorite activities.",
            "url" : "http://wiki.fitbit.com/display/API/API-Delete-Favorite-Activity"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://api.fitbit.com/1/user/-/activities/log/favorite/90009.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ACTIVITIES",
          "displayName" : "ACTIVITIES_DELETE",
          "httpMethod" : "DELETE",
          "url" : "http://api.fitbit.com/1/user/-/activities/log/favorite/{id}.json"
        },
        {
          "path" : "/user/-/activities/log/favorite/{id}.json",
          "doc" : {
            "t" : "Adds the activity with the given id to user's list of favorite activities.",
            "url" : "http://wiki.fitbit.com/display/API/API-Add-Favorite-Activity"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.fitbit.com/1/user/-/activities/log/favorite/90009.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ACTIVITIES",
          "displayName" : "ACTIVITIES_POST",
          "httpMethod" : "POST",
          "url" : "http://api.fitbit.com/1/user/-/activities/log/favorite/{id}.json"
        },
        {
          "path" : "/user/-/activities/{activity-log-id}.json",
          "doc" : {
            "t" : "Delete user's activity log entry with the given id.",
            "url" : "http://wiki.fitbit.com/display/API/API-Delete-Activity-Log"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://api.fitbit.com/1/user/-/activites/{activity-log-id}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ACTIVITIES",
          "displayName" : "ACTIVITIES_DELETE",
          "httpMethod" : "DELETE",
          "url" : "http://api.fitbit.com/1/user/-/activities/{activity-log-id}.json"
        },
        {
          "path" : "/user/-/activities.json",
          "doc" : {
            "t" : "Get user's activity statistics in the format requested using units in the unit system which corresponds to the Accept-Language header provided. Response contains both lifetime statistics from the tracker device and total numbers including the manual activity log entries as seen on the Fitbit website dashboard.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Activity-Stats"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/-/activities.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ACTIVITIES",
          "displayName" : "ACTIVITIES_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/-/activities.json"
        },
        {
          "path" : "/user/{user-id}/activities/log/calories/date/{start-date|end-date}/{end-date|period}.json",
          "doc" : {
            "t" : "Get time series in the specified range for a given resource in the format requested using units in the unit system which corresponds to the Accept-Language header provided.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Time-Series"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/{user-id}/activities/log/calories/date/{end-date}/7d.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ACTIVITIES",
          "displayName" : "ACTIVITIES_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/{user-id}/activities/log/calories/date/{start-date|end-date}/{end-date|period}.json"
        },
        {
          "path" : "/user/-/activities/recent.json",
          "doc" : {
            "t" : "Get a list of a user's recent activities in the format requested using units in the unit system which corresponds to the Accept-Language header provided. A recent activity record contains the distance and duration values recorded the last time the activity was logged. The record retrieved can therefore be used to log the activity via the Log Activity with the same or adjusted values for distance and duration.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Recent-Activities"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/-/activities/recent.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ACTIVITIES",
          "displayName" : "ACTIVITIES_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/-/activities/recent.json"
        },
        {
          "path" : "/user/-/activities/favorite.json",
          "doc" : {
            "t" : "Get a list of a user's favorite activities in the format requested. A user marks an activity as favorite on the user's Activities Tab. The activity ids in the list can be used to create a new activity log entry via the Log Activity.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Recent-Activities"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/-/activities/favorite.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ACTIVITIES",
          "displayName" : "ACTIVITIES_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/-/activities/favorite.json"
        },
        {
          "path" : "/user/{user-id}/body/weight/date/{start-date|end-date}/{end-date|period}.json",
          "doc" : {
            "t" : "Get time series in the specified range for a given resource in the format requested using units in the unit system which corresponds to the Accept-Language header provided.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Time-Series"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/{user-id}/body/weight/date/{end-date}/7d.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "BODY",
          "displayName" : "BODY_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/{user-id}/body/weight/date/{start-date|end-date}/{end-date|period}.json"
        },
        {
          "path" : "/user/{user-id}/body/date/{date}.json",
          "doc" : {
            "t" : "Get a summary of a user's body measurements for a given day in the format requested using units in the unit system which corresponds to the Accept-Language header provided.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Body-Measurements"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/{user-id}/body/date/{date}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "BODY",
          "displayName" : "BODY_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/{user-id}/body/date/{date}.json"
        },
        {
          "path" : "/user/-/body.json",
          "doc" : {
            "t" : "Log body measurements using units in the unit system that corresponds to the Accept-Language header provided.",
            "url" : "http://wiki.fitbit.com/display/API/API-Log-Body-Measurements"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.fitbit.com/1/user/-/body.{format}?date=2011-10-27&weight=150&fat=14.4",
          "authentication" : {
            "required" : "true"
          },
          "category" : "BODY",
          "displayName" : "BODY_POST",
          "httpMethod" : "POST",
          "url" : "http://api.fitbit.com/1/user/-/body.json"
        },
        {
          "path" : "/user/-/bp.json",
          "doc" : {
            "t" : "Create log entry for a blood pressure measurement and get a response in the format requested.",
            "url" : "http://wiki.fitbit.com/display/API/API-Log-Blood-Pressure"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.fitbit.com/1/user/-/bp.{format}?systolic=120&diastolic=80&date=2011-07-06",
          "authentication" : {
            "required" : "true"
          },
          "category" : "BP",
          "displayName" : "BP_POST",
          "httpMethod" : "POST",
          "url" : "http://api.fitbit.com/1/user/-/bp.json"
        },
        {
          "path" : "/user/-/bp/{bp-log-id}.json",
          "doc" : {
            "t" : "Delete user's blood pressure log entry with the given id.",
            "url" : "http://wiki.fitbit.com/display/API/API-Delete-Blood-Pressure-Log"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://api.fitbit.com/1/user/-/bp/{bp-log-id}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "BP",
          "displayName" : "BP_DELETE",
          "httpMethod" : "DELETE",
          "url" : "http://api.fitbit.com/1/user/-/bp/{bp-log-id}.json"
        },
        {
          "path" : "/user/-/bp/date/{date}.json",
          "doc" : {
            "t" : "Get an average value and a list of user's blood pressure log entries for a given day in the format requested. Blood pressure log entries are available only to authorized user. Blood pressure log entries in response are sorted exactly the same as they are presented on the Fitbit website.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Blood-Pressure"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/-/bp/date/{date}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "BP",
          "displayName" : "BP_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/-/bp/date/{date}.json"
        },
        {
          "path" : "/user/-/devices.json",
          "doc" : {
            "t" : "Retrieve the list of Fitbit devices for a user in the format requested.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Devices"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/-/devices.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "DEVICES",
          "displayName" : "DEVICES_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/-/devices.json"
        },
        {
          "path" : "/user/-/foods/log/frequent.json",
          "doc" : {
            "t" : "Get a list of a user's frequent foods in the format requested. A frequent food in the list provides a quick way to log the food via the Log Food endpoint.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Frequent-Foods"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/-/foods/log/frequent.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FOODS",
          "displayName" : "FOODS_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/-/foods/log/frequent.json"
        },
        {
          "path" : "/user/{user-id}/foods/log/date/{date}.json",
          "doc" : {
            "t" : "Get a summary and list of a user's food log entries for a given day in the format requested.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Foods"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/{user-id}/foods/log/date/{date}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FOODS",
          "displayName" : "FOODS_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/{user-id}/foods/log/date/{date}.json"
        },
        {
          "path" : "/foods.json",
          "doc" : {
            "t" : "Create new private food for a user and get a response in a format requested. Created private food could be found in results of Search Foods call.",
            "url" : "http://wiki.fitbit.com/display/API/API-Create-Food"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.fitbit.com/1/foods.{format}?name=Icecream,big&defaultFoodMeasurementUnitId=147&defaultServingSize=1&calories=500",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FOODS",
          "displayName" : "FOODS_POST",
          "httpMethod" : "POST",
          "url" : "http://api.fitbit.com/1/foods.json"
        },
        {
          "path" : "/user/-/foods/log/water/{water-log-id}.json",
          "doc" : {
            "t" : "Delete user's water log entry with the given id.",
            "url" : "http://wiki.fitbit.com/display/API/Delete-Water-Log"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://api.fitbit.com/1/user/-/foods/log/water/{water-log-id}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FOODS",
          "displayName" : "FOODS_DELETE",
          "httpMethod" : "DELETE",
          "url" : "http://api.fitbit.com/1/user/-/foods/log/water/{water-log-id}.json"
        },
        {
          "path" : "/user/-/foods/log/{food-log-id}.json",
          "doc" : {
            "t" : "Delete the user's food log entry with the given id.",
            "url" : "http://wiki.fitbit.com/display/API/API-Delete-Food-Log"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://api.fitbit.com/1/user/-/foods/log/{food-log-id}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FOODS",
          "displayName" : "FOODS_DELETE",
          "httpMethod" : "DELETE",
          "url" : "http://api.fitbit.com/1/user/-/foods/log/{food-log-id}.json"
        },
        {
          "path" : "/user/-/foods/log/water/date/{date}.json",
          "doc" : {
            "t" : "Get a summary and list of a user's water log entries for a given day in the format requested using units in the unit system which corresponds to the Accept-Language header provided.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Water"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/-/foods/log/water/date/{date}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FOODS",
          "displayName" : "FOODS_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/-/foods/log/water/date/{date}.json"
        },
        {
          "path" : "/user/-/foods/log/water.json",
          "doc" : {
            "t" : "Create log entry for a water using units in the unit system that corresponds to the Accept-Language header provided (or waterUnit) and get a response in the format requested.",
            "url" : "http://wiki.fitbit.com/display/API/API-Log-Water"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.fitbit.com/1/user/-/foods/log/water.{format}?amount=300&date=2011-07-06",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FOODS",
          "displayName" : "FOODS_POST",
          "httpMethod" : "POST",
          "url" : "http://api.fitbit.com/1/user/-/foods/log/water.json"
        },
        {
          "path" : "/user/-/foods/log/favorite/{id}.json",
          "doc" : {
            "t" : "Delete the food with the given id from user's list of favorite foods.",
            "url" : "http://wiki.fitbit.com/display/API/API-Delete-Favorite-Food"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://api.fitbit.com/1/user/-/foods/log/favorite/30414.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FOODS",
          "displayName" : "FOODS_DELETE",
          "httpMethod" : "DELETE",
          "url" : "http://api.fitbit.com/1/user/-/foods/log/favorite/{id}.json"
        },
        {
          "path" : "/user/-/foods/log.json",
          "doc" : {
            "t" : "Create log entry for a food. You need to select one of the unit ids to create a food log entry. It is possible to fetch unit ids allowed for specific food via previous calls to endpoints that retrieve food lists of the user. Each unit id maps to a unit in the list returned via the Get Food Units API call.",
            "url" : "http://wiki.fitbit.com/display/API/API-Log-Food"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.fitbit.com/1/user/-/foods/log.{format}?foodId=30414&mealTypeId=1&unitId=147&amount=1&date=2011-07-06",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FOODS",
          "displayName" : "FOODS_POST",
          "httpMethod" : "POST",
          "url" : "http://api.fitbit.com/1/user/-/foods/log.json"
        },
        {
          "path" : "/user/-/foods/log/favorite/{id}.json",
          "doc" : {
            "t" : "Add the food with the given id to user's list of favorite foods.",
            "url" : "http://wiki.fitbit.com/display/API/API-Add-Favorite-Food"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.fitbit.com/1/user/-/foods/log/favorite/30414.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FOODS",
          "displayName" : "FOODS_POST",
          "httpMethod" : "POST",
          "url" : "http://api.fitbit.com/1/user/-/foods/log/favorite/{id}.json"
        },
        {
          "path" : "/user/-/foods/log/recent.json",
          "doc" : {
            "t" : "Get a list of a user's recent foods in the format requested. A recent food provides a quick way to log the food via the Log Food endpoint.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Recent-Foods"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/-/foods/log/recent.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FOODS",
          "displayName" : "FOODS_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/-/foods/log/recent.json"
        },
        {
          "path" : "/user/{user-id}/foods/log/caloriesIn/date/{start-date|end-date}/{end-date|period}.json",
          "doc" : {
            "t" : "Get time series in the specified range for a given resource in the format requested using units in the unit system which corresponds to the Accept-Language header provided.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Time-Series"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/{user-id}/foods/log/caloriesIn/date/{end-date}/7d.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FOODS",
          "displayName" : "FOODS_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/{user-id}/foods/log/caloriesIn/date/{start-date|end-date}/{end-date|period}.json"
        },
        {
          "path" : "/user/-/activities/favorite.json",
          "doc" : {
            "t" : "Get a list of a user's favorite foods in the format requested. A user marks a food as favorite on the user's Food Tab tab. A favorite food in the list provides a quick way to log the food via the Log Food endpoint.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Favorite-Foods"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/-/foods/log/favorite.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FOODS",
          "displayName" : "FOODS_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/-/activities/favorite.json"
        },
        {
          "path" : "/foods/{food-id}.json",
          "doc" : {
            "t" : "Get the details of a specific food in Fitbit Food database (or private food for the user) in the format requested. Note, that nutritional values currently included in response only for the private foods.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Food"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/foods/30414.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "GENERAL",
          "displayName" : "GENERAL_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/foods/{food-id}.json"
        },
        {
          "path" : "/activities.json",
          "doc" : {
            "t" : "Get a tree of all valid Fitbit public activities from the activities catalog as well as private custom activities the user created in the format requested. If activity has levels, also get a list of activity level details.",
            "url" : "http://wiki.fitbit.com/display/API/API-Browse-Activities"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/activities.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "GENERAL",
          "displayName" : "GENERAL_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/activities.json"
        },
        {
          "path" : "/activities/{id}.json",
          "doc" : {
            "t" : "Get the details of a specific activity in Fitbit activities database in the format requested. If activity has levels, also get list of activity level details.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Activity"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/activities/90009.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "GENERAL",
          "displayName" : "GENERAL_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/activities/{id}.json"
        },
        {
          "path" : "/foods/search.json?query={query}",
          "doc" : {
            "t" : "Given a search query, get a list of public foods from Fitbit foods database and private foods the user created in the format requested.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Activity"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/foods/search.{format}?query=Icecream",
          "authentication" : {
            "required" : "true"
          },
          "category" : "GENERAL",
          "displayName" : "GENERAL_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/foods/search.json?query={query}"
        },
        {
          "path" : "/foods/units.json",
          "doc" : {
            "t" : "Get list of all valid Fitbit food units in the format requested.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Food-Units"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/foods/units.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "GENERAL",
          "displayName" : "GENERAL_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/foods/units.json"
        },
        {
          "path" : "/user/-/glucose/date/{date}.json",
          "doc" : {
            "t" : "Get a list of user's blood glucose and HbA1C measurements for a given day in the format requested using units in the unit system which corresponds to the Accept-Language header provided. Glucose measurement log entries are available only to authorized user. We always include all glucose trackers in the response body (with zero glucose value for the days with no measurements) to allow to seamlessly fetch a list of all additional user created custom trackers.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Glucose"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/-/glucose/date/{date}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "GLUCOSE",
          "displayName" : "GLUCOSE_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/-/glucose/date/{date}.json"
        },
        {
          "path" : "/user/-/glucose.json",
          "doc" : {
            "t" : "Create log entry for a blood glucose measurement and/or HbA1c using units in the unit system which corresponds to the Accept-Language header provided and get a response in the format requested.",
            "url" : "http://wiki.fitbit.com/display/API/API-Log-Glucose"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.fitbit.com/1/user/-/glucose.{format}?hba1c=4.5&tracker=Afternoon&glucose=3&time=12:30&date=2011-07-06",
          "authentication" : {
            "required" : "true"
          },
          "category" : "GLUCOSE",
          "displayName" : "GLUCOSE_POST",
          "httpMethod" : "POST",
          "url" : "http://api.fitbit.com/1/user/-/glucose.json"
        },
        {
          "path" : "/user/-/heart.json",
          "doc" : {
            "t" : "Create log entry for a heart rate measurement and get a response in the format requested.",
            "url" : "http://wiki.fitbit.com/display/API/API-Log-Heart-Rate"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.fitbit.com/1/user/-/heart.{format}?tracker=Running&heartRate=80&date=2011-07-06",
          "authentication" : {
            "required" : "true"
          },
          "category" : "HEART",
          "displayName" : "HEART_POST",
          "httpMethod" : "POST",
          "url" : "http://api.fitbit.com/1/user/-/heart.json"
        },
        {
          "path" : "/user/-/heart/date/{date}.json",
          "doc" : {
            "t" : "Get an average values and a list of user's heart rate log entries for a given day in the format requested. Heart rate data available only to the authorized user. Heart rate log entries in response are sorted exactly the same as they are presented on the Fitbit website. We always include all heart rate trackers in the \"average\" section of the response body (with zero average values for the days with no measurements) to allow to seamlessly fetch a list of all additional user created custom trackers.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Heart-Rate"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/-/heart/date/{date}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "HEART",
          "displayName" : "HEART_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/-/heart/date/{date}.json"
        },
        {
          "path" : "/user/-/heart/{heart-log-id}.json",
          "doc" : {
            "t" : "Delete user's heart rate log entry with the given id.",
            "url" : "http://wiki.fitbit.com/display/API/API-Delete-Heart-Rate-Log"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://api.fitbit.com/1/user/-/heart/{heart-log-id}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "HEART",
          "displayName" : "HEART_DELETE",
          "httpMethod" : "DELETE",
          "url" : "http://api.fitbit.com/1/user/-/heart/{heart-log-id}.json"
        },
        {
          "path" : "/user/-/profile.json",
          "doc" : {
            "t" : "Update user's profile using units in the unit system that corresponds to the Accept-Language header provided and get a response in the format requested.",
            "url" : "http://wiki.fitbit.com/display/API/API-Update-User-Info"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.fitbit.com/1/user/-/profile.{format}?gender=FEMALE",
          "authentication" : {
            "required" : "true"
          },
          "category" : "PROFILE",
          "displayName" : "PROFILE_POST",
          "httpMethod" : "POST",
          "url" : "http://api.fitbit.com/1/user/-/profile.json"
        },
        {
          "path" : "/user/{user-id}/profile.json",
          "doc" : {
            "t" : "Get user's profile in the format requested using units in the unit system which corresponds to the Accept-Language header provided.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-User-Info"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/{user-id}/profile.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "PROFILE",
          "displayName" : "PROFILE_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/{user-id}/profile.json"
        },
        {
          "path" : "/user/-/sleep/{sleep-log-id}.json",
          "doc" : {
            "t" : "Delete user's sleep log entry with the given id.",
            "url" : "http://wiki.fitbit.com/display/API/Delete-Sleep-Log"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://api.fitbit.com/1/user/-/sleep/{sleep-log-id}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "SLEEP",
          "displayName" : "SLEEP_DELETE",
          "httpMethod" : "DELETE",
          "url" : "http://api.fitbit.com/1/user/-/sleep/{sleep-log-id}.json"
        },
        {
          "path" : "/user/{user-id}/sleep/date/{date}.json",
          "doc" : {
            "t" : "Get a summary and list of a user's sleep log entries for a given day in the format requested. Endpoint returns summary for all sleep log entries for the given day (including naps). If you need data only for the main sleep you can fetch entry with \"isMainSleep\" = true or use Get-Time-Series calls.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Sleep"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/{user-id}/sleep/date/{date}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "SLEEP",
          "displayName" : "SLEEP_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/{user-id}/sleep/date/{date}.json"
        },
        {
          "path" : "/user/{user-id}/sleep/minutesAsleep/date/{start-date|end-date}/{end-date|period}.json",
          "doc" : {
            "t" : "Get time series in the specified range for a given resource in the format requested using units in the unit system which corresponds to the Accept-Language header provided.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Time-Series"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/{user-id}/sleep/minutesAsleep/date/{end-date}/7d.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "SLEEP",
          "displayName" : "SLEEP_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/{user-id}/sleep/minutesAsleep/date/{start-date|end-date}/{end-date|period}.json"
        },
        {
          "path" : "/user/-/sleep.json",
          "doc" : {
            "t" : "Create log entry for a sleep and get a response in the format requested.",
            "url" : "http://wiki.fitbit.com/display/API/API-Log-Sleep"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.fitbit.com/1/user/-/sleep.{format}?startTime=08:20&duration=24000000&date=2011-07-06",
          "authentication" : {
            "required" : "true"
          },
          "category" : "SLEEP",
          "displayName" : "SLEEP_POST",
          "httpMethod" : "POST",
          "url" : "http://api.fitbit.com/1/user/-/sleep.json"
        },
        {
          "path" : "/user/{user-id}/friends.json",
          "doc" : {
            "t" : "Get user's friends in the format requested using units in the unit system which corresponds to the Accept-Language header provided.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Friends"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/{user-id}/friends.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "SOCIAL",
          "displayName" : "SOCIAL_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/{user-id}/friends.json"
        },
        {
          "path" : "/user/-/friends/invitations.json",
          "doc" : {
            "t" : "Invite a user to become friends with authorized user. If you provide invitedUserEmail parameter with the request, standard friendship invitation email will be sent to the invited user, that he can accept later. Contrary, invitedUserId parameter creates an invite silently, so it could only be fetched through the Get Invites endpoint. You can accept or reject both invitation types on behalf of the authorized user via Accept Invite API call.",
            "url" : "http://wiki.fitbit.com/display/API/API-Create-Invite"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.fitbit.com/1/user/-/friends/invitations.{format}?invitedUserEmail={invitedUserEmail}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "SOCIAL",
          "displayName" : "SOCIAL_POST",
          "httpMethod" : "POST",
          "url" : "http://api.fitbit.com/1/user/-/friends/invitations.json"
        },
        {
          "path" : "/user/-/friends/invitations/{from-user-id}.json",
          "doc" : {
            "t" : "Accept or reject an invite to become friends with inviting user.",
            "url" : "http://wiki.fitbit.com/display/API/API-Accept-Invite"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.fitbit.com/1/user/-/friends/invitations/{from-user-id}.{format}?accept=true",
          "authentication" : {
            "required" : "true"
          },
          "category" : "SOCIAL",
          "displayName" : "SOCIAL_POST",
          "httpMethod" : "POST",
          "url" : "http://api.fitbit.com/1/user/-/friends/invitations/{from-user-id}.json"
        },
        {
          "path" : "/user/-/friends/leaders/{period}.json",
          "doc" : {
            "t" : "Get a leaderboard of user's friends progress in the format requested using units in the unit system which corresponds to the Accept-Language header provided. Authorized user himself is also included in the response.",
            "url" : "http://wiki.fitbit.com/display/API/API-Get-Friends"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/-/friends/leaders/7d.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "SOCIAL",
          "displayName" : "SOCIAL_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/-/friends/leaders/{period}.json"
        },
        {
          "path" : "/user/-/{collection-path}/apiSubscriptions.json",
          "doc" : {
            "t" : "Get a list of user's subscriptions for your application in the format requested.",
            "url" : "http://wiki.fitbit.com/display/API/Subscriptions-API#Subscriptions-API-Listexistingsubscriptions"
          },
          "curl" : "curl -X GET -u 'username:password' http://api.fitbit.com/1/user/-/apiSubscriptions.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "SUBSCRIPTIONS-API",
          "displayName" : "SUBSCRIPTIONS-API_GET",
          "httpMethod" : "GET",
          "url" : "http://api.fitbit.com/1/user/-/{collection-path}/apiSubscriptions.json"
        },
        {
          "path" : "/user/-/{collection-path}/apiSubscriptions/{subscription-id}.json",
          "doc" : {
            "t" : "Delete a subscription for the user and get a response in the format requested.",
            "url" : "http://wiki.fitbit.com/display/API/Subscriptions-API#Subscriptions-API-Removeasubscription"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://api.fitbit.com/1/user/-/apiSubscriptions/{subscription-id}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "SUBSCRIPTIONS-API",
          "displayName" : "SUBSCRIPTIONS-API_DELETE",
          "httpMethod" : "DELETE",
          "url" : "http://api.fitbit.com/1/user/-/{collection-path}/apiSubscriptions/{subscription-id}.json"
        },
        {
          "path" : "/user/-/{collection-path}/apiSubscriptions/{subscription-id}.json",
          "doc" : {
            "t" : "Add a subscription for the user to get notifications and get a response in the format requested.",
            "url" : "http://wiki.fitbit.com/display/API/Subscriptions-API#Subscriptions-API-Addasubscription"
          },
          "curl" : "curl -X POST -u 'username:password' http://api.fitbit.com/1/user/-/apiSubscriptions/{subscription-id}.{format}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "SUBSCRIPTIONS-API",
          "displayName" : "SUBSCRIPTIONS-API_POST",
          "httpMethod" : "POST",
          "url" : "http://api.fitbit.com/1/user/-/{collection-path}/apiSubscriptions/{subscription-id}.json"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "enabled" : true,
    "logo" : "http://ecx.images-amazon.com/images/I/516a1%2BMjQML._SL500_AA300_.png",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/fitbit.png",
    "name" : "FitBit",
    "oauth" : {
      "version" : "1.0",
      "key" : "2757456acad54cdabf6414926303421d",
      "secret" : "a3648d726d0e4ea091fe2d40ecc1b55b",
      "accessTokenURL" : "https://api.fitbit.com/oauth/access_token",
      "requestTokenURL" : "https://api.fitbit.com/oauth/request_token",
      "authTokenURL" : "https://www.fitbit.com/oauth/authorize",
      "tokenMethod" : "oauth_signed",
      "scope" : "r_basicprofile, r_emailaddress"
    },
    "useCustom" : true,
    "type" : "channel:fit_bit"
  },
  {
    "_id" : "52f9b6a7ebbb407a94000021",
    "application" : {
      "base" : "https://openapi.etsy.com/v2",
      "resources" : [
        {
          "path" : "/",
          "doc" : {
            "t" : "Get a list of all methods available.",
            "url" : "http://developer.etsy.com/docs/resource_apimethod#getmethodtable"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ApiMethod",
          "displayName" : "ApiMethod_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/"
        },
        {
          "path" : "/users/{user_id}/avatar",
          "params" : [
            {
              "name" : "src",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "image",
              "type" : "image",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Upload a new user avatar image",
            "url" : "http://developer.etsy.com/docs/resource_avatar#uploadavatar"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'src=&image=' http://openapi.etsy.com/v2/private/users/__SELF__/avatar",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Avatar",
          "displayName" : "Avatar_POST",
          "httpMethod" : "POST",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/avatar"
        },
        {
          "path" : "/users/{user_id}/avatar/src",
          "doc" : {
            "t" : "Get avatar image source",
            "url" : "http://developer.etsy.com/docs/resource_array#getavatarimgsrc"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/avatar/src",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Avatar",
          "displayName" : "Avatar_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/avatar/src"
        },
        {
          "path" : "/users/{user_id}/charges",
          "doc" : {
            "t" : "Retrieves a set of BillCharge objects associated to a User.",
            "url" : "http://developer.etsy.com/docs/resource_billcharge#findallusercharges"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/charges?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "BillCharge",
          "displayName" : "BillCharge_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/charges"
        },
        {
          "path" : "/users/{user_id}/payments",
          "doc" : {
            "t" : "Retrieves a set of BillPayment objects associated to a User.",
            "url" : "http://developer.etsy.com/docs/resource_billpayment#findalluserpayments"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/payments?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "BillPayment",
          "displayName" : "BillPayment_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/payments"
        },
        {
          "path" : "/taxonomy/categories",
          "doc" : {
            "t" : "Retrieves all top-level Categories.",
            "url" : "http://developer.etsy.com/docs/resource_category#findalltopcategory"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/taxonomy/categories",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Category",
          "displayName" : "Category_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/taxonomy/categories"
        },
        {
          "path" : "/categories/{tag}/{subtag}/{subsubtag}",
          "doc" : {
            "t" : "Retrieves a third-level Category by tag, subtag and subsubtag.",
            "url" : "http://developer.etsy.com/docs/resource_category#getsubsubcategory"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/categories/{tag}/{subtag}/{subsubtag}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Category",
          "displayName" : "Category_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/categories/{tag}/{subtag}/{subsubtag}"
        },
        {
          "path" : "/categories/{tag}/{subtag}",
          "doc" : {
            "t" : "Retrieves a second-level Category by tag and subtag.",
            "url" : "http://developer.etsy.com/docs/resource_category#getsubcategory"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/categories/{tag}/{subtag}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Category",
          "displayName" : "Category_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/categories/{tag}/{subtag}"
        },
        {
          "path" : "/taxonomy/categories/{tag}",
          "doc" : {
            "t" : "Retrieves children of a top-level Category by tag.",
            "url" : "http://developer.etsy.com/docs/resource_category#findalltopcategorychildren"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/taxonomy/categories/{tag}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Category",
          "displayName" : "Category_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/taxonomy/categories/{tag}"
        },
        {
          "path" : "/categories/{tag}",
          "doc" : {
            "t" : "Retrieves a top-level Category by tag.",
            "url" : "http://developer.etsy.com/docs/resource_category#getcategory"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/categories/{tag}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Category",
          "displayName" : "Category_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/categories/{tag}"
        },
        {
          "path" : "/taxonomy/categories/{tag}/{subtag}",
          "doc" : {
            "t" : "Retrieves children of a second-level Category by tag and subtag.",
            "url" : "http://developer.etsy.com/docs/resource_category#findallsubcategorychildren"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/taxonomy/categories/{tag}/{subtag}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Category",
          "displayName" : "Category_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/taxonomy/categories/{tag}/{subtag}"
        },
        {
          "path" : "/countries/{country_id}",
          "doc" : {
            "t" : "Retrieves a Country by id.",
            "url" : "http://developer.etsy.com/docs/resource_country#getcountry"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/countries/{country_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Country",
          "displayName" : "Country_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/countries/{country_id}"
        },
        {
          "path" : "/countries",
          "doc" : {
            "t" : "Finds all Country.",
            "url" : "http://developer.etsy.com/docs/resource_country#findallcountry"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/countries",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Country",
          "displayName" : "Country_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/countries"
        },
        {
          "path" : "/users/{user_id}/favorites/listings/{listing_id}",
          "doc" : {
            "t" : "Delete a favorite listing for a user",
            "url" : "http://developer.etsy.com/docs/resource_favoritelisting#deleteuserfavoritelistings"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/favorites/listings/{listing_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FavoriteListing",
          "displayName" : "FavoriteListing_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/favorites/listings/{listing_id}"
        },
        {
          "path" : "/users/{user_id}/favorites/listings",
          "doc" : {
            "t" : "Finds all favorite listings for a user",
            "url" : "http://developer.etsy.com/docs/resource_favoritelisting#findalluserfavoritelistings"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/favorites/listings?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FavoriteListing",
          "displayName" : "FavoriteListing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/favorites/listings"
        },
        {
          "path" : "/users/{user_id}/favorites/listings/{listing_id}",
          "doc" : {
            "t" : "Finds a favorite listing for a user",
            "url" : "http://developer.etsy.com/docs/resource_favoritelisting#finduserfavoritelistings"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/favorites/listings/{listing_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FavoriteListing",
          "displayName" : "FavoriteListing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/favorites/listings/{listing_id}"
        },
        {
          "path" : "/listings/{listing_id}/favored-by",
          "doc" : {
            "t" : "Retrieves a set of FavoriteListing objects associated to a Listing.",
            "url" : "http://developer.etsy.com/docs/resource_favoritelisting#findalllistingfavoredby"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/listings/{listing_id}/favored-by?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FavoriteListing",
          "displayName" : "FavoriteListing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/listings/{listing_id}/favored-by"
        },
        {
          "path" : "/users/{user_id}/favorites/listings/{listing_id}",
          "doc" : {
            "t" : "Creates a new favorite listing for a user",
            "url" : "http://developer.etsy.com/docs/resource_favoritelisting#createuserfavoritelistings"
          },
          "curl" : "curl -X POST -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/favorites/listings/{listing_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FavoriteListing",
          "displayName" : "FavoriteListing_POST",
          "httpMethod" : "POST",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/favorites/listings/{listing_id}"
        },
        {
          "path" : "/users/{user_id}/favorites/users/{target_user_id}",
          "doc" : {
            "t" : "Finds a favorite user for a user",
            "url" : "http://developer.etsy.com/docs/resource_favoriteuser#finduserfavoriteusers"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/favorites/users/{target_user_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FavoriteUser",
          "displayName" : "FavoriteUser_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/favorites/users/{target_user_id}"
        },
        {
          "path" : "/users/{user_id}/favorites/users/{target_user_id}",
          "doc" : {
            "t" : "Delete a favorite listing for a user",
            "url" : "http://developer.etsy.com/docs/resource_favoriteuser#deleteuserfavoriteusers"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/favorites/users/{target_user_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FavoriteUser",
          "displayName" : "FavoriteUser_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/favorites/users/{target_user_id}"
        },
        {
          "path" : "/users/{user_id}/favored-by",
          "doc" : {
            "t" : "Retrieves a set of FavoriteUser objects associated to a User.",
            "url" : "http://developer.etsy.com/docs/resource_favoriteuser#findalluserfavoredby"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/favored-by?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FavoriteUser",
          "displayName" : "FavoriteUser_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/favored-by"
        },
        {
          "path" : "/users/{user_id}/favorites/users",
          "doc" : {
            "t" : "Finds all favorite users for a user",
            "url" : "http://developer.etsy.com/docs/resource_favoriteuser#findalluserfavoriteusers"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/favorites/users?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FavoriteUser",
          "displayName" : "FavoriteUser_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/favorites/users"
        },
        {
          "path" : "/users/{user_id}/favorites/users/{target_user_id}",
          "params" : [
            {
              "name" : "user_id",
              "type" : "user_id_or_name",
              "style" : "query",
              "default" : "__SELF__",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "target_user_id",
              "type" : "user_id_or_name",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Creates a new favorite listing for a user",
            "url" : "http://developer.etsy.com/docs/resource_favoriteuser#createuserfavoriteusers"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'user_id=__SELF__&target_user_id=' http://openapi.etsy.com/v2/private/users/__SELF__/favorites/users/{target_user_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FavoriteUser",
          "displayName" : "FavoriteUser_POST",
          "httpMethod" : "POST",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/favorites/users/{target_user_id}"
        },
        {
          "path" : "/homepages/listings/",
          "doc" : {
            "t" : "Finds all FeaturedListings regardless of Listing state",
            "url" : "http://developer.etsy.com/docs/resource_featuredlisting#findallfeaturedlisting"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/homepages/listings/?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FeaturedListing",
          "displayName" : "FeaturedListing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/homepages/listings/"
        },
        {
          "path" : "/homepages/pickers/{featured_listing_picker_id}/featured",
          "doc" : {
            "t" : "Retrieves a set of FeaturedListing objects associated to a FeaturedListingPicker.",
            "url" : "http://developer.etsy.com/docs/resource_featuredlisting#findallfeaturedlistingpickerfeatured"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/homepages/pickers/{featured_listing_picker_id}/featured?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FeaturedListing",
          "displayName" : "FeaturedListing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/homepages/pickers/{featured_listing_picker_id}/featured"
        },
        {
          "path" : "/homepages/listings/active",
          "doc" : {
            "t" : "Finds all FeaturedListings that point to active Listings",
            "url" : "http://developer.etsy.com/docs/resource_featuredlisting#findallfeaturedlistingactive"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/homepages/listings/active?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FeaturedListing",
          "displayName" : "FeaturedListing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/homepages/listings/active"
        },
        {
          "path" : "/homepages/listings/{featured_listing_id}",
          "doc" : {
            "t" : "Retrieves a FeaturedListing by id.",
            "url" : "http://developer.etsy.com/docs/resource_featuredlisting#getfeaturedlisting"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/homepages/listings/{featured_listing_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FeaturedListing",
          "displayName" : "FeaturedListing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/homepages/listings/{featured_listing_id}"
        },
        {
          "path" : "/homepages/listings/{featured_listing_id}/picker",
          "doc" : {
            "t" : "Retrieves a set of FeaturedListingPicker objects associated to a FeaturedListing.",
            "url" : "http://developer.etsy.com/docs/resource_featuredlistingpicker#getfeaturedlistingassociatedpicker"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/homepages/listings/{featured_listing_id}/picker",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FeaturedListingPicker",
          "displayName" : "FeaturedListingPicker_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/homepages/listings/{featured_listing_id}/picker"
        },
        {
          "path" : "/homepages/pickers/{featured_listing_picker_id}",
          "doc" : {
            "t" : "Retrieves a FeaturedListingPicker by id.",
            "url" : "http://developer.etsy.com/docs/resource_featuredlistingpicker#getfeaturedlistingpicker"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/homepages/pickers/{featured_listing_picker_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FeaturedListingPicker",
          "displayName" : "FeaturedListingPicker_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/homepages/pickers/{featured_listing_picker_id}"
        },
        {
          "path" : "/homepages/pickers/",
          "doc" : {
            "t" : "Finds all FeaturedListingPicker in scope active.",
            "url" : "http://developer.etsy.com/docs/resource_featuredlistingpicker#findallfeaturedlistingpickeractive"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/homepages/pickers/?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FeaturedListingPicker",
          "displayName" : "FeaturedListingPicker_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/homepages/pickers/"
        },
        {
          "path" : "/featured/users",
          "doc" : {
            "t" : "Finds all FeaturedUser.",
            "url" : "http://developer.etsy.com/docs/resource_featureduser#findallfeaturedusers"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/featured/users?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FeaturedUser",
          "displayName" : "FeaturedUser_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/featured/users"
        },
        {
          "path" : "/featured/users/{featured_user_id}",
          "doc" : {
            "t" : "Retrieves a FeaturedUser by id.",
            "url" : "http://developer.etsy.com/docs/resource_featureduser#getfeatureduser"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/featured/users/{featured_user_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "FeaturedUser",
          "displayName" : "FeaturedUser_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/featured/users/{featured_user_id}"
        },
        {
          "path" : "/users/{user_id}/feedback/as-subject",
          "doc" : {
            "t" : "Retrieves a set of Feedback objects associated to a User.",
            "url" : "http://developer.etsy.com/docs/resource_feedback#findalluserfeedbackassubject"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/feedback/as-subject?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Feedback",
          "displayName" : "Feedback_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/feedback/as-subject"
        },
        {
          "path" : "/users/{user_id}/feedback/as-author",
          "doc" : {
            "t" : "Retrieves a set of Feedback objects associated to a User.",
            "url" : "http://developer.etsy.com/docs/resource_feedback#findalluserfeedbackasauthor"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/feedback/as-author?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Feedback",
          "displayName" : "Feedback_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/feedback/as-author"
        },
        {
          "path" : "/users/{user_id}/feedback/as-buyer",
          "doc" : {
            "t" : "Retrieves a set of Feedback objects associated to a User.",
            "url" : "http://developer.etsy.com/docs/resource_feedback#findalluserfeedbackasbuyer"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/feedback/as-buyer?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Feedback",
          "displayName" : "Feedback_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/feedback/as-buyer"
        },
        {
          "path" : "/users/{user_id}/feedback/as-seller",
          "doc" : {
            "t" : "Retrieves a set of Feedback objects associated to a User.",
            "url" : "http://developer.etsy.com/docs/resource_feedback#findalluserfeedbackasseller"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/feedback/as-seller?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Feedback",
          "displayName" : "Feedback_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/feedback/as-seller"
        },
        {
          "path" : "/server/epoch",
          "doc" : {
            "t" : "Get server time, in epoch seconds notation.",
            "url" : "http://developer.etsy.com/docs/resource_int#getserverepoch"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/server/epoch",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Int",
          "displayName" : "Int_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/server/epoch"
        },
        {
          "path" : "/homepages/pickers/{featured_listing_picker_id}/listings",
          "doc" : {
            "t" : "Retrieves a set of Listing objects associated to a FeaturedListingPicker.",
            "url" : "http://developer.etsy.com/docs/resource_listing#findallfeaturedlistingpickerlistings"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/homepages/pickers/{featured_listing_picker_id}/listings?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/homepages/pickers/{featured_listing_picker_id}/listings"
        },
        {
          "path" : "/homepages/pickers/{featured_listing_picker_id}/listings/active",
          "doc" : {
            "t" : "Retrieves a set of Listing objects associated to a FeaturedListingPicker in scope active.",
            "url" : "http://developer.etsy.com/docs/resource_listing#findallfeaturedlistingpickerlistingsactive"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/homepages/pickers/{featured_listing_picker_id}/listings/active?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/homepages/pickers/{featured_listing_picker_id}/listings/active"
        },
        {
          "path" : "/homepages/listings/{featured_listing_id}/listing",
          "doc" : {
            "t" : "Retrieves a set of Listing objects associated to a FeaturedListing.",
            "url" : "http://developer.etsy.com/docs/resource_listing#getfeaturedlistinglisting"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/homepages/listings/{featured_listing_id}/listing",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/homepages/listings/{featured_listing_id}/listing"
        },
        {
          "path" : "/users/{user_id}/recommended_listings",
          "doc" : {
            "t" : "Get recommended listings for an authenticated member. The number of listings returned may not match the specified limit if there is no activity from recommended shops.",
            "url" : "http://developer.etsy.com/docs/resource_listing#getrecommendedlistings"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/recommended_listings?limit=25&excluded_listing_ids={excluded_listing_ids}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/recommended_listings"
        },
        {
          "path" : "/users/{user_id}/recommended_listings/rejects/{listing_ids}",
          "doc" : {
            "t" : "Registers rejections of recommended listings. Affects future recommended listings.",
            "url" : "http://developer.etsy.com/docs/resource_listing#registerrecommendedlistingrejects"
          },
          "curl" : "curl -X POST -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/recommended_listings/rejects/{listing_ids}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_POST",
          "httpMethod" : "POST",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/recommended_listings/rejects/{listing_ids}"
        },
        {
          "path" : "/users/{user_id}/recommended_listings/views/{listing_ids}",
          "doc" : {
            "t" : "Register viewings of recommended listings. Affects future recommended listings.",
            "url" : "http://developer.etsy.com/docs/resource_listing#registerrecommendedlistingviews"
          },
          "curl" : "curl -X POST -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/recommended_listings/views/{listing_ids}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_POST",
          "httpMethod" : "POST",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/recommended_listings/views/{listing_ids}"
        },
        {
          "path" : "/listings",
          "params" : [
            {
              "name" : "quantity",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "title",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "description",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "price",
              "type" : "float",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "materials",
              "type" : "array",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "tags",
              "type" : "array",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "shipping_template_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "shop_section_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Creates a new Listing",
            "url" : "http://developer.etsy.com/docs/resource_listing#createlisting"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'quantity=&title=&description=&price=&materials=&tags=&shipping_template_id=&shop_section_id=' http://openapi.etsy.com/v2/private/listings",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_POST",
          "httpMethod" : "POST",
          "url" : "https://openapi.etsy.com/v2/listings"
        },
        {
          "path" : "/shops/{shop_id}/listings/inactive/{listing_id}",
          "doc" : {
            "t" : "Retrieves a Listing associated to a Shop that is inactive",
            "url" : "http://developer.etsy.com/docs/resource_listing#getshoplistinginactive"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/shops/{shop_id}/listings/inactive/{listing_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/shops/{shop_id}/listings/inactive/{listing_id}"
        },
        {
          "path" : "/shops/{shop_id}/listings/expired",
          "doc" : {
            "t" : "Retrieves Listings associated to a Shop that are expired",
            "url" : "http://developer.etsy.com/docs/resource_listing#findallshoplistingsexpired"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/shops/{shop_id}/listings/expired?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/shops/{shop_id}/listings/expired"
        },
        {
          "path" : "/shops/{shop_id}/listings/inactive",
          "doc" : {
            "t" : "Retrieves Listings associated to a Shop that are inactive",
            "url" : "http://developer.etsy.com/docs/resource_listing#findallshoplistingsinactive"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/shops/{shop_id}/listings/inactive?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/shops/{shop_id}/listings/inactive"
        },
        {
          "path" : "/listings/{listing_id}",
          "doc" : {
            "t" : "Deletes a Listing",
            "url" : "http://developer.etsy.com/docs/resource_listing#deletelisting"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://openapi.etsy.com/v2/private/listings/{listing_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://openapi.etsy.com/v2/listings/{listing_id}"
        },
        {
          "path" : "/shops/{shop_id}/listings/featured",
          "doc" : {
            "t" : "Retrieves Listings associated to a Shop that are featured",
            "url" : "http://developer.etsy.com/docs/resource_listing#findallshoplistingsfeatured"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/shops/{shop_id}/listings/featured?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/shops/{shop_id}/listings/featured"
        },
        {
          "path" : "/listings/{listing_id}",
          "params" : [
            {
              "name" : "quantity",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "title",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "description",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "price",
              "type" : "float",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "materials",
              "type" : "array",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "renew",
              "type" : "boolean",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "tags",
              "type" : "array",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "shipping_template_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "shop_section_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "state",
              "type" : "enum",
              "style" : "query",
              "default" : "active",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Updates a Listing",
            "url" : "http://developer.etsy.com/docs/resource_listing#updatelisting"
          },
          "curl" : "curl -X PUT -u 'username:password' -d 'quantity=&title=&description=&price=&materials=&renew=&tags=&shipping_template_id=&shop_section_id=&state=active' http://openapi.etsy.com/v2/private/listings/{listing_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_PUT",
          "httpMethod" : "PUT",
          "url" : "https://openapi.etsy.com/v2/listings/{listing_id}"
        },
        {
          "path" : "/listings/{listing_id}",
          "doc" : {
            "t" : "Retrieves a Listing by id.",
            "url" : "http://developer.etsy.com/docs/resource_listing#getlisting"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/listings/{listing_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/listings/{listing_id}"
        },
        {
          "path" : "/listings/active",
          "doc" : {
            "t" : "Finds all active Listing",
            "url" : "http://developer.etsy.com/docs/resource_listing#findalllistingactive"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/listings/active?limit=25&offset=0&keywords={keywords}&sort_on=created&sort_order=down&min_price={min_price}&max_price={max_price}&color={color}&color_accuracy=0&tags={tags}&materials={materials}&category={category}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/listings/active"
        },
        {
          "path" : "/shops/{shop_id}/listings/active",
          "doc" : {
            "t" : "Finds all active Listings associated with a Shop",
            "url" : "http://developer.etsy.com/docs/resource_listing#findallshoplistingsactive"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/shops/{shop_id}/listings/active?limit=25&offset=0&keywords={keywords}&sort_on=created&sort_order=down&min_price={min_price}&max_price={max_price}&color={color}&color_accuracy=0&tags={tags}&materials={materials}&category={category}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/shops/{shop_id}/listings/active"
        },
        {
          "path" : "/shops/{shop_id}/listings/expired/{listing_id}",
          "doc" : {
            "t" : "Retrieves a Listing associated to a Shop that is inactive",
            "url" : "http://developer.etsy.com/docs/resource_listing#getshoplistingexpired"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/shops/{shop_id}/listings/expired/{listing_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Listing",
          "displayName" : "Listing_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/shops/{shop_id}/listings/expired/{listing_id}"
        },
        {
          "path" : "/listings/{listing_id}/images/{listing_image_id}",
          "doc" : {
            "t" : "Retrieves a ListingImage by id.",
            "url" : "http://developer.etsy.com/docs/resource_listingimage#getlistingimage"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/listings/{listing_id}/images/{listing_image_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ListingImage",
          "displayName" : "ListingImage_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/listings/{listing_id}/images/{listing_image_id}"
        },
        {
          "path" : "/listings/{listing_id}/images",
          "params" : [
            {
              "name" : "image",
              "type" : "image",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Upload a new listing image",
            "url" : "http://developer.etsy.com/docs/resource_listingimage#uploadlistingimage"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'image=' http://openapi.etsy.com/v2/private/listings/{listing_id}/images",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ListingImage",
          "displayName" : "ListingImage_POST",
          "httpMethod" : "POST",
          "url" : "https://openapi.etsy.com/v2/listings/{listing_id}/images"
        },
        {
          "path" : "/listings/{listing_id}/images/{listing_image_id}",
          "doc" : {
            "t" : "Deletes a listing image",
            "url" : "http://developer.etsy.com/docs/resource_listingimage#deletelistingimage"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://openapi.etsy.com/v2/private/listings/{listing_id}/images/{listing_image_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ListingImage",
          "displayName" : "ListingImage_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://openapi.etsy.com/v2/listings/{listing_id}/images/{listing_image_id}"
        },
        {
          "path" : "/listings/{listing_id}/images",
          "doc" : {
            "t" : "Retrieves a set of ListingImage objects associated to a Listing.",
            "url" : "http://developer.etsy.com/docs/resource_listingimage#findalllistingimages"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/listings/{listing_id}/images",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ListingImage",
          "displayName" : "ListingImage_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/listings/{listing_id}/images"
        },
        {
          "path" : "/listings/{listing_id}/payments",
          "doc" : {
            "t" : "Retrieves a set of ListingPayment objects associated to a Listing.",
            "url" : "http://developer.etsy.com/docs/resource_listingpayment#getlistingpaymentinfo"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/listings/{listing_id}/payments",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ListingPayment",
          "displayName" : "ListingPayment_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/listings/{listing_id}/payments"
        },
        {
          "path" : "/payments/{listing_payment_id}",
          "doc" : {
            "t" : "Retrieves a ListingPayment by id.",
            "url" : "http://developer.etsy.com/docs/resource_listingpayment#getlistingpayment"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/payments/{listing_payment_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ListingPayment",
          "displayName" : "ListingPayment_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/payments/{listing_payment_id}"
        },
        {
          "path" : "/orders/{order_id}",
          "doc" : {
            "t" : "Retrieves a Order by id.",
            "url" : "http://developer.etsy.com/docs/resource_order#getorder"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/orders/{order_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Order",
          "displayName" : "Order_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/orders/{order_id}"
        },
        {
          "path" : "/users/{user_id}/orders",
          "doc" : {
            "t" : "Retrieves a set of Order objects associated to a User.",
            "url" : "http://developer.etsy.com/docs/resource_order#findalluserorders"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/orders?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Order",
          "displayName" : "Order_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/orders"
        },
        {
          "path" : "/payments/templates",
          "params" : [
            {
              "name" : "allow_check",
              "type" : "boolean",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "allow_mo",
              "type" : "boolean",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "allow_other",
              "type" : "boolean",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "allow_paypal",
              "type" : "boolean",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "paypal_email",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "first_line",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "second_line",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "city",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "state",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "zip",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "country_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Creates a new PaymentTemplate",
            "url" : "http://developer.etsy.com/docs/resource_paymenttemplate#createpaymenttemplate"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'allow_check=&allow_mo=&allow_other=&allow_paypal=&paypal_email=&name=&first_line=&second_line=&city=&state=&zip=&country_id=' http://openapi.etsy.com/v2/private/payments/templates",
          "authentication" : {
            "required" : "true"
          },
          "category" : "PaymentTemplate",
          "displayName" : "PaymentTemplate_POST",
          "httpMethod" : "POST",
          "url" : "https://openapi.etsy.com/v2/payments/templates"
        },
        {
          "path" : "/users/{user_id}/payments/templates",
          "doc" : {
            "t" : "Retrieves a set of PaymentTemplate objects associated to a User.",
            "url" : "http://developer.etsy.com/docs/resource_paymenttemplate#findalluserpaymenttemplates"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/payments/templates",
          "authentication" : {
            "required" : "true"
          },
          "category" : "PaymentTemplate",
          "displayName" : "PaymentTemplate_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/payments/templates"
        },
        {
          "path" : "/payments/templates/{payment_template_id}",
          "doc" : {
            "t" : "Retrieves a PaymentTemplate by id.",
            "url" : "http://developer.etsy.com/docs/resource_paymenttemplate#getpaymenttemplate"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/payments/templates/{payment_template_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "PaymentTemplate",
          "displayName" : "PaymentTemplate_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/payments/templates/{payment_template_id}"
        },
        {
          "path" : "/payments/templates/{payment_template_id}",
          "params" : [
            {
              "name" : "allow_check",
              "type" : "boolean",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "allow_mo",
              "type" : "boolean",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "allow_other",
              "type" : "boolean",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "allow_paypal",
              "type" : "boolean",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "paypal_email",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "name",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "first_line",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "second_line",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "city",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "state",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "zip",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "country_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Updates a PaymentTemplate",
            "url" : "http://developer.etsy.com/docs/resource_paymenttemplate#updatepaymenttemplate"
          },
          "curl" : "curl -X PUT -u 'username:password' -d 'allow_check=&allow_mo=&allow_other=&allow_paypal=&paypal_email=&name=&first_line=&second_line=&city=&state=&zip=&country_id=' http://openapi.etsy.com/v2/private/payments/templates/{payment_template_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "PaymentTemplate",
          "displayName" : "PaymentTemplate_PUT",
          "httpMethod" : "PUT",
          "url" : "https://openapi.etsy.com/v2/payments/templates/{payment_template_id}"
        },
        {
          "path" : "/receipts/{receipt_id}",
          "doc" : {
            "t" : "Retrieves a Receipt by id.",
            "url" : "http://developer.etsy.com/docs/resource_receipt#getreceipt"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/receipts/{receipt_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Receipt",
          "displayName" : "Receipt_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/receipts/{receipt_id}"
        },
        {
          "path" : "/receipts/{receipt_id}",
          "params" : [
            {
              "name" : "receipt_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "was_paid",
              "type" : "boolean",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "was_shipped",
              "type" : "boolean",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "message_from_seller",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "message_from_buyer",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Updates a Receipt",
            "url" : "http://developer.etsy.com/docs/resource_receipt#updatereceipt"
          },
          "curl" : "curl -X PUT -u 'username:password' -d 'receipt_id=&was_paid=&was_shipped=&message_from_seller=&message_from_buyer=' http://openapi.etsy.com/v2/private/receipts/{receipt_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Receipt",
          "displayName" : "Receipt_PUT",
          "httpMethod" : "PUT",
          "url" : "https://openapi.etsy.com/v2/receipts/{receipt_id}"
        },
        {
          "path" : "/users/{user_id}/receipts",
          "doc" : {
            "t" : "Retrieves a set of Receipt objects associated to a User.",
            "url" : "http://developer.etsy.com/docs/resource_receipt#findalluserbuyerreceipts"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/receipts?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Receipt",
          "displayName" : "Receipt_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/receipts"
        },
        {
          "path" : "/shops/{shop_id}/receipts",
          "doc" : {
            "t" : "Retrieves a set of Receipt objects associated to a Shop.",
            "url" : "http://developer.etsy.com/docs/resource_receipt#findallshopreceipts"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/shops/{shop_id}/receipts?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Receipt",
          "displayName" : "Receipt_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/shops/{shop_id}/receipts"
        },
        {
          "path" : "/orders/{order_id}/receipts",
          "doc" : {
            "t" : "Retrieves a set of Receipt objects associated to a Order.",
            "url" : "http://developer.etsy.com/docs/resource_receipt#findallorderreceipts"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/orders/{order_id}/receipts?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Receipt",
          "displayName" : "Receipt_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/orders/{order_id}/receipts"
        },
        {
          "path" : "/regions/{region_id}",
          "doc" : {
            "t" : "Retrieves a Region by id.",
            "url" : "http://developer.etsy.com/docs/resource_region#getregion"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/regions/{region_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Region",
          "displayName" : "Region_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/regions/{region_id}"
        },
        {
          "path" : "/regions",
          "doc" : {
            "t" : "Finds all Region.",
            "url" : "http://developer.etsy.com/docs/resource_region#findallregion"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/regions",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Region",
          "displayName" : "Region_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/regions"
        },
        {
          "path" : "/shipping/info/{shipping_info_id}",
          "doc" : {
            "t" : "Retrieves a ShippingInfo by id.",
            "url" : "http://developer.etsy.com/docs/resource_shippinginfo#getshippinginfo"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/shipping/info/{shipping_info_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShippingInfo",
          "displayName" : "ShippingInfo_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/shipping/info/{shipping_info_id}"
        },
        {
          "path" : "/listings/{listing_id}/shipping/info",
          "doc" : {
            "t" : "Retrieves a set of ShippingInfo objects associated to a Listing.",
            "url" : "http://developer.etsy.com/docs/resource_shippinginfo#findalllistingshippinginfo"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/listings/{listing_id}/shipping/info?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShippingInfo",
          "displayName" : "ShippingInfo_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/listings/{listing_id}/shipping/info"
        },
        {
          "path" : "/shipping/info/{shipping_info_id}",
          "params" : [
            {
              "name" : "origin_country_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "destination_country_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "primary_cost",
              "type" : "float",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "secondary_cost",
              "type" : "float",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "listing_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "region_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Updates a ShippingInfo with the given id.",
            "url" : "http://developer.etsy.com/docs/resource_shippinginfo#updateshippinginfo"
          },
          "curl" : "curl -X PUT -u 'username:password' -d 'origin_country_id=&destination_country_id=&primary_cost=&secondary_cost=&listing_id=&region_id=' http://openapi.etsy.com/v2/private/shipping/info/{shipping_info_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShippingInfo",
          "displayName" : "ShippingInfo_PUT",
          "httpMethod" : "PUT",
          "url" : "https://openapi.etsy.com/v2/shipping/info/{shipping_info_id}"
        },
        {
          "path" : "/listings/{listing_id}/shipping/info",
          "params" : [
            {
              "name" : "origin_country_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "destination_country_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "primary_cost",
              "type" : "float",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "secondary_cost",
              "type" : "float",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "region_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Creates a new ShippingInfo.",
            "url" : "http://developer.etsy.com/docs/resource_shippinginfo#createshippinginfo"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'origin_country_id=&destination_country_id=&primary_cost=&secondary_cost=&region_id=' http://openapi.etsy.com/v2/private/listings/{listing_id}/shipping/info",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShippingInfo",
          "displayName" : "ShippingInfo_POST",
          "httpMethod" : "POST",
          "url" : "https://openapi.etsy.com/v2/listings/{listing_id}/shipping/info"
        },
        {
          "path" : "/shipping/info/{shipping_info_id}",
          "doc" : {
            "t" : "Deletes the ShippingInfo with the given id.",
            "url" : "http://developer.etsy.com/docs/resource_shippinginfo#deleteshippinginfo"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://openapi.etsy.com/v2/private/shipping/info/{shipping_info_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShippingInfo",
          "displayName" : "ShippingInfo_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://openapi.etsy.com/v2/shipping/info/{shipping_info_id}"
        },
        {
          "path" : "/users/{user_id}/shipping/templates",
          "doc" : {
            "t" : "Retrieves a set of ShippingTemplate objects associated to a User.",
            "url" : "http://developer.etsy.com/docs/resource_shippingtemplate#findallusershippingtemplates"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/shipping/templates?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShippingTemplate",
          "displayName" : "ShippingTemplate_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/shipping/templates"
        },
        {
          "path" : "/shipping/templates/{shipping_template_id}",
          "doc" : {
            "t" : "Deletes the ShippingTemplate with the given id.",
            "url" : "http://developer.etsy.com/docs/resource_shippingtemplate#deleteshippingtemplate"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://openapi.etsy.com/v2/private/shipping/templates/{shipping_template_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShippingTemplate",
          "displayName" : "ShippingTemplate_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://openapi.etsy.com/v2/shipping/templates/{shipping_template_id}"
        },
        {
          "path" : "/shipping/templates/{shipping_template_id}",
          "doc" : {
            "t" : "Retrieves a ShippingTemplate by id.",
            "url" : "http://developer.etsy.com/docs/resource_shippingtemplate#getshippingtemplate"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/shipping/templates/{shipping_template_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShippingTemplate",
          "displayName" : "ShippingTemplate_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/shipping/templates/{shipping_template_id}"
        },
        {
          "path" : "/shipping/templates",
          "params" : [
            {
              "name" : "title",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "origin_country_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "destination_country_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "primary_cost",
              "type" : "float",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "secondary_cost",
              "type" : "float",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "destination_region_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Creates a new ShippingTemplate",
            "url" : "http://developer.etsy.com/docs/resource_shippingtemplate#createshippingtemplate"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'title=&origin_country_id=&destination_country_id=&primary_cost=&secondary_cost=&destination_region_id=' http://openapi.etsy.com/v2/private/shipping/templates",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShippingTemplate",
          "displayName" : "ShippingTemplate_POST",
          "httpMethod" : "POST",
          "url" : "https://openapi.etsy.com/v2/shipping/templates"
        },
        {
          "path" : "/shipping/templates/{shipping_template_id}",
          "params" : [
            {
              "name" : "title",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "origin_country_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Updates a ShippingTemplate",
            "url" : "http://developer.etsy.com/docs/resource_shippingtemplate#updateshippingtemplate"
          },
          "curl" : "curl -X PUT -u 'username:password' -d 'title=&origin_country_id=' http://openapi.etsy.com/v2/private/shipping/templates/{shipping_template_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShippingTemplate",
          "displayName" : "ShippingTemplate_PUT",
          "httpMethod" : "PUT",
          "url" : "https://openapi.etsy.com/v2/shipping/templates/{shipping_template_id}"
        },
        {
          "path" : "/shipping/templates/{shipping_template_id}/entries",
          "doc" : {
            "t" : "Retrieves a set of ShippingTemplateEntry objects associated to a ShippingTemplate.",
            "url" : "http://developer.etsy.com/docs/resource_shippingtemplateentry#findallshippingtemplateentries"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/shipping/templates/{shipping_template_id}/entries?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShippingTemplateEntry",
          "displayName" : "ShippingTemplateEntry_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/shipping/templates/{shipping_template_id}/entries"
        },
        {
          "path" : "/shipping/templates/entries/{shipping_template_entry_id}",
          "params" : [
            {
              "name" : "destination_country_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "primary_cost",
              "type" : "float",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "secondary_cost",
              "type" : "float",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Updates a ShippingTemplateEntry",
            "url" : "http://developer.etsy.com/docs/resource_shippingtemplateentry#updateshippingtemplateentry"
          },
          "curl" : "curl -X PUT -u 'username:password' -d 'destination_country_id=&primary_cost=&secondary_cost=' http://openapi.etsy.com/v2/private/shipping/templates/entries/{shipping_template_entry_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShippingTemplateEntry",
          "displayName" : "ShippingTemplateEntry_PUT",
          "httpMethod" : "PUT",
          "url" : "https://openapi.etsy.com/v2/shipping/templates/entries/{shipping_template_entry_id}"
        },
        {
          "path" : "/shipping/templates/entries/{shipping_template_entry_id}",
          "doc" : {
            "t" : "Deletes a ShippingTemplateEntry",
            "url" : "http://developer.etsy.com/docs/resource_shippingtemplateentry#deleteshippingtemplateentry"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://openapi.etsy.com/v2/private/shipping/templates/entries/{shipping_template_entry_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShippingTemplateEntry",
          "displayName" : "ShippingTemplateEntry_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://openapi.etsy.com/v2/shipping/templates/entries/{shipping_template_entry_id}"
        },
        {
          "path" : "/shipping/templates/entries",
          "params" : [
            {
              "name" : "shipping_template_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "destination_country_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "primary_cost",
              "type" : "float",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "secondary_cost",
              "type" : "float",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "destination_region_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Creates a new ShippingTemplateEntry",
            "url" : "http://developer.etsy.com/docs/resource_shippingtemplateentry#createshippingtemplateentry"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'shipping_template_id=&destination_country_id=&primary_cost=&secondary_cost=&destination_region_id=' http://openapi.etsy.com/v2/private/shipping/templates/entries",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShippingTemplateEntry",
          "displayName" : "ShippingTemplateEntry_POST",
          "httpMethod" : "POST",
          "url" : "https://openapi.etsy.com/v2/shipping/templates/entries"
        },
        {
          "path" : "/shipping/templates/entries/{shipping_template_entry_id}",
          "doc" : {
            "t" : "Retrieves a ShippingTemplateEntry by id.",
            "url" : "http://developer.etsy.com/docs/resource_shippingtemplateentry#getshippingtemplateentry"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/shipping/templates/entries/{shipping_template_entry_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShippingTemplateEntry",
          "displayName" : "ShippingTemplateEntry_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/shipping/templates/entries/{shipping_template_entry_id}"
        },
        {
          "path" : "/users/{user_id}/shops",
          "doc" : {
            "t" : "Retrieves a set of Shop objects associated to a User.",
            "url" : "http://developer.etsy.com/docs/resource_shop#findallusershops"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/shops?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Shop",
          "displayName" : "Shop_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/shops"
        },
        {
          "path" : "/shops",
          "doc" : {
            "t" : "Finds all Shops. If there is a keywords parameter, finds shops with shop_name starting with keywords.",
            "url" : "http://developer.etsy.com/docs/resource_shop#findallshops"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/shops?shop_name={shop_name}&limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Shop",
          "displayName" : "Shop_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/shops"
        },
        {
          "path" : "/shops/{shop_id}",
          "doc" : {
            "t" : "Retrieves a Shop by id.",
            "url" : "http://developer.etsy.com/docs/resource_shop#getshop"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/shops/{shop_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Shop",
          "displayName" : "Shop_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/shops/{shop_id}"
        },
        {
          "path" : "/shops/{shop_id}",
          "params" : [
            {
              "name" : "title",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "announcement",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "is_refusing_alchemy",
              "type" : "boolean",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "alchemy_message",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "sale_message",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "policy_welcome",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "policy_payment",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "policy_shipping",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "policy_refunds",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "policy_additional",
              "type" : "string",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Updates a Shop",
            "url" : "http://developer.etsy.com/docs/resource_shop#updateshop"
          },
          "curl" : "curl -X PUT -u 'username:password' -d 'title=&announcement=&is_refusing_alchemy=&alchemy_message=&sale_message=&policy_welcome=&policy_payment=&policy_shipping=&policy_refunds=&policy_additional=' http://openapi.etsy.com/v2/private/shops/{shop_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Shop",
          "displayName" : "Shop_PUT",
          "httpMethod" : "PUT",
          "url" : "https://openapi.etsy.com/v2/shops/{shop_id}"
        },
        {
          "path" : "/shops/{shop_id}/appearance/banner/{shop_banner_id}",
          "doc" : {
            "t" : "Deletes a shop banner image",
            "url" : "http://developer.etsy.com/docs/resource_shopbanner#deleteshopbanner"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://openapi.etsy.com/v2/private/shops/{shop_id}/appearance/banner/{shop_banner_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShopBanner",
          "displayName" : "ShopBanner_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://openapi.etsy.com/v2/shops/{shop_id}/appearance/banner/{shop_banner_id}"
        },
        {
          "path" : "/shops/{shop_id}/appearance/banner",
          "params" : [
            {
              "name" : "image",
              "type" : "image",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Upload a new shop banner image",
            "url" : "http://developer.etsy.com/docs/resource_shopbanner#uploadshopbanner"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'image=' http://openapi.etsy.com/v2/private/shops/{shop_id}/appearance/banner",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShopBanner",
          "displayName" : "ShopBanner_POST",
          "httpMethod" : "POST",
          "url" : "https://openapi.etsy.com/v2/shops/{shop_id}/appearance/banner"
        },
        {
          "path" : "/sections/{shop_section_id}",
          "params" : [
            {
              "name" : "title",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "rank",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "user_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Updates a ShopSection with the given id.",
            "url" : "http://developer.etsy.com/docs/resource_shopsection#updateshopsection"
          },
          "curl" : "curl -X PUT -u 'username:password' -d 'title=&rank=&user_id=' http://openapi.etsy.com/v2/private/sections/{shop_section_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShopSection",
          "displayName" : "ShopSection_PUT",
          "httpMethod" : "PUT",
          "url" : "https://openapi.etsy.com/v2/sections/{shop_section_id}"
        },
        {
          "path" : "/sections/{shop_section_id}",
          "doc" : {
            "t" : "Deletes the ShopSection with the given id.",
            "url" : "http://developer.etsy.com/docs/resource_shopsection#deleteshopsection"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://openapi.etsy.com/v2/private/sections/{shop_section_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShopSection",
          "displayName" : "ShopSection_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://openapi.etsy.com/v2/sections/{shop_section_id}"
        },
        {
          "path" : "/sections/{shop_section_id}",
          "doc" : {
            "t" : "Retrieves a ShopSection by id.",
            "url" : "http://developer.etsy.com/docs/resource_shopsection#getshopsection"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/sections/{shop_section_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShopSection",
          "displayName" : "ShopSection_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/sections/{shop_section_id}"
        },
        {
          "path" : "/sections",
          "params" : [
            {
              "name" : "title",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "user_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Creates a new ShopSection.",
            "url" : "http://developer.etsy.com/docs/resource_shopsection#createshopsection"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'title=&user_id=' http://openapi.etsy.com/v2/private/sections",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShopSection",
          "displayName" : "ShopSection_POST",
          "httpMethod" : "POST",
          "url" : "https://openapi.etsy.com/v2/sections"
        },
        {
          "path" : "/shops/{shop_id}/sections",
          "doc" : {
            "t" : "Retrieves a set of ShopSection objects associated to a Shop.",
            "url" : "http://developer.etsy.com/docs/resource_shopsection#findallshopsections"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/shops/{shop_id}/sections",
          "authentication" : {
            "required" : "true"
          },
          "category" : "ShopSection",
          "displayName" : "ShopSection_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/shops/{shop_id}/sections"
        },
        {
          "path" : "/server/ping",
          "doc" : {
            "t" : "Check that the server is alive.",
            "url" : "http://developer.etsy.com/docs/resource_string#ping"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/server/ping",
          "authentication" : {
            "required" : "true"
          },
          "category" : "String",
          "displayName" : "String_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/server/ping"
        },
        {
          "path" : "/taxonomy/tags",
          "doc" : {
            "t" : "Retrieves all related tags for the given tag set.",
            "url" : "http://developer.etsy.com/docs/resource_tag#findpopulartags"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/taxonomy/tags?limit=25",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Tag",
          "displayName" : "Tag_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/taxonomy/tags"
        },
        {
          "path" : "/taxonomy/tags/{tags}",
          "doc" : {
            "t" : "Retrieves all related tags for the given tag set.",
            "url" : "http://developer.etsy.com/docs/resource_tag#findallrelatedtags"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/taxonomy/tags/{tag}?limit=25",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Tag",
          "displayName" : "Tag_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/taxonomy/tags/{tags}"
        },
        {
          "path" : "/receipts/{receipt_id}/transactions",
          "doc" : {
            "t" : "Retrieves a set of Transaction objects associated to a Receipt.",
            "url" : "http://developer.etsy.com/docs/resource_transaction#findallreceipttransactions"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/receipts/{receipt_id}/transactions?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Transaction",
          "displayName" : "Transaction_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/receipts/{receipt_id}/transactions"
        },
        {
          "path" : "/shops/{shop_id}/transactions",
          "doc" : {
            "t" : "Retrieves a set of Transaction objects associated to a Shop.",
            "url" : "http://developer.etsy.com/docs/resource_transaction#findallshoptransactions"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/shops/{shop_id}/transactions?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Transaction",
          "displayName" : "Transaction_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/shops/{shop_id}/transactions"
        },
        {
          "path" : "/users/{user_id}/transactions",
          "doc" : {
            "t" : "Retrieves a set of Transaction objects associated to a User.",
            "url" : "http://developer.etsy.com/docs/resource_transaction#findalluserbuyertransactions"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/transactions?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Transaction",
          "displayName" : "Transaction_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/transactions"
        },
        {
          "path" : "/transactions/{transaction_id}",
          "doc" : {
            "t" : "Retrieves a Transaction by id.",
            "url" : "http://developer.etsy.com/docs/resource_transaction#gettransaction"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/transactions/{transaction_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Transaction",
          "displayName" : "Transaction_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/transactions/{transaction_id}"
        },
        {
          "path" : "/users/{user_id}/treasuries",
          "doc" : {
            "t" : "Get a user's Treasuries",
            "url" : "http://developer.etsy.com/docs/resource_treasury#findallusertreasuries"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/treasuries?sort_on=hotness&sort_order=down&maturity=safe_only&detail_level=low&limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Treasury",
          "displayName" : "Treasury_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/treasuries"
        },
        {
          "path" : "/treasuries/{treasury_id}",
          "doc" : {
            "t" : "Get a Treasury",
            "url" : "http://developer.etsy.com/docs/resource_treasury#gettreasury"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/treasuries/{treasury_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Treasury",
          "displayName" : "Treasury_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/treasuries/{treasury_id}"
        },
        {
          "path" : "/treasuries",
          "doc" : {
            "t" : "Search Treasuries or else List all Treasuries",
            "url" : "http://developer.etsy.com/docs/resource_treasury#findalltreasuries"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/treasuries?keywords={keywords}&sort_on=hotness&sort_order=down&maturity=safe_only&detail_level=low&limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "Treasury",
          "displayName" : "Treasury_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/treasuries"
        },
        {
          "path" : "/users/{user_id}",
          "doc" : {
            "t" : "Retrieves a User by id.",
            "url" : "http://developer.etsy.com/docs/resource_user#getuser"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__",
          "authentication" : {
            "required" : "true"
          },
          "category" : "User",
          "displayName" : "User_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}"
        },
        {
          "path" : "/users/{user_id}/addresses/{user_address_id}",
          "doc" : {
            "t" : "Deletes the UserAddress with the given id.",
            "url" : "http://developer.etsy.com/docs/resource_useraddress#deleteuseraddress"
          },
          "curl" : "curl -X DELETE -u 'username:password' http://openapi.etsy.com/v2/private/users/{user_id}/addresses/{user_address_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "UserAddress",
          "displayName" : "UserAddress_DELETE",
          "httpMethod" : "DELETE",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/addresses/{user_address_id}"
        },
        {
          "path" : "/users/{user_id}/addresses/{user_address_id}",
          "params" : [
            {
              "name" : "name",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "first_line",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "second_line",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "city",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "state",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "zip",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "country_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Updates a UserAddress with the given id.",
            "url" : "http://developer.etsy.com/docs/resource_useraddress#updateuseraddress"
          },
          "curl" : "curl -X PUT -u 'username:password' -d 'name=&first_line=&second_line=&city=&state=&zip=&country_id=' http://openapi.etsy.com/v2/private/users/{user_id}/addresses/{user_address_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "UserAddress",
          "displayName" : "UserAddress_PUT",
          "httpMethod" : "PUT",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/addresses/{user_address_id}"
        },
        {
          "path" : "/users/{user_id}/addresses",
          "params" : [
            {
              "name" : "name",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "first_line",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "second_line",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "city",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "state",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "zip",
              "type" : "text",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            },
            {
              "name" : "country_id",
              "type" : "int",
              "style" : "query",
              "required" : "true",
              "doc" : {

              }
            }
          ],
          "doc" : {
            "t" : "Creates a new UserAddress.",
            "url" : "http://developer.etsy.com/docs/resource_useraddress#createuseraddress"
          },
          "curl" : "curl -X POST -u 'username:password' -d 'name=&first_line=&second_line=&city=&state=&zip=&country_id=' http://openapi.etsy.com/v2/private/users/__SELF__/addresses",
          "authentication" : {
            "required" : "true"
          },
          "category" : "UserAddress",
          "displayName" : "UserAddress_POST",
          "httpMethod" : "POST",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/addresses"
        },
        {
          "path" : "/users/{user_id}/addresses/{user_address_id}",
          "doc" : {
            "t" : "Retrieves a UserAddress by id.",
            "url" : "http://developer.etsy.com/docs/resource_useraddress#getuseraddress"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/{user_id}/addresses/{user_address_id}",
          "authentication" : {
            "required" : "true"
          },
          "category" : "UserAddress",
          "displayName" : "UserAddress_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/addresses/{user_address_id}"
        },
        {
          "path" : "/users/{user_id}/addresses",
          "doc" : {
            "t" : "Retrieves a set of UserAddress objects associated to a User.",
            "url" : "http://developer.etsy.com/docs/resource_useraddress#findalluseraddresses"
          },
          "curl" : "curl -X GET -u 'username:password' http://openapi.etsy.com/v2/private/users/__SELF__/addresses?limit=25&offset=0",
          "authentication" : {
            "required" : "true"
          },
          "category" : "UserAddress",
          "displayName" : "UserAddress_GET",
          "httpMethod" : "GET",
          "url" : "https://openapi.etsy.com/v2/users/{user_id}/addresses"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "logo" : "http://octoblu-api-logos.s3.amazonaws.com/color/etsy.png",
    "logobw" : "http://octoblu-api-logos.s3.amazonaws.com/bw/etsy.png",
    "name" : "Etsy",
    "enabled" : true,
    "oauth" : {
      "version" : "1.0",
      "key" : "43pie9547p1iea83gz1hp052",
      "secret" : "2txz2d6qok",
      "accessTokenURL" : "https://openapi.etsy.com/v2/oauth/access_token",
      "requestTokenURL" : "https://openapi.etsy.com/v2/oauth/request_token",
      "authTokenURL" : "https://www.etsy.com/oauth/signin",
      "tokenMethod" : "",
      "scope" : ""
    },
    "useCustom" : true,
    "type" : "channel:etsy"
  },
  {
    "_id" : "532a0cb84ac74c9fb5db6249",
    "auth_strategy" : "oauth",
    "documentation" : "https://dev.twitter.com/docs/api/1.1",
    "enabled" : true,
    "logo" : "http://www.momscleanairforce.org/wp-content/uploads/icon-twitter.gif",
    "logobw" : "https://g.twimg.com/Twitter_logo_white.png",
    "name" : "Twitter",
    "useCustom" : true,
    "application" : {
      "base" : "https://api.twitter.com/1.1",
      "resources" : [
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/statuses/mentions_timeline",
            "t" : "Returns the 20 most recent mentions (tweets containing a users's @screen_name) for the authenticating user.\n\nThe timeline returned is the equivalent of the one seen when you view your mentions on twitter.com.\n\nThis method can only return up to 800 tweets.\n\nSee Working with Timelines for..."
          },
          "displayName" : "statuses/mentions_timeline",
          "path" : "/statuses/mentions_timeline.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "trim_user"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "contributor_details"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/mentions_timeline.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/statuses/user_timeline",
            "t" : "Returns a collection of the most recent Tweets posted by the user indicated by the screen_name or user_id parameters.\n\nUser timelines belonging to protected users may only be requested when the authenticated user either \"owns\" the timeline or is an approved follower of the owner.\n\nThe timeline..."
          },
          "displayName" : "statuses/user_timeline",
          "path" : "/statuses/user_timeline.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "trim_user"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "exclude_replies"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "contributor_details"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_rts"
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/user_timeline.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/statuses/home_timeline",
            "t" : "Returns a collection of the most recent Tweets and retweets posted by the authenticating user and the users they follow. The home timeline is central to how most users interact with the Twitter service.\n\nUp to 800 Tweets are obtainable on the home timeline. It is more volatile for users that follow..."
          },
          "displayName" : "statuses/home_timeline",
          "path" : "/statuses/home_timeline.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "trim_user"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "exclude_replies"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "contributor_details"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/home_timeline.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/statuses/retweets_of_me",
            "t" : "Returns the most recent tweets authored by the authenticating user that have been retweeted by others. This timeline is a subset of the user's GET statuses/user_timeline.\n\nSee Working with Timelines for instructions on traversing timelines."
          },
          "displayName" : "statuses/retweets_of_me",
          "path" : "/statuses/retweets_of_me.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "trim_user"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_user_entities"
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/retweets_of_me.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/statuses/retweets/%3Aid",
            "t" : "Returns a collection of the 100 most recent retweets of the tweet specified by the id parameter."
          },
          "displayName" : "statuses/retweets/:id",
          "path" : "/statuses/retweets/{id}.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "trim_user"
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/retweets/{id}.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/statuses/show/%3Aid",
            "t" : "Returns a single Tweet, specified by the id parameter. The Tweet's author will also be embedded within the tweet.\n\nSee Embeddable Timelines, Embeddable Tweets, and GET statuses/oembed for tools to render Tweets according to Display Requirements."
          },
          "displayName" : "statuses/show/:id",
          "path" : "/statuses/show/{id}.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "trim_user"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_my_retweet"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/show/{id}.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/statuses/destroy/%3Aid",
            "t" : "Destroys the status specified by the required ID parameter. The authenticating user must be the\nauthor of the specified status. Returns the destroyed status if successful."
          },
          "displayName" : "statuses/destroy/:id",
          "path" : "/statuses/destroy/{id}.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "trim_user"
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/destroy/{id}.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/statuses/update",
            "t" : "Updates the authenticating user's current status, also known as tweeting. To upload an image to accompany the tweet, use POST statuses/update_with_media.\n\nFor each update attempt, the update text is compared with the authenticating user's recent tweets. Any attempt that would result in duplication..."
          },
          "displayName" : "statuses/update",
          "path" : "/statuses/update.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "status"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "in_reply_to_status_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "lat"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "long"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "place_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "display_coordinates"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "trim_user"
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/update.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/statuses/retweet/%3Aid",
            "t" : "Retweets a tweet. Returns the original tweet with retweet details embedded."
          },
          "displayName" : "statuses/retweet/:id",
          "path" : "/statuses/retweet/{id}.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "trim_user"
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/retweet/{id}.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/statuses/update_with_media",
            "t" : "Updates the authenticating user's current status and attaches media for upload. In other words, it creates a Tweet with a picture attached.\n\nUnlike POST statuses/update, this method expects raw multipart data. Your POST request's Content-Type should be set to multipart/form-data with the media[]..."
          },
          "displayName" : "statuses/update_with_media",
          "path" : "/statuses/update_with_media.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "status"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "media[]"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "possibly_sensitive"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "in_reply_to_status_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "lat"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "long"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "place_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "display_coordinates"
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/update_with_media.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/statuses/oembed",
            "t" : "Returns information allowing the creation of an embedded representation of a Tweet on third party sites.  See the oEmbed specification for information about the response format.\n\nWhile this endpoint allows a bit of customization for the final appearance of the embedded Tweet, be aware that the..."
          },
          "displayName" : "statuses/oembed",
          "path" : "/statuses/oembed.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "url"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : ""
            },
            {
              "required" : true,
              "style" : "query",
              "name" : ""
            },
            {
              "required" : true,
              "style" : "query",
              "name" : ""
            },
            {
              "required" : true,
              "style" : "query",
              "name" : ""
            },
            {
              "required" : true,
              "style" : "query",
              "name" : ""
            },
            {
              "required" : true,
              "style" : "query",
              "name" : ""
            },
            {
              "required" : true,
              "style" : "query",
              "name" : ""
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/oembed.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/statuses/retweeters/ids",
            "t" : "Returns a collection of up to 100 user IDs belonging to users who have retweeted the tweet specified by the id parameter.\nThis method offers similar data to GET statuses/retweets/:id and replaces API v1's GET statuses/:id/retweeted_by/ids method."
          },
          "displayName" : "statuses/retweeters/ids",
          "path" : "/statuses/retweeters/ids.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "stringify_ids"
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/retweeters/ids.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/search/tweets",
            "t" : "Returns a collection of relevant Tweets matching a specified query.\n\nPlease note that Twitter's search service and, by extension, the Search API is not meant to be an exhaustive source of Tweets. Not all Tweets will be indexed or made available via the search interface.\n\nIn API v1.1, the response..."
          },
          "displayName" : "search/tweets",
          "path" : "/search/tweets.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "q"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "geocode"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "lang"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "locale"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "result_type"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "until"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "callback"
            }
          ],
          "url" : "https://api.twitter.com/1.1/search/tweets.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/statuses/filter",
            "t" : "Returns public statuses that match one or more filter predicates. Multiple parameters may be specified which allows most clients to use a single connection to the Streaming API.  Both GET and POST requests are supported, but GET requests with too many parameters may cause the request to be..."
          },
          "displayName" : "statuses/filter",
          "path" : "/statuses/filter.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "follow"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "track"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "locations"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "delimited"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "stall_warnings"
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/filter.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/statuses/sample",
            "t" : "Returns a small random sample of all public statuses.  The Tweets returned by the default access level are the same, so if two different clients connect to this endpoint, they will see the same Tweets."
          },
          "displayName" : "statuses/sample",
          "path" : "/statuses/sample.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "delimited"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "stall_warnings"
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/sample.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/statuses/firehose",
            "t" : "This endpoint requires special permission to access.\nReturns all public statuses. Few applications require this level of access. Creative use of a combination of other resources and various access levels can satisfy nearly every application use case."
          },
          "displayName" : "statuses/firehose",
          "path" : "/statuses/firehose.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "delimited"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "stall_warnings"
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/firehose.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/user",
            "t" : "Streams messages for a single user, as described in User streams."
          },
          "displayName" : "user",
          "path" : "/user.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "delimited"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "stall_warnings"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "with"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "replies"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "track"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "locations"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "stringify_friend_ids"
            }
          ],
          "url" : "https://api.twitter.com/1.1/user.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/site",
            "t" : "Streams messages for a set of users, as described in Site streams."
          },
          "displayName" : "site",
          "path" : "/site.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "follow"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "delimited"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "stall_warnings"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "with"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "replies"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "stringify_friend_ids"
            }
          ],
          "url" : "https://api.twitter.com/1.1/site.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/direct_messages",
            "t" : "Returns the 20 most recent direct messages sent to the authenticating user. Includes detailed information about the sender and recipient user. You can request up to 200 direct messages per call, up to a maximum of 800 incoming DMs.\nImportant: This method requires an access token with RWD (read,..."
          },
          "displayName" : "direct_messages",
          "path" : "/direct_messages.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "url" : "https://api.twitter.com/1.1/direct_messages.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/direct_messages/sent",
            "t" : "Returns the 20 most recent direct messages sent by the authenticating user. Includes detailed information about the sender and recipient user. You can request up to 200 direct messages per call, up to a maximum of 800 outgoing DMs.\nImportant: This method requires an access token with RWD (read,..."
          },
          "displayName" : "direct_messages/sent",
          "path" : "/direct_messages/sent.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "url" : "https://api.twitter.com/1.1/direct_messages/sent.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/direct_messages/show",
            "t" : "Returns a single direct message, specified by an id parameter. Like the /1.1/direct_messages.format request, this method will include the user objects of the sender and recipient. \nImportant: This method requires an access token with RWD (read, write..."
          },
          "displayName" : "direct_messages/show",
          "path" : "/direct_messages/show.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "id"
            }
          ],
          "url" : "https://api.twitter.com/1.1/direct_messages/show.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/direct_messages/destroy",
            "t" : "Destroys the direct message specified in the required ID parameter. The authenticating user must be the recipient of the specified direct message.\n\n\nImportant: This method requires an access token with RWD (read, write..."
          },
          "displayName" : "direct_messages/destroy",
          "path" : "/direct_messages/destroy.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "url" : "https://api.twitter.com/1.1/direct_messages/destroy.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/direct_messages/new",
            "t" : "Sends a new direct message to the specified user from the authenticating user. Requires both the user and text parameters and must be a POST. Returns the sent message in the requested format if successful."
          },
          "displayName" : "direct_messages/new",
          "path" : "/direct_messages/new.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "text"
            }
          ],
          "url" : "https://api.twitter.com/1.1/direct_messages/new.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/friendships/no_retweets/ids",
            "t" : "Returns a collection of user_ids that the currently authenticated user does not want to receive retweets from.\nUse POST friendships/update to set the \"no retweets\" status for a given user account on behalf of the current user."
          },
          "displayName" : "friendships/no_retweets/ids",
          "path" : "/friendships/no_retweets/ids.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "stringify_ids"
            }
          ],
          "url" : "https://api.twitter.com/1.1/friendships/no_retweets/ids.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/friends/ids",
            "t" : "Returns a cursored collection of user IDs for every user the specified user is following (otherwise known as their \"friends\").\n\nAt this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues...."
          },
          "displayName" : "friends/ids",
          "path" : "/friends/ids.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "stringify_ids"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            }
          ],
          "url" : "https://api.twitter.com/1.1/friends/ids.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/followers/ids",
            "t" : "Returns a cursored collection of user IDs for every user following the specified user.\n\nAt this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 5,000 user..."
          },
          "displayName" : "followers/ids",
          "path" : "/followers/ids.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "stringify_ids"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            }
          ],
          "url" : "https://api.twitter.com/1.1/followers/ids.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/friendships/incoming",
            "t" : "Returns a collection of numeric IDs for every user who has a pending request to follow the authenticating user."
          },
          "displayName" : "friendships/incoming",
          "path" : "/friendships/incoming.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "stringify_ids"
            }
          ],
          "url" : "https://api.twitter.com/1.1/friendships/incoming.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/friendships/outgoing",
            "t" : "Returns a collection of numeric IDs for every protected user for whom the authenticating user has a pending follow request."
          },
          "displayName" : "friendships/outgoing",
          "path" : "/friendships/outgoing.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "stringify_ids"
            }
          ],
          "url" : "https://api.twitter.com/1.1/friendships/outgoing.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/friendships/create",
            "t" : "Allows the authenticating users to follow the user specified in the ID parameter.\nReturns the befriended user in the requested format when successful. Returns a string describing the failure condition when unsuccessful. If you are already friends with the user a HTTP 403 may be returned, though for..."
          },
          "displayName" : "friendships/create",
          "path" : "/friendships/create.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "follow"
            }
          ],
          "url" : "https://api.twitter.com/1.1/friendships/create.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/friendships/destroy",
            "t" : "Allows the authenticating user to unfollow the user specified in the ID parameter.\nReturns the unfollowed user in the requested format when successful. Returns a string describing the failure condition when unsuccessful.\nActions taken in this method are asynchronous and changes will be eventually..."
          },
          "displayName" : "friendships/destroy",
          "path" : "/friendships/destroy.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            }
          ],
          "url" : "https://api.twitter.com/1.1/friendships/destroy.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/friendships/update",
            "t" : "Allows one to enable or disable retweets and device notifications from the specified user."
          },
          "displayName" : "friendships/update",
          "path" : "/friendships/update.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "device"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "retweets"
            }
          ],
          "url" : "https://api.twitter.com/1.1/friendships/update.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/friendships/show",
            "t" : "Returns detailed information about the relationship between two arbitrary users."
          },
          "displayName" : "friendships/show",
          "path" : "/friendships/show.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "source_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "source_screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "target_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "target_screen_name"
            }
          ],
          "url" : "https://api.twitter.com/1.1/friendships/show.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/friends/list",
            "t" : "Returns a cursored collection of user objects for every user the specified user is following (otherwise known as their \"friends\").\n\nAt this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues..."
          },
          "displayName" : "friends/list",
          "path" : "/friends/list.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : ""
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_user_entities"
            }
          ],
          "url" : "https://api.twitter.com/1.1/friends/list.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/followers/list",
            "t" : "Returns a cursored collection of user objects for users following the specified user.\n\nAt this time, results are ordered with the most recent following first — however, this ordering is subject to unannounced change and eventual consistency issues. Results are given in groups of 20 users and..."
          },
          "displayName" : "followers/list",
          "path" : "/followers/list.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : ""
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_user_entities"
            }
          ],
          "url" : "https://api.twitter.com/1.1/followers/list.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/friendships/lookup",
            "t" : "Returns the relationships of the authenticating user to the comma-separated list of up to 100 screen_names or user_ids provided. Values for connections can be: following, following_requested, followed_by, none, blocking."
          },
          "displayName" : "friendships/lookup",
          "path" : "/friendships/lookup.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            }
          ],
          "url" : "https://api.twitter.com/1.1/friendships/lookup.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/account/settings",
            "t" : "Returns settings (including current trend, geo and sleep time information) for the authenticating user."
          },
          "displayName" : "account/settings",
          "path" : "/account/settings.json",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.twitter.com/1.1/account/settings.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/account/verify_credentials",
            "t" : "Returns an HTTP 200 OK response code and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not. Use this method to test if supplied user credentials are valid."
          },
          "displayName" : "account/verify_credentials",
          "path" : "/account/verify_credentials.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/verify_credentials.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/account/settings",
            "t" : "Updates the authenticating user's settings."
          },
          "displayName" : "account/settings",
          "path" : "/account/settings.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "trend_location_woeid"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "sleep_time_enabled"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "start_sleep_time"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "end_sleep_time"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "time_zone"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "lang"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/settings.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/account/update_delivery_device",
            "t" : "Sets which device Twitter delivers updates to for the authenticating user. Sending none as the device parameter will disable SMS updates."
          },
          "displayName" : "account/update_delivery_device",
          "path" : "/account/update_delivery_device.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "device"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/update_delivery_device.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/account/update_profile",
            "t" : "Sets values that users are able to set under the \"Account\" tab of their settings page. Only the parameters specified will be updated."
          },
          "displayName" : "account/update_profile",
          "path" : "/account/update_profile.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "url"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "location"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "description"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/update_profile.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/account/update_profile_background_image",
            "t" : "Updates the authenticating user's profile background image. This method can also be used to enable or disable the profile background image.\n\nAlthough each parameter is marked as optional, at least one of image, tile or use must be provided when making this request."
          },
          "displayName" : "account/update_profile_background_image",
          "path" : "/account/update_profile_background_image.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "image"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "tile"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "use"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/update_profile_background_image.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/account/update_profile_colors",
            "t" : "Sets one or more hex values that control the color scheme of the authenticating user's profile page on twitter.com. Each parameter's value must be a valid hexidecimal value, and may be either three or six characters (ex: #fff or #ffffff)."
          },
          "displayName" : "account/update_profile_colors",
          "path" : "/account/update_profile_colors.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "profile_background_color"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "profile_link_color"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "profile_sidebar_border_color"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "profile_sidebar_fill_color"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "profile_text_color"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/update_profile_colors.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/account/update_profile_image",
            "t" : "Updates the authenticating user's profile image. Note that this method expects raw multipart data, not a URL to an image.\nThis method asynchronously processes the uploaded file before updating the user's profile image URL. You can either update your local cache the next time you request the user's..."
          },
          "displayName" : "account/update_profile_image",
          "path" : "/account/update_profile_image.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "image"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/update_profile_image.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/blocks/list",
            "t" : "Returns a collection of user objects that the authenticating user is blocking.\nImportant On October 15, 2012 this method will become cursored by default, altering the default response format. See Using cursors to navigate collections for more details on how cursoring works."
          },
          "displayName" : "blocks/list",
          "path" : "/blocks/list.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "cursor"
            }
          ],
          "url" : "https://api.twitter.com/1.1/blocks/list.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/blocks/ids",
            "t" : "Returns an array of numeric user ids the authenticating user is blocking.\nImportant On October 15, 2012 this method will become cursored by default, altering the default response format. See Using cursors to navigate collections for more details on how cursoring works."
          },
          "displayName" : "blocks/ids",
          "path" : "/blocks/ids.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "stringify_ids"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "cursor"
            }
          ],
          "url" : "https://api.twitter.com/1.1/blocks/ids.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/blocks/create",
            "t" : "Blocks the specified user from following the authenticating user. In addition the blocked user will not show in the authenticating users mentions or timeline (unless retweeted by another user). If a follow or friend relationship exists it is destroyed."
          },
          "displayName" : "blocks/create",
          "path" : "/blocks/create.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "url" : "https://api.twitter.com/1.1/blocks/create.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/blocks/destroy",
            "t" : "Un-blocks the user specified in the ID parameter for the authenticating user. Returns the un-blocked user in the requested format when successful.  If relationships existed before the block was instated, they will not be restored."
          },
          "displayName" : "blocks/destroy",
          "path" : "/blocks/destroy.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "url" : "https://api.twitter.com/1.1/blocks/destroy.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/users/lookup",
            "t" : "Returns fully-hydrated user objects for up to 100 users per request, as specified by comma-separated values passed to the user_id and/or screen_name parameters.\n\nThis method is especially useful when used in conjunction with collections of user IDs returned from GET friends/ids and GET followers/..."
          },
          "displayName" : "users/lookup",
          "path" : "/users/lookup.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/lookup.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/users/show",
            "t" : "Returns a variety of information about the user specified by the required user_id or screen_name parameter. The author's most recent Tweet will be returned inline when possible.\n\nGET users/lookup is used to retrieve a bulk collection of user objects."
          },
          "displayName" : "users/show",
          "path" : "/users/show.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/show.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/users/search",
            "t" : "Provides a simple, relevance-based search interface to public user accounts on Twitter. Try querying by topical interest, full name, company name, location, or other criteria. Exact match searches are not supported.\n\nOnly the first 1,000 matching results are available."
          },
          "displayName" : "users/search",
          "path" : "/users/search.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "q"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/search.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/users/contributees",
            "t" : "Returns a collection of users that the specified user can \"contribute\" to."
          },
          "displayName" : "users/contributees",
          "path" : "/users/contributees.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/contributees.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/users/contributors",
            "t" : "Returns a collection of users who can contribute to the specified account."
          },
          "displayName" : "users/contributors",
          "path" : "/users/contributors.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/contributors.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/account/remove_profile_banner",
            "t" : "Removes the uploaded profile banner for the authenticating user. Returns HTTP 200 upon success."
          },
          "displayName" : "account/remove_profile_banner",
          "path" : "/account/remove_profile_banner.json",
          "httpMethod" : "POST",
          "params" : [ ],
          "url" : "https://api.twitter.com/1.1/account/remove_profile_banner.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/account/update_profile_banner",
            "t" : "Uploads a profile banner on behalf of the authenticating user. For best results, upload an"
          },
          "displayName" : "account/update_profile_banner",
          "path" : "/account/update_profile_banner.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "banner"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "width"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "height"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "offset_left"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "offset_top"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/update_profile_banner.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/users/profile_banner",
            "t" : "Returns a map of the available size variations of the specified user's profile banner. If the user has not uploaded a profile banner, a HTTP 404 will be served instead. This method can be used instead of string manipulation on the profile_banner_url returned in user objects as described in User..."
          },
          "displayName" : "users/profile_banner",
          "path" : "/users/profile_banner.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/profile_banner.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/users/suggestions/%3Aslug",
            "t" : "Access the users in a given category of the Twitter suggested user list.\nIt is recommended that applications cache this data for no more than one hour."
          },
          "displayName" : "users/suggestions/:slug",
          "path" : "/users/suggestions/{slug}.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "lang"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/suggestions/{slug}.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/users/suggestions",
            "t" : "Access to Twitter's suggested user list. This returns the list of suggested user categories. The category can be used in GET users/suggestions/:slug to get the users in that category."
          },
          "displayName" : "users/suggestions",
          "path" : "/users/suggestions.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "lang"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/suggestions.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/users/suggestions/%3Aslug/members",
            "t" : "Access the users in a given category of the Twitter suggested user list and return their most recent status if they are not a protected user."
          },
          "displayName" : "users/suggestions/:slug/members",
          "path" : "/users/suggestions/{slug}/members.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "slug"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/suggestions/{slug}/members.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/favorites/list",
            "t" : "Returns the 20 most recent Tweets favorited by the authenticating or specified user."
          },
          "displayName" : "favorites/list",
          "path" : "/favorites/list.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "url" : "https://api.twitter.com/1.1/favorites/list.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/favorites/destroy",
            "t" : "Un-favorites the status specified in the ID parameter as the authenticating user. Returns the un-favorited status in the requested format when successful.\nThis process invoked by this method is asynchronous. The immediately returned status may not indicate the resultant favorited status of the..."
          },
          "displayName" : "favorites/destroy",
          "path" : "/favorites/destroy.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "url" : "https://api.twitter.com/1.1/favorites/destroy.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/favorites/create",
            "t" : "Favorites the status specified in the ID parameter as the authenticating user. Returns the favorite status when successful.\nThis process invoked by this method is asynchronous. The immediately returned status may not indicate the resultant favorited status of the tweet. A 200 OK response from this..."
          },
          "displayName" : "favorites/create",
          "path" : "/favorites/create.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "url" : "https://api.twitter.com/1.1/favorites/create.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/lists/list",
            "t" : "Returns all lists the authenticating or specified user subscribes to, including their own. The user is specified using the user_id or screen_name parameters. If no user is given, the authenticating user is used.\n\nThis method used to be GET lists in version 1.0 of the API and has been renamed for..."
          },
          "displayName" : "lists/list",
          "path" : "/lists/list.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "reverse"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/list.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/lists/statuses",
            "t" : "Returns a timeline of tweets authored by members of the specified list. Retweets are included by default. Use the include_rts=false parameter to omit retweets.\nEmbedded Timelines is a great way to embed list timelines on your website."
          },
          "displayName" : "lists/statuses",
          "path" : "/lists/statuses.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_rts"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/statuses.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/lists/members/destroy",
            "t" : "Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list."
          },
          "displayName" : "lists/members/destroy",
          "path" : "/lists/members/destroy.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_id"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/members/destroy.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/lists/memberships",
            "t" : "Returns the lists the specified user has been added to. If user_id or screen_name are not provided the memberships for the authenticating user are returned."
          },
          "displayName" : "lists/memberships",
          "path" : "/lists/memberships.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "filter_to_owned_lists"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/memberships.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/lists/subscribers",
            "t" : "Returns the subscribers of the specified list. Private list subscribers will only be shown if the authenticated user owns the specified list."
          },
          "displayName" : "lists/subscribers",
          "path" : "/lists/subscribers.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/subscribers.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/lists/subscribers/create",
            "t" : "Subscribes the authenticated user to the specified list."
          },
          "displayName" : "lists/subscribers/create",
          "path" : "/lists/subscribers/create.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "slug"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/subscribers/create.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/lists/subscribers/show",
            "t" : "Check if the specified user is a subscriber of the specified list. Returns the user if they are subscriber."
          },
          "displayName" : "lists/subscribers/show",
          "path" : "/lists/subscribers/show.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/subscribers/show.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/lists/subscribers/destroy",
            "t" : "Unsubscribes the authenticated user from the specified list."
          },
          "displayName" : "lists/subscribers/destroy",
          "path" : "/lists/subscribers/destroy.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_id"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/subscribers/destroy.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/lists/members/create_all",
            "t" : "Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Note that lists can't have more than 5,000 members, and you are limited to adding up to 100 members to a list at a time with..."
          },
          "displayName" : "lists/members/create_all",
          "path" : "/lists/members/create_all.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_id"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/members/create_all.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/lists/members/show",
            "t" : "Check if the specified user is a member of the specified list."
          },
          "displayName" : "lists/members/show",
          "path" : "/lists/members/show.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/members/show.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/lists/members",
            "t" : "Returns the members of the specified list. Private list members will only be shown if the authenticated user owns the specified list."
          },
          "displayName" : "lists/members",
          "path" : "/lists/members.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/members.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/lists/members/create",
            "t" : "Add a member to a list. The authenticated user must own the list to be able to add members to it. Note that lists cannot have more than 5,000 members."
          },
          "displayName" : "lists/members/create",
          "path" : "/lists/members/create.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_id"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/members/create.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/lists/destroy",
            "t" : "Deletes the specified list. The authenticated user must own the list to be able to destroy it."
          },
          "displayName" : "lists/destroy",
          "path" : "/lists/destroy.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "slug"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/destroy.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/lists/update",
            "t" : "Updates the specified list. The authenticated user must own the list to be able to update it."
          },
          "displayName" : "lists/update",
          "path" : "/lists/update.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "mode"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "description"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_id"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/update.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/lists/create",
            "t" : "Creates a new list for the authenticated user. Note that you can't create more than 20 lists per account."
          },
          "displayName" : "lists/create",
          "path" : "/lists/create.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "mode"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "description"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/create.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/lists/show",
            "t" : "Returns the specified list. Private lists will only be shown if the authenticated user owns the specified list."
          },
          "displayName" : "lists/show",
          "path" : "/lists/show.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_id"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/show.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/lists/subscriptions",
            "t" : "Obtain a collection of the lists the specified user is subscribed to, 20 lists per page by default.  Does not include the user's own lists."
          },
          "displayName" : "lists/subscriptions",
          "path" : "/lists/subscriptions.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "cursor"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/subscriptions.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/lists/members/destroy_all",
            "t" : "Removes multiple members from a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to remove members from it. Note that lists can't have more than 500 members, and you are limited to removing up to 100 members to a list at a..."
          },
          "displayName" : "lists/members/destroy_all",
          "path" : "/lists/members/destroy_all.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "owner_id"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/members/destroy_all.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/lists/ownerships",
            "t" : "Returns the lists owned by the specified Twitter user. Private lists will only be shown if the authenticated user is also the owner of the lists."
          },
          "displayName" : "lists/ownerships",
          "path" : "/lists/ownerships.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "cursor"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/ownerships.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/saved_searches/list",
            "t" : "Returns the authenticated user's saved search queries."
          },
          "displayName" : "saved_searches/list",
          "path" : "/saved_searches/list.json",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.twitter.com/1.1/saved_searches/list.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/saved_searches/show/%3Aid",
            "t" : "Retrieve the information for the saved search represented by the given id. The authenticating user must be the owner of saved search ID being requested."
          },
          "displayName" : "saved_searches/show/:id",
          "path" : "/saved_searches/show/{id}.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "id"
            }
          ],
          "url" : "https://api.twitter.com/1.1/saved_searches/show/{id}.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/saved_searches/create",
            "t" : "Create a new saved search for the authenticated user. A user may only have 25 saved searches."
          },
          "displayName" : "saved_searches/create",
          "path" : "/saved_searches/create.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "query"
            }
          ],
          "url" : "https://api.twitter.com/1.1/saved_searches/create.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/saved_searches/destroy/%3Aid",
            "t" : "Destroys a saved search for the authenticating user. The authenticating user must be the owner of saved search id being destroyed."
          },
          "displayName" : "saved_searches/destroy/:id",
          "path" : "/saved_searches/destroy/{id}.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "id"
            }
          ],
          "url" : "https://api.twitter.com/1.1/saved_searches/destroy/{id}.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/geo/id/%3Aplace_id",
            "t" : "Returns all the information about a known place."
          },
          "displayName" : "geo/id/:place_id",
          "path" : "/geo/id/:place_id.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "place_id"
            }
          ],
          "url" : "https://api.twitter.com/1.1/geo/id/:place_id.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/geo/reverse_geocode",
            "t" : "Given a latitude and a longitude, searches for up to 20 places that can be used as a place_id when updating a status.\nThis request is an informative call and will deliver generalized results about geography."
          },
          "displayName" : "geo/reverse_geocode",
          "path" : "/geo/reverse_geocode.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "lat"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "long"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "accuracy"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "granularity"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "max_results"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "callback"
            }
          ],
          "url" : "https://api.twitter.com/1.1/geo/reverse_geocode.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/geo/search",
            "t" : "Search for places that can be attached to a statuses/update. Given a latitude and a longitude pair, an IP address, or a name, this request will return a list of all the valid places that can be used as the place_id when updating a status.\n\nConceptually, a query can be made from the user's location..."
          },
          "displayName" : "geo/search",
          "path" : "/geo/search.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "lat"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "long"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "query"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "ip"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "granularity"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "accuracy"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "max_results"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "contained_within"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "attribute:street_address"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "callback"
            }
          ],
          "url" : "https://api.twitter.com/1.1/geo/search.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/geo/similar_places",
            "t" : "Locates places near the given coordinates which are similar in name."
          },
          "displayName" : "geo/similar_places",
          "path" : "/geo/similar_places.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "lat"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "long"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "contained_within"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "attribute:street_address"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "callback"
            }
          ],
          "url" : "https://api.twitter.com/1.1/geo/similar_places.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/geo/place",
            "t" : "As of December 2nd, 2013, this endpoint is deprecated and retired and no longer functions. Place creation was used infrequently by third party applications and is generally no longer supported on Twitter. Requests will return with status 410 (Gone) with error code 251.\nFollow the discussion about..."
          },
          "displayName" : "geo/place",
          "path" : "/geo/place.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "name"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "contained_within"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "token"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "lat"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "long"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "attribute:street_address"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "callback"
            }
          ],
          "url" : "https://api.twitter.com/1.1/geo/place.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/trends/place",
            "t" : "Returns the top 10 trending topics for a specific WOEID, if trending information is available for it.\nThe response is an array of \"trend\" objects that encode the name of the trending topic, the query parameter that can be used to search for the topic on Twitter Search, and the Twitter Search URL...."
          },
          "displayName" : "trends/place",
          "path" : "/trends/place.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "id"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "exclude"
            }
          ],
          "url" : "https://api.twitter.com/1.1/trends/place.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/trends/available",
            "t" : "Returns the locations that Twitter has trending topic information for.\nThe response is an array of \"locations\" that encode the location's WOEID and some other human-readable information such as a canonical name and country the location belongs in.\nA WOEID is a Yahoo! Where On Earth ID."
          },
          "displayName" : "trends/available",
          "path" : "/trends/available.json",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.twitter.com/1.1/trends/available.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/trends/closest",
            "t" : "Returns the locations that Twitter has trending topic information for, closest to a specified location.\nThe response is an array of \"locations\" that encode the location's WOEID and some other human-readable information such as a canonical name and country the location belongs in.\nA WOEID is a Yahoo..."
          },
          "displayName" : "trends/closest",
          "path" : "/trends/closest.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "lat"
            },
            {
              "required" : true,
              "style" : "query",
              "name" : "long"
            }
          ],
          "url" : "https://api.twitter.com/1.1/trends/closest.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/users/report_spam",
            "t" : "Report the specified user as a spam account to Twitter. Additionally performs the equivalent of POST blocks/create on behalf of the authenticated user."
          },
          "displayName" : "users/report_spam",
          "path" : "/users/report_spam.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "user_id"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/report_spam.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1/get/oauth/authenticate",
            "t" : "Allows a Consumer application to use an OAuth request_token to request user authorization. \nThis method is a replacement of Section 6.2 of the OAuth 1.0 authentication flow for applications using the callback authentication flow. The method will use the currently logged in user as the account for..."
          },
          "displayName" : "oauth/authenticate",
          "path" : "/oauth/authenticate.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "force_login"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            }
          ],
          "url" : "https://api.twitter.com/1.1/oauth/authenticate.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1/get/oauth/authorize",
            "t" : "Allows a Consumer application to use an OAuth Request Token to request user authorization. This method fulfills Section 6.2 of the OAuth 1.0 authentication flow. Desktop applications must use this method (and cannot use GET oauth/authenticate).\nPlease use HTTPS for this method, and all other OAuth..."
          },
          "displayName" : "oauth/authorize",
          "path" : "/oauth/authorize.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "force_login"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "screen_name"
            }
          ],
          "url" : "https://api.twitter.com/1.1/oauth/authorize.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1/post/oauth/access_token",
            "t" : "Allows a Consumer application to exchange the OAuth Request Token for an OAuth Access Token. This method fulfills Section 6.3 of the OAuth 1.0 authentication flow.\nThe OAuth access token may also be used for xAuth operations.\nPlease use HTTPS for this method, and all other OAuth token negotiation..."
          },
          "displayName" : "oauth/access_token",
          "path" : "/oauth/access_token.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "x_auth_password"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "x_auth_username"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "x_auth_mode"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "oauth_verifier"
            }
          ],
          "url" : "https://api.twitter.com/1.1/oauth/access_token.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1/post/oauth/request_token",
            "t" : "Allows a Consumer application to obtain an OAuth Request Token to request user authorization. This method fulfills Section 6.1 of the OAuth 1.0 authentication flow.\nIt is strongly recommended you use HTTPS for all OAuth authorization steps.\nUsage Note: Only ASCII values are accepted for the..."
          },
          "displayName" : "oauth/request_token",
          "path" : "/oauth/request_token.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "oauth_callback"
            },
            {
              "required" : false,
              "style" : "query",
              "name" : "x_auth_access_type"
            }
          ],
          "url" : "https://api.twitter.com/1.1/oauth/request_token.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/oauth2/token",
            "t" : "Allows a registered application to obtain an OAuth 2 Bearer Token, which can be used to make API requests on an application's own behalf, without a user context. This is called Application-only authentication.\n\nA Bearer Token may be invalidated using oauth2/invalidate_token. Once a Bearer Token has..."
          },
          "displayName" : "oauth2/token",
          "path" : "/oauth2/token.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "grant_type"
            }
          ],
          "url" : "https://api.twitter.com/1.1/oauth2/token.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/post/oauth2/invalidate_token",
            "t" : "Allows a registered application to revoke an issued OAuth 2 Bearer Token by presenting its client credentials. Once a Bearer Token has been invalidated, new creation attempts will yield a different Bearer Token and usage of the invalidated token will no longer be allowed.\n\nAs with all API v1.1..."
          },
          "displayName" : "oauth2/invalidate_token",
          "path" : "/oauth2/invalidate_token.json",
          "httpMethod" : "POST",
          "params" : [
            {
              "required" : true,
              "style" : "query",
              "name" : "access_token"
            }
          ],
          "url" : "https://api.twitter.com/1.1/oauth2/invalidate_token.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/help/configuration",
            "t" : "Returns the current configuration used by Twitter including twitter.com slugs which are not usernames, maximum photo resolutions, and t.co URL lengths.\n\nIt is recommended applications request this endpoint when they are loaded, but no more than once a day."
          },
          "displayName" : "help/configuration",
          "path" : "/help/configuration.json",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.twitter.com/1.1/help/configuration.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/help/languages",
            "t" : "Returns the list of languages supported by Twitter along with their ISO 639-1 code. The ISO 639-1 code is the two letter value to use if you include lang with any of your requests."
          },
          "displayName" : "help/languages",
          "path" : "/help/languages.json",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.twitter.com/1.1/help/languages.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/help/privacy",
            "t" : "Returns Twitter's Privacy Policy."
          },
          "displayName" : "help/privacy",
          "path" : "/help/privacy.json",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.twitter.com/1.1/help/privacy.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/help/tos",
            "t" : "Returns the Twitter Terms of Service in the requested format. These are not the same as the Developer Rules of the Road."
          },
          "displayName" : "help/tos",
          "path" : "/help/tos.json",
          "httpMethod" : "GET",
          "params" : [ ],
          "url" : "https://api.twitter.com/1.1/help/tos.json"
        },
        {
          "doc" : {
            "url" : "/docs/api/1.1/get/application/rate_limit_status",
            "t" : "Returns the current rate limits for methods belonging to the specified resource families.\n\nEach 1.1 API resource belongs to a \"resource family\" which is indicated in its method documentation. You can typically determine a method's resource family from the first component of the path after the..."
          },
          "displayName" : "application/rate_limit_status",
          "path" : "/application/rate_limit_status.json",
          "httpMethod" : "GET",
          "params" : [
            {
              "required" : false,
              "style" : "query",
              "name" : "resources"
            }
          ],
          "url" : "https://api.twitter.com/1.1/application/rate_limit_status.json"
        }
      ]
    },
    "oauth" : {
      "development" : {
        "version" : "1.0",
        "key" : "jJtghQn41kzvaIdyjPA7by2W5",
        "secret" : "jt4tMJOFXazArxYu3efsv9WJ5aO2eWiQdtC0t05XzHAllqvuSW",
        "accessTokenURL" : "https://api.twitter.com/oauth/access_token",
        "requestTokenURL" : "https://api.twitter.com/oauth/request_token",
        "authTokenURL" : "https://api.twitter.com/oauth/authorize",
        "tokenMethod" : "oauth_signed"
      },
      "staging" : {
        "version" : "1.0",
        "key" : "97w9x63DUmWcuYoKy4p8epWFu",
        "secret" : "n0b5smHWGP1cNpBT02sGqlg6JRQ2LZOrRtfM6X2I4DbegYuiLy",
        "accessTokenURL" : "https://api.twitter.com/oauth/access_token",
        "requestTokenURL" : "https://api.twitter.com/oauth/request_token",
        "authTokenURL" : "https://api.twitter.com/oauth/authorize",
        "tokenMethod" : "oauth_signed"
      },
      "production" : {
        "version" : "1.0",
        "key" : "di4CBlZkwJp7rJoaqP6fBA0yC",
        "secret" : "2Ndg7hDyGR0Roe3P2AQ5ttL7yG6lRmU1UQ9mjFn40HtBc5C073",
        "accessTokenURL" : "https://api.twitter.com/oauth/access_token",
        "requestTokenURL" : "https://api.twitter.com/oauth/request_token",
        "authTokenURL" : "https://api.twitter.com/oauth/authorize",
        "tokenMethod" : "oauth_signed"
      }
    },
    "type" : "channel:twitter"
  },
  {
    "_id" : "54078e046b465e1815c63737",
    "__v" : 0,
    "application" : {
      "base" : "http://foo.teamworkpm.net",
      "resources" : [
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/account"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account.json",
          "path" : "/account.json",
          "url" : "http://foo.teamworkpm.net/account.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/account"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/authenticate.json",
          "path" : "/authenticate.json",
          "url" : "http://foo.teamworkpm.net/authenticate.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/activity#latest_activity_a"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/latestActivity.json",
          "path" : "/latestActivity.json",
          "url" : "http://foo.teamworkpm.net/latestActivity.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/activity#latest_activity_a"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{project_id}/latestActivity.json",
          "path" : "/projects/{project_id}/latestActivity.json",
          "url" : "http://foo.teamworkpm.net/projects/{project_id}/latestActivity.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://developer.teamwork.com/activity#latest_activity_a"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/activity/{id}.json",
          "path" : "/activity/{id}.json",
          "url" : "http://foo.teamworkpm.net/activity/{id}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://developer.teamwork.com/messagecategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{project_id}/messageCategories.json",
          "path" : "/projects/{project_id}/messageCategories.json",
          "url" : "http://foo.teamworkpm.net/projects/{project_id}/messageCategories.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/messagecategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/messageCategories/{id}.json",
          "path" : "/messageCategories/{id}.json",
          "url" : "http://foo.teamworkpm.net/messageCategories/{id}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/messagecategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{project_id}/messageCategories.json",
          "path" : "/projects/{project_id}/messageCategories.json",
          "url" : "http://foo.teamworkpm.net/projects/{project_id}/messageCategories.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://developer.teamwork.com/messagecategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/messageCategories/{id}.json",
          "path" : "/messageCategories/{id}.json",
          "url" : "http://foo.teamworkpm.net/messageCategories/{id}.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://developer.teamwork.com/messagecategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/messageCategories/{id}.json",
          "path" : "/messageCategories/{id}.json",
          "url" : "http://foo.teamworkpm.net/messageCategories/{id}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://developer.teamwork.com/filecategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{project_id}/fileCategories.json",
          "path" : "/projects/{project_id}/fileCategories.json",
          "url" : "http://foo.teamworkpm.net/projects/{project_id}/fileCategories.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/filecategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/fileCategories/{id}.json",
          "path" : "/fileCategories/{id}.json",
          "url" : "http://foo.teamworkpm.net/fileCategories/{id}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/filecategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/projects/{project_id}/fileCategories.json",
          "displayName" : "/projects/{project_id}/fileCategories.json",
          "url" : "http://foo.teamworkpm.net/projects/{project_id}/fileCategories.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://developer.teamwork.com/filecategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/fileCategories/{id}.json",
          "path" : "/fileCategories/{id}.json",
          "url" : "http://foo.teamworkpm.net/fileCategories/{id}.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://developer.teamwork.com/filecategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/fileCategories/{id}.json",
          "path" : "/fileCategories/{id}.json",
          "url" : "http://foo.teamworkpm.net/fileCategories/{id}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://developer.teamwork.com/notebookcategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{project_id}/notebookCategories.json",
          "path" : "/projects/{project_id}/notebookCategories.json",
          "url" : "http://foo.teamworkpm.net/projects/{project_id}/notebookCategories.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/notebookcategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/notebookCategories/{id}.json",
          "path" : "/notebookCategories/{id}.json",
          "url" : "http://foo.teamworkpm.net/notebookCategories/{id}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/notebookcategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{project_id}/notebookCategories.json",
          "path" : "/projects/{project_id}/notebookCategories.json",
          "url" : "http://foo.teamworkpm.net/projects/{project_id}/notebookCategories.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://developer.teamwork.com/notebookcategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/notebookCategories/{id}.json",
          "path" : "/notebookCategories/{id}.json",
          "url" : "http://foo.teamworkpm.net/notebookCategories/{id}.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://developer.teamwork.com/notebookcategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/notebookCategories/{id}.json",
          "path" : "/notebookCategories/{id}.json",
          "url" : "http://foo.teamworkpm.net/notebookCategories/{id}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://developer.teamwork.com/linkcategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/projects/#{project_id}/linkCategories.json",
          "displayName" : "/projects/#{project_id}/linkCategories.json",
          "url" : "http://foo.teamworkpm.net/projects/#{project_id}/linkCategories.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/linkcategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/linkCategories/#{id}.json",
          "path" : "/linkCategories/#{id}.json",
          "url" : "http://foo.teamworkpm.net/linkCategories/#{id}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/linkcategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/#{project_id}/linkCategories.json",
          "path" : "/projects/#{project_id}/linkCategories.json",
          "url" : "http://foo.teamworkpm.net/projects/#{project_id}/linkCategories.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://developer.teamwork.com/linkcategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/linkCategories/#{id}.json",
          "path" : "/linkCategories/#{id}.json",
          "url" : "http://foo.teamworkpm.net/linkCategories/#{id}.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://developer.teamwork.com/linkcategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/linkCategories/#{id}.json",
          "path" : "/linkCategories/#{id}.json",
          "url" : "http://foo.teamworkpm.net/linkCategories/#{id}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://developer.teamwork.com/projectcategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projectcategories.json",
          "path" : "/projectcategories.json",
          "url" : "http://foo.teamworkpm.net/projectcategories.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/projectcategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projectCategories/{id}.json",
          "path" : "/projectCategories/{id}.json",
          "url" : "http://foo.teamworkpm.net/projectCategories/{id}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/projectcategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projectCategories.json",
          "path" : "/projectCategories.json",
          "url" : "http://foo.teamworkpm.net/projectCategories.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://developer.teamwork.com/projectcategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projectCategories/{id}.json",
          "path" : "/projectCategories/{id}.json",
          "url" : "http://foo.teamworkpm.net/projectCategories/{id}.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://developer.teamwork.com/projectcategories"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projectCategories/{id}.json",
          "path" : "/projectCategories/{id}.json",
          "url" : "http://foo.teamworkpm.net/projectCategories/{id}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/comments"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/{resource}/{resource_id}/comments.json",
          "path" : "/{resource}/{resource_id}/comments.json",
          "url" : "http://foo.teamworkpm.net/{resource}/{resource_id}/comments.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/comments"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/comments/{comment_id}.json",
          "path" : "/comments/{comment_id}.json",
          "url" : "http://foo.teamworkpm.net/comments/{comment_id}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://developer.teamwork.com/comments"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/{resource}/{resource_id}/comments.json",
          "path" : "/{resource}/{resource_id}/comments.json",
          "url" : "http://foo.teamworkpm.net/{resource}/{resource_id}/comments.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://developer.teamwork.com/comments"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/comments/{id}.json",
          "path" : "/comments/{id}.json",
          "url" : "http://foo.teamworkpm.net/comments/{id}.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://developer.teamwork.com/comments"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/comments/{id}.json",
          "path" : "/comments/{id}.json",
          "url" : "http://foo.teamworkpm.net/comments/{id}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://developer.teamwork.com/companies"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/companies.json",
          "path" : "/companies.json",
          "url" : "http://foo.teamworkpm.net/companies.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://developer.teamwork.com/companies"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/companies/{project_id}.json",
          "path" : "/companies/{project_id}.json",
          "url" : "http://foo.teamworkpm.net/companies/{project_id}.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://developer.teamwork.com/companies"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/companies/{id}.json",
          "path" : "/companies/{id}.json",
          "url" : "http://foo.teamworkpm.net/companies/{id}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/companies"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/companies/{company_id}.json",
          "path" : "/companies/{company_id}.json",
          "url" : "http://foo.teamworkpm.net/companies/{company_id}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/companies"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/companies.json",
          "path" : "/companies.json",
          "url" : "http://foo.teamworkpm.net/companies.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/companies"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{project_id}/companies.json",
          "path" : "/projects/{project_id}/companies.json",
          "url" : "http://foo.teamworkpm.net/projects/{project_id}/companies.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/files"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{project_id}/files.json",
          "path" : "/projects/{project_id}/files.json",
          "url" : "http://foo.teamworkpm.net/projects/{project_id}/files.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/files"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/files/{file_id}.json",
          "path" : "/files/{file_id}.json",
          "url" : "http://foo.teamworkpm.net/files/{file_id}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://developer.teamwork.com/files"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{project_id}/files.json",
          "path" : "/projects/{project_id}/files.json",
          "url" : "http://foo.teamworkpm.net/projects/{project_id}/files.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://developer.teamwork.com/files"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/files/{file_id}.json",
          "path" : "/files/{file_id}.json",
          "url" : "http://foo.teamworkpm.net/files/{file_id}.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://developer.teamwork.com/files"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/files/{file_id}.json",
          "path" : "/files/{file_id}.json",
          "url" : "http://foo.teamworkpm.net/files/{file_id}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://developer.teamwork.com/uploadingfiles"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/pendingfiles.json",
          "path" : "/pendingfiles.json",
          "url" : "http://foo.teamworkpm.net/pendingfiles.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/events"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/calendarevents.json",
          "path" : "/calendarevents.json",
          "params" : [
            {
              "name" : "startdate",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "endDate",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "showDeleted",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "updatedAfterDate",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "http://foo.teamworkpm.net/calendarevents.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/events"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/calendarevents/{id}.json",
          "displayName" : "/calendarevents/{id}.json",
          "url" : "http://foo.teamworkpm.net/calendarevents/{id}.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://developer.teamwork.com/events"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/calendarevents.json",
          "path" : "/calendarevents.json",
          "url" : "http://foo.teamworkpm.net/calendarevents.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://developer.teamwork.com/events"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/calendarevents/{id}.json",
          "path" : "/calendarevents/{id}.json",
          "url" : "http://foo.teamworkpm.net/calendarevents/{id}.json"
        },
        {
          "httpMethod" : "DELETE",
          "doc" : {
            "url" : "http://developer.teamwork.com/events"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/calendarevents/{id}.json",
          "path" : "/calendarevents/{id}.json",
          "url" : "http://foo.teamworkpm.net/calendarevents/{id}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/events"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/calendareventtypes.json",
          "path" : "/calendareventtypes.json",
          "url" : "http://foo.teamworkpm.net/calendareventtypes.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "http://developer.teamwork.com/messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{project_id}/posts.json",
          "path" : "/projects/{project_id}/posts.json",
          "url" : "http://foo.teamworkpm.net/projects/{project_id}/posts.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/posts/{id}.json",
          "path" : "/posts/{id}.json",
          "url" : "http://foo.teamworkpm.net/posts/{id}.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/projects/{project_id}/posts.json",
          "displayName" : "/projects/{project_id}/posts.json",
          "url" : "http://foo.teamworkpm.net/projects/{project_id}/posts.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "http://developer.teamwork.com/messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/projects/{project_id}/cat/{category_id}/posts.json",
          "path" : "/projects/{project_id}/cat/{category_id}/posts.json",
          "url" : "http://foo.teamworkpm.net/projects/{project_id}/cat/{category_id}/posts.json"
        },
        {
          "httpMethod" : "PUT",
          "doc" : {
            "url" : "http://developer.teamwork.com/messages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/posts/{id}.json",
          "path" : "/posts/{id}.json",
          "url" : "http://foo.teamworkpm.net/posts/{id}.json"
        }
      ]
    },
    "auth_strategy" : "basic",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "http://developer.teamwork.com/api",
    "enabled" : true,
    "logo" : "http://www.lingulo.com/wp-content/uploads/2014/05/teamworkpm-logo.jpg",
    "name" : "TEAMWORKPM",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:teamworkpm"
  },
  {
    "_id" : "5409f79403f1d8b163401370",
    "__v" : 0,
    "application" : {
      "base" : "https://api.twitter.com/1.1",
      "resources" : [
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "trim_user"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "contributor_details"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "path" : "/statuses/mentions_timeline.json",
          "displayName" : "/statuses/mentions_timeline.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/statuses/mentions_timeline"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/statuses/mentions_timeline.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "trim_user"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "exclude_replies"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "contributor_details"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "include_rts"
            }
          ],
          "path" : "/statuses/user_timeline.json",
          "displayName" : "/statuses/user_timeline.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/statuses/user_timeline"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/statuses/user_timeline.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "trim_user"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "exclude_replies"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "contributor_details"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "path" : "/statuses/home_timeline.json",
          "displayName" : "/statuses/home_timeline.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/statuses/home_timeline"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/statuses/home_timeline.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "trim_user"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "include_user_entities"
            }
          ],
          "path" : "/statuses/retweets_of_me.json",
          "displayName" : "/statuses/retweets_of_me.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/statuses/retweets_of_me"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/statuses/retweets_of_me.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "number",
              "style" : "query",
              "name" : "id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "trim_user"
            }
          ],
          "displayName" : "/statuses/retweets/:id.json",
          "path" : "/statuses/retweets/:id.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/statuses/retweets/%3Aid"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/statuses/retweets/:id.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "trim_user"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "include_my_retweet"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "path" : "/statuses/show.json",
          "displayName" : "/statuses/show.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/statuses/show/%3Aid"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/statuses/show.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "trim_user"
            }
          ],
          "path" : "/statuses/destroy/:id.json",
          "displayName" : "/statuses/destroy/:id.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/statuses/destroy/%3Aid"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/statuses/destroy/:id.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "status"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "in_reply_to_status_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "possibly_sensitive"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "lat"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "long"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "place_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "display_coordinates"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "trim_user"
            }
          ],
          "path" : "/statuses/update.json",
          "displayName" : "/statuses/update.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/statuses/update"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/statuses/update.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "trim_user"
            }
          ],
          "path" : "/statuses/retweet/:id.json",
          "displayName" : "/statuses/retweet/:id.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/statuses/retweet/%3Aid"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/statuses/retweet/:id.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "status"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "media[]"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "possibly_sensitive"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "in_reply_to_status_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "lat"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "long"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "place_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "display_coordinates"
            }
          ],
          "displayName" : "/statuses/update_with_media.json",
          "path" : "/statuses/update_with_media.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/statuses/update_with_media"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/statuses/update_with_media.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "url"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "maxwidth"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "hide_media"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "hide_thread"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "omit_script"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "align"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "related"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "lang"
            }
          ],
          "path" : "/statuses/oembed.json",
          "displayName" : "/statuses/oembed.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/statuses/oembed"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/statuses/oembed.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "stringify_ids"
            }
          ],
          "path" : "/statuses/retweeters/ids.json",
          "displayName" : "/statuses/retweeters/ids.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/statuses/retweeters/ids"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/statuses/retweeters/ids.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "q"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "geocode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "lang"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "locale"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "result_type"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "until"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/search/tweets.json",
          "displayName" : "/search/tweets.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/search/tweets"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/search/tweets.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "follow"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "track"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "locations"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "delimited"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "stall_warnings"
            }
          ],
          "displayName" : "/statuses/filter.json",
          "path" : "/statuses/filter.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/statuses/filter"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/statuses/filter.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "delimited"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "stall_warnings"
            }
          ],
          "path" : "/statuses/sample.json",
          "displayName" : "/statuses/sample.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/statuses/sample"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/statuses/sample.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "delimited"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "stall_warnings"
            }
          ],
          "path" : "/statuses/firehose.json",
          "displayName" : "/statuses/firehose.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/statuses/firehose"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/statuses/firehose.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "delimited"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "stall_warnings"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "with"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "replies"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "track"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "locations"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "stringify_friend_ids"
            }
          ],
          "path" : "/user.json",
          "displayName" : "/user.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/user"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/user.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "follow"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "delimited"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "stall_warnings"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "with"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "replies"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "stringify_friend_ids"
            }
          ],
          "path" : "/site.json",
          "displayName" : "/site.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/site"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/site.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "path" : "/direct_messages.json",
          "displayName" : "/direct_messages.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/direct_messages"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/direct_messages.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "since_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "max_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "page"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "include_entities"
            }
          ],
          "path" : "/direct_messages/sent.json",
          "displayName" : "/direct_messages/sent.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/direct_messages/sent"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/direct_messages/sent.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "id"
            }
          ],
          "path" : "/direct_messages/show.json",
          "displayName" : "/direct_messages/show.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/direct_messages/show"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/direct_messages/show.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "include_entities"
            }
          ],
          "path" : "/direct_messages/destroy.json",
          "displayName" : "/direct_messages/destroy.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/direct_messages/destroy"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/direct_messages/destroy.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "screen_name"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "text"
            }
          ],
          "path" : "/direct_messages/new.json",
          "displayName" : "/direct_messages/new.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/direct_messages/new"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/direct_messages/new.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "stringify_ids"
            }
          ],
          "path" : "/friendships/no_retweets/ids.json",
          "displayName" : "/friendships/no_retweets/ids.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/friendships/no_retweets/ids"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/friendships/no_retweets/ids.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "stringify_ids"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "count"
            }
          ],
          "path" : "/friends/ids.json",
          "displayName" : "/friends/ids.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/friends/ids"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/friends/ids.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "stringify_ids"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "count"
            }
          ],
          "path" : "/followers/ids.json",
          "displayName" : "/followers/ids.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/followers/ids"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/followers/ids.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "stringify_ids"
            }
          ],
          "path" : "/friendships/incoming.json",
          "displayName" : "/friendships/incoming.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/friendships/incoming"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/friendships/incoming.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "stringify_ids"
            }
          ],
          "path" : "/friendships/outgoing.format",
          "displayName" : "/friendships/outgoing.format",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/friendships/outgoing"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/friendships/outgoing.format"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "follow"
            }
          ],
          "displayName" : "/friendships/create.json",
          "path" : "/friendships/create.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/friendships/create"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/friendships/create.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "user_id"
            }
          ],
          "path" : "/friendships/destroy.json",
          "displayName" : "/friendships/destroy.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/friendships/destroy"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/friendships/destroy.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "device"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "retweets"
            }
          ],
          "path" : "/friendships/update.json",
          "displayName" : "/friendships/update.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/friendships/update"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/friendships/update.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "source_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "source_screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "target_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "target_screen_name"
            }
          ],
          "path" : "/friendships/show.json",
          "displayName" : "/friendships/show.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/friendships/show"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/friendships/show.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/friends/list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/friends/list.json",
          "path" : "/friends/list.json",
          "params" : [
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "screen_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "cursor",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "count",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "skip_status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_user_entities",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/friends/list.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/followers/list"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/followers/list.json",
          "displayName" : "/followers/list.json",
          "params" : [
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "screen_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "cursor",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "count",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "skip_status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_user_entities",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/followers/list.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/friendships/lookup"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/friendships/lookup.json",
          "path" : "/friendships/lookup.json",
          "params" : [
            {
              "name" : "screen_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/friendships/lookup.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/account/settings"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account/settings.json",
          "path" : "/account/settings.json",
          "url" : "https://api.twitter.com/1.1/account/settings.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/account/verify_credentials"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account/verify_credentials.json",
          "path" : "/account/verify_credentials.json",
          "params" : [
            {
              "name" : "include_entities",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "skip_status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/verify_credentials.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/account/settings"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account/settings.json",
          "path" : "/account/settings.json",
          "params" : [
            {
              "name" : "trend_location_woeid",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "sleep_time_enabled",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "start_sleep_time",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "end_sleep_time",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "time_zone",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "lang",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/settings.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/account/update_delivery_device"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account/update_delivery_device.json",
          "path" : "/account/update_delivery_device.json",
          "params" : [
            {
              "name" : "device",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "include_entities",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/update_delivery_device.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/account/update_profile"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account/update_profile.json",
          "path" : "/account/update_profile.json",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "url",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "location",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "description",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_entities",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "skip_status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/update_profile.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/account/update_profile_background_image"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account/update_profile_background_image.json",
          "path" : "/account/update_profile_background_image.json",
          "params" : [
            {
              "name" : "image",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "tile",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_entities",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "skip_status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "use",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/update_profile_background_image.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/account/update_profile_colors"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account/update_profile_colors.json",
          "path" : "/account/update_profile_colors.json",
          "params" : [
            {
              "name" : "profile_background_color",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "profile_link_color",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "profile_sidebar_border_color",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "profile_sidebar_fill_color",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "profile_text_color",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_entities",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "skip_status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/update_profile_colors.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/account/update_profile_image"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account/update_profile_image.json",
          "path" : "/account/update_profile_image.json",
          "params" : [
            {
              "name" : "image",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "include_entities",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "skip_status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/update_profile_image.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/blocks/list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/blocks/list.json",
          "path" : "/blocks/list.json",
          "params" : [
            {
              "name" : "include_entities",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "skip_status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "cursor",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/blocks/list.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/blocks/ids"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/blocks/ids.json",
          "path" : "/blocks/ids.json",
          "params" : [
            {
              "name" : "stringify_ids",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "cursor",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/blocks/ids.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/blocks/create"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/blocks/create.json",
          "path" : "/blocks/create.json",
          "params" : [
            {
              "name" : "screen_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "user_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_entities",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "skip_status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/blocks/create.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/blocks/destroy"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/blocks/destroy.json",
          "path" : "/blocks/destroy.json",
          "params" : [
            {
              "name" : "screen_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "user_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_entities",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "skip_status",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/blocks/destroy.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/users/lookup"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/lookup.json",
          "path" : "/users/lookup.json",
          "params" : [
            {
              "name" : "screen_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_entities",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/lookup.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/users/show"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/show.json",
          "path" : "/users/show.json",
          "params" : [
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "screen_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "include_entities",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/show.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/users/search"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/search.json",
          "path" : "/users/search.json",
          "params" : [
            {
              "name" : "q",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "page",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "count",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_entities",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/search.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/users/contributees"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/contributees.json",
          "path" : "/users/contributees.json",
          "params" : [
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "screen_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_entities",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "skip_status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/contributees.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/users/contributors"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/users/contributors.json",
          "displayName" : "/users/contributors.json",
          "params" : [
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "screen_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_entities",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "skip_status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/contributors.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/account/remove_profile_banner"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account/remove_profile_banner.json",
          "path" : "/account/remove_profile_banner.json",
          "url" : "https://api.twitter.com/1.1/account/remove_profile_banner.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/account/update_profile_banner"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/account/update_profile_banner.json",
          "path" : "/account/update_profile_banner.json",
          "params" : [
            {
              "name" : "banner",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "width",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "height",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset_left",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "offset_top",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/account/update_profile_banner.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/users/profile_banner"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/profile_banner.json",
          "path" : "/users/profile_banner.json",
          "params" : [
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "screen_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/profile_banner.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/mutes/users/create"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/mutes/users/create.json",
          "path" : "/mutes/users/create.json",
          "params" : [
            {
              "name" : "screen_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "user_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/mutes/users/create.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/mutes/users/destroy"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/mutes/users/destroy.json",
          "path" : "/mutes/users/destroy.json",
          "params" : [
            {
              "name" : "screen_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "user_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/mutes/users/destroy.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/mutes/users/ids"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/mutes/users/ids.json",
          "path" : "/mutes/users/ids.json",
          "params" : [
            {
              "name" : "cursor",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/mutes/users/ids.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/mutes/users/list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/mutes/users/list.json",
          "path" : "/mutes/users/list.json",
          "params" : [
            {
              "name" : "cursor",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_entities",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "skip_status",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/mutes/users/list.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/users/suggestions/%3Aslug"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/suggestions/:slug.json",
          "path" : "/users/suggestions/:slug.json",
          "params" : [
            {
              "name" : "slug",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "lang",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/suggestions/:slug.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/users/suggestions"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/suggestions.format",
          "path" : "/users/suggestions.format",
          "params" : [
            {
              "name" : "lang",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/suggestions.format"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/users/suggestions/%3Aslug/members"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/suggestions/:slug/members.json",
          "path" : "/users/suggestions/:slug/members.json",
          "params" : [
            {
              "name" : "slug",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/suggestions/:slug/members.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/favorites/list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/favorites/list.json",
          "path" : "/favorites/list.json",
          "params" : [
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "screen_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "count",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "since_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "max_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_entities",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/favorites/list.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/favorites/destroy"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/favorites/destroy.json",
          "path" : "/favorites/destroy.json",
          "params" : [
            {
              "name" : "id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "include_entities",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/favorites/destroy.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/favorites/create"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/favorites/create.json",
          "path" : "/favorites/create.json",
          "params" : [
            {
              "name" : "id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "include_entities",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/favorites/create.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/lists/list"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/lists/list.json",
          "path" : "/lists/list.json",
          "params" : [
            {
              "name" : "user_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "screen_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "reverse",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/list.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/lists/statuses"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/lists/statuses.json",
          "path" : "/lists/statuses.json",
          "params" : [
            {
              "name" : "list_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "slug",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "owner_screen_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "owner_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "since_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "max_id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "count",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_entities",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "include_rts",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/statuses.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/lists/members/destroy"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/lists/members/destroy.json",
          "path" : "/lists/members/destroy.json",
          "params" : [
            {
              "name" : "list_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "slug",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "user_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "screen_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "owner_screen_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "owner_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.twitter.com/1.1/lists/members/destroy.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "filter_to_owned_lists"
            }
          ],
          "path" : "/lists/memberships.json",
          "displayName" : "/lists/memberships.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/lists/memberships"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/lists/memberships.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "owner_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "path" : "/lists/subscribers.json",
          "displayName" : "/lists/subscribers.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/lists/subscribers"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/lists/subscribers.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "owner_screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "owner_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "list_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "slug"
            }
          ],
          "path" : "/lists/subscribers/create.json",
          "displayName" : "/lists/subscribers/create.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/lists/subscribers/create"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/lists/subscribers/create.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "owner_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "path" : "/subscribers/show.json",
          "displayName" : "/subscribers/show.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/lists/subscribers/show"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/subscribers/show.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "list_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "slug"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "owner_screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "owner_id"
            }
          ],
          "path" : "/lists/subscribers/destroy.json",
          "displayName" : "/lists/subscribers/destroy.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/lists/subscribers/destroy"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/lists/subscribers/destroy.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "list_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "slug"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "owner_screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "owner_id"
            }
          ],
          "path" : "/lists/members/create_all.json",
          "displayName" : "/lists/members/create_all.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/lists/members/create_all"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/lists/members/create_all.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "owner_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "path" : "/lists/members/show.json",
          "displayName" : "/lists/members/show.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/lists/members/show"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/lists/members/show.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "owner_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "cursor"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "include_entities"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "skip_status"
            }
          ],
          "path" : "/lists/members.json",
          "displayName" : "/lists/members.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/lists/members"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/lists/members.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "list_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "slug"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "user_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "owner_screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "owner_id"
            }
          ],
          "path" : "/lists/members/create.json",
          "displayName" : "/lists/members/create.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/lists/members/create"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/lists/members/create.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "owner_screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "owner_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "list_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "slug"
            }
          ],
          "path" : "/lists/destroy.json",
          "displayName" : "/lists/destroy.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/lists/destroy"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/lists/destroy.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "list_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "slug"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "mode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "owner_screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "owner_id"
            }
          ],
          "path" : "/lists/update.json",
          "displayName" : "/lists/update.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/lists/update"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/lists/update.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "mode"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "description"
            }
          ],
          "path" : "/lists/create.json",
          "displayName" : "/lists/create.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/lists/create"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/lists/create.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "list_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "slug"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "owner_screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "owner_id"
            }
          ],
          "path" : "/lists/show.json",
          "displayName" : "/lists/show.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/lists/show"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/lists/show.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "cursor"
            }
          ],
          "path" : "/lists/subscriptions.json",
          "displayName" : "/lists/subscriptions.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/lists/subscriptions"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/lists/subscriptions.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "list_id"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "slug"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "owner_screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "owner_id"
            }
          ],
          "path" : "/lists/members/destroy_all.json",
          "displayName" : "/lists/members/destroy_all.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/lists/members/destroy_all"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/lists/members/destroy_all.json"
        },
        {
          "params" : [
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "user_id"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "screen_name"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "count"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "cursor"
            }
          ],
          "path" : "/lists/ownerships.json",
          "displayName" : "/lists/ownerships.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/lists/ownerships"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/lists/ownerships.json"
        },
        {
          "path" : "/saved_searches/list.json",
          "displayName" : "/saved_searches/list.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/saved_searches/list"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/saved_searches/list.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "id"
            }
          ],
          "path" : "/saved_searches/show/:id.json",
          "displayName" : "/saved_searches/show/:id.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/saved_searches/show/%3Aid"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/saved_searches/show/:id.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "query"
            }
          ],
          "path" : "/saved_searches/create.json",
          "displayName" : "/saved_searches/create.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/saved_searches/create"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/saved_searches/create.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "body",
              "name" : "id"
            }
          ],
          "path" : "/saved_searches/destroy/:id.json",
          "displayName" : "/saved_searches/destroy/:id.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/saved_searches/destroy/%3Aid"
          },
          "httpMethod" : "POST",
          "url" : "https://api.twitter.com/1.1/saved_searches/destroy/:id.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "place_id"
            }
          ],
          "path" : "/geo/id/:place_id.json",
          "displayName" : "/geo/id/:place_id.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/geo/id/%3Aplace_id"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/geo/id/:place_id.json"
        },
        {
          "params" : [
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "lat"
            },
            {
              "required" : "true",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "long"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "accuracy"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "granularity"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "max_results"
            },
            {
              "required" : "false",
              "value" : "",
              "type" : "string",
              "style" : "query",
              "name" : "callback"
            }
          ],
          "path" : "/geo/reverse_geocode.json",
          "displayName" : "/geo/reverse_geocode.json",
          "authentication" : {
            "required" : "true"
          },
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/geo/reverse_geocode"
          },
          "httpMethod" : "GET",
          "url" : "https://api.twitter.com/1.1/geo/reverse_geocode.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/geo/search"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/geo/search.json",
          "path" : "/geo/search.json",
          "params" : [
            {
              "name" : "lat",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "long",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "query",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "ip",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "granularity",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "accuracy",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "max_results",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "contained_within",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "attribute:street_address",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/geo/search.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/geo/similar_places"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/geo/similar_places.json",
          "path" : "/geo/similar_places.json",
          "params" : [
            {
              "name" : "lat",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "long",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "contained_within",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "attribute:street_address",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/geo/similar_places.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/geo/place"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/geo/place.json",
          "path" : "/geo/place.json",
          "params" : [
            {
              "name" : "name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "contained_within",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "token",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "lat",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "long",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "attribute:street_address",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "callback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/geo/place.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/trends/place"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/trends/place.json",
          "path" : "/trends/place.json",
          "params" : [
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "exclude",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/trends/place.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/trends/available"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/trends/available.json",
          "path" : "/trends/available.json",
          "url" : "https://api.twitter.com/1.1/trends/available.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/trends/closest"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/trends/closest.json",
          "path" : "/trends/closest.json",
          "params" : [
            {
              "name" : "lat",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "long",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.twitter.com/1.1/trends/closest.json"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/users/report_spam"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/users/report_spam.json",
          "path" : "/users/report_spam.json",
          "params" : [
            {
              "name" : "screen_name",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "user_id",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/users/report_spam.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1/get/oauth/authenticate"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/oauth/authenticate",
          "displayName" : "/oauth/authenticate",
          "params" : [
            {
              "name" : "force_login",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "screen_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/oauth/authenticate"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1/get/oauth/authorize"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/oauth/authorize",
          "path" : "/oauth/authorize",
          "params" : [
            {
              "name" : "force_login",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "screen_name",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/oauth/authorize"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1/post/oauth/access_token"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/oauth/access_token",
          "path" : "/oauth/access_token",
          "params" : [
            {
              "name" : "x_auth_password",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "x_auth_username",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "x_auth_mode",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "oauth_verifier",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.twitter.com/1.1/oauth/access_token"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1/post/oauth/request_token"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/oauth/request_token",
          "path" : "/oauth/request_token",
          "params" : [
            {
              "name" : "oauth_callback",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "x_auth_access_type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/oauth/request_token"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/oauth2/token"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/oauth2/token",
          "displayName" : "/oauth2/token",
          "params" : [
            {
              "name" : "grant_type",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            }
          ],
          "url" : "https://api.twitter.com/1.1/oauth2/token"
        },
        {
          "httpMethod" : "POST",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/post/oauth2/invalidate_token"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/oauth2/invalidate_token",
          "path" : "/oauth2/invalidate_token",
          "params" : [
            {
              "name" : "access_token",
              "style" : "body",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "",
              "style" : "",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/oauth2/invalidate_token"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/help/configuration"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/help/configuration.json",
          "path" : "/help/configuration.json",
          "url" : "https://api.twitter.com/1.1/help/configuration.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/help/languages"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/help/languages.json",
          "path" : "/help/languages.json",
          "url" : "https://api.twitter.com/1.1/help/languages.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/help/privacy"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/help/privacy.json",
          "path" : "/help/privacy.json",
          "url" : "https://api.twitter.com/1.1/help/privacy.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/help/tos"
          },
          "authentication" : {
            "required" : "true"
          },
          "path" : "/help/tos.json",
          "displayName" : "/help/tos.json",
          "url" : "https://api.twitter.com/1.1/help/tos.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/application/rate_limit_status"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/application/rate_limit_status.json",
          "path" : "/application/rate_limit_status.json",
          "params" : [
            {
              "name" : "resources",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/application/rate_limit_status.json"
        },
        {
          "httpMethod" : "GET",
          "doc" : {
            "url" : "https://dev.twitter.com/docs/api/1.1/get/statuses/lookup"
          },
          "authentication" : {
            "required" : "true"
          },
          "displayName" : "/statuses/lookup.json",
          "path" : "/statuses/lookup.json",
          "params" : [
            {
              "name" : "id",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "true"
            },
            {
              "name" : "include_entities",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "trim_user",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            },
            {
              "name" : "map",
              "style" : "query",
              "type" : "string",
              "value" : "",
              "required" : "false"
            }
          ],
          "url" : "https://api.twitter.com/1.1/statuses/lookup.json"
        }
      ]
    },
    "auth_strategy" : "oauth",
    "custom_tokens" : [ ],
    "description" : "",
    "documentation" : "https://dev.twitter.com/docs/api/1.1",
    "enabled" : true,
    "logo" : "http://nyobetabeat.files.wordpress.com/2014/05/twitter-logo.png",
    "name" : "Twitter",
    "owner" : "cf5467b0-1bea-11e4-944b-7dfd109dce42",
    "type" : "channel:twitter"
  }
]
