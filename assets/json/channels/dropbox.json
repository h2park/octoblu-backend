{
  "_id": "532a60c06d3281aa4aeacab3",
  "application": {
    "base": "https://www.dropbox.com/1",
    "resources": [
      {
        "doc": {
          "t": "Disables the access token used to authenticate the call. This method works for OAuth 1 and OAuth 2 tokens."
        },
        "displayName": "/disable_access_token",
        "path": "/disable_access_token",
        "fullURL": "https://api.dropbox.com/1/disable_access_token",
        "httpMethod": "POST",
        "params": [],
        "url": "https://www.dropbox.com/1/disable_access_token"
      },
      {
        "doc": {
          "t": "Retrieves information about the user's account."
        },
        "displayName": "/account/info ",
        "path": "/account/info ",
        "fullURL": "https://api.dropbox.com/1/account/info",
        "httpMethod": "GET",
        "params": [
          {
            "name": "locale",
            "required": false,
            "doc": {
              "t": "Use to specify language settings for user error messages and other language specific text. See the notes above for more information about supported locales."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/account/info "
      },
      {
        "doc": {
          "t": "Downloads a file. Note that this call goes to api-content.dropbox.com instead of api.dropbox.com."
        },
        "displayName": "/files (GET)",
        "path": "/files",
        "fullURL": "https://api-content.dropbox.com/1/files/<root>/<path>",
        "httpMethod": "GET",
        "params": [],
        "url": "https://www.dropbox.com/1/files"
      },
      {
        "doc": {
          "t": "Uploads a file using PUT semantics. Note that this call goes to api-content.dropbox.com instead of api.dropbox.com.This method is in most cases simpler to use than /files (POST).The preferred HTTP method for this call is PUT. For compatibility with browser environments, the POST HTTP method is also recognized.Note: Providing a Content-Length header set to the size of the uploaded file is required so that the server can verify that it has received the entire file contents."
        },
        "displayName": "/files_put ",
        "path": "/files_put ",
        "fullURL": "https://api-content.dropbox.com/1/files_put/<root>/<path>?param=val",
        "httpMethod": "PUT",
        "params": [
          {
            "name": "locale",
            "required": false,
            "doc": {
              "t": "The metadata returned on successful upload will have its size field translated based on the given locale."
            }
          },
          {
            "name": "overwrite",
            "required": false,
            "doc": {
              "t": "This value, either true (default) or false, determines what happens when there's already a file at the specified path. If true, the existing file will be overwritten by the new one. If false, the new file will be automatically renamed (for example, test.txt might be automatically renamed to test (1).txt). The new name can be obtained from the returned metadata."
            }
          },
          {
            "name": "parent_rev",
            "required": false,
            "doc": {
              "t": "The revision of the file you're editing. If parent_rev matches the latest version of the file on the user's Dropbox, that file will be replaced. Otherwise, the new file will be automatically renamed (for example, test.txt might be automatically renamed to test (conflicted copy).txt). If you specify a revision that doesn't exist, the file won't save (error 400). Get the most recent rev by performing a call to /metadata."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/files_put "
      },
      {
        "doc": {
          "t": "Uploads a file. Note that this call goes to api-content.dropbox.com instead of api.dropbox.com.We recommend you use /files_put instead due to its simpler interface."
        },
        "displayName": "/files (POST)",
        "path": "/files",
        "fullURL": "https://api-content.dropbox.com/1/files/<root>/<path>",
        "httpMethod": "POST",
        "params": [
          {
            "name": "locale",
            "required": false,
            "doc": {
              "t": "The metadata returned on successful upload will have its size field translated based on the given locale."
            }
          },
          {
            "name": "overwrite",
            "required": false,
            "doc": {
              "t": "This value, either true (default) or false, determines what happens when there's already a file at the specified path. If true, the existing file will be overwritten by the new one. If false, the new file will be automatically renamed (for example, test.txt might be automatically renamed to test (1).txt). The new name can be obtained from the returned metadata."
            }
          },
          {
            "name": "parent_rev",
            "required": false,
            "doc": {
              "t": "The revision of the file you're editing. If parent_rev matches the latest version of the file on the user's Dropbox, that file will be replaced. Otherwise, the new file will be automatically renamed (for example, test.txt might be automatically renamed to test (conflicted copy).txt). If you specify a revision that doesn't exist, the file won't save (error 400). Get the most recent rev by performing a call to /metadata."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/files"
      },
      {
        "doc": {
          "t": "Retrieves file and folder metadata."
        },
        "displayName": "/metadata ",
        "path": "/metadata ",
        "fullURL": "https://api.dropbox.com/1/metadata/<root>/<path>",
        "httpMethod": "GET",
        "params": [
          {
            "name": "file_limit",
            "required": false,
            "doc": {
              "t": "Default is 10,000 (max is 25,000). When listing a folder, the service won't report listings containing more than the specified amount of files and will instead respond with a 406 (Not Acceptable) status response."
            }
          },
          {
            "name": "hash",
            "required": false,
            "doc": {
              "t": "Each call to /metadata on a folder will return a hash field, generated by hashing all of the metadata contained in that response. On later calls to /metadata, you should provide that value via this parameter so that if nothing has changed, the response will be a 304 (Not Modified) status code instead of the full, potentially very large, folder listing. This parameter is ignored if the specified path is associated with a file or if list=false. A folder shared between two users will have the same hash for each user."
            }
          },
          {
            "name": "list",
            "required": false,
            "doc": {
              "t": "The strings true and false are valid values. true is the default. If true, the folder's metadata will include a contents field with a list of metadata entries for the contents of the folder. If false, the contents field will be omitted."
            }
          },
          {
            "name": "include_deleted",
            "required": false,
            "doc": {
              "t": "Only applicable when list is set. If this parameter is set to true, then contents will include the metadata of deleted children. Note that the target of the metadata call is always returned even when it has been deleted (with is_deleted set to true) regardless of this flag."
            }
          },
          {
            "name": "rev",
            "required": false,
            "doc": {
              "t": "If you include a particular revision number, then only the metadata for that revision will be returned."
            }
          },
          {
            "name": "locale",
            "required": false,
            "doc": {
              "t": "The metadata returned will have its size field translated based on the given locale. For more information see above."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/metadata "
      },
      {
        "doc": {
          "t": "A way of letting you keep up with changes to files and folders in a user's Dropbox. You can periodically call /delta to get a list of \"delta entries\", which are instructions on how to update your local state to match the server's state."
        },
        "displayName": "/delta",
        "path": "/delta",
        "fullURL": "https://api.dropbox.com/1/delta",
        "httpMethod": "POST",
        "params": [
          {
            "name": "cursor",
            "required": false,
            "doc": {
              "t": "A string that is used to keep track of your current state. On the next call pass in this value to return delta entries that have been recorded since the cursor was returned."
            }
          },
          {
            "name": "locale",
            "required": false,
            "doc": {
              "t": "The metadata returned will have its size field translated based on the given locale. For more information see above."
            }
          },
          {
            "name": "path_prefix",
            "required": false,
            "doc": {
              "t": "If present, this parameter filters the response to only include entries at or under the specified path. For example, a path_prefix of \"/Photos/Vacation\" will return entries for the path \"/Photos/Vacation\" and any files and folders under that path. If you use the path_prefix parameter, you must continue to pass the same prefix on subsequent calls using the returned cursor."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/delta"
      },
      {
        "doc": {
          "t": "A long-poll endpoint to wait for changes on an account. In conjunction with /delta, this call gives you a low-latency way to monitor an account for file changes.Note that this call goes to api-notify.dropbox.com instead of api.dropbox.com.Unlike most other API endpoints, this call does not require OAuth authentication. The passed in cursor can only be acquired via an authenticated call to /delta."
        },
        "displayName": "/longpoll_delta",
        "path": "/longpoll_delta",
        "fullURL": "https://api-notify.dropbox.com/1/longpoll_delta",
        "httpMethod": "GET",
        "params": [
          {
            "name": "cursor",
            "required": false,
            "doc": {
              "t": "A delta cursor as returned from a call to /delta."
            }
          },
          {
            "name": "timeout",
            "required": false,
            "doc": {
              "t": "An optional integer indicating a timeout, in seconds. The default value is 30 seconds, which is also the minimum allowed value. The maximum is 480 seconds. The request will block for at most this length of time, plus up to 90 seconds of random jitter added to avoid the thundering herd problem. Care should be taken when using this parameter, as some network infrastructure does not support long timeouts."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/longpoll_delta"
      },
      {
        "doc": {
          "t": "Obtains metadata for the previous revisions of a file.Only revisions up to thirty days old are available (or more if the Dropbox user has Packrat). You can use the revision number in conjunction with the /restore call to revert the file to its previous state."
        },
        "displayName": "/revisions",
        "path": "/revisions",
        "fullURL": "https://api.dropbox.com/1/revisions/<root>/<path>",
        "httpMethod": "GET",
        "params": [
          {
            "name": "rev_limit",
            "required": false,
            "doc": {
              "t": "Default is 10. Max is 1,000. Up to this number of recent revisions will be returned."
            }
          },
          {
            "name": "locale",
            "required": false,
            "doc": {
              "t": "The metadata returned will have its size field translated based on the given locale. For more information see above."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/revisions"
      },
      {
        "doc": {
          "t": "Restores a file path to a previous revision.Unlike downloading a file at a given revision and then re-uploading it, this call is atomic. It also saves a bunch of bandwidth."
        },
        "displayName": "/restore",
        "path": "/restore",
        "fullURL": "https://api.dropbox.com/1/restore/<root>/<path>",
        "httpMethod": "POST",
        "params": [
          {
            "name": "rev",
            "required": true,
            "doc": {
              "t": "required The revision of the file to restore."
            }
          },
          {
            "name": "locale",
            "required": false,
            "doc": {
              "t": "The metadata returned will have its size field translated based on the given locale. For more information see above."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/restore"
      },
      {
        "doc": {
          "t": "Returns metadata for all files and folders whose filename contains the given search string as a substring.Searches are limited to the folder path and its sub-folder hierarchy provided in the call."
        },
        "displayName": "/search",
        "path": "/search",
        "fullURL": "https://api.dropbox.com/1/search/<root>/<path>",
        "httpMethod": "",
        "params": [
          {
            "name": "query",
            "required": true,
            "doc": {
              "t": "required The search string. This string is split (on spaces) into individual words. Files and folders will be returned if they contain all words in the search string."
            }
          },
          {
            "name": "file_limit",
            "required": false,
            "doc": {
              "t": "The maximum and default value is 1,000. No more than file_limit search results will be returned."
            }
          },
          {
            "name": "include_deleted",
            "required": false,
            "doc": {
              "t": "If this parameter is set to true, then files and folders that have been deleted will also be included in the search."
            }
          },
          {
            "name": "locale",
            "required": false,
            "doc": {
              "t": "The metadata returned will have its size field translated based on the given locale. For more information see above."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/search"
      },
      {
        "doc": {
          "t": "Creates and returns a Dropbox link to files or folders users can use to view a preview of the file in a web browser.Note: Links created after April 23rd, 2012 no longer expire after thirty days."
        },
        "displayName": "/shares",
        "path": "/shares",
        "fullURL": "https://api.dropbox.com/1/shares/<root>/<path>",
        "httpMethod": "POST",
        "params": [
          {
            "name": "locale",
            "required": false,
            "doc": {
              "t": "Use to specify language settings for user error messages and other language specific text. See the notes above for more information about supported locales."
            }
          },
          {
            "name": "short_url",
            "required": false,
            "doc": {
              "t": "When true (default), the url returned will be shortened using the Dropbox url shortener. If false, the url will link directly to the file's preview page."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/shares"
      },
      {
        "doc": {
          "t": "Returns a link directly to a file.Similar to /shares. The difference is that this bypasses the Dropbox webserver, used to provide a preview of the file, so that you can effectively stream the contents of your media."
        },
        "displayName": "/media",
        "path": "/media",
        "fullURL": "https://api.dropbox.com/1/media/<root>/<path>",
        "httpMethod": "POST",
        "params": [
          {
            "name": "locale",
            "required": false,
            "doc": {
              "t": "Use to specify language settings for user error messages and other language specific text. See the notes above for more information about supported locales."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/media"
      },
      {
        "doc": {
          "t": "Creates and returns a copy_ref to a file. This reference string can be used to copy that file to another user's Dropbox by passing it in as the from_copy_ref parameter on /fileops/copy."
        },
        "displayName": "/copy_ref",
        "path": "/copy_ref",
        "fullURL": "https://api.dropbox.com/1/copy_ref/<root>/<path>",
        "httpMethod": "GET",
        "params": [],
        "url": "https://www.dropbox.com/1/copy_ref"
      },
      {
        "doc": {
          "t": "Gets a thumbnail for an image. Note that this call goes to api-content.dropbox.com instead of api.dropbox.com."
        },
        "displayName": "/thumbnails",
        "path": "/thumbnails",
        "fullURL": "https://api-content.dropbox.com/1/thumbnails/<root>/<path>",
        "httpMethod": "GET",
        "params": [
          {
            "name": "format",
            "required": false,
            "doc": {
              "t": "jpeg (default) or png. For images that are photos, jpeg should be preferred, while png is better for screenshots and digital art."
            }
          },
          {
            "name": "size",
            "required": false,
            "doc": {
              "t": "One of the following values (default: s):valuedimensions (px)xs32x32s64x64m128x128l640x480xl1024x768"
            }
          }
        ],
        "url": "https://www.dropbox.com/1/thumbnails"
      },
      {
        "doc": {
          "t": "Uploads large files to Dropbox in multiple chunks. Also has the ability to resume if the upload is interrupted. This allows for uploads larger than the /files and /files_put maximum of 150 MB.Typical usage:Send a PUT request to /chunked_upload with the first chunk of the file without setting upload_id, and receive an upload_id in return.Repeatedly PUT subsequent chunks using the upload_id to identify the upload in progress and an offset representing the number of bytes transferred so far.After each chunk has been uploaded, the server returns a new offset representing the total amount transferred.After the last chunk, POST to /commit_chunked_upload to complete the upload.Chunks can be any size up to 150 MB. A typical chunk is 4 MB. Using large chunks will mean fewer calls to /chunked_upload and faster overall throughput. However, whenever a transfer is interrupted, you will have to resume at the beginning of the last chunk, so it is often safer to use smaller chunks.If the offset you submit does not match the expected offset on the server, the server will ignore the request and respond with a 400 error that includes the current offset. To resume upload, seek to the correct offset (in bytes) within the file and then resume uploading from that point.A chunked upload can take a maximum of 24 hours before expiring."
        },
        "displayName": "/chunked_upload",
        "path": "/chunked_upload",
        "fullURL": "https://api-content.dropbox.com/1/chunked_upload?param=val",
        "httpMethod": "PUT",
        "params": [
          {
            "name": "upload_id",
            "required": false,
            "doc": {
              "t": "The unique ID of the in-progress upload on the server. If left blank, the server will create a new upload session."
            }
          },
          {
            "name": "offset",
            "required": false,
            "doc": {
              "t": "The byte offset of this chunk, relative to the beginning of the full file. The server will verify that this matches the offset it expects. If it does not, the server will return an error with the expected offset."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/chunked_upload"
      },
      {
        "doc": {
          "t": "Completes an upload initiated by the /chunked_upload method. Saves a file uploaded via /chunked_upload to a user's Dropbox./commit_chunked_upload is similar to /files_put. The main difference is that while /files_put takes the file contents in the request body, /commit_chunked_upload takes a parameter upload_id, which is obtained when the file contents are uploaded via /chunked_upload.Note that this call goes to api-content.dropbox.com instead of api.dropbox.com."
        },
        "displayName": "/commit_chunked_upload",
        "path": "/commit_chunked_upload",
        "fullURL": "https://api-content.dropbox.com/1/commit_chunked_upload/<root>/<path>",
        "httpMethod": "POST",
        "params": [
          {
            "name": "locale",
            "required": false,
            "doc": {
              "t": "The metadata returned on successful upload will have its size field translated based on the given locale."
            }
          },
          {
            "name": "overwrite",
            "required": false,
            "doc": {
              "t": "This value, either true (default) or false, determines what happens when there's already a file at the specified path. If true, the existing file will be overwritten by the new one. If false, the new file will be automatically renamed (for example, test.txt might be automatically renamed to test (1).txt). The new name can be obtained from the returned metadata."
            }
          },
          {
            "name": "parent_rev",
            "required": false,
            "doc": {
              "t": "The revision of the file you're editing. If parent_rev matches the latest version of the file on the user's Dropbox, that file will be replaced. Otherwise, the new file will be automatically renamed (for example, test.txt might be automatically renamed to test (conflicted copy).txt). If you specify a revision that doesn't exist, the file won't save (error 400). Get the most recent rev by performing a call to /metadata."
            }
          },
          {
            "name": "upload_id",
            "required": false,
            "doc": {
              "t": "Used to identify the chunked upload session you'd like to commit."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/commit_chunked_upload"
      },
      {
        "doc": {
          "t": "Copies a file or folder to a new location."
        },
        "displayName": "/fileops/copy",
        "path": "/fileops/copy",
        "fullURL": "https://api.dropbox.com/1/fileops/copy",
        "httpMethod": "POST",
        "params": [
          {
            "name": "root",
            "required": true,
            "doc": {
              "t": "required The root relative to which from_path and to_path are specified. Valid values are sandbox and dropbox."
            }
          },
          {
            "name": "from_path",
            "required": false,
            "doc": {
              "t": "Specifies the file or folder to be copied from relative to root."
            }
          },
          {
            "name": "to_path",
            "required": true,
            "doc": {
              "t": "required Specifies the destination path, including the new name for the file or folder, relative to root."
            }
          },
          {
            "name": "locale",
            "required": false,
            "doc": {
              "t": "The metadata returned will have its size field translated based on the given locale. For more information see above."
            }
          },
          {
            "name": "from_copy_ref",
            "required": false,
            "doc": {
              "t": "Specifies a copy_ref generated from a previous /copy_ref call. Must be used instead of the from_path parameter."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/fileops/copy"
      },
      {
        "doc": {
          "t": "Creates a folder."
        },
        "displayName": "/fileops/create_folder ",
        "path": "/fileops/create_folder ",
        "fullURL": "https://api.dropbox.com/1/fileops/create_folder",
        "httpMethod": "POST",
        "params": [
          {
            "name": "root",
            "required": true,
            "doc": {
              "t": "required The root relative to which path is specified. Valid values are sandbox and dropbox."
            }
          },
          {
            "name": "path",
            "required": true,
            "doc": {
              "t": "required The path to the new folder to create relative to root."
            }
          },
          {
            "name": "locale",
            "required": false,
            "doc": {
              "t": "The metadata returned will have its size field translated based on the given locale. For more information see above."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/fileops/create_folder "
      },
      {
        "doc": {
          "t": "Deletes a file or folder."
        },
        "displayName": "/fileops/delete ",
        "path": "/fileops/delete ",
        "fullURL": "https://api.dropbox.com/1/fileops/delete",
        "httpMethod": "POST",
        "params": [
          {
            "name": "root",
            "required": true,
            "doc": {
              "t": "required The root relative to which path is specified. Valid values are sandbox and dropbox."
            }
          },
          {
            "name": "path",
            "required": true,
            "doc": {
              "t": "required The path to the file or folder to be deleted."
            }
          },
          {
            "name": "locale",
            "required": false,
            "doc": {
              "t": "The metadata returned will have its size field translated based on the given locale. For more information see above."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/fileops/delete "
      },
      {
        "doc": {
          "t": "Moves a file or folder to a new location."
        },
        "displayName": "/fileops/move ",
        "path": "/fileops/move ",
        "fullURL": "https://api.dropbox.com/1/fileops/move",
        "httpMethod": "POST",
        "params": [
          {
            "name": "root",
            "required": true,
            "doc": {
              "t": "required The root relative to which from_path and to_path are specified. Valid values are sandbox and dropbox."
            }
          },
          {
            "name": "from_path",
            "required": true,
            "doc": {
              "t": "required Specifies the file or folder to be moved from relative to root."
            }
          },
          {
            "name": "to_path",
            "required": true,
            "doc": {
              "t": "required Specifies the destination path, including the new name for the file or folder, relative to root."
            }
          },
          {
            "name": "locale",
            "required": false,
            "doc": {
              "t": "The metadata returned will have its size field translated based on the given locale. For more information see above."
            }
          }
        ],
        "url": "https://www.dropbox.com/1/fileops/move "
      }
    ]
  },
  "auth_strategy": "oauth",
  "documentation": "https://www.dropbox.com/developers/core/docs",
  "enabled": true,
  "name": "Dropbox",
  "oauth": {
    "accessTokenPath": "/oauth2/authorize",
    "authTokenPath": "/oauth2/token",
    "baseURL": "https://www.dropbox.com/1",
    "tokenBaseURL": "https://api.dropbox.com/1",
    "clientId": "INSERT_SECERT_HERE",
    "secret": "INSERT_SECERT_HERE",
    "tokenMethod": "access_token_query",
    "version": "2.0"
  },
  "useCustom": true,
  "type": "channel:dropbox",
  "isPassport": true
}
