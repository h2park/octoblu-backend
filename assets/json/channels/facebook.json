{
  "_id": "53359922443595b588409210",
  "auth_strategy": "oauth",
  "documentation": "https://developers.facebook.com/docs/graph-api/reference/",
  "enabled": true,
  "name": "Facebook",
  "type": "channel:facebook",
  "oauth": {
    "development": {
      "clientID": "INSERT_SECERT_HERE",
      "clientSecret": "INSERT_SECERT_HERE",
      "callbackURL": "http://localhost:8080/api/oauth/facebook/callback"
    },
    "production": {
      "clientID": "INSERT_SECERT_HERE",
      "clientSecret": "INSERT_SECERT_HERE",
      "callbackURL": "https://app.octoblu.com/api/oauth/facebook/callback"
    },
    "staging": {
      "clientID": "INSERT_SECERT_HERE",
      "clientSecret": "INSERT_SECERT_HERE",
      "callbackURL": "https://staging.octoblu.com/api/oauth/facebook/callback"
    }
  },
  "application": {
    "base": "https://graph.facebook.com",
    "resources": [
      {
        "path": "/:achievement-id",
        "displayName": "Get Achievement",
        "doc": {
          "url": "https://graph.facebook.com/v2.1/{achievement-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "ID of this particular achievement",
            "style": "query",
            "type": "string",
            "name": "id",
            "required": true
          },
          {
            "displayName": "The user who achieved this",
            "style": "query",
            "type": "User",
            "name": "from"
          },
          {
            "displayName": "Time at which this was achieved",
            "style": "query",
            "type": "datetime",
            "name": "publish_time"
          },
          {
            "displayName": "The app in which the user achieved this",
            "style": "query",
            "type": "App",
            "name": "application"
          },
          {
            "displayName": "Information about the achievement type this instance is connected with",
            "style": "query",
            "type": "object",
            "name": "data"
          },
          {
            "displayName": "Always game.achievement",
            "style": "query",
            "type": "string",
            "name": "type"
          },
          {
            "displayName": "Indicates whether gaining the achievement published a feed story for the user",
            "style": "query",
            "type": "boolean",
            "name": "no_feed_story"
          },
          {
            "name": ":achievement-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/v2.1/:achievement-id"
      },
      {
        "path": "/:achievement-type-id",
        "displayName": "Get Achievement Type",
        "doc": {
          "url": "https://graph.facebook.com/v2.1/{achievement-type-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "ID of the achievement type",
            "style": "query",
            "type": "string",
            "name": "id",
            "required": true
          },
          {
            "displayName": "The value will be games.achievement",
            "style": "query",
            "type": "string",
            "name": "type",
            "required": true
          },
          {
            "displayName": "Title of achievement",
            "style": "query",
            "type": "string",
            "name": "title"
          },
          {
            "displayName": "Unique URL of the achievement",
            "style": "query",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "Description of the achievement",
            "style": "query",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "Image for the achievement",
            "style": "query",
            "type": "object",
            "name": "image"
          },
          {
            "displayName": "An object containing the points this achievement is worth",
            "style": "query",
            "type": "object",
            "name": "data"
          },
          {
            "displayName": "Time when the achievement was last updated",
            "style": "query",
            "type": "datetime",
            "name": "updated_time"
          },
          {
            "displayName": "Time when the achievement was created",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "displayName": "The app that created the achievement",
            "style": "query",
            "type": "App",
            "name": "application"
          },
          {
            "displayName": "Context of the achievement for the associated app",
            "style": "query",
            "type": "array",
            "name": "context"
          },
          {
            "displayName": "Whether the URL containing the achievement metadata has been scraped by Facebook servers",
            "style": "query",
            "type": "boolean",
            "name": "is_scraped"
          },
          {
            "name": ":achievement-type-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/v2.1/:achievement-type-id"
      },
      {
        "path": "/:album-id",
        "displayName": "Represents a photo album. The /:album-id node returns a single album",
        "doc": {
          "url": "https://graph.facebook.com/v2.1/{album-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "style": "URL",
            "type": "string",
            "name": "album-id",
            "required": true
          },
          {
            "displayName": "The album ID",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "Whether the viewer can upload photos to this album",
            "style": "query",
            "type": "boolean",
            "name": "can_upload"
          },
          {
            "displayName": "Number of photos in this album",
            "style": "query",
            "type": "integer",
            "name": "count"
          },
          {
            "displayName": "The ID of the album's cover photo",
            "style": "query",
            "type": "string",
            "name": "cover_photo"
          },
          {
            "displayName": "The time the album was initially created",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "displayName": "The description of the album",
            "style": "query",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "The profile that created the album",
            "style": "query",
            "type": "User",
            "name": "from"
          },
          {
            "displayName": "A link to this album on Facebook",
            "style": "query",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "The textual location of the album",
            "style": "query",
            "type": "string",
            "name": "location"
          },
          {
            "displayName": "The title of the album",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "The place associated with this album",
            "style": "query",
            "type": "Page",
            "name": "place"
          },
          {
            "displayName": "The privacy settings for the album",
            "style": "query",
            "type": "string",
            "name": "privacy"
          },
          {
            "displayName": "The type of the album",
            "style": "query",
            "type": "enum",
            "name": "type"
          },
          {
            "displayName": "The last time the album was updated",
            "style": "query",
            "type": "datetime",
            "name": "updated_time"
          },
          {
            "name": ":album-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/v2.1/:album-id"
      },
      {
        "path": "/:album-id/photos",
        "displayName": "GET the photos in an album on Facebook",
        "doc": {
          "url": "https://graph.facebook.com/v2.1/{album-id}/photos"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":album-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/v2.1/:album-id/photos"
      },
      {
        "path": "/:album-id/photos",
        "displayName": "Create The photos in an album on Faceboo",
        "doc": {
          "url": "https://graph.facebook.com/v2.1/{album-id}/photos"
        },
        "httpMethod": "Post",
        "curl": "curl -X",
        "params": [
          {
            "style": "url",
            "type": "String",
            "name": "album-id",
            "required": true
          },
          {
            "displayName": "The photo, encoded as form data. Either this or url field is required, but both should not be used together",
            "style": "body",
            "type": "multipart/form-data",
            "name": "source",
            "required": true
          },
          {
            "displayName": "The URL of a photo that is already uploaded to the internet. Either this or source is required, but both should not be used together",
            "style": "body",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "The description of the photo, used as the accompanying status message in any feed story.",
            "style": "body",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "Page ID of a place associated with the Photo",
            "style": "body",
            "type": "string",
            "name": "place"
          },
          {
            "displayName": "If set to true, this will suppress the feed story that is automatically generated on a person's profile when they upload a photo using your app",
            "style": "body",
            "type": "boolean",
            "name": "no_story"
          },
          {
            "name": ":album-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/v2.1/:album-id/photos"
      },
      {
        "path": "/:app-id",
        "displayName": "GET A Facebook app",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The app ID",
            "style": "query",
            "type": "string",
            "name": "id",
            "required": true
          },
          {
            "displayName": "Indicates the app key hash for this app's Android native implementation",
            "style": "query",
            "type": "string",
            "name": "android_key_hash"
          },
          {
            "displayName": "Domains and subdomains this app can use",
            "style": "query",
            "type": "string",
            "name": "app_domains"
          },
          {
            "displayName": "The URL of a special landing page that helps people who are using an app begin publishing Open Graph activity",
            "style": "query",
            "type": "string",
            "name": "auth_dialog_data_help_url"
          },
          {
            "displayName": "One line description of an app that appears in the Login Dialog",
            "style": "query",
            "type": "string",
            "name": "auth_dialog_headline"
          },
          {
            "displayName": "The text to explain why an app needs additional permissions that appears in the Login Dialog",
            "style": "query",
            "type": "string",
            "name": "auth_dialog_perms_explanation"
          },
          {
            "displayName": "The default privacy setting selected for Open Graph activities in the Login Dialog",
            "style": "query",
            "type": "enum",
            "name": "auth_referral_default_activity_privacy"
          },
          {
            "displayName": "Indicates whether Authenticated Referrals are enabled",
            "style": "query",
            "type": "boolean",
            "name": "auth_referral_enabled"
          },
          {
            "displayName": "Extended permissions that a person can choose to grant when Authenticated Referrals are enabled",
            "style": "query",
            "type": "string",
            "name": "auth_referral_extended_perms"
          },
          {
            "displayName": "Basic friends permissions that a person must grant when Authenticated Referrals are enabled",
            "style": "query",
            "type": "string",
            "name": "auth_referral_friend_perms"
          },
          {
            "displayName": "Basic user permissions that a person must grant when Authenticated Referrals are enabled",
            "style": "query",
            "type": "string",
            "name": "auth_referral_user_perms"
          },
          {
            "displayName": "The format that an app receives the authentication token from the Login Dialog in",
            "style": "query",
            "type": "enum",
            "name": "auth_referral_response_type"
          },
          {
            "displayName": "Indicates whether app uses fluid or settable height values for Canvas",
            "style": "query",
            "type": "boolean",
            "name": "canvas_fluid_height"
          },
          {
            "displayName": "Indicates whether app uses fluid or fixed width values for Canvas",
            "style": "query",
            "type": "boolean",
            "name": "canvas_fluid_width"
          },
          {
            "displayName": "The non-secure URL from which Canvas app content is loaded",
            "style": "query",
            "type": "string",
            "name": "canvas_url"
          },
          {
            "displayName": "The category of the app",
            "style": "query",
            "type": "string",
            "name": "category"
          },
          {
            "displayName": "The company the app belongs to",
            "style": "query",
            "type": "string",
            "name": "company"
          },
          {
            "displayName": "Email address listed for people to contact developers",
            "style": "query",
            "type": "string",
            "name": "contact_email"
          },
          {
            "displayName": "Provides access to available social context edges for this app. A list of edges are provided below",
            "style": "query",
            "type": "object",
            "name": "context"
          },
          {
            "displayName": "Unix timestamp that indicates when the app was created",
            "style": "query",
            "type": "integer",
            "name": "created_time"
          },
          {
            "displayName": "User ID of the creator of this app",
            "style": "query",
            "type": "integer",
            "name": "creator_uid"
          },
          {
            "displayName": "The number of daily active users the app has",
            "style": "query",
            "type": "string",
            "name": "daily_active_users"
          },
          {
            "displayName": "Ranking of this app vs other apps comparing daily active users",
            "style": "query",
            "type": "string",
            "name": "daily_active_users_rank"
          },
          {
            "displayName": "URL that is pinged whenever a person removes the app",
            "style": "query",
            "type": "string",
            "name": "deauth_callback_url"
          },
          {
            "displayName": "The description of the app written by the 3rd party developers",
            "style": "query",
            "type": "string",
            "name": "description",
            "required": true
          },
          {
            "displayName": "Webspace created with one of our hosting partners for this app",
            "style": "query",
            "type": "string",
            "name": "hosting_url"
          },
          {
            "displayName": "The URL of the app's icon",
            "style": "query",
            "type": "string",
            "name": "icon_url"
          },
          {
            "displayName": "Indicates the bundle ID for this app's native iOS implementation",
            "style": "query",
            "type": "string",
            "name": "ios_bundle_id"
          },
          {
            "displayName": "ID of the app in the iPhone App Store",
            "style": "query",
            "type": "string",
            "name": "iphone_app_store_id"
          },
          {
            "displayName": "A link to the app on Facebook",
            "style": "query",
            "type": "string",
            "name": "link",
            "required": true
          },
          {
            "displayName": "The URL of the app's logo",
            "style": "query",
            "type": "string",
            "name": "logo_url"
          },
          {
            "displayName": "Migrations settings for this app.",
            "style": "query",
            "type": "object",
            "name": "migrations"
          },
          {
            "displayName": "URL to which people will be directed when using the app from a mobile device",
            "style": "query",
            "type": "string",
            "name": "mobile_web_url"
          },
          {
            "displayName": "The number of monthly active users the app has",
            "style": "query",
            "type": "string",
            "name": "monthly_active_users"
          },
          {
            "displayName": "Ranking of this app vs other apps comparing monthly active users",
            "style": "query",
            "type": "string",
            "name": "monthly_active_users_rank"
          },
          {
            "displayName": "Links to URLs for the app in different app stores",
            "style": "query",
            "type": "object",
            "name": "object_store_urls"
          },
          {
            "displayName": "The title of the app",
            "style": "query",
            "type": "string",
            "name": "name",
            "required": true
          },
          {
            "displayName": "The namespace for the app",
            "style": "query",
            "type": "string",
            "name": "namespace",
            "required": true
          },
          {
            "displayName": "The title of the app when used in a Page Tab",
            "style": "query",
            "type": "string",
            "name": "page_tab_default_name"
          },
          {
            "displayName": "The non-secure URL from which Page Tab app content is loaded",
            "style": "query",
            "type": "string",
            "name": "page_tab_url"
          },
          {
            "displayName": "The URL that links to a Privacy Policy for the app",
            "style": "query",
            "type": "string",
            "name": "privacy_policy_url"
          },
          {
            "displayName": "Demographic restrictions set for this app",
            "style": "query",
            "type": "object",
            "name": "restrictions"
          },
          {
            "displayName": "The secure URL from which Canvas app content is loaded",
            "style": "query",
            "type": "string",
            "name": "secure_canvas_url"
          },
          {
            "displayName": "The secure URL from which Page Tab app content is loaded",
            "style": "query",
            "type": "string",
            "name": "secure_page_tab_url"
          },
          {
            "displayName": "App requests must originate from this comma-separated list of IP addresses",
            "style": "query",
            "type": "string",
            "name": "server_ip_whitelist"
          },
          {
            "displayName": "Indicates whether app usage stories show up in the Ticker or News Feed",
            "style": "query",
            "type": "boolean",
            "name": "social_discovery"
          },
          {
            "displayName": "The subcategory of the app",
            "style": "query",
            "type": "string",
            "name": "subcategory"
          },
          {
            "displayName": "URL to Terms of Service which is linked to in Login Dialog",
            "style": "query",
            "type": "string",
            "name": "terms_of_service_url"
          },
          {
            "displayName": "Main contact email for this app",
            "style": "query",
            "type": "string",
            "name": "user_support_email"
          },
          {
            "displayName": "URL of support for people using an app shown in Canvas footer",
            "style": "query",
            "type": "string",
            "name": "user_support_url"
          },
          {
            "displayName": "URL of a website that integrates with this app",
            "style": "query",
            "type": "string",
            "name": "website_url"
          },
          {
            "displayName": "The number of weekly active users the app has",
            "style": "query",
            "type": "string",
            "name": "weekly_active_users"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id"
      },
      {
        "path": "/:app-id",
        "displayName": "You can publish to this node to update most of the app's settings",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}"
        },
        "httpMethod": "Post",
        "curl": "curl -X",
        "params": [
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id"
      },
      {
        "path": "/:app-id/accounts/test-users",
        "displayName": "GET The test users associated with this app",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/accounts/test-users"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The user ID of the test user",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The access token for the test user and this app. This field is only visible if the test user has installed the app",
            "style": "query",
            "type": "string",
            "name": "access_token"
          },
          {
            "displayName": "This URL will allow the test user account to be logged into. The URL will expire one hour after it is generated, or after the first time it is used",
            "style": "query",
            "type": "string",
            "name": "login_url"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/accounts/test-users"
      },
      {
        "path": "/:app-id/accounts/test-users",
        "displayName": "By publishing using this edge, you can create new test users and you can assosciate existing test users with new apps",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/accounts/test-users"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "Automatically installs the app for the test user once it is created or associated",
            "style": "body",
            "type": "boolean",
            "name": "installed"
          },
          {
            "displayName": "List of permissions that are automatically granted for the app when it is created or associated",
            "style": "body",
            "type": "string",
            "name": "permissions"
          },
          {
            "displayName": "The name for the test user. When left blank, a random name will be automatically generated.",
            "style": "body",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "When associating existing test users with other apps, this is the app access token of any app that is already associated with the test user. The {app-id} in the publishing request in this case should be the app that will is the target to associate with the test user. The API request should also be signed with the app access token of that target app. Required when associating test users, but should not be used when creating new test users.",
            "style": "body",
            "type": "string",
            "name": "owner_access_token"
          },
          {
            "displayName": "ID of an existing test user to associate with another app. Required when associating test users, but should not be used when creating new test users.",
            "style": "body",
            "type": "string",
            "name": "uid"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/accounts/test-users"
      },
      {
        "path": "/:app-id/accounts/test-users",
        "displayName": "You can't delete a test user using this edge, however you can delete a test user using the /:test-user-id node",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/accounts/test-users"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "name": "app-id",
            "style": "url",
            "type": "string",
            "required": true
          },
          {
            "displayName": "The ID of the test user to be disassociated from the app",
            "type": "string",
            "name": "uid"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/accounts/test-users"
      },
      {
        "path": "/:app-id/achievements",
        "displayName": "GET The list of Games achievement types that have been registered by this app",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/achievements"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": "app-id",
            "style": "url",
            "type": "string",
            "required": true
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/achievements"
      },
      {
        "path": "/:app-id/achievements",
        "displayName": "You can publish to this edge to create an achievement type for this app",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/achievements"
        },
        "httpMethod": "post",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The URL of an Open Graph Achievement object. This URL should contain the tags necessary to describe an Achievement object.",
            "style": "body",
            "type": "string",
            "name": "achievement",
            "required": true
          },
          {
            "displayName": "Order of the achievement when shown in any achievement stories UI. A display order of 100 is displayed in the UI before 200. Values should be unique and incremented in the correct order for your achievements.",
            "style": "body",
            "type": "string",
            "name": "display_order"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/achievements"
      },
      {
        "path": "/:app-id/achievements",
        "displayName": "You can delete using edge to remove an achievement type from this app",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/achievements"
        },
        "httpMethod": "delete",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The URL of an Open Graph Achievement object",
            "type": "string",
            "name": "achievement",
            "required": true
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/achievements"
      },
      {
        "path": "/:app-id/banned",
        "displayName": "GET The people banned from using this app",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/banned"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/banned"
      },
      {
        "path": "/:app-id/banned",
        "displayName": "Create By publishing using this edge, you ban people from using an app",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/banned"
        },
        "httpMethod": "post",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "List of user IDs of people to be banned",
            "style": "body",
            "type": "string",
            "name": "uid",
            "required": true
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/banned"
      },
      {
        "path": "/:app-id/banned",
        "displayName": "You can un-ban someone from an app using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/banned"
        },
        "httpMethod": "delete",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The ID of the test user to be un-banned from the app",
            "style": "",
            "type": "integer",
            "name": "uid",
            "required": true
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/banned"
      },
      {
        "path": "/:app-id/groups",
        "displayName": "GET Groups that belong to this app",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/groups"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/groups"
      },
      {
        "path": "/:app-id/groups",
        "displayName": "create app and game groups by publishing using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/groups"
        },
        "httpMethod": "POST",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "A name for the group",
            "style": "body",
            "type": "string",
            "name": "name",
            "required": true
          },
          {
            "displayName": "A description for the group",
            "style": "body",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "The privacy setting for the group",
            "style": "body",
            "type": "enum",
            "name": "privacy"
          },
          {
            "displayName": "The user ID of an admin for the group",
            "style": "body",
            "type": "string",
            "name": "admin"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/groups"
      },
      {
        "path": "/:app-id/groups",
        "displayName": "You can delete a group from an app using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/groups"
        },
        "httpMethod": "delete",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The ID of the group to delete",
            "style": "",
            "type": "string",
            "name": "group-id"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/groups"
      },
      {
        "path": "/:app-id/picture",
        "displayName": "GET An app's profile picture",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/picture"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The picture edge is a special case, as when requested, it will by default return the picture itself and not a JSON response. To return a JSON response, you need to set redirect=false as a request attribute. This is how to return the fields below.",
            "style": "query",
            "type": "boolean",
            "name": "redirect"
          },
          {
            "displayName": "You can use this to get a pre-specified size of picture",
            "style": "query",
            "type": "enum",
            "name": "type"
          },
          {
            "displayName": "The URL of the profile photo. Only returned when redirect is false",
            "style": "query",
            "type": "string",
            "name": "url"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/picture"
      },
      {
        "path": "/:app-id/roles",
        "displayName": "GET The developer roles defined for a Facebook app",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/roles"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "style": "url",
            "type": "string",
            "name": "app_id",
            "required": true
          },
          {
            "displayName": "The ID of the user who has a role in the app",
            "style": "query",
            "type": "string",
            "name": "user"
          },
          {
            "displayName": "The name of the role that this person has",
            "style": "query",
            "type": "enum",
            "name": "role"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/roles"
      },
      {
        "path": "/:app-id/roles",
        "displayName": "You can publish to add a user to a role",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/roles"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The ID of the user to give a role in the app",
            "style": "body",
            "type": "string",
            "name": "user"
          },
          {
            "displayName": "The name of the role that this person will have",
            "style": "body",
            "type": "enum",
            "name": "role"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/roles"
      },
      {
        "path": "/:app-id/roles",
        "displayName": "You can remove a user from a role using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/roles"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The ID of the user to remove from a role in the app",
            "style": "",
            "type": "string",
            "name": "user",
            "required": true
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/roles"
      },
      {
        "path": "/:app-id/scores",
        "displayName": "Scores from this Facebook game for a user and their friends",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/scores"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The user who reached the score",
            "style": "query",
            "type": "User",
            "name": "user"
          },
          {
            "displayName": "The app in which the score was reached",
            "style": "query",
            "type": "App",
            "name": "application"
          },
          {
            "displayName": "The score itself",
            "style": "query",
            "type": "integer",
            "name": "score"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/scores"
      },
      {
        "path": "/:app-id/scores",
        "displayName": "You can delete all scores from your app using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/scores"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/scores"
      },
      {
        "path": "/:app-id/staticresources",
        "displayName": "/:app-id/staticresources",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/staticresources"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "Static resource URLs with the fractions of page loads that used each resource",
            "style": "query",
            "type": "array",
            "name": "usage_stats"
          },
          {
            "displayName": "Static resource URLs that are currently being flushed early for users who are using the app",
            "style": "query",
            "type": "array",
            "name": "prefetched_resources"
          },
          {
            "displayName": "An object containing usage_stats and prefetched_resources again, only showing resources accessed via HTTPS",
            "style": "query",
            "type": "object",
            "name": "https"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/staticresources"
      },
      {
        "path": "/:app-id/subscriptions",
        "displayName": "GET The real-time update objects and fields that this app has subscribed to",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/subscriptions"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "Indicates the object type that this subscription applies to",
            "style": "query",
            "type": "enum",
            "name": "object"
          },
          {
            "displayName": "The URL that will receive the POST request when an update is triggered",
            "style": "query",
            "type": "string",
            "name": "callback_url"
          },
          {
            "displayName": "The set of fields in this object that are subscribed to",
            "style": "query",
            "type": "string",
            "name": "fields"
          },
          {
            "displayName": "Indicates whether or not the subscription is active",
            "style": "query",
            "type": "boolean",
            "name": "active"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/subscriptions"
      },
      {
        "path": "/:app-id/subscriptions",
        "displayName": "You can create new real-time update subscriptions using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/subscriptions"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "Indicates the object type that this subscription applies to",
            "style": "body",
            "type": "enum",
            "name": "object"
          },
          {
            "displayName": "The URL that will receive the POST request when an update is triggered, and a GET request when attempting this publish operation",
            "style": "body",
            "type": "string",
            "name": "callback_url"
          },
          {
            "displayName": "One or more of the set of valid fields in this object to subscribe to",
            "style": "body",
            "type": "string",
            "name": "fields"
          },
          {
            "displayName": "An arbitrary string that can be used to confirm to your server that the request is valid",
            "style": "body",
            "type": "string",
            "name": "verify_token"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/subscriptions"
      },
      {
        "path": "/:app-id/subscriptions",
        "displayName": "You can delete all or per-object subscriptions using this operation",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/subscriptions"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "A specific object type to remove subscriptions for. If this optional field is not included, all subscriptions for this app will be removed.",
            "style": "",
            "type": "enum",
            "name": "object"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/subscriptions"
      },
      {
        "path": "/:app-id/translations",
        "displayName": "The strings from this app that were translated using our translations tools",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/translations"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "Specifies which locale of language to request. This is a required parameter when reading this edge.",
            "style": "query",
            "type": "enum",
            "name": "locale",
            "required": true
          },
          {
            "displayName": "A unique ID for each individual string",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The translated string",
            "style": "query",
            "type": "string",
            "name": "translation"
          },
          {
            "displayName": "The approval status of the string",
            "style": "query",
            "type": "enum",
            "name": "approval_status"
          },
          {
            "displayName": "The original string that was translated",
            "style": "query",
            "type": "string",
            "name": "native_string"
          },
          {
            "displayName": "The provided description of the string",
            "style": "query",
            "type": "string",
            "name": "description"
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/translations"
      },
      {
        "path": "/:app-id/translations",
        "displayName": "Publishing you can specify new strings to be translated for your app using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/translations"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The list of strings to add for translation, in an array of objects with the following structure. At least one object must be provided.",
            "style": "body",
            "type": "object",
            "name": "native_strings"
          },
          {
            "displayName": "The string to be translated",
            "style": "body",
            "type": "string",
            "name": "text",
            "required": true
          },
          {
            "displayName": "A description of the string that will help with translation",
            "style": "body",
            "type": "string",
            "name": "description",
            "required": true
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/translations"
      },
      {
        "path": "/:app-id/translations",
        "displayName": "You can delete translation strings using this operation",
        "doc": {
          "url": "https://graph.facebook.com/{app-id}/translations"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "An array of hashes for each translation string. The hash is a unique identifier for each string, and can be retrieved using the translation FQL table.",
            "style": "",
            "type": "string",
            "name": "native_hashes",
            "required": true
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:app-id/translations"
      },
      {
        "path": "/app-link-host",
        "displayName": "An individual app link host object created by an app. An app link host is basically a wrapper for a group of different app links.",
        "doc": {
          "url": "https://graph.facebook.com/app-link-host"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "A custom name for this app link host",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "The App Link URL",
            "style": "query",
            "type": "string",
            "name": "canonical_url"
          },
          {
            "displayName": "An array of app links defined for the iOS platform",
            "style": "query",
            "type": "object",
            "name": "ios"
          },
          {
            "displayName": "The native app's name in the iTunes store",
            "style": "query",
            "type": "string",
            "name": "app_name"
          },
          {
            "displayName": "The native app's ID in the iTunes store",
            "style": "query",
            "type": "integer",
            "name": "app_store_id"
          },
          {
            "displayName": "The native iOS URL that will be navigated to",
            "style": "query",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "An array of app links defined for iPhones",
            "style": "query",
            "type": "object",
            "name": "iphone"
          },
          {
            "displayName": "The native app's name in the iTunes store",
            "style": "query",
            "type": "string",
            "name": "app_name"
          },
          {
            "displayName": "The native app's ID in the iTunes stores",
            "style": "query",
            "type": "integer",
            "name": "app_store_id"
          },
          {
            "displayName": "The native iOS URL that will be navigated to",
            "style": "query",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "An array of app links defined for iPads",
            "style": "query",
            "type": "object",
            "name": "ipad"
          },
          {
            "displayName": "The native app's name in the iTunes store",
            "style": "query",
            "type": "string",
            "name": "app_name"
          },
          {
            "displayName": "The native app's ID in the iTunes store",
            "style": "query",
            "type": "integer",
            "name": "app_store_id"
          },
          {
            "displayName": "The native iOS URL that will be navigated to",
            "style": "query",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "An array of app links defined for the Android platform",
            "style": "query",
            "type": "object",
            "name": "android"
          },
          {
            "displayName": "The native app's name in the Android store",
            "style": "query",
            "type": "string",
            "name": "app_name"
          },
          {
            "displayName": "The fully classified class name of the app for intent generation",
            "style": "query",
            "type": "string",
            "name": "class"
          },
          {
            "displayName": "The fully classified package name of the app for intent generation",
            "style": "query",
            "type": "string",
            "name": "package"
          },
          {
            "displayName": "The native Android URL that will be navigated to",
            "style": "query",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "An array of app links defined for the Windows Phone platform",
            "style": "query",
            "type": "object",
            "name": "windows_phone"
          },
          {
            "displayName": "The native app's id in the Windows Phone store",
            "style": "query",
            "type": "string",
            "name": "app_id"
          },
          {
            "displayName": "The native app's name in the Windows Phone store",
            "style": "query",
            "type": "string",
            "name": "app_name"
          },
          {
            "displayName": "The native Windows Phone URL that will be navigated to",
            "style": "query",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "The web redirect used when the app link URL is loaded in a browser",
            "style": "query",
            "type": "object",
            "name": "web"
          },
          {
            "displayName": "Determines whether the web link should be used if the native links don't work",
            "style": "query",
            "type": "boolean",
            "name": "should_fallback"
          },
          {
            "displayName": "The web URL for this app link",
            "style": "query",
            "type": "string",
            "name": "url"
          }
        ],
        "url": "https://graph.facebook.com/app-link-host"
      },
      {
        "path": "/app-link-host",
        "displayName": "Facebook apps can update app links using this edge",
        "doc": {
          "url": "https://graph.facebook.com/app-link-host"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "A custom name for this app link host",
            "style": "body",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "An array of app links to define for the iOS platform. Any value supplied will overwrite the old list. Removed by passing an empty array.",
            "style": "body",
            "type": "object",
            "name": "ios"
          },
          {
            "displayName": "The native app's name in the iTunes store",
            "style": "body",
            "type": "string",
            "name": "app_name"
          },
          {
            "displayName": "The native app's ID in the iTunes store",
            "style": "body",
            "type": "integer",
            "name": "app_store_id"
          },
          {
            "displayName": "The native iOS URL that will be navigated to. This field is required if using ios.",
            "style": "body",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "An array of app links to define for iPhones. Any values supplied will overwrite the old values. Removed by passing an empty array.",
            "style": "body",
            "type": "object",
            "name": "iphone"
          },
          {
            "displayName": "The native app's name in the iTunes store",
            "style": "body",
            "type": "string",
            "name": "app_name"
          },
          {
            "displayName": "The native app's ID in the iTunes stores",
            "style": "body",
            "type": "integer",
            "name": "app_store_id"
          },
          {
            "displayName": "The native iOS URL that will be navigated to. This field is required if using iphone.",
            "style": "body",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "An array of app links to define for iPads. Any value supplied will overwrite the old list. Removed by passing an empty array.",
            "style": "body",
            "type": "object",
            "name": "ipad"
          },
          {
            "displayName": "The native app's name in the iTunes store",
            "style": "body",
            "type": "string",
            "name": "app_name"
          },
          {
            "displayName": "The native app's ID in the iTunes store",
            "style": "body",
            "type": "integer",
            "name": "app_store_id"
          },
          {
            "displayName": "The native iOS URL that will be navigated to. This field is required if using ipad.",
            "style": "body",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "An array of app links to define for the Android platform. Any value supplied will overwrite the old list. Removed by passing an empty array.",
            "style": "body",
            "type": "object",
            "name": "android"
          },
          {
            "displayName": "The native app's name in the Android store",
            "style": "body",
            "type": "string",
            "name": "app_name"
          },
          {
            "displayName": "The fully classified class name of the app for intent generation",
            "style": "body",
            "type": "string",
            "name": "class"
          },
          {
            "displayName": "The fully classified package name of the app for intent generation",
            "style": "body",
            "type": "string",
            "name": "package"
          },
          {
            "displayName": "The native Android URL that will be navigated to. This field is required if using android.",
            "style": "body",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "An array of app links to define for the Windows Phone platform. Any value supplied will overwrite the old list. Removed by passing an empty array.",
            "style": "body",
            "type": "object",
            "name": "windows_phone"
          },
          {
            "displayName": "The native app's id in the Windows Phone store",
            "style": "body",
            "type": "string",
            "name": "app_id"
          },
          {
            "displayName": "The native app's name in the Windows Phone store",
            "style": "body",
            "type": "string",
            "name": "app_name"
          },
          {
            "displayName": "The native Windows Phone URL that will be navigated to. This field is required if using windows_phone.",
            "style": "body",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "The web redirect used when the app link URL is loaded in a browser",
            "style": "body",
            "type": "object",
            "name": "web"
          },
          {
            "displayName": "Determines whether the web link should be used if the native links don't work",
            "style": "body",
            "type": "boolean",
            "name": "should_fallback"
          },
          {
            "displayName": "The web URL for this app link",
            "style": "body",
            "type": "string",
            "name": "url"
          }
        ],
        "url": "https://graph.facebook.com/app-link-host"
      },
      {
        "path": "/app-link-host",
        "displayName": "Facebook apps can delete app links using this edge",
        "doc": {
          "url": "https://graph.facebook.com/app-link-host"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [],
        "url": "https://graph.facebook.com/app-link-host"
      },
      {
        "path": "/:comment-id",
        "displayName": "GET a single comment",
        "doc": {
          "url": "https://graph.facebook.com/{comment-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The comment ID",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "Link or photo attached to the comment",
            "style": "query",
            "type": "StoryAttachment",
            "name": "attachment"
          },
          {
            "displayName": "Whether the viewer can reply to this comment",
            "style": "query",
            "type": "boolean",
            "name": "can_comment"
          },
          {
            "displayName": "Whether the viewer can remove this comment",
            "style": "query",
            "type": "boolean",
            "name": "can_remove"
          },
          {
            "displayName": "Whether the viewer can hide this comment",
            "style": "query",
            "type": "boolean",
            "name": "can_hide"
          },
          {
            "displayName": "Whether the viewer can like this comment",
            "style": "query",
            "type": "boolean",
            "name": "can_like"
          },
          {
            "displayName": "Number of replies to this comment",
            "style": "query",
            "type": "int32",
            "name": "comment_count"
          },
          {
            "displayName": "The time this comment was made",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "displayName": "The person that made this comment",
            "style": "query",
            "type": "User",
            "name": "from"
          },
          {
            "displayName": "Whether this comment is hidden. The original poster can still see the comment, along with the page admin and anyone else tagged in the comment",
            "style": "query",
            "type": "boolean",
            "name": "is_hidden"
          },
          {
            "displayName": "Number of times this comment was liked",
            "style": "query",
            "type": "int32",
            "name": "like_count"
          },
          {
            "displayName": "The comment text",
            "style": "query",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "Profiles tagged in mentions in the message",
            "style": "query",
            "type": "Profile",
            "name": "message_tags"
          },
          {
            "displayName": "Parent object this comment was made on",
            "style": "query",
            "type": "Object",
            "name": "object"
          },
          {
            "displayName": "For comment replies, this the comment that this is a reply to",
            "style": "query",
            "type": "Comment",
            "name": "parent"
          },
          {
            "displayName": "Whether the viewer has liked this comment",
            "style": "query",
            "type": "boolean",
            "name": "user_likes"
          },
          {
            "name": ":comment-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:comment-id"
      },
      {
        "path": "/:comment-id",
        "displayName": "/:comment-id",
        "doc": {
          "url": "https://graph.facebook.com/{comment-id}"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "style": "body",
            "type": "string",
            "name": "time",
            "required": true
          },
          {
            "style": "body",
            "type": "string",
            "name": "pace_id"
          },
          {
            "name": ":comment-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:comment-id"
      },
      {
        "path": "/:comment-id",
        "displayName": "You can delete a comment",
        "doc": {
          "url": "https://graph.facebook.com/{comment-id}"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "name": ":comment-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:comment-id"
      },
      {
        "path": "/:conversation-id",
        "displayName": "A Facebook Messages conversation between a person and a Facebook Page",
        "doc": {
          "url": "https://graph.facebook.com/{conversation-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The ID of a conversation",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The snippet of the most recent message in a conversation",
            "style": "query",
            "type": "string",
            "name": "snippet"
          },
          {
            "displayName": "Last update time",
            "style": "query",
            "type": "datetime",
            "name": "updated_time"
          },
          {
            "displayName": "The number of messages",
            "style": "query",
            "type": "integer",
            "name": "message_count"
          },
          {
            "displayName": "The number of unread messages",
            "style": "query",
            "type": "integer",
            "name": "unread_count"
          },
          {
            "displayName": "A set of tags indicating the message folder and source of the conversation",
            "style": "query",
            "type": "object",
            "name": "tags"
          },
          {
            "displayName": "The name of the message folder or source",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "People and Pages who are on this conversation",
            "style": "query",
            "type": "User",
            "name": "participants"
          },
          {
            "displayName": "People who have sent a message",
            "style": "query",
            "type": "user",
            "name": "senders"
          },
          {
            "displayName": "Whether the Page is able to reply",
            "style": "query",
            "type": "boolean",
            "name": "can_reply"
          },
          {
            "displayName": "Whether the Page is subscribed to the conversation",
            "style": "query",
            "type": "boolean",
            "name": "is_subscribed"
          },
          {
            "name": ":conversation-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:conversation-id"
      },
      {
        "path": "/:conversation-id/messages",
        "displayName": "GET The messages in a conversation between a person and a page",
        "doc": {
          "url": "https://graph.facebook.com/{conversation-id}/messages"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "A set of tags indicating the message folder and source of the message",
            "style": "query",
            "type": "object",
            "name": "tags"
          },
          {
            "displayName": "The name of the message folder or source",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "name": ":conversation-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:conversation-id/messages"
      },
      {
        "path": "/:conversation-id/messages",
        "displayName": "Post The messages in a conversation between a person and a page",
        "doc": {
          "url": "https://graph.facebook.com/{conversation-id}/messages"
        },
        "httpMethod": "post",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The text of reply",
            "style": "body",
            "type": "string",
            "name": "message",
            "required": true
          },
          {
            "name": ":conversation-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:conversation-id/messages"
      },
      {
        "path": "/:domain-id",
        "displayName": "GET A website domain within the Graph API",
        "doc": {
          "url": "https://graph.facebook.com/{domain-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The ID of the domain",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The name of the domain",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "name": ":domain-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:domain-id"
      },
      {
        "path": "/:event-id",
        "displayName": "GET a single event",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The event ID",
            "style": "query",
            "type": "numeric string",
            "name": "id"
          },
          {
            "displayName": "The event's cover photo",
            "style": "query",
            "type": "CoverPhoto",
            "name": "cover"
          },
          {
            "displayName": "Long-form description of the event",
            "style": "query",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "End time of the event, if one has been set",
            "style": "query",
            "type": "datetime",
            "name": "end_time"
          },
          {
            "displayName": "Indicates whether the event only has a date specified, but no time",
            "style": "query",
            "type": "boolean",
            "name": "is_date_only"
          },
          {
            "displayName": "The location of the event, if any",
            "style": "query",
            "type": "string",
            "name": "location"
          },
          {
            "displayName": "The name of the event",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "The profile that created the event",
            "style": "query",
            "type": "User",
            "name": "owner"
          },
          {
            "displayName": "The group the event belongs to, if any",
            "style": "query",
            "type": "Group",
            "name": "parent_group"
          },
          {
            "displayName": "Who can see the event",
            "style": "query",
            "type": "string",
            "name": "privacy"
          },
          {
            "displayName": "Start time of the event",
            "style": "query",
            "type": "datetime",
            "name": "start_time"
          },
          {
            "displayName": "The link users can visit to buy a ticket to this event. Can only be added to events created by Pages. A user access token is needed for the returned uri to be valid.",
            "style": "query",
            "type": "string",
            "name": "ticket_uri"
          },
          {
            "displayName": "Any timezone that the event has",
            "style": "query",
            "type": "string",
            "name": "timezone"
          },
          {
            "displayName": "Last time that the event was updated",
            "style": "query",
            "type": "datetime",
            "name": "updated_time"
          },
          {
            "displayName": "Venue hosting the event, if any",
            "style": "query",
            "type": "Page",
            "name": "venue"
          },
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id"
      },
      {
        "path": "/:event-id",
        "displayName": "An app that created an event is able to delete that event",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}"
        },
        "httpMethod": "delete",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id"
      },
      {
        "path": "/:event-id",
        "displayName": "An app that created an event is able to update that event",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}"
        },
        "httpMethod": "post",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The URL of a new cover photo that is already uploaded to the internet somewhere",
            "style": "body",
            "type": "string",
            "name": "cover_url"
          },
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id"
      },
      {
        "path": "/:event-id/attending",
        "displayName": "The people who are attending an event",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}/attending"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "What the status of each users RSVP to the event is",
            "style": "query",
            "type": "string",
            "name": "rsvp_status"
          },
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id/attending"
      },
      {
        "path": "/:event-id/attending",
        "displayName": "ou can publish on this edge to mark a user as attending an event",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}/attending"
        },
        "httpMethod": "post",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id/attending"
      },
      {
        "path": "/:event-id/declined",
        "displayName": "GET The people who have declined to attend an event",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}/declined"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "What the status of each users RSVP to the event is",
            "style": "query",
            "type": "string",
            "name": "rsvp_status"
          },
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id/declined"
      },
      {
        "path": "/:event-id/declined",
        "displayName": "/task/:task_id/private",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}/declined"
        },
        "httpMethod": "post",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id/declined"
      },
      {
        "path": "/:event-id/feed",
        "displayName": "GET The feed of posts (including status updates) and links published to this event's wall",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}/feed"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id/feed"
      },
      {
        "path": "/:event-id/feed",
        "displayName": "Post The feed of posts (including status updates) and links published to this event's wall",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}/feed"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The main body of the post, otherwise called the status message. Either link or message must be supplied.",
            "style": "body",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "The URL of a link to attach to the post. Either link or message must be supplied. Additional fields associated with link are shown below.",
            "style": "body",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "Determines the preview image associated with the link",
            "style": "body",
            "type": "string",
            "name": "picture"
          },
          {
            "displayName": "Overwrites the title of the link preview",
            "style": "body",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "Overwrites the caption under the title in the link preview",
            "style": "body",
            "type": "string",
            "name": "caption"
          },
          {
            "displayName": "Overwrites the description in the link preview",
            "style": "body",
            "type": "string",
            "name": "description"
          },
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id/feed"
      },
      {
        "path": "/:event-id/invited",
        "displayName": "GET The people who been invited to an event",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}/invited"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "What the status of each users RSVP to the event is",
            "style": "query",
            "type": "string",
            "name": "rsvp_status"
          },
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id/invited"
      },
      {
        "path": "/:event-id/maybe",
        "displayName": "GET The people who have RSVPed 'maybe' to an event",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}/maybe"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "What the status of each users RSVP to the event is",
            "style": "query",
            "type": "string",
            "name": "rsvp_status"
          },
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id/maybe"
      },
      {
        "path": "/:event-id/maybe",
        "displayName": "You can publish on this edge to RSVP 'maybe' an event",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}/maybe"
        },
        "httpMethod": "Post",
        "curl": "curl -X",
        "params": [
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id/maybe"
      },
      {
        "path": "/:event-id/noreply",
        "displayName": "GET The people who haven't RSVPed to an event invite",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}/noreply"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "What the status of each users RSVP to the event is",
            "style": "query",
            "type": "string",
            "name": "rsvp_status"
          },
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id/noreply"
      },
      {
        "path": "/:event-id/photos",
        "displayName": "GET All the photos uploaded to an event's wall",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}/photos"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id/photos"
      },
      {
        "path": "/:event-id/photos",
        "displayName": "Publishing all the photos uploaded to an event's wall",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}/photos"
        },
        "httpMethod": "Post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The photo, encoded as form data. Either this or url field is required, but both should not be used together.",
            "style": "body",
            "type": "multipart/form-data",
            "name": "source"
          },
          {
            "displayName": "The URL of a photo that is already uploaded to the internet. Either this or source is required, but both should not be used together.",
            "style": "body",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "The description of the photo, used as the accompanying status message in any feed story.",
            "style": "body",
            "type": "string",
            "name": "message"
          },
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id/photos"
      },
      {
        "path": "/:event-id/picture",
        "displayName": "GET An event's cover photo with profile picture dimensions",
        "doc": {
          "url": "https://graph.facebook.com/{event-id}/picture"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The picture edge is a special case, as when requested, it will by default return the picture itself and not a JSON response. To return a JSON response, you need to set redirect=false as a request attribute. This is how to return the fields below.",
            "style": "query",
            "type": "boolean",
            "name": "redirect"
          },
          {
            "displayName": "You can use this to get a pre-specified size of picture",
            "style": "query",
            "type": "enum",
            "name": "type"
          },
          {
            "displayName": "The URL of the profile photo. Only returned when redirect is false.",
            "style": "query",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "Indicates if the photo hasn't been customised and is the default icon. Only returned when redirect is false.",
            "style": "query",
            "type": "boolean",
            "name": "is_silhouette"
          },
          {
            "name": ":event-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:event-id/picture"
      },
      {
        "path": "/:friendlist-id",
        "displayName": "A friend list - an object which refers to a grouping of friends created by someone or generated automatically for someone (such as the Close Friends or Acquaintances lists). You can view all of a person's friend lists using the /:user-id/friendlists edge.",
        "doc": {
          "url": "https://graph.facebook.com/{friendlist-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The friend list ID",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The name of the friend list",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "The type of the friend list",
            "style": "query",
            "type": "enum",
            "name": "list_type"
          },
          {
            "name": ":friendlist-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:friendlist-id"
      },
      {
        "path": "/:group-id",
        "displayName": "GET a single group",
        "doc": {
          "url": "https://graph.facebook.com/{group-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The group ID",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "Information about the group's cover photo",
            "style": "query",
            "type": "string",
            "name": "CoverPhoto"
          },
          {
            "displayName": "ID of the Photo that represents this cover photo",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "URL to the Photo that represents this cover photo",
            "style": "query",
            "type": "string",
            "name": "source"
          },
          {
            "displayName": "The vertical offset in pixels of the photo from the bottom",
            "style": "query",
            "type": "integer",
            "name": "offset_y"
          },
          {
            "displayName": "The horizontal offset in pixels of the photo from the left",
            "style": "query",
            "type": "integer",
            "name": "offset_x"
          },
          {
            "displayName": "A brief description of the group",
            "style": "query",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "The email address to upload content to the group. Only current members of the group can use this.",
            "style": "query",
            "type": "string",
            "name": "email"
          },
          {
            "displayName": "The URL for the group's icon",
            "style": "query",
            "type": "string",
            "name": "icon"
          },
          {
            "displayName": "The group's website",
            "style": "query",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "The name of the group",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "The profile that created this group",
            "style": "query",
            "type": "User|Page",
            "name": "owner"
          },
          {
            "displayName": "The parent of this group, if it exists",
            "style": "query",
            "type": "Group|Page|App",
            "name": "parent"
          },
          {
            "displayName": "The privacy setting of the group",
            "style": "query",
            "type": "string",
            "name": "privacy"
          },
          {
            "displayName": "The last time the group was updated (this includes changes in the group's properties and changes in posts and comments if the session user can see them).",
            "style": "query",
            "type": "datetime",
            "name": "updated_time"
          },
          {
            "name": ":group-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:group-id"
      },
      {
        "path": "/:group-id",
        "displayName": "post An app that created an app or game group can update that groups cover photo",
        "doc": {
          "url": "https://graph.facebook.com/{group-id}"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The url for the cover photo. The image will be downloaded and added to the group's album and then used as a cover photo.",
            "style": "query",
            "type": "string",
            "name": "cover_url",
            "required": true
          },
          {
            "name": ":group-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:group-id"
      },
      {
        "path": "/:group-id/admins",
        "displayName": "Apps can set admins in groups they have created using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{group-id}/admins"
        },
        "httpMethod": "Post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The user to make an admin. They must be a member of the group and user of the app.",
            "style": "body",
            "type": "string",
            "name": "member",
            "required": true
          },
          {
            "name": ":group-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:group-id/admins"
      },
      {
        "path": "/:group-id/admins",
        "displayName": "Apps can remove admins from groups they have created using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{group-id}/admins"
        },
        "httpMethod": "delete",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The admin to remove",
            "style": "",
            "type": "string",
            "name": "uid",
            "required": true
          },
          {
            "name": ":group-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:group-id/admins"
      },
      {
        "path": "/:group-id/docs",
        "displayName": "GET The docs in a group",
        "doc": {
          "url": "https://graph.facebook.com/{group-id}/docs"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":group-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:group-id/docs"
      },
      {
        "path": "/:group-id/events",
        "displayName": "GET All events that belong to a group",
        "doc": {
          "url": "https://graph.facebook.com/{group-id}/events"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":group-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:group-id/events"
      },
      {
        "path": "/:group-id/feed",
        "displayName": "GET The feed of posts (including status updates) and links published to this group",
        "doc": {
          "url": "https://graph.facebook.com/{group-id}/feed"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":group-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:group-id/feed"
      },
      {
        "path": "/:group-id/feed",
        "displayName": "Publishing The feed of posts (including status updates) and links published to this group",
        "doc": {
          "url": "https://graph.facebook.com/{group-id}/feed"
        },
        "httpMethod": "post",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The main body of the post, otherwise called the status message. Either link or message must be supplied.",
            "style": "body",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "The URL of a link to attach to the post. Either link or message must be supplied. Additional fields associated with link are shown below.",
            "style": "body",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "Determines the preview image associated with the link",
            "style": "body",
            "type": "string",
            "name": "picture"
          },
          {
            "displayName": "Overwrites the title of the link preview",
            "style": "body",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "Overwrites the caption under the title in the link preview.",
            "style": "body",
            "type": "string",
            "name": "caption"
          },
          {
            "displayName": "Overwrites the description in the link preview",
            "style": "body",
            "type": "string",
            "name": "description"
          },
          {
            "name": ":group-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:group-id/feed"
      },
      {
        "path": "/:group-id/files",
        "displayName": "GET The files uploaded to this group",
        "doc": {
          "url": "https://graph.facebook.com/{group-id}/files"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The ID of the file. Note that you cannot request each file individually by its ID, only through this edge.",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The person who uploaded the file",
            "style": "query",
            "type": "User",
            "name": "from"
          },
          {
            "displayName": "The group the file is uploaded to (the same group as in the request)",
            "style": "query",
            "type": "Group",
            "name": "group"
          },
          {
            "displayName": "URL to download the file",
            "style": "query",
            "type": "string",
            "name": "download_link"
          },
          {
            "displayName": "The last time the file was changed",
            "style": "query",
            "type": "datetime",
            "name": "updated_time"
          },
          {
            "name": ":group-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:group-id/files"
      },
      {
        "path": "/:group-id/members",
        "displayName": "GET The members of a group",
        "doc": {
          "url": "https://graph.facebook.com/{group-id}/members"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "Whether or not the person is a group admin",
            "style": "query",
            "type": "boolean",
            "name": "administrator"
          },
          {
            "name": ":group-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:group-id/members"
      },
      {
        "path": "/:group-id/members",
        "displayName": "Apps can invite people (if they are an admin, developer, or tester of the app) to a group created by that app",
        "doc": {
          "url": "https://graph.facebook.com/{group-id}/members"
        },
        "httpMethod": "Post",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The user to invite. They must have a role in the app such as admin, developer, or tester",
            "style": "body",
            "type": "string",
            "name": "member",
            "required": true
          },
          {
            "displayName": "The user ID of someone that can appear as the sender of the group invite. If this field is used, the two people must be friends on Facebook for the invite to send.",
            "style": "body",
            "type": "string",
            "name": "from"
          },
          {
            "name": ":group-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:group-id/members"
      },
      {
        "path": "/:group-id/members",
        "displayName": "remove people from groups that app has created",
        "doc": {
          "url": "https://graph.facebook.com/{group-id}/members"
        },
        "httpMethod": "delete",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The user to remove. They must be a user of the app.",
            "style": "",
            "type": "string",
            "name": "member",
            "required": true
          },
          {
            "name": ":group-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:group-id/members"
      },
      {
        "path": "/:group-doc-id",
        "displayName": "Represents a doc within a Facebook group. The /:group-doc-id node returns a single doc.",
        "doc": {
          "url": "https://graph.facebook.com/{group-doc-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The group doc ID",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The profile that created this doc",
            "style": "query",
            "type": "User|Page",
            "name": "from"
          },
          {
            "displayName": "The title of the doc",
            "style": "query",
            "type": "string",
            "name": "subject"
          },
          {
            "displayName": "The body of the doc. This string will contain HTML for any formatting in the doc, and will be HTML encoded.",
            "style": "query",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "The URL for the doc's icon",
            "style": "query",
            "type": "string",
            "name": "icon"
          },
          {
            "displayName": "When the doc was created",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "displayName": "The last time the doc was changed",
            "style": "query",
            "type": "datetime",
            "name": "updated_time"
          },
          {
            "displayName": "An ID representing the current doc revision",
            "style": "query",
            "type": "integer",
            "name": "revision"
          },
          {
            "displayName": "Whether the session user can edit this doc",
            "style": "query",
            "type": "boolean",
            "name": "can_edit"
          },
          {
            "displayName": "Whether the session user can delete this doc",
            "style": "query",
            "type": "boolean",
            "name": "can_delete"
          },
          {
            "name": ":group-doc-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:group-doc-id"
      },
      {
        "path": "/:link-id",
        "displayName": "GET A link shared on a wall",
        "doc": {
          "url": "https://graph.facebook.com/{link-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The link ID",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The time the message was published",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "displayName": "A description of the link (appears beneath the link caption)",
            "style": "query",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "The user that created the link",
            "style": "query",
            "type": "User",
            "name": "from"
          },
          {
            "displayName": "A URL to the link icon that Facebook displays in the news feed",
            "style": "query",
            "type": "string",
            "name": "icon"
          },
          {
            "displayName": "The URL that was shared",
            "style": "query",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "The optional message from the user about this link",
            "style": "query",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "The name of the link",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "A URL to the thumbnail image used in the link post",
            "style": "query",
            "type": "string",
            "name": "picture"
          },
          {
            "name": ":link-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:link-id"
      },
      {
        "path": "/:link-id",
        "displayName": "An app can delete a link if it published it",
        "doc": {
          "url": "https://graph.facebook.com/{link-id}"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "name": ":link-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:link-id"
      },
      {
        "path": "/:message-id",
        "displayName": "GET An individual message in the Facebook messaging system",
        "doc": {
          "url": "https://graph.facebook.com/{message-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "A timestamp of when this message was created",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "displayName": "The sender of this message",
            "style": "query",
            "type": "Profile",
            "name": "from"
          },
          {
            "displayName": "The unique ID for this message",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The text of the message",
            "style": "query",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "The subject of the message",
            "style": "query",
            "type": "string",
            "name": "subject"
          },
          {
            "displayName": "A set of tags indicating the message folder and source of the message",
            "style": "query",
            "type": "object",
            "name": "tags"
          },
          {
            "displayName": "A list of recipients of the message",
            "style": "query",
            "type": "Profile",
            "name": "to"
          },
          {
            "name": ":message-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:message-id"
      },
      {
        "path": "/:object-id/comments",
        "displayName": "This reference describes the /comments edge that is common to multiple Graph API nodes. The structure and operations are the same for each node",
        "doc": {
          "url": "https://graph.facebook.com/{object-id}/comments"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "Order in which comments were returned. + ranked indicates the most interesting comments are sorted first. + chronological indicates comments are sorted by the oldest comments first.",
            "style": "query",
            "type": "enum",
            "name": "order",
            "required": true
          },
          {
            "displayName": "The count of comments on this node. It is important to note that this value is changed depending on the filter modifier being used",
            "style": "query",
            "type": "int32",
            "name": "total_count",
            "required": true
          },
          {
            "name": ":object-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:object-id/comments"
      },
      {
        "path": "/:object-id/comments",
        "displayName": "You can publish new comments",
        "doc": {
          "url": "https://graph.facebook.com/{object-id}/comments"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The comment text. One of attachment_url, attachment_id, message or source must be provided when publishing.",
            "style": "body",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "An optional ID of a unpublished photo (see no_story field in /{user-id}/photos) uploaded to Facebook to include as a photo comment. One of attachment_url, attachment_id, message or source must be provided when publishing.",
            "style": "body",
            "type": "string",
            "name": "attachment_id"
          },
          {
            "displayName": "The URL of an image to include as a photo comment. One of attachment_url, attachment_id, message or source must be provided when publishing.",
            "style": "body",
            "type": "string",
            "name": "attachment_url"
          },
          {
            "displayName": "A photo, encoded as form data, to use as a photo comment. One of attachment_url, attachment_id, message or source must be provided when publishing.",
            "style": "body",
            "type": "multipart",
            "name": "source"
          },
          {
            "name": ":object-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:object-id/comments"
      },
      {
        "path": "/:object-id/likes",
        "displayName": "This reference describes the /likes edge that is common to multiple Graph API nodes. The structure and operations are the same for each node.",
        "doc": {
          "url": "https://graph.facebook.com/{object-id}/likes"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "Total number of people who liked. This is only returned when the flag summary=true is set.",
            "style": "query",
            "type": "int32",
            "name": "total_count"
          },
          {
            "name": ":object-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:object-id/likes"
      },
      {
        "path": "/:object-id/likes",
        "displayName": "You can add new likes to any object",
        "doc": {
          "url": "https://graph.facebook.com/{object-id}/likes"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "name": ":object-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:object-id/likes"
      },
      {
        "path": "/:object-id/likes",
        "displayName": "/app/icon/search",
        "doc": {
          "url": "https://graph.facebook.com/{object-id}/likes"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "name": ":object-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:object-id/likes"
      },
      {
        "path": "/:object-id/sharedposts",
        "displayName": "This reference describes the /sharedposts edge that is common to multiple Graph API nodes. The structure and operations are the same for each node.",
        "doc": {
          "url": "https://graph.facebook.com/{object-id}/sharedposts"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":object-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:object-id/sharedposts"
      },
      {
        "path": "/:object-id/insights/:metric-name",
        "displayName": "get a single Insights metric that is tied to another particular Graph API object (Page, Post, etc.)",
        "doc": {
          "url": "https://graph.facebook.com/{object-id}/insights/{metric-name}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The full description of the metric",
            "style": "query",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "ID of the insight",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "Name of the metric",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "Length of the period during which the insights were collected",
            "style": "query",
            "type": "string",
            "name": "period"
          },
          {
            "displayName": "Individual data points for the insight grouped by different time periods (determined by period)",
            "style": "query",
            "type": "object",
            "name": "values"
          },
          {
            "displayName": "The value of the metric in a period. The content of this field varies based on the metric type being requested.",
            "style": "query",
            "type": "various",
            "name": "value"
          },
          {
            "displayName": "The end time of the period that this metric value refers to",
            "style": "query",
            "type": "datetime",
            "name": "end_time"
          },
          {
            "name": ":object-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          },
          {
            "name": ":metric-name",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:object-id/insights/:metric-name"
      },
      {
        "path": "/:milestone-id",
        "displayName": "GET a milestone on a Facebook Page",
        "doc": {
          "url": "https://graph.facebook.com/{milestone-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The ID of a milestone event",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The title of the milestone",
            "style": "query",
            "type": "string",
            "name": "title"
          },
          {
            "displayName": "The Page that posted the milestone",
            "style": "query",
            "type": "Page",
            "name": "from"
          },
          {
            "displayName": "The description of the milestone",
            "style": "query",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "The creation time of the milestone",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "displayName": "The update time of the milestone",
            "style": "query",
            "type": "datetime",
            "name": "updated_time"
          },
          {
            "displayName": "The start time of the milestone",
            "style": "query",
            "type": "datetime",
            "name": "start_time"
          },
          {
            "displayName": "The end time of the milestone. Page milestones have the same start and end time",
            "style": "query",
            "type": "datetime",
            "name": "end_time"
          },
          {
            "name": ":milestone-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:milestone-id"
      },
      {
        "path": "/:milestone-id",
        "displayName": "You can delete an existing milestone by updating on this node",
        "doc": {
          "url": "https://graph.facebook.com/{milestone-id}"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "name": ":milestone-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:milestone-id"
      },
      {
        "path": "/:milestone-id",
        "displayName": "You can update an existing milestone by updating on this node",
        "doc": {
          "url": "https://graph.facebook.com/{milestone-id}"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The title of the milestone",
            "style": "body",
            "type": "string",
            "name": "title"
          },
          {
            "displayName": "The description of the milestone",
            "style": "body",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "The start time of the milestone. This will also update the end_time value.",
            "style": "body",
            "type": "datetime",
            "name": "start_time"
          },
          {
            "name": ":milestone-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:milestone-id"
      },
      {
        "path": "/:milestone-id/photos",
        "displayName": "GET The photos attached to a milestone on a Facebook Page",
        "doc": {
          "url": "https://graph.facebook.com/{milestone-id}/photos"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":milestone-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:milestone-id/photos"
      },
      {
        "path": "/:milestone-id/photos",
        "displayName": "You can add photos to a milestone by uploading them as file data",
        "doc": {
          "url": "https://graph.facebook.com/{milestone-id}/photos"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The photo, encoded as form data",
            "style": "body",
            "type": "multipart/form-data",
            "name": "source",
            "required": true
          },
          {
            "name": ":milestone-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:milestone-id/photos"
      },
      {
        "path": "/:notification-id",
        "displayName": "Get An individual unread Facebook notification",
        "doc": {
          "url": "https://graph.facebook.com/{notification-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The notification's id",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The entity (user, page, app, etc.) that 'sent', or is the source of the notification",
            "style": "query",
            "type": "User|Page|App",
            "name": "from"
          },
          {
            "displayName": "The entity that received the notification",
            "style": "query",
            "type": "User",
            "name": "to"
          },
          {
            "displayName": "When the notification was created",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "displayName": "When the notification was last updated",
            "style": "query",
            "type": "datetime",
            "name": "updated_time"
          },
          {
            "displayName": "The message text in the notification",
            "style": "query",
            "type": "string",
            "name": "title"
          },
          {
            "displayName": "The URL that clicking on the notification would take someone",
            "style": "query",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "The app responsible for generating the notification. Some of the core Facebook features have their own app that shows up here, such as likes when someone likes another person's content.",
            "style": "query",
            "type": "App",
            "name": "application"
          },
          {
            "displayName": "Indicates that the notification is unread. Note that 'read' notifications will not be accessible.",
            "style": "query",
            "type": "integer",
            "name": "unread"
          },
          {
            "displayName": "The object (this can be a post, a photo, a comment, etc.) that was the subject of the notification.",
            "style": "query",
            "type": "Object",
            "name": "object"
          },
          {
            "name": ":notification-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:notification-id"
      },
      {
        "path": "/:offer-id",
        "displayName": "GET An offer that is published by a Facebook Page",
        "doc": {
          "url": "https://graph.facebook.com/{offer-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The offer's ID",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The maximum number of times the offer can be claimed",
            "style": "query",
            "type": "integer",
            "name": "claim_limit"
          },
          {
            "displayName": "The type of offer",
            "style": "query",
            "type": "string",
            "name": "coupon_type"
          },
          {
            "displayName": "The time the offer was created",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "displayName": "The expiration time of the offer (for display purposes)",
            "style": "query",
            "type": "datetime",
            "name": "expiration_time"
          },
          {
            "displayName": "The page that published the offer",
            "style": "query",
            "type": "Page",
            "name": "from"
          },
          {
            "displayName": "The URL for the offer's image",
            "style": "query",
            "type": "string",
            "name": "image_url"
          },
          {
            "displayName": "A code to to receive the discount or promotion",
            "style": "query",
            "type": "string",
            "name": "redemption_code"
          },
          {
            "displayName": "The URL where the offer may be redeemed",
            "style": "query",
            "type": "string",
            "name": "redemption_link"
          },
          {
            "displayName": "The terms of the offer",
            "style": "query",
            "type": "string",
            "name": "terms"
          },
          {
            "displayName": "The title of the offer",
            "style": "query",
            "type": "string",
            "name": "title"
          },
          {
            "displayName": "The description text of the offer",
            "style": "query",
            "type": "string",
            "name": "message"
          },
          {
            "name": ":offer-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:offer-id"
      },
      {
        "path": "/:page-id",
        "displayName": "This represents a Facebook Page. The /:page-id node returns a single 'page'",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The Page ID",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "Information about the Page",
            "style": "query",
            "type": "string",
            "name": "about"
          },
          {
            "displayName": "Dress code of the business. Applicable to Restaurants or Nightlife. Can be one of Casual, Dressy or Unspecified.",
            "style": "query",
            "type": "string",
            "name": "attire"
          },
          {
            "displayName": "Members of the band. Applicable to Bands.",
            "style": "query",
            "type": "string",
            "name": "band_members"
          },
          {
            "displayName": "The best available Page on Facebook for the concept represented by this Page. The best available Page takes into account authenticity and fan count.",
            "style": "query",
            "type": "Page",
            "name": "best_page"
          },
          {
            "displayName": "Birthday of this person. Applicable to Pages representing people.",
            "style": "query",
            "type": "string",
            "name": "birthday"
          },
          {
            "displayName": "Booking agent of the band. Applicable to Bands.",
            "style": "query",
            "type": "string",
            "name": "booking_agent"
          },
          {
            "displayName": "Whether the current session user can post on this Page",
            "style": "query",
            "type": "boolean",
            "name": "can_post"
          },
          {
            "displayName": "The Page's main category. e.g. Product/Service, Computers/Technology",
            "style": "query",
            "type": "string",
            "name": "category"
          },
          {
            "displayName": "Number of checkins at a place represented by a Page",
            "style": "query",
            "type": "PageCategory",
            "name": "category_list"
          },
          {
            "displayName": "/batch/{batch_id}",
            "style": "query",
            "type": "int32",
            "name": "checkins"
          },
          {
            "displayName": "The company overview. Applicable to Companies.",
            "style": "query",
            "type": "string",
            "name": "company_overview"
          },
          {
            "displayName": "Information about the Page's cover photo",
            "style": "query",
            "type": "CoverPhoto",
            "name": "cover¹"
          },
          {
            "displayName": "ID of the Photo that represents this cover photo",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "URL to the Photo that represents this cover photo",
            "style": "query",
            "type": "string",
            "name": "source"
          },
          {
            "displayName": "The vertical offset in pixels of the photo from the bottom",
            "style": "query",
            "type": "integer",
            "name": "offset_y"
          },
          {
            "displayName": "The horizontal offset in pixels of the photo from the left",
            "style": "query",
            "type": "integer",
            "name": "offset_x"
          },
          {
            "displayName": "Provides access to available social context edges for this Page. A list of edges are provided below.",
            "style": "query",
            "type": "object",
            "name": "context"
          },
          {
            "displayName": "Social context edge providing a list of friends who also like this Facebook page.",
            "style": "query",
            "type": "Edge<User>",
            "name": "/friends_who_like"
          },
          {
            "displayName": "Social context edge providing a list of friends who have been tagged at the place represented by this Facebook page.",
            "style": "query",
            "type": "Edge<User>",
            "name": "/friends_tagged_at"
          },
          {
            "displayName": "Social context edge providing a list of friends who have listened to the musical act represented by this Facebook page.",
            "style": "query",
            "type": "Edge<User>",
            "name": "/music_listen_friends"
          },
          {
            "displayName": "Social context edge providing a list of friends who have watched the video content represented by this Facebook page.",
            "style": "query",
            "type": "Edge<User>",
            "name": "/video_watch_friends"
          },
          {
            "displayName": "Current location of the Page",
            "style": "query",
            "type": "string",
            "name": "current_location"
          },
          {
            "displayName": "The description of the Page",
            "style": "query",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "The director of the film. Applicable to Films.",
            "style": "query",
            "type": "string",
            "name": "directed_by"
          },
          {
            "displayName": "When the company is founded. Applicable to Companies.",
            "style": "query",
            "type": "string",
            "name": "founded"
          },
          {
            "displayName": "General information provided by the Page",
            "style": "query",
            "type": "string",
            "name": "general_info"
          },
          {
            "displayName": "General manager of the business. Applicable to Restaurants or Nightlife.",
            "style": "query",
            "type": "string",
            "name": "general_manager"
          },
          {
            "displayName": "If the Page is in a Global Pages structure and the viewer has a role on the Page, this is the Page name with the country code(s) that redirect to it appended in parentheses. If the Page isn't part of a Global Pages structure or if the viewer doesn't have a role on the Page, this is simply the Page name.",
            "style": "query",
            "type": "string",
            "name": "global_brand_page_name"
          },
          {
            "displayName": "If the Page is in a Global Pages structure, this is the brand's global (parent) Page.",
            "style": "query",
            "type": "Page",
            "name": "global_brand_parent_page"
          },
          {
            "displayName": "Hometown of the band. Applicable to Bands.",
            "style": "query",
            "type": "string",
            "name": "hometown"
          },
          {
            "displayName": "Indicates the opening hours for this location.",
            "style": "query",
            "type": "object",
            "name": "hours¹"
          },
          {
            "displayName": "Indicates a single range of opening hours for a day. Each day can have 2 different hours ranges. {day} should be the first 3 characters of the day of the week, {number} should be either 1 or 2 to allow for the two different hours ranges per day. {status} should be either open or close to delineate the start or end of a time range. An example would be mon_1_open with value 17:00 and mon_1_close with value 21:15 which would represent a single opening range of 5pm to 9:15pm on Mondays.",
            "style": "query",
            "type": "string",
            "name": "{day}_{number}_{status}"
          },
          {
            "displayName": "Impressum for this page. Only required for German pages.",
            "style": "query",
            "type": "string",
            "name": "impressum"
          },
          {
            "displayName": "For businesses that are no longer operating",
            "style": "query",
            "type": "boolean",
            "name": "is_permanently_closed¹"
          },
          {
            "displayName": "Indicates whether the Page is published and visible to non-admins.",
            "style": "query",
            "type": "boolean",
            "name": "is_published"
          },
          {
            "displayName": "Indicates whether the Page is unclaimed",
            "style": "query",
            "type": "boolean",
            "name": "is_unclaimed"
          },
          {
            "displayName": "The number of users who like the Page. For Global Brand Pages this is the count for all pages across the brand.",
            "style": "query",
            "type": "int32",
            "name": "likes"
          },
          {
            "displayName": "The Page's Facebook URL",
            "style": "query",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "The location of this place. Applicable to all Places.",
            "style": "query",
            "type": "object or string²",
            "name": "location¹"
          },
          {
            "displayName": "The company mission. Applicable to Companies.",
            "style": "query",
            "type": "string",
            "name": "mission¹"
          },
          {
            "displayName": "The name of the Page. This field can only be updated when the Page has less than 200 fans.",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "Information about the parking available at a place.",
            "style": "query",
            "type": "object",
            "name": "parking¹"
          },
          {
            "displayName": "Indicates street parking is available.",
            "style": "query",
            "type": "boolean",
            "name": "street"
          },
          {
            "displayName": "Indicates a parking lot is available",
            "style": "query",
            "type": "boolean",
            "name": "lot"
          },
          {
            "displayName": "Indicates a valet is available",
            "style": "query",
            "type": "boolean",
            "name": "valet"
          },
          {
            "displayName": "Information about the available payment options at a place",
            "style": "query",
            "type": "object",
            "name": "payment_options"
          },
          {
            "displayName": "Indicates American Express is accepted",
            "style": "query",
            "type": "boolean",
            "name": "amex"
          },
          {
            "displayName": "Indicates cash is accepted",
            "style": "query",
            "type": "boolean",
            "name": "cash_only"
          },
          {
            "displayName": "Indicates Discover accepted",
            "style": "query",
            "type": "boolean",
            "name": "discover"
          },
          {
            "displayName": "Indicates MasterCard is accepted",
            "style": "query",
            "type": "boolean",
            "name": "mastercard"
          },
          {
            "displayName": "Indicates Visa is accepted",
            "style": "query",
            "type": "boolean",
            "name": "visa"
          },
          {
            "displayName": "Phone number provided by a Page",
            "style": "query",
            "type": "string",
            "name": "phone¹"
          },
          {
            "displayName": "Press contact information of the band. Applicable to Bands.",
            "style": "query",
            "type": "string",
            "name": "press_contact"
          },
          {
            "displayName": "Price range of the business. Applicable to Restaurants or Nightlife.",
            "style": "query",
            "type": "enum",
            "name": "price_range"
          },
          {
            "displayName": "Services the restaurant provides. Applicable to Restaurants.",
            "style": "query",
            "type": "object",
            "name": "restaurant_services"
          },
          {
            "displayName": "Whether the restaurant is kids-friendly.",
            "style": "query",
            "type": "int32",
            "name": "kids"
          },
          {
            "displayName": "Whether the restaurant has delivery service",
            "style": "query",
            "type": "int32",
            "name": "delivery"
          },
          {
            "displayName": "Whether the restaurant welcomes walkins",
            "style": "query",
            "type": "int32",
            "name": "walkins"
          },
          {
            "displayName": "Whether the restaurant has catering service",
            "style": "query",
            "type": "int32",
            "name": "catering"
          },
          {
            "displayName": "Whether the restaurant takes reservations",
            "style": "query",
            "type": "int32",
            "name": "reserve"
          },
          {
            "displayName": "Whether the restaurant is group-friendly",
            "style": "query",
            "type": "int32",
            "name": "groups"
          },
          {
            "displayName": "Whether the restaurant has waiters",
            "style": "query",
            "type": "int32",
            "name": "waiter"
          },
          {
            "displayName": "Whether the restaurant has outdoor seating",
            "style": "query",
            "type": "int32",
            "name": "outdoor"
          },
          {
            "displayName": "Whether the restaurant has takeout service",
            "style": "query",
            "type": "int32",
            "name": "takeout"
          },
          {
            "displayName": "The restaurant's specialties. Applicable to Restaurants.",
            "style": "query",
            "type": "object",
            "name": "restaurant_specialties"
          },
          {
            "displayName": "The number of people talking about this Page",
            "style": "query",
            "type": "int32",
            "name": "talking_about_count"
          },
          {
            "displayName": "The alias of the Page. For example, for www.facebook.com/platform the username is 'platform'.",
            "style": "query",
            "type": "string",
            "name": "username"
          },
          {
            "displayName": "The URL of the Page's website",
            "style": "query",
            "type": "string",
            "name": "website¹"
          },
          {
            "displayName": "The number of visits to this Page's location. If the Page setting Show map, check-ins and star ratings on the Page (under Page Settings > Page Info > Address) is disabled, then this value will also be disabled.",
            "style": "query",
            "type": "int32",
            "name": "were_here_count"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id"
      },
      {
        "path": "/:page-id",
        "displayName": "You can publish to this node to update any of the Page fields marked above with ¹ or to change a Page's cover photo.",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The ID of a photo already on Facebook to use as a new cover photo",
            "style": "body",
            "type": "integer",
            "name": "cover"
          },
          {
            "displayName": "The percentage offset from top (ie. a number between 0-100). The default value is 50. This field can only be used when cover is supplied.",
            "style": "body",
            "type": "integer",
            "name": "offset_y"
          },
          {
            "displayName": "Suppress the creation of a feed story for a cover photo update. The default value is false. This field can only be used when cover is supplied.",
            "style": "body",
            "type": "boolean",
            "name": "no_feed_story"
          },
          {
            "displayName": "Suppress notifications for a cover photo update. The default value is false. This field can only be used when cover is supplied.",
            "style": "body",
            "type": "boolean",
            "name": "no_notification"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id"
      },
      {
        "path": "/:page-id/albums",
        "displayName": "GET The photo albums this Page has created",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/albums"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/albums"
      },
      {
        "path": "/:page-id/albums",
        "displayName": "Publishing the photo albums this Page has created",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/albums"
        },
        "httpMethod": "post",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The name given to the album",
            "style": "body",
            "type": "string",
            "name": "name",
            "required": true
          },
          {
            "displayName": "The description of the album, which will show up in news feed stories as the status message",
            "style": "body",
            "type": "string",
            "name": "message"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/albums"
      },
      {
        "path": "/:page-id/blocked",
        "displayName": "GET A list of people blocked from viewing this Page",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/blocked"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/blocked"
      },
      {
        "path": "/:page-id/blocked",
        "displayName": "The user ID of the person to be blocked",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/blocked"
        },
        "httpMethod": "post",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "/calendar/app/{app_id}/ics/{user_id}/{token}/",
            "style": "body",
            "type": "string",
            "name": "user",
            "required": true
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/blocked"
      },
      {
        "path": "/:page-id/conversations",
        "displayName": "GET The Facebook Messages conversations that this Page is involved in",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/conversations"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/conversations"
      },
      {
        "path": "/:page-id/events",
        "displayName": "GET The events this Page has created",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/events"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/events"
      },
      {
        "path": "/:page-id/feed",
        "displayName": "/calendar/personal/summary",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/feed"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "Whether or not to include any posts that were hidden by the Page. Defaults to false",
            "style": "query",
            "type": "boolean",
            "name": "include_hidden"
          },
          {
            "displayName": "Used with the promotable_posts edge only to differentiate between app ad, and other types of posts",
            "style": "query",
            "type": "enum",
            "name": "filter"
          },
          {
            "displayName": "/Used with the promotable_posts edge only to filter by published or unpublished page posts.",
            "style": "query",
            "type": "boolean",
            "name": "is_published"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/feed"
      },
      {
        "path": "/:page-id/feed",
        "displayName": "You can create links, status messages, or posts by using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/feed"
        },
        "httpMethod": "post",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The main body of the post, otherwise called the status message. Either link or message must be supplied.",
            "style": "body",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "The URL of a link to attach to the post. Either link or message must be supplied. Additional fields associated with link are shown below.",
            "style": "body",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "Determines the preview image associated with the link.",
            "style": "body",
            "type": "string",
            "name": "picture"
          },
          {
            "displayName": "Overwrites the title of the link preview",
            "style": "body",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "Overwrites the caption under the title in the link preview",
            "style": "body",
            "type": "string",
            "name": "caption"
          },
          {
            "displayName": "Overwrites the description in the link preview",
            "style": "body",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "The action links attached to the post",
            "style": "body",
            "type": "array",
            "name": "actions"
          },
          {
            "displayName": "The name or label of the action link",
            "style": "body",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "The URL of the action link itself",
            "style": "body",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "Page ID of a location associated with this post",
            "style": "body",
            "type": "string",
            "name": "place"
          },
          {
            "displayName": "Comma-separated list of user IDs of people tagged in this post. You cannot specify this field without also specifying a place.",
            "style": "body",
            "type": "string",
            "name": "tags"
          },
          {
            "displayName": "Facebook ID for an existing picture in the person's photo albums to use as the thumbnail image. They must be the owner of the photo, and the photo cannot be part of a message attachment.",
            "style": "body",
            "type": "string",
            "name": "object_attachment"
          },
          {
            "displayName": "Object that limits the audience for this content. Anyone not in these demographics will not be able to view this content. This will not override any Page-level demographic restrictions that may be in place.",
            "style": "body",
            "type": "object",
            "name": "targeting"
          },
          {
            "displayName": "Values of targeting countries. You can specify up to 25 countries. Use ISO 3166 format codes.",
            "style": "body",
            "type": "string",
            "name": "countries"
          },
          {
            "displayName": "Targeted locales. Use type of adlocale to find Targeting Options and use the returned key to specify.",
            "style": "body",
            "type": "integer",
            "name": "locales"
          },
          {
            "displayName": "Object that controls news feed targeting for this content. Anyone in these groups will be more likely to see this content, those not will be less likely, but may still see it anyway. Any of the targeting fields shown here can be used, none are required.",
            "style": "body",
            "type": "object",
            "name": "feed_targeting"
          },
          {
            "displayName": "Maximum age",
            "style": "body",
            "type": "integer",
            "name": "age_max"
          },
          {
            "displayName": "Must be 13 or higher. Default is 0",
            "style": "body",
            "type": "integer",
            "name": "age_min"
          },
          {
            "displayName": "Values of targeting cities. Use type of adcity to find Targeting Options and use the returned key to specify.",
            "style": "body",
            "type": "integer",
            "name": "cities"
          },
          {
            "displayName": "Target people who majored in these college subjects. Limited to 200 college major values. Use type of adcollegemajor to find Targeting Options and use the returned name to specify.",
            "style": "body",
            "type": "string",
            "name": "college_majors"
          },
          {
            "displayName": "Colleges, for college graduates. Limit is 200 values.",
            "style": "body",
            "type": "object",
            "name": "college_networks"
          },
          {
            "displayName": "Unique ID of targeted college. Use type of adcollege to find Targeting Options and use the returned key to specify.",
            "style": "body",
            "type": "integer",
            "name": "id"
          },
          {
            "displayName": "Array of integers for graduation year from college",
            "style": "body",
            "type": "integer",
            "name": "college_years"
          },
          {
            "displayName": "Values of targeting countries. You can specify up to 25 countries. Use ISO 3166 format codes.",
            "style": "body",
            "type": "string",
            "name": "countries"
          },
          {
            "displayName": "Array of integers for targeting based on education level. Use 1 for high school, 2 for undergraduate, and 3 for alum (or localized equivalents).",
            "style": "body",
            "type": "integer",
            "name": "education_statuses"
          },
          {
            "displayName": "Target specific genders. 1 targets all male viewers and 2 females. Default is to target both.",
            "style": "body",
            "type": "integer",
            "name": "genders"
          },
          {
            "displayName": "Indicates targeting based on the 'interested in' field of the user profile. You can specify an integer of 1 to indicate male, 2 indicates female. Default is all types. Please note 'interested in' targeting is not available in France due to local laws.",
            "style": "body",
            "type": "integer",
            "name": "interested_in"
          },
          {
            "displayName": "Targeted locales. Use type of adlocale to find Targeting Options and use the returned key to specify.",
            "style": "body",
            "type": "integer",
            "name": "locales"
          },
          {
            "displayName": "Values of targeting regions. Use type of adregion to find Targeting Options and use the returned key to specify.",
            "style": "body",
            "type": "string",
            "name": "regions"
          },
          {
            "displayName": "Array of integers for targeting based on relationship status. Use 1 for single, 2 for 'in a relationship', 3 for married, and 4 for engaged. Default is all types.",
            "style": "body",
            "type": "integer",
            "name": "relationship_statuses"
          },
          {
            "displayName": "Company, organization, or other workplace",
            "style": "body",
            "type": "object",
            "name": "work_networks"
          },
          {
            "displayName": "Whether a story is shown about this newly published object. Default is true which means the story is shown. This field is not supported when actions parameter is specified. Unpublished posts can be used in Sponsored Stories.",
            "style": "body",
            "type": "boolean",
            "name": "published"
          },
          {
            "displayName": "Time when this post should go live, this can be any date between ten minutes and six months from the time of the API call.",
            "style": "body",
            "type": "timestamp",
            "name": "scheduled_publish_time"
          },
          {
            "displayName": "Specifies a time in the past to back-date this post to",
            "style": "body",
            "type": "timestamp",
            "name": "backdated_time"
          },
          {
            "displayName": "Controls the display of how a backdated post appears. For example, if you pick month posts will be displayed as 2 months ago. instead of an exact date",
            "style": "body",
            "type": "enum",
            "name": "backdated_time_granularity"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/feed"
      },
      {
        "path": "/global_brand_children",
        "displayName": "GET All the child brands of the brand represented by this Page",
        "doc": {
          "url": "https://graph.facebook.com/global_brand_children"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [],
        "url": "https://graph.facebook.com/global_brand_children"
      },
      {
        "path": "/:page-id/insights",
        "displayName": "GET The Facebook Insights for this Page",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/insights"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/insights"
      },
      {
        "path": "/:page-id/links",
        "displayName": "Get The feed of links published by this page.",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/links"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/links"
      },
      {
        "path": "/:page-id/locations",
        "displayName": "Get The list of Pages that represent different real-world locations of a parent business Page (for example - a chain of restaurants)",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/locations"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/locations"
      },
      {
        "path": "/:page-id/locations",
        "displayName": "You can add an existing location-based Page to this list by publishing on this edge",
        "doc": {
          "url": "/{page-id}/locations"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The ID for the Facebook Page that is the parent of all the locations",
            "style": "body",
            "type": "numeric string",
            "name": "main_page_id",
            "required": true
          },
          {
            "displayName": "An arbitrary, developer-defined ID for this location, usually used to link back to an internal database of locations",
            "style": "body",
            "type": "integer",
            "name": "store_number",
            "required": true
          },
          {
            "displayName": "The ID of the Facebook Page you would like to add as a location. If this field is not included, you must instead specify location, place_topics, and phone fields to create a new location Page.",
            "style": "body",
            "type": "numeric string",
            "name": "location_page_id"
          },
          {
            "displayName": "This defines the location for this page. This is required if location_page_id is not specified. The dictionary must include the keys street (street address), latitude, and longitude. It also must include either city_id or all of city, state, and country (but state is optional if the address is not in the U.S.). The zip field is also optional unless it is a U.S. address. Please see later in this document for information about generating a city id.",
            "style": "body",
            "type": "object",
            "name": "location"
          },
          {
            "displayName": "Street address. This is required for location.",
            "style": "body",
            "type": "string",
            "name": "street"
          },
          {
            "displayName": "Decimal based latitude. This is required for location.",
            "style": "body",
            "type": "string",
            "name": "latitude"
          },
          {
            "displayName": "Decimal based longitude. This is required for location.",
            "style": "body",
            "type": "string",
            "name": "longitude"
          },
          {
            "displayName": "ID of a city. This is the key value of the adcity targeting options. If this is not included, then city and country are required (state and zip are also required for locations in the USA).",
            "style": "body",
            "type": "integer",
            "name": "city_id"
          },
          {
            "displayName": "Name of a city. If city_id is not included, then this is required.",
            "style": "body",
            "type": "string",
            "name": "city"
          },
          {
            "displayName": "Name of a state (or local equivalent)",
            "style": "body",
            "type": "string",
            "name": "state"
          },
          {
            "displayName": "Name of a country. If city_id is not included, then this is required.",
            "style": "body",
            "type": "string",
            "name": "country"
          },
          {
            "displayName": "Zip code of location (or local equivalent)",
            "style": "body",
            "type": "string",
            "name": "zip"
          },
          {
            "displayName": "Place topics for this location. This is required if location_page_id is not specified. Use an array of IDs sourced from the placetopic search endpoint.",
            "style": "body",
            "type": "integer",
            "name": "place_topics"
          },
          {
            "displayName": "Phone number for this location. This is required if location_page_id is not specified.",
            "style": "body",
            "type": "string",
            "name": "phone"
          },
          {
            "displayName": "Defines the opening hours for this location",
            "style": "body",
            "type": "object",
            "name": "hours"
          },
          {
            "displayName": "Defines a single opening hours range for a day. Each day can have 2 different hours ranges. {day} should be the first 3 characters of the day of the week, {number} should be either 1 or 2 to allow for the two different hours ranges per day. {status} should be either open or close to delineate the start or end of a time range. An example would be mon_1_open with value 17:00 and mon_1_close with value 21:15 which would represent a single opening range of 5pm to 9:15pm on Mondays.",
            "style": "body",
            "type": "string",
            "name": "{day}_{number}_{status}"
          },
          {
            "displayName": "Vanity URL for this location - this has to be an unused vanity URL - you should check by querying /{page-username} and looking for existing objects with this name.",
            "style": "body",
            "type": "string",
            "name": "page_username"
          },
          {
            "displayName": "Is this location permanently closed?",
            "style": "body",
            "type": "boolean",
            "name": "permanently_closed"
          },
          {
            "displayName": "Is this a franchise location?",
            "style": "body",
            "type": "boolean",
            "name": "is_franchise"
          },
          {
            "displayName": "Whether to disable any warnings (not errors) that result from this API call, such as latitude and longitude not matching street address.",
            "style": "body",
            "type": "boolean",
            "name": "ignore_warnings"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/locations"
      },
      {
        "path": "/:page-id/locations",
        "displayName": "You can remove a location page from a parent's list of locations by deleting on this edge",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/locations"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "ID of the main Facebook Page for this location",
            "style": "",
            "type": "numeric string",
            "name": "main_page_id"
          },
          {
            "displayName": "Developer-defined ID for this location.",
            "style": "",
            "type": "numeric string",
            "name": "store_number"
          },
          {
            "displayName": "Facebook-defined ID for this location.",
            "style": "",
            "type": "numeric string",
            "name": "location_page_id"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/locations"
      },
      {
        "path": "/:page-id/milestones",
        "displayName": "GET The milestones posted by a Facebook Page",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/milestones"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/milestones"
      },
      {
        "path": "/:page-id/milestones",
        "displayName": "/calendar/item/:item_id/field/:field_id/ics/",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/milestones"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "style": "query",
            "type": "string",
            "name": "item_id",
            "required": true
          },
          {
            "style": "query",
            "type": "string",
            "name": "field_id",
            "required": true
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/milestones"
      },
      {
        "path": "/:page-id/milestones",
        "displayName": "You can create Page milestones by using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/milestones"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The title of the milestone",
            "style": "body",
            "type": "string",
            "name": "title"
          },
          {
            "displayName": "The description of the milestone",
            "style": "body",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "The start time of the milestone. This will also be used for the end_time value (these two fields are always the same).",
            "style": "body",
            "type": "string",
            "name": "start_time"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/milestones"
      },
      {
        "path": "/:page-id/offers",
        "displayName": "GET The offers a Page has created.",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/offers"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/offers"
      },
      {
        "path": "/:page-id/offers",
        "displayName": "/calendar/space/:space_id/ics/:user_id/:token/",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/offers"
        },
        "httpMethod": "Post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The title of the offer",
            "style": "body",
            "type": "string",
            "name": "title",
            "required": true
          },
          {
            "displayName": "The body text of the offer",
            "style": "body",
            "type": "string",
            "name": "message",
            "required": true
          },
          {
            "displayName": "The expiration time of the offer (used when displaying the offer)",
            "style": "body",
            "type": "datetime",
            "name": "expiration_time",
            "required": true
          },
          {
            "displayName": "Terms and conditions of the offer",
            "style": "body",
            "type": "string",
            "name": "terms"
          },
          {
            "displayName": "The URL for the offer's image. Either image_url or image parameter should be specified, but not both.",
            "style": "body",
            "type": "string",
            "name": "image_url"
          },
          {
            "displayName": "The image for the offer. Either image_url or image parameter should be specified, but not both.",
            "style": "body",
            "type": "multipart/form-data",
            "name": "image"
          },
          {
            "displayName": "The maximum number of times the offer can be claimed",
            "style": "body",
            "type": "integer",
            "name": "claim_limit"
          },
          {
            "displayName": "The type of offer: in_store_only, in_store_and_online or online_only",
            "style": "body",
            "type": "string",
            "name": "coupon_type"
          },
          {
            "displayName": "QR code - alphanumeric with limited punctuation: $ % * + - . / :",
            "style": "body",
            "type": "string",
            "name": "qrcode"
          },
          {
            "displayName": "12-character UPC-A or 13-character EAN-13 barcode (alphanumeric)",
            "style": "body",
            "type": "string",
            "name": "barcode"
          },
          {
            "displayName": "The URL where the offer may be redeemed",
            "style": "body",
            "type": "string",
            "name": "redemption_link"
          },
          {
            "displayName": "A code to enter on your website to receive the discount or promotion (50 characters max)",
            "style": "body",
            "type": "string",
            "name": "redemption_code"
          },
          {
            "displayName": "Whether a post is published. Default is published",
            "style": "body",
            "type": "boolean",
            "name": "published"
          },
          {
            "displayName": "Time when the page post should go live, this should be between 10 mins and 6 months from the time of publishing the post.",
            "style": "body",
            "type": "timestamp",
            "name": "scheduled_publish_time"
          },
          {
            "displayName": "Time before the expiration_time of the offer when the user receives a notification that the offer is about to expire",
            "style": "body",
            "type": "datetime",
            "name": "reminder_time"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/offers"
      },
      {
        "path": "/:page-id/photos",
        "displayName": "get all photos this page is tagged in",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/photos"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/photos"
      },
      {
        "path": "/:page-id/photos",
        "displayName": "publish photos to Facebook",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/photos"
        },
        "httpMethod": "POST",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The photo, encoded as form data. Either this or url field is required, but both should not be used together.",
            "style": "body",
            "type": "multipart/form-data",
            "name": "source"
          },
          {
            "displayName": "The URL of a photo that is already uploaded to the internet. Either this or source is required, but both should not be used together.",
            "style": "body",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "The description of the photo, used as the accompanying status message in any feed story. The message can contain mentions of Facebook Pages using the following syntax:@[page-id]",
            "style": "body",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "Page ID of a place associated with the Photo",
            "style": "body",
            "type": "string",
            "name": "place"
          },
          {
            "displayName": "If set to true, this will suppress the feed story that is automatically generated on a Page's profile when it uploads a photo using your app.",
            "style": "body",
            "type": "boolean",
            "name": "no_story"
          },
          {
            "displayName": "Object that limits the audience for this content. Anyone not in these demographics will not be able to view this content. This will not override any Page-level demographic restrictions that may be in place.",
            "style": "body",
            "type": "object",
            "name": "targeting"
          },
          {
            "displayName": "Values of targeting countries. You can specify up to 25 countries. Use ISO 3166 format codes.",
            "style": "body",
            "type": "string",
            "name": "countries"
          },
          {
            "displayName": "Targeted locales. Use type of adlocale to find Targeting Options and use the returned key to specify.",
            "style": "body",
            "type": "integer",
            "name": "locales"
          },
          {
            "displayName": "Object that controls news feed targeting for this content. Anyone in these groups will be more likely to see this content, those not will be less likely, but may still see it anyway. Any of the targeting fields shown here can be used, none are required.",
            "style": "body",
            "type": "object",
            "name": "feed_targeting"
          },
          {
            "displayName": "Maximum age",
            "style": "body",
            "type": "integer",
            "name": "age_max"
          },
          {
            "displayName": "Must be 13 or higher. Default is 0",
            "style": "body",
            "type": "integer",
            "name": "age_min"
          },
          {
            "displayName": "Values of targeting cities. Use type of adcity to find Targeting Options and use the returned key to specify.",
            "style": "body",
            "type": "integer",
            "name": "cities"
          },
          {
            "displayName": "Target people who majored in these college subjects. Limited to 200 college major values. Use type of adcollegemajor to find Targeting Options and use the returned name to specify.",
            "style": "body",
            "type": "string",
            "name": "college_majors"
          },
          {
            "displayName": "Colleges, for college graduates. Limit is 200 values.",
            "style": "body",
            "type": "object",
            "name": "college_networks"
          },
          {
            "displayName": "Unique ID of targeted college. Use type of adcollege to find Targeting Options and use the returned key to specify.",
            "style": "body",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "publish photos to Facebook",
            "style": "body",
            "type": "integer",
            "name": "source"
          },
          {
            "displayName": "Array of integers for graduation year from college.",
            "style": "body",
            "type": "integers",
            "name": "college_years"
          },
          {
            "displayName": "Values of targeting countries. You can specify up to 25 countries. Use ISO 3166 format codes.",
            "style": "body",
            "type": "string",
            "name": "countries"
          },
          {
            "displayName": "Array of integers for targeting based on education level. Use 1 for high school, 2 for undergraduate, and 3 for alum (or localized equivalents).",
            "style": "body",
            "type": "integer",
            "name": "education_statuses"
          },
          {
            "displayName": "Target specific genders. 1 targets all male viewers and 2 females. Default is to target both.",
            "style": "body",
            "type": "integer",
            "name": "genders"
          },
          {
            "displayName": "Indicates targeting based on the 'interested in' field of the user profile. You can specify an integer of 1 to indicate male, 2 indicates female. Default is all types. Please note 'interested in' targeting is not available in France due to local laws.",
            "style": "body",
            "type": "integer",
            "name": "interested_in"
          },
          {
            "displayName": "Targeted locales. Use type of adlocale to find Targeting Options and use the returned key to specify.",
            "style": "body",
            "type": "integer",
            "name": "locales"
          },
          {
            "displayName": "Values of targeting regions. Use type of adregion to find Targeting Options and use the returned key to specify.",
            "style": "body",
            "type": "integer",
            "name": "regions"
          },
          {
            "displayName": "Array of integers for targeting based on relationship status. Use 1 for single, 2 for 'in a relationship', 3 for married, and 4 for engaged. Default is all types.",
            "style": "body",
            "type": "integer",
            "name": "relationship_statuses"
          },
          {
            "displayName": "Company, organization, or other workplace.",
            "style": "body",
            "type": "object",
            "name": "work_networks"
          },
          {
            "displayName": "Name of targeted workplace. Use type of adworkplace to find Targeting Options and use the returned name to specify this.",
            "style": "body",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "Unique ID of targeted workplace. Use type of adworkplace to find Targeting Options and use the returned key to specify this (must match paired name value).",
            "style": "body",
            "type": "integer",
            "name": "id"
          },
          {
            "displayName": "Whether a story is shown about this newly published object. Default is true which means the story is shown. This field is not supported when actions parameter is specified.",
            "style": "body",
            "type": "boolean",
            "name": "published"
          },
          {
            "displayName": "Time when this post should go live, this can be any date between ten minutes and six months from the time of the API call.",
            "style": "body",
            "type": "timestamp",
            "name": "scheduled_publish_time"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/photos"
      },
      {
        "path": "/:page-id/picture",
        "displayName": "GET This Page's profile picture.",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/picture"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The picture edge is a special case, as when requested, it will by default return the picture itself and not a JSON response. To return a JSON response, you need to set redirect=false as a request attribute. This is how to return the fields below.",
            "style": "query",
            "type": "boolean",
            "name": "redirect"
          },
          {
            "displayName": "You use this to get a pre-specified size of picture.",
            "style": "query",
            "type": "enum",
            "name": "type"
          },
          {
            "displayName": "Restrict the picture height to this size in pixels.",
            "style": "query",
            "type": "integer",
            "name": "height"
          },
          {
            "displayName": "Restrict the picture width to this size in pixels. When height and width are both used, the image will be scaled as close to the dimensions as possible and then cropped down.",
            "style": "query",
            "type": "integer",
            "name": "width"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/picture"
      },
      {
        "path": "/:page-id/picture",
        "displayName": "publishing a Page profile photo to Facebook",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/picture"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The photo, encoded as form data. Either this or picture field is required, but both should not be used together.",
            "style": "body",
            "type": "multipart/form-data",
            "name": "source"
          },
          {
            "displayName": "The URL of a photo that is already uploaded to the internet. Either this or source is required, but both should not be used together.",
            "style": "body",
            "type": "string",
            "name": "picture"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/picture"
      },
      {
        "path": "/:page-id/ratings",
        "displayName": "GET Ratings this page has received",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/ratings"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The open graph story that generated this rating. This also contains the likes and comments that attached to the story.",
            "style": "query",
            "type": "object",
            "name": "open_graph_story"
          },
          {
            "displayName": "Time the rating took place",
            "style": "query",
            "type": "timestamp",
            "name": "created_time"
          },
          {
            "displayName": "Person who rated the page",
            "style": "query",
            "type": "User",
            "name": "reviewer"
          },
          {
            "displayName": "true if the person specified a rating",
            "style": "query",
            "type": "boolean",
            "name": "has_rating"
          },
          {
            "displayName": "true if the person added a text review to the rating",
            "style": "query",
            "type": "boolean",
            "name": "has_review"
          },
          {
            "displayName": "Rating value of the review. Value can be 1-5.",
            "style": "query",
            "type": "integer",
            "name": "rating"
          },
          {
            "displayName": "Review text included with the rating.",
            "style": "query",
            "type": "string",
            "name": "review_text"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/ratings"
      },
      {
        "path": "/:page-id/settings",
        "displayName": "GET Various Page settings controlling who can post content to that Page, or send messages, etc.",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/settings"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The name of the setting.",
            "style": "query",
            "type": "enum",
            "name": "setting"
          },
          {
            "displayName": "Whether the setting is enabled or not.",
            "style": "query",
            "type": "string for PAGE_MODERATION_BLACKLIST, bool for all other settings",
            "name": "value"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/settings"
      },
      {
        "path": "/:page-id/settings",
        "displayName": "You can adjust Page settings by using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/settings"
        },
        "httpMethod": "Post",
        "curl": "curl -X ",
        "params": [
          {
            "style": "query",
            "type": "string",
            "name": "{field}"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/settings"
      },
      {
        "path": "/:page-id/settings",
        "displayName": "You can adjust Page settings by using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/settings"
        },
        "httpMethod": "POST",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "An object containing a single key-value pair, where key is one of enum{'APPEARS_IN_RELATED_PAGES', 'PAGE_MODERATION_BLACKLIST', 'PLATFORM_OPTOUTS_CAN_POST', 'SHOW_RECENT_POSTS_BY_OTHERS', 'USERS_CAN_MESSAGE', 'USERS_CAN_POST', 'USERS_CAN_POST_PHOTOS', 'USERS_CAN_TAG_PHOTOS'} and value is the value of the setting.",
            "style": "body",
            "type": "object",
            "name": "option"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/settings"
      },
      {
        "path": "/:page-id/statuses",
        "displayName": "GET The feed of status messages published by this page",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/statuses"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/statuses"
      },
      {
        "path": "/:page-id/tabs",
        "displayName": "GET The apps that this Page has added as tabs",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/tabs"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "A concatenation of the Page ID, /tabs/ and the tab app ID prefixed with app_:{page-id}/tabs/app_{app-id}",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The location of the tab's thumbnail image",
            "style": "query",
            "type": "string",
            "name": "image_url"
          },
          {
            "displayName": "The tab name, which can be different from the name of the app it links to.",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "A link directly to this Page tab",
            "style": "query",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "The app that's in the tab",
            "style": "query",
            "type": "string",
            "name": "application"
          },
          {
            "displayName": "A flag to identify whether the tab can be removed from the Page (core tabs such as 'Likes' cannot be removed).",
            "style": "query",
            "type": "boolean",
            "name": "is_permanent"
          },
          {
            "displayName": "Where this tab is located in the list of tabs",
            "style": "query",
            "type": "string",
            "name": "position"
          },
          {
            "displayName": "A flag to identify whether the tab is a custom landing tab for viewers who are not already connected to this Page.",
            "style": "query",
            "type": "boolean",
            "name": "is_non_connection_landing_tab"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/tabs"
      },
      {
        "path": "/:page-id/tabs",
        "displayName": "post You can add apps as a tab, or install them for a Page using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/tabs"
        },
        "httpMethod": "post",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "ID of the app that you want to add as a tab",
            "style": "query",
            "type": "string",
            "name": "app_id"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/tabs"
      },
      {
        "path": "/:page-id/tabs",
        "displayName": "You can remove tabs using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/tabs"
        },
        "httpMethod": "delete",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "ID of the tab app that you want to remove. The app ID is prefixed with app_.",
            "style": "",
            "type": "string",
            "name": "app-id"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/tabs"
      },
      {
        "path": "/:page-id/tabs/app_:app-id",
        "displayName": "You can update tabs by using this edge (:app-id is the ID of the app in the tab that you want to update)",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/tabs/app_{app-id}"
        },
        "httpMethod": "post",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "Order in which the tab will appear on the profile. Must be after permanent tabs and less than the number of installed tabs. Index starts at 0",
            "style": "body",
            "type": "integer",
            "name": "position"
          },
          {
            "displayName": "Name to be used for the tab. If this is set to an empty string, the tab will use the application’s default tab name.",
            "style": "body",
            "type": "string",
            "name": "custom_name"
          },
          {
            "displayName": "Set this tab as the default landing tab for users who have not liked and are not admins of the Page. If provided, value must be true.",
            "style": "body",
            "type": "boolean",
            "name": "is_non_connection_landing_tab"
          },
          {
            "displayName": "URL for an image to be used as a custom icon for this Page app. Note that either custom_image_url or custom_image can be set, but not both.",
            "style": "body",
            "type": "string",
            "name": "custom_image_url"
          },
          {
            "displayName": "The name of an image file to be used as a custom icon for this Page app. Note that either custom_image_url or custom_image can be set, but not both.",
            "style": "body",
            "type": "multipart/form-data",
            "name": "custom_image"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          },
          {
            "name": ":app-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/tabs/app_:app-id"
      },
      {
        "path": "/:page-id/videos",
        "displayName": "shows all videos this page is tagged in",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/videos"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/videos"
      },
      {
        "path": "/:page-id/videos",
        "displayName": "Videos must be encoded as multipart/form-data and published to graph-video.facebook.com instead of the regular Graph API URL.",
        "doc": {
          "url": "https://graph.facebook.com/{page-id}/videos"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The video, encoded as form data",
            "style": "query",
            "type": "multipart/form-data",
            "name": "user_id",
            "required": true
          },
          {
            "displayName": "The description of the video, used as the accompanying status message in any feed story. This parameter can contain mentions of other Facebook Pages using the following syntax:@[page-id]",
            "style": "query",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "The title of the video",
            "style": "query",
            "type": "string",
            "name": "title"
          },
          {
            "displayName": "Binary image file of thumbnail to be used when the video is stopped (requires ads_management permission)",
            "style": "query",
            "type": "string",
            "name": "thumb"
          },
          {
            "displayName": "Object that controls news feed targeting for this content. Anyone in these groups will be more likely to see this content, those not will be less likely, but may still see it anyway. Any of the targeting fields shown here can be used, none are required.",
            "style": "query",
            "type": "object",
            "name": "feed_targeting"
          },
          {
            "displayName": "Maximum age",
            "style": "query",
            "type": "integer",
            "name": "age_max"
          },
          {
            "displayName": "Must be 13 or higher. Default is 0",
            "style": "query",
            "type": "integer",
            "name": "age_min"
          },
          {
            "displayName": "Values of targeting cities. Use type of adcity to find Targeting Options and use the returned key to specify.",
            "style": "query",
            "type": "integer",
            "name": "cities"
          },
          {
            "displayName": "Target people who majored in these college subjects. Limited to 200 college major values. Use type of adcollegemajor to find Targeting Options and use the returned name to specify.",
            "style": "query",
            "type": "string",
            "name": "college_majors"
          },
          {
            "displayName": "Colleges, for college graduates. Limit is 200 values.",
            "style": "query",
            "type": "object",
            "name": "college_networks"
          },
          {
            "displayName": "Array of integers for graduation year from college",
            "style": "query",
            "type": "integer",
            "name": "college_years"
          },
          {
            "displayName": "Values of targeting countries. You can specify up to 25 countries. Use ISO 3166 format codes.",
            "style": "query",
            "type": "string",
            "name": "countries"
          },
          {
            "displayName": "Array of integers for targeting based on education level. Use 1 for high school, 2 for undergraduate, and 3 for alum (or localized equivalents).",
            "style": "query",
            "type": "integer",
            "name": "education_statuses"
          },
          {
            "displayName": "Target specific genders. 1 targets all male viewers and 2 females. Default is to target both.",
            "style": "query",
            "type": "integer",
            "name": "genders"
          },
          {
            "displayName": "Indicates targeting based on the 'interested in' field of the user profile. You can specify an integer of 1 to indicate male, 2 indicates female. Default is all types. Please note 'interested in' targeting is not available in France due to local laws.",
            "style": "query",
            "type": "integer",
            "name": "interested_in"
          },
          {
            "displayName": "Targeted locales. Use type of adlocale to find Targeting Options and use the returned key to specify.",
            "style": "query",
            "type": "integer",
            "name": "locales"
          },
          {
            "displayName": "Values of targeting regions. Use type of adregion to find Targeting Options and use the returned key to specify.",
            "style": "query",
            "type": "integer",
            "name": "regions"
          },
          {
            "displayName": "Array of integers for targeting based on relationship status. Use 1 for single, 2 for 'in a relationship', 3 for married, and 4 for engaged. Default is all types.",
            "style": "query",
            "type": "integer",
            "name": "relationship_statuses"
          },
          {
            "displayName": "Company, organization, or other workplace",
            "style": "query",
            "type": "object",
            "name": "work_networks"
          },
          {
            "displayName": "Name of targeted workplace. Use type of adworkplace to find Targeting Options and use the returned name to specify this.",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "Unique ID of targeted workplace. Use type of adworkplace to find Targeting Options and use the returned key to specify this (must match paired name value).",
            "style": "query",
            "type": "integer",
            "name": "id"
          },
          {
            "displayName": "Whether a post about this video is published. Default is true.",
            "style": "query",
            "type": "boolean",
            "name": "published"
          },
          {
            "displayName": "Time when the page post about this video should go live, this should be between 10 mins and 6 months from the time of publishing the video.",
            "style": "query",
            "type": "timestamp",
            "name": "scheduled_publish_time"
          },
          {
            "name": ":page-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:page-id/videos"
      },
      {
        "path": "/:payment-id",
        "displayName": "GET The details of a payment made in an app using Facebook Payments",
        "doc": {
          "url": "https://graph.facebook.com/{payment-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The payment ID",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The consumer's first and last name along with their user id. May be omitted in some cases.",
            "style": "query",
            "type": "User",
            "name": "user"
          },
          {
            "displayName": "The URL of the og:product object ordered",
            "style": "query",
            "type": "string",
            "name": "product"
          },
          {
            "displayName": "The quantity of the product contained in the order",
            "style": "query",
            "type": "integer",
            "name": "quantity"
          },
          {
            "displayName": "The unique, optional app-created identifier passed into the JS function (255 character maximum)",
            "style": "query",
            "type": "string",
            "name": "request_id"
          },
          {
            "displayName": "The app associated with this payment",
            "style": "query",
            "type": "App",
            "name": "application"
          },
          {
            "displayName": "The list of different action types that have occurred in this payment",
            "style": "query",
            "type": "object",
            "name": "actions"
          },
          {
            "displayName": "The type of this particular action. type can be:charge, refund, chargeback, chargeback_reversal, decline",
            "style": "query",
            "type": "string",
            "name": "type"
          },
          {
            "displayName": "The status for this particular action. status can be: initiated, completed, failed",
            "style": "query",
            "type": "string",
            "name": "status"
          },
          {
            "displayName": "The amount of money covered by this action",
            "style": "query",
            "type": "string",
            "name": "amount"
          },
          {
            "displayName": "The currency of the above amount in this action",
            "style": "query",
            "type": "string",
            "name": "currency"
          },
          {
            "displayName": "When this action occurred",
            "style": "query",
            "type": "datetime",
            "name": "time_created"
          },
          {
            "displayName": "When this action was last updated",
            "style": "query",
            "type": "datetime",
            "name": "time_updated"
          },
          {
            "displayName": "The items associated with the payment.",
            "style": "query",
            "type": "object",
            "name": "items"
          },
          {
            "displayName": "The type of this item",
            "style": "query",
            "type": "enum",
            "name": "type"
          },
          {
            "displayName": "The product URL of this item",
            "style": "query",
            "type": "string",
            "name": "product"
          },
          {
            "displayName": "The number of this item purchased.",
            "style": "query",
            "type": "integer",
            "name": "quantity"
          },
          {
            "displayName": "Buyer's ISO Country Code, for tax purposes.",
            "style": "query",
            "type": "string",
            "name": "country"
          },
          {
            "displayName": "The time the payment was originally created",
            "style": "query",
            "type": "string",
            "name": "created_time"
          },
          {
            "displayName": "Exchange rate used to calculate payout amount which is remitted in USD.",
            "style": "query",
            "type": "float",
            "name": "payout_foreign_exchange_rate"
          },
          {
            "displayName": "Contains the information related to a dispute, including the user_comment and user_email which is provided by the consumer when the dispute is initiated. Additionally contains the current status of the dispute, the time the dispute was created an an resolution reason, if available.",
            "style": "query",
            "type": "object",
            "name": "disputes"
          },
          {
            "displayName": "Optional parameter that shows up when a payment is made by a payment tester listed in the app's dashboard. This represents a transaction that has not been charged to the consumer's payment instrument",
            "style": "query",
            "type": "boolean",
            "name": "test"
          },
          {
            "name": ":payment-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:payment-id"
      },
      {
        "path": "/:payment-id/dispute",
        "displayName": "/contact/:profile_id/vcard",
        "doc": {
          "url": "https://graph.facebook.com/{payment-id}/dispute"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The reason you are settling this dispute",
            "style": "query",
            "type": "enum",
            "name": "reason",
            "required": true
          },
          {
            "name": ":payment-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:payment-id/dispute"
      },
      {
        "path": "/:payment-id/refunds",
        "displayName": "You can use this edge to create or initiate refunds",
        "doc": {
          "url": "https://graph.facebook.com/{payment-id}/refunds"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The three-letter ISO code of the currency in which the refund amount is specified; it must be the same as the currency in which the original purchase was denominated.",
            "style": "body",
            "type": "string",
            "name": "currency",
            "required": true
          },
          {
            "displayName": "The amount to refund. It must be less than or equal to the refundable_amount field on the parent Payment object.",
            "style": "body",
            "type": "string",
            "name": "amount",
            "required": true
          },
          {
            "displayName": "TThe reason you are refunding this order.",
            "style": "body",
            "type": "enum",
            "name": "reason"
          },
          {
            "name": ":payment-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:payment-id/refunds"
      },
      {
        "path": "/:photo-id",
        "displayName": "Represents an individual photo on Facebook",
        "doc": {
          "url": "https://graph.facebook.com/{photo-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The photo ID",
            "style": "query",
            "type": "numeric string",
            "name": "id"
          },
          {
            "displayName": "The album this photo is in",
            "style": "query",
            "type": "Album",
            "name": "album"
          },
          {
            "displayName": "The time that the photo was taken",
            "style": "query",
            "type": "datetime",
            "name": "backdated_time"
          },
          {
            "displayName": "How accurate the backdated time is",
            "style": "query",
            "type": "enum",
            "name": "backdated_time_granularity"
          },
          {
            "displayName": "The time this photo was published",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "displayName": "The profile that uploaded this photo",
            "style": "query",
            "type": "User",
            "name": "from"
          },
          {
            "displayName": "The height of this photo in pixels",
            "style": "query",
            "type": "int32",
            "name": "height"
          },
          {
            "displayName": "The icon that Facebook displays when photos are published to newsfeed",
            "style": "query",
            "type": "string",
            "name": "icon"
          },
          {
            "displayName": "The 4 different stored representations of the photo",
            "style": "query",
            "type": "ImageSource",
            "name": "images"
          },
          {
            "displayName": "A link to the photo on Facebook",
            "style": "query",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "The user provided caption given to this photo",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "An array containing an array of objects mentioned in the name field",
            "style": "query",
            "type": "object",
            "name": "name_tags"
          },
          {
            "displayName": "ID of the profile",
            "style": "query",
            "type": "numeric string",
            "name": "id"
          },
          {
            "displayName": "The object itself",
            "style": "query",
            "type": "Profile",
            "name": "object"
          },
          {
            "displayName": "Number of characters in the text indicating the object",
            "style": "query",
            "type": "int32",
            "name": "length"
          },
          {
            "displayName": "Name of the object",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "The character offset in the source text of the text indicating the object",
            "style": "query",
            "type": "int32",
            "name": "offset"
          },
          {
            "displayName": "Type of the object",
            "style": "query",
            "type": "string",
            "name": "type"
          },
          {
            "displayName": "ID of the page story this corresponds to if any",
            "style": "query",
            "type": "string",
            "name": "page_story_id"
          },
          {
            "displayName": "Link to the 100px wide representation of this photo",
            "style": "query",
            "type": "string",
            "name": "picture"
          },
          {
            "displayName": "Location associated with the photo, if any",
            "style": "query",
            "type": "Page",
            "name": "place"
          },
          {
            "displayName": "Deprecated. Returns 0",
            "style": "query",
            "type": "int32",
            "name": "position"
          },
          {
            "displayName": "Link to the image source of the photo",
            "style": "query",
            "type": "string",
            "name": "source"
          },
          {
            "displayName": "The last time the photo or its caption was updated",
            "style": "query",
            "type": "datetime",
            "name": "updated_time"
          },
          {
            "displayName": "The width of this photo in pixels",
            "style": "query",
            "type": "int32",
            "name": "width"
          },
          {
            "name": ":photo-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:photo-id"
      },
      {
        "path": "/:photo-id",
        "displayName": "You can delete photos using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{photo-id}"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "name": ":photo-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:photo-id"
      },
      {
        "path": "/:photo-id/tags",
        "displayName": "Get The list of people tagged in a photo",
        "doc": {
          "url": "https://graph.facebook.com/{photo-id}/tags"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The ID identifying the person who was tagged",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The name of the person who was tagged",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "The time the tags were created",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "displayName": "The person who added the tag. This will only be returned when that person is also using the app.",
            "style": "query",
            "type": "User",
            "name": "tagging_user"
          },
          {
            "displayName": "The x coordinate in the photo where the tag is, as a percentage offset.",
            "style": "query",
            "type": "float",
            "name": "x"
          },
          {
            "displayName": "The y coordinate in the photo where the tag is, as a percentage offset.",
            "style": "query",
            "type": "float",
            "name": "y"
          },
          {
            "name": ":photo-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:photo-id/tags"
      },
      {
        "path": "/:photo-id/tags",
        "displayName": "You can add tags to a photo using this edge",
        "doc": {
          "url": "https://graph.facebook.com/{photo-id}/tags"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "A list of tagged people, or tagged text",
            "style": "body",
            "type": "object",
            "name": "tags"
          },
          {
            "displayName": "ID of the user to tag. Either this or tag_text are required",
            "style": "body",
            "type": "string",
            "name": "tag_uid"
          },
          {
            "displayName": "A text string to tag. Either this or tag_uid are required",
            "style": "body",
            "type": "string",
            "name": "tag_text"
          },
          {
            "displayName": "x coordinate of each tag, as a percentage offset from the left edge of the picture.",
            "style": "body",
            "type": "integer",
            "name": "x"
          },
          {
            "displayName": "y coordinate of each tag, as a percentage offset from the top edge of the picture.",
            "style": "body",
            "type": "integer",
            "name": "y"
          },
          {
            "name": ":photo-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:photo-id/tags"
      },
      {
        "path": "/:place-tag-id",
        "displayName": "GET An instance of a person being tagged at a place in a photo, video, post, status or link",
        "doc": {
          "url": "https://graph.facebook.com/{place-tag-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The post ID",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "When the tag was created",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "displayName": "The Facebook Page representing the place",
            "style": "query",
            "type": "Page",
            "name": "place"
          },
          {
            "name": ":place-tag-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:place-tag-id"
      },
      {
        "path": "/:post-id",
        "displayName": "GET An individual entry in a profile's feed. The profile could be a user, page, app, or group.",
        "doc": {
          "url": "https://graph.facebook.com/{post-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The post ID",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "A list of available actions on the post (including commenting, liking, and any optional app-specified actions)",
            "style": "query",
            "type": "object",
            "name": "actions"
          },
          {
            "displayName": "The action's link name",
            "style": "query",
            "type": "Page",
            "name": "name"
          },
          {
            "displayName": "Where the action link goes to",
            "style": "query",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "Information about the app this post was published by",
            "style": "query",
            "type": "App",
            "name": "application"
          },
          {
            "displayName": "The call to action type used in any Page posts for mobile app engagement ads.",
            "style": "query",
            "type": "object",
            "name": "call_to_action"
          },
          {
            "displayName": "The call to action type used in any Page posts for mobile app engagement ads.",
            "style": "query",
            "type": "object",
            "name": "context"
          },
          {
            "displayName": "The caption of a link in the post (appears beneath the name)",
            "style": "query",
            "type": "string",
            "name": "caption"
          },
          {
            "displayName": "The time the post was initially published",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "displayName": "A description of a link in the post (appears beneath the caption)",
            "style": "query",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "Object that controls news feed targeting for this post. Anyone in these groups will be more likely to see this post, others will be less likely, but may still see it anyway. Any of the targeting fields shown here can be used, none are required (applies to Pages only)",
            "style": "query",
            "type": "object",
            "name": "feed_targeting"
          },
          {
            "displayName": "Maximum age",
            "style": "query",
            "type": "integer",
            "name": "age_max"
          },
          {
            "displayName": "Must be 13 or higher. Default is 0",
            "style": "query",
            "type": "integer",
            "name": "age_min"
          },
          {
            "displayName": "Values of targeting cities. Use type of adcity to find Targeting Options and use the returned key to specify.",
            "style": "query",
            "type": "integer",
            "name": "cities"
          },
          {
            "displayName": "Target people who majored in these college subjects. Limited to 200 college major values. Use type of adcollegemajor to find Targeting Options and use the returned name to specify.",
            "style": "query",
            "type": "string",
            "name": "college_majors"
          },
          {
            "displayName": "Colleges, for college graduates. Limit is 200 values.",
            "style": "query",
            "type": "object",
            "name": "college_networks"
          },
          {
            "displayName": "Unique ID of targeted college. Use type of adcollege to find Targeting Options and use the returned key to specify.",
            "style": "query",
            "type": "integer",
            "name": "id"
          },
          {
            "displayName": "Array of integers for graduation year from college.",
            "style": "query",
            "type": "integers",
            "name": "college_years"
          },
          {
            "displayName": "Values of targeting countries. You can specify up to 25 countries. Use ISO 3166 format codes.",
            "style": "query",
            "type": "string",
            "name": "country"
          },
          {
            "displayName": "Array of integers for targeting based on education level. Use 1 for high school, 2 for undergraduate, and 3 for alum (or localized equivalents).",
            "style": "query",
            "type": "integer",
            "name": "education_statuses"
          },
          {
            "displayName": "Target specific genders. 1 targets all male viewers and 2 females. Default is to target both.",
            "style": "query",
            "type": "integer",
            "name": "genders"
          },
          {
            "displayName": "Indicates targeting based on the 'interested in' field of the user profile. You can specify an integer of 1 to indicate male, 2 indicates female. Default is all types. Please note 'interested in' targeting is not available in France due to local laws.",
            "style": "query",
            "type": "integer",
            "name": "interested_in"
          },
          {
            "displayName": "Targeted locales. Use type of adlocale to find Targeting Options and use the returned key to specify",
            "style": "query",
            "type": "integer",
            "name": "locales"
          },
          {
            "displayName": "Values of targeting regions. Use type of adregion to find Targeting Options and use the returned key to specify.",
            "style": "query",
            "type": "integer",
            "name": "regions"
          },
          {
            "displayName": "Array of integers for targeting based on relationship status. Use 1 for single, 2 for 'in a relationship', 3 for married, and 4 for engaged. Default is all types.",
            "style": "query",
            "type": "integer",
            "name": "relationship_statuses"
          },
          {
            "displayName": "Company, organization, or other workplace.",
            "style": "query",
            "type": "object",
            "name": "work_networks"
          },
          {
            "displayName": "Name of targeted workplace. Use type of adworkplace to find Targeting Options and use the returned name to specify this.",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "Unique ID of targeted workplace. Use type of adworkplace to find Targeting Options and use the returned key to specify this (must match paired name value).",
            "style": "query",
            "type": "integer",
            "name": "id"
          },
          {
            "displayName": "Information about the profile that posted the message",
            "style": "query",
            "type": "Profile",
            "name": "from"
          },
          {
            "displayName": "A link to an icon representing the type of this post.",
            "style": "query",
            "type": "string",
            "name": "icon"
          },
          {
            "displayName": "If this post is marked as hidden (applies to Pages only).",
            "style": "query",
            "type": "boolean",
            "name": "is_hidden"
          },
          {
            "displayName": "The link attached to this post",
            "style": "query",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "The status message in the post",
            "style": "query",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "Profiles tagged in message",
            "style": "query",
            "type": "object",
            "name": "message_tags"
          },
          {
            "displayName": "ID of the profile that was tagged",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The text used in the tag",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "Indicates which type of profile is tagged",
            "style": "query",
            "type": "enum",
            "name": "type"
          },
          {
            "displayName": "Where the first character of the tagged text is in the message, measured in unicode code points",
            "style": "query",
            "type": "integer",
            "name": "offset"
          },
          {
            "displayName": "How many unicode code points this tag consists of, after the offset.",
            "style": "query",
            "type": "integer",
            "name": "length"
          },
          {
            "displayName": "The name of the link",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "The ID of any uploaded photo or video attached to the post",
            "style": "query",
            "type": "string",
            "name": "object_id"
          },
          {
            "displayName": "The picture scraped from any link included with the post",
            "style": "query",
            "type": "string",
            "name": "picture"
          },
          {
            "displayName": "Any location information attached to the post",
            "style": "query",
            "type": "Page",
            "name": "place"
          },
          {
            "displayName": "The privacy settings of the post",
            "style": "query",
            "type": "object",
            "name": "privacy"
          },
          {
            "displayName": "Text that describes the privacy settings, as they would appear on Facebook.",
            "style": "query",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "The actual privacy setting",
            "style": "query",
            "type": "enum",
            "name": "value"
          },
          {
            "displayName": "If value is CUSTOM, this indicates which group of friends can see the post",
            "style": "query",
            "type": "enum",
            "name": "friends"
          },
          {
            "displayName": "If value is CUSTOM, this is a comma-separated ID list of users and friendlists (if any) that can see the post",
            "style": "query",
            "type": "cvs",
            "name": "allow"
          },
          {
            "displayName": "If value is CUSTOM, this is a comma-separated ID list of users and friendlists (if any) that cannot see the post.",
            "style": "query",
            "type": "cvs",
            "name": "deny"
          },
          {
            "displayName": "A list of properties for any attached video, for example, the length of the video",
            "style": "query",
            "type": "object",
            "name": "properties"
          },
          {
            "displayName": "The property name",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "The value of the property",
            "style": "query",
            "type": "string",
            "name": "text"
          },
          {
            "displayName": "Any link associated with the property",
            "style": "query",
            "type": "string",
            "name": "href"
          },
          {
            "displayName": "The shares count of this post. For public posts, it is only shown after the post has been shared more than 10 times",
            "style": "query",
            "type": "object",
            "name": "shares"
          },
          {
            "displayName": "A URL to any Flash movie or video file attached to the post",
            "style": "query",
            "type": "string",
            "name": "source"
          },
          {
            "displayName": "Description of the type of a status update",
            "style": "query",
            "type": "enum",
            "name": "status_type"
          },
          {
            "displayName": "Text from stories not intentionally generated by users, such as those generated when two people become friends, or when someone else posts on the person's wall",
            "style": "query",
            "type": "string",
            "name": "story"
          },
          {
            "displayName": "Deprecated field, same as message_tags",
            "style": "query",
            "type": "object",
            "name": "story_tags"
          },
          {
            "displayName": "Profiles mentioned or targeted in this post",
            "style": "query",
            "type": "Profile",
            "name": "to"
          },
          {
            "displayName": "A string indicating the object type of this post",
            "style": "query",
            "type": "enum",
            "name": "type"
          },
          {
            "displayName": "The time of the last change to this post, or the comments on it",
            "style": "query",
            "type": "datetime",
            "name": "updated_time"
          },
          {
            "displayName": "Profiles tagged as being 'with' the publisher of the post",
            "style": "query",
            "type": "Profile",
            "name": "with_tags"
          },
          {
            "name": ":post-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:post-id"
      },
      {
        "path": "/:post-id",
        "displayName": "An app can delete a post if it published it",
        "doc": {
          "url": "https://graph.facebook.com/{post-id}"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "name": ":post-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:post-id"
      },
      {
        "path": "/:request-id",
        "displayName": "GET An individual app request received by someone, sent by an app or another person",
        "doc": {
          "url": "https://graph.facebook.com/{request-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The request object ID",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "App associated with the request",
            "style": "query",
            "type": "App",
            "name": "application"
          },
          {
            "displayName": "The recipient of the request",
            "style": "query",
            "type": "User",
            "name": "to"
          },
          {
            "displayName": "The sender associated with the request. This is only included for user to user requests.",
            "style": "query",
            "type": "User",
            "name": "from"
          },
          {
            "displayName": "A string describing the request",
            "style": "query",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "Timestamp when the request was created",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "name": ":request-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:request-id"
      },
      {
        "path": "/:request-id",
        "displayName": "delete An individual app request received by someone, sent by an app or another person",
        "doc": {
          "url": "https://graph.facebook.com/{request-id}"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "name": ":request-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:request-id"
      },
      {
        "path": "/:review-id",
        "displayName": "GET A review of a Facebook app",
        "doc": {
          "url": "https://graph.facebook.com/{review-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The ID of the review",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "When the review was created",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "displayName": "The user that created the review",
            "style": "query",
            "type": "User",
            "name": "from"
          },
          {
            "displayName": "The review text, if any",
            "style": "query",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "The review rating",
            "style": "query",
            "type": "integer",
            "name": "rating"
          },
          {
            "displayName": "The app to which this review applies",
            "style": "query",
            "type": "App",
            "name": "to"
          },
          {
            "name": ":review-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:review-id"
      },
      {
        "path": "/:status-id",
        "displayName": "GET A status message in a profile's feed",
        "doc": {
          "url": "https://graph.facebook.com/{status-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The status message ID",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The user who posted the message",
            "style": "query",
            "type": "Profile",
            "name": "from"
          },
          {
            "displayName": "The status message content",
            "style": "query",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "Location associated with this status, if any",
            "style": "query",
            "type": "Page",
            "name": "place"
          },
          {
            "displayName": "The time the message was published",
            "style": "query",
            "type": "datetime",
            "name": "updated_time"
          },
          {
            "name": ":status-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:status-id"
      },
      {
        "path": "/:status-id",
        "displayName": "An app can delete a status if it published it",
        "doc": {
          "url": "https://graph.facebook.com/{status-id}"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "name": ":status-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:status-id"
      },
      {
        "path": "/:test-user-id",
        "displayName": "You can publish to this node to update the test user's password or name",
        "doc": {
          "url": "https://graph.facebook.com/{test-user-id}"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "New name for the test user",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "A new password for the test user",
            "style": "query",
            "type": "string",
            "name": "password"
          },
          {
            "name": ":test-user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:test-user-id"
      },
      {
        "path": "/:test-user-id",
        "displayName": "You can delete a test user by making a delete operation on this node",
        "doc": {
          "url": "https://graph.facebook.com/{test-user-id}"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "name": ":test-user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:test-user-id"
      },
      {
        "path": "/:test-user-id/friends",
        "displayName": "By publishing using this edge, you send friend requests between test users, and confirm those friend requests",
        "doc": {
          "url": "https://graph.facebook.com/{test-user-id}/friends"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "name": ":test-user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:test-user-id/friends"
      },
      {
        "path": "/:thread-id",
        "displayName": "GET A Facebook Messages conversation thread. This endpoint is only accessible for users that are developers of the app making the request. Pages should use the Conversation object.",
        "doc": {
          "url": "https://graph.facebook.com/{thread-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The unique ID for this message thread",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The messages in this thread",
            "style": "query",
            "type": "Message",
            "name": "comments"
          },
          {
            "displayName": "Profiles that are subscribed to the thread",
            "style": "query",
            "type": "Profile",
            "name": "to"
          },
          {
            "displayName": "The amount of messages that are unread by the session profile",
            "style": "query",
            "type": "integer",
            "name": "unread"
          },
          {
            "displayName": "The amount of messages that are unseen by the session profile",
            "style": "query",
            "type": "integer",
            "name": "unseen"
          },
          {
            "displayName": "When the thread was last updated",
            "style": "query",
            "type": "datetime",
            "name": "updated_time"
          },
          {
            "name": ":thread-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:thread-id"
      },
      {
        "path": "/?id=:url",
        "displayName": "GET Represents an external URL as it relates to the Facebook social graph - shares and comments from the URL on Facebook, and any Open Graph objects associated with the URL.",
        "doc": {
          "url": "https://graph.facebook.com/?id={url}"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The URL itself",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The Open Graph object that is canonically associated with this URL",
            "style": "query",
            "type": "OGObject",
            "name": "og_object"
          },
          {
            "displayName": "ID of object",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The description of the object",
            "style": "query",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "The title of the object",
            "style": "query",
            "type": "string",
            "name": "title"
          },
          {
            "displayName": "The object type",
            "style": "query",
            "type": "og:type",
            "name": "type"
          },
          {
            "displayName": "When the object was last updated",
            "style": "query",
            "type": "datetime",
            "name": "updated_time"
          },
          {
            "displayName": "This URL",
            "style": "query",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "AppLinks data associated with this URL",
            "style": "query",
            "type": "AppLinks",
            "name": "app_links"
          },
          {
            "displayName": "An object that supplies information about the URL being shared on Facebook",
            "style": "query",
            "type": "object",
            "name": "share"
          },
          {
            "displayName": "The number of Facebook comments associated with this URL",
            "style": "query",
            "type": "integer",
            "name": "comment_count"
          },
          {
            "displayName": "The number of shares of this URL on Facebook",
            "style": "query",
            "type": "integer",
            "name": "share_count"
          },
          {
            "name": ":url",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/?id=:url"
      },
      {
        "path": "/:user-id",
        "displayName": "GET A user represents a person on Facebook. The /:user-id node returns a single user",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The id of this person's user account. This ID is unique to each app and cannot be used across different apps. Our upgrade guide provides more info about this.",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The 'about me' section of this person's profile",
            "style": "query",
            "type": "string",
            "name": "about"
          },
          {
            "displayName": "Unspecific age range that this person's age fits into",
            "style": "query",
            "type": "object",
            "name": "age_range"
          },
          {
            "displayName": "The lower bounds of the range for this person's age",
            "style": "query",
            "type": "enum",
            "name": "min"
          },
          {
            "displayName": "The upper bounds of the range for this person's age",
            "style": "query",
            "type": "enum",
            "name": "max"
          },
          {
            "displayName": "The person's bio",
            "style": "query",
            "type": "string",
            "name": "bio"
          },
          {
            "displayName": "This person's birthday in the format MM/DD/YYYY",
            "style": "query",
            "type": "string",
            "name": "birthday"
          },
          {
            "displayName": "Provides access to the social context edges shown",
            "style": "query",
            "type": "object",
            "name": "context"
          },
          {
            "displayName": "Social context edge providing a list of Facebook friends that the session user and the request user have in common",
            "style": "query",
            "type": "Edge",
            "name": "/mutual_friends"
          },
          {
            "displayName": "Social context edge providing a list of the liked Pages that the session user and the request user have in common",
            "style": "query",
            "type": "Edge",
            "name": "/mutual_likes"
          },
          {
            "displayName": "Information about the person's cover photo",
            "style": "query",
            "type": "CoverPhoto",
            "name": "cover"
          },
          {
            "displayName": "ID of the Photo that represents this cover photo",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "URL to the Photo that represents this cover photo",
            "style": "query",
            "type": "string",
            "name": "source"
          },
          {
            "displayName": "The vertical offset in pixels of the photo from the bottom",
            "style": "query",
            "type": "integer",
            "name": "offset_y"
          },
          {
            "displayName": "This person's local currency information",
            "style": "query",
            "type": "object",
            "name": "currency"
          },
          {
            "displayName": "The ISO-4217-3 code for the person's preferred currency (defaulting to USD if the person hasn't set one)",
            "style": "query",
            "type": "string",
            "name": "user_currency"
          },
          {
            "displayName": "Deprecated - Ignore The exchange rate between US Dollars and Facebook Credits",
            "style": "query",
            "type": "float",
            "name": "currency_exchange"
          },
          {
            "displayName": "Deprecated - Ignore The inverse of currency_exchange",
            "style": "query",
            "type": "float",
            "name": "currency_exchange_inverse"
          },
          {
            "displayName": "The exchange rate between the person's preferred currency and US Dollars",
            "style": "query",
            "type": "float",
            "name": "usd_exchange"
          },
          {
            "displayName": "The inverse of currency_exchange",
            "style": "query",
            "type": "float",
            "name": "usd_exchange_inverse"
          },
          {
            "displayName": "The person's local currency decimal places to display, i.e for USD $1.00 it will return 100 and for JPY ¥100 it will return 1",
            "style": "query",
            "type": "integer",
            "name": "currency_offset"
          },
          {
            "displayName": "The list of devices this person is using. This will return only iOS and Android devices",
            "style": "query",
            "type": "object",
            "name": "devices"
          },
          {
            "displayName": "The name of a device being used",
            "style": "query",
            "type": "string",
            "name": "hardware"
          },
          {
            "displayName": "The name of the OS installed on that device",
            "style": "query",
            "type": "string",
            "name": "os"
          },
          {
            "displayName": "The sections of a person's education history",
            "style": "query",
            "type": "object",
            "name": "education"
          },
          {
            "displayName": "This person's primary email address listed on their profile. This field will not be returned if no valid email address is available",
            "style": "query",
            "type": "string",
            "name": "email"
          },
          {
            "displayName": "Facebook Pages representing athletes listed under the Likes section of this person's profile",
            "style": "query",
            "type": "Page",
            "name": "favorite_athletes"
          },
          {
            "displayName": "Facebook Pages representing sports teams listed under the Likes section of this person's profile",
            "style": "query",
            "type": "Page",
            "name": "favorite_teams"
          },
          {
            "displayName": "The person's first name",
            "style": "query",
            "type": "string",
            "name": "first_name"
          },
          {
            "displayName": "The gender pronoun selected by this person. This is omitted if that pronoun is a custom value",
            "style": "query",
            "type": "string",
            "name": "gender"
          },
          {
            "displayName": "The person's hometown",
            "style": "query",
            "type": "Page",
            "name": "hometown"
          },
          {
            "displayName": "Facebook Pages representing inspirational people listed under the Likes section of this person's profile",
            "style": "query",
            "type": "Page",
            "name": "inspirational_people"
          },
          {
            "displayName": "Is the app making the request installed?",
            "style": "query",
            "type": "boolean",
            "name": "installed"
          },
          {
            "displayName": "People with large numbers of followers can have the authenticity of their identity manually verified by Facebook. This field indicates whether the user profile is verified in this way.",
            "style": "query",
            "type": "boolean",
            "name": "is_verified"
          },
          {
            "displayName": "Facebook Pages representing the languages this person knows",
            "style": "query",
            "type": "Page",
            "name": "languages"
          },
          {
            "displayName": "The person's last name",
            "style": "query",
            "type": "string",
            "name": "last_name"
          },
          {
            "displayName": "A link to the person's profile",
            "style": "query",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "The person's locale",
            "style": "query",
            "type": "string",
            "name": "locale"
          },
          {
            "displayName": "The person's current location as entered by them on their profile. This is not a check in field",
            "style": "query",
            "type": "Page",
            "name": "location"
          },
          {
            "displayName": "The person's middle name",
            "style": "query",
            "type": "string",
            "name": "middle_name"
          },
          {
            "displayName": "The person's full name",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "The person's name formatted to correctly handle Chinese, Japanese, Korean ordering",
            "style": "query",
            "type": "string",
            "name": "name_format"
          },
          {
            "displayName": "The person's political views",
            "style": "query",
            "type": "string",
            "name": "political"
          },
          {
            "displayName": "The person's favorite quotes",
            "style": "query",
            "type": "string",
            "name": "quotes"
          },
          {
            "displayName": "The person's relationship status",
            "style": "query",
            "type": "string",
            "name": "relationship_status"
          },
          {
            "displayName": "The person's religion",
            "style": "query",
            "type": "string",
            "name": "religion"
          },
          {
            "displayName": "The person's significant other",
            "style": "query",
            "type": "User",
            "name": "significant_other"
          },
          {
            "displayName": "The user's current timezone offset from UTC",
            "style": "query",
            "type": "integer",
            "name": "timezone"
          },
          {
            "displayName": "A string containing an anonymous, but unique identifier for this person. You can use this identifier with third-parties",
            "style": "query",
            "type": "string",
            "name": "third_party_id"
          },
          {
            "displayName": "Indicates whether the user account has been verified. This is distinct from the is_verified field. ",
            "style": "query",
            "type": "boolean",
            "name": "verified"
          },
          {
            "displayName": "The person's website",
            "style": "query",
            "type": "string",
            "name": "website"
          },
          {
            "displayName": "The periods of a person's employment history",
            "style": "query",
            "type": "object",
            "name": "work"
          },
          {
            "displayName": "The Facebook Page that represents the employer in this period",
            "style": "query",
            "type": "Page",
            "name": "employer"
          },
          {
            "displayName": "The Facebook Page representing the location of this employment",
            "style": "query",
            "type": "Page",
            "name": "location"
          },
          {
            "displayName": "The Facebook Page that represents the position that was held",
            "style": "query",
            "type": "Page",
            "name": "position"
          },
          {
            "displayName": "When the employment period started",
            "style": "query",
            "type": "datetime",
            "name": "start_date"
          },
          {
            "displayName": "When the employment period ended. Not returned if employment is still current",
            "style": "query",
            "type": "datetime",
            "name": "end_date"
          },
          {
            "displayName": "Each of the projects this person was involved in during this employment period. Each project is presented by a Facebook Page with additional fields shown below.",
            "style": "query",
            "type": "object",
            "name": "projects"
          },
          {
            "displayName": "A list of people involved with this project",
            "style": "query",
            "type": "User",
            "name": "with"
          },
          {
            "displayName": "The description given to this project",
            "style": "query",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "When the project started",
            "style": "query",
            "type": "datetime",
            "name": "start_date"
          },
          {
            "displayName": "When the project ended. Not returned if project is still ongoing.",
            "style": "query",
            "type": "datetime",
            "name": "end_date"
          },
          {
            "name": ":url",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/?id=:url"
      },
      {
        "path": "/:user-id",
        "displayName": "GET A user represents a person on Facebook. The /:user-id node returns a single user",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The id of this person's user account. This ID is unique to each app and cannot be used across different apps. Our upgrade guide provides more info about this.",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The 'about me' section of this person's profile",
            "style": "query",
            "type": "string",
            "name": "about"
          },
          {
            "displayName": "Unspecific age range that this person's age fits into",
            "style": "query",
            "type": "object",
            "name": "age_range"
          },
          {
            "displayName": "The lower bounds of the range for this person's age",
            "style": "query",
            "type": "enum",
            "name": "min"
          },
          {
            "displayName": "The upper bounds of the range for this person's age",
            "style": "query",
            "type": "enum",
            "name": "max"
          },
          {
            "displayName": "The person's bio",
            "style": "query",
            "type": "string",
            "name": "bio"
          },
          {
            "displayName": "This person's birthday in the format MM/DD/YYYY",
            "style": "query",
            "type": "string",
            "name": "birthday"
          },
          {
            "displayName": "Provides access to the social context edges shown",
            "style": "query",
            "type": "object",
            "name": "context"
          },
          {
            "displayName": "Social context edge providing a list of Facebook friends that the session user and the request user have in common",
            "style": "query",
            "type": "Edge",
            "name": "/mutual_friends"
          },
          {
            "displayName": "Social context edge providing a list of the liked Pages that the session user and the request user have in common",
            "style": "query",
            "type": "Edge",
            "name": "/mutual_likes"
          },
          {
            "displayName": "Information about the person's cover photo",
            "style": "query",
            "type": "CoverPhoto",
            "name": "cover"
          },
          {
            "displayName": "ID of the Photo that represents this cover photo",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "URL to the Photo that represents this cover photo",
            "style": "query",
            "type": "string",
            "name": "source"
          },
          {
            "displayName": "The vertical offset in pixels of the photo from the bottom",
            "style": "query",
            "type": "integer",
            "name": "offset_y"
          },
          {
            "displayName": "This person's local currency information",
            "style": "query",
            "type": "object",
            "name": "currency"
          },
          {
            "displayName": "The ISO-4217-3 code for the person's preferred currency (defaulting to USD if the person hasn't set one)",
            "style": "query",
            "type": "string",
            "name": "user_currency"
          },
          {
            "displayName": "Deprecated - Ignore The exchange rate between US Dollars and Facebook Credits",
            "style": "query",
            "type": "float",
            "name": "currency_exchange"
          },
          {
            "displayName": "Deprecated - Ignore The inverse of currency_exchange",
            "style": "query",
            "type": "float",
            "name": "currency_exchange_inverse"
          },
          {
            "displayName": "The exchange rate between the person's preferred currency and US Dollars",
            "style": "query",
            "type": "float",
            "name": "usd_exchange"
          },
          {
            "displayName": "The inverse of currency_exchange",
            "style": "query",
            "type": "float",
            "name": "usd_exchange_inverse"
          },
          {
            "displayName": "The person's local currency decimal places to display, i.e for USD $1.00 it will return 100 and for JPY ¥100 it will return 1",
            "style": "query",
            "type": "integer",
            "name": "currency_offset"
          },
          {
            "displayName": "The list of devices this person is using. This will return only iOS and Android devices",
            "style": "query",
            "type": "object",
            "name": "devices"
          },
          {
            "displayName": "The name of a device being used",
            "style": "query",
            "type": "string",
            "name": "hardware"
          },
          {
            "displayName": "The name of the OS installed on that device",
            "style": "query",
            "type": "string",
            "name": "os"
          },
          {
            "displayName": "The sections of a person's education history",
            "style": "query",
            "type": "object",
            "name": "education"
          },
          {
            "displayName": "This person's primary email address listed on their profile. This field will not be returned if no valid email address is available",
            "style": "query",
            "type": "string",
            "name": "email"
          },
          {
            "displayName": "Facebook Pages representing athletes listed under the Likes section of this person's profile",
            "style": "query",
            "type": "Page",
            "name": "favorite_athletes"
          },
          {
            "displayName": "Facebook Pages representing sports teams listed under the Likes section of this person's profile",
            "style": "query",
            "type": "Page",
            "name": "favorite_teams"
          },
          {
            "displayName": "The person's first name",
            "style": "query",
            "type": "string",
            "name": "first_name"
          },
          {
            "displayName": "The gender pronoun selected by this person. This is omitted if that pronoun is a custom value",
            "style": "query",
            "type": "string",
            "name": "gender"
          },
          {
            "displayName": "The person's hometown",
            "style": "query",
            "type": "Page",
            "name": "hometown"
          },
          {
            "displayName": "Facebook Pages representing inspirational people listed under the Likes section of this person's profile",
            "style": "query",
            "type": "Page",
            "name": "inspirational_people"
          },
          {
            "displayName": "Is the app making the request installed?",
            "style": "query",
            "type": "boolean",
            "name": "installed"
          },
          {
            "displayName": "People with large numbers of followers can have the authenticity of their identity manually verified by Facebook. This field indicates whether the user profile is verified in this way.",
            "style": "query",
            "type": "boolean",
            "name": "is_verified"
          },
          {
            "displayName": "Facebook Pages representing the languages this person knows",
            "style": "query",
            "type": "Page",
            "name": "languages"
          },
          {
            "displayName": "The person's last name",
            "style": "query",
            "type": "string",
            "name": "last_name"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id"
      },
      {
        "path": "/:user-id/accounts",
        "displayName": "GET The Facebook pages of which the current user is an admin",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/accounts"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "A Page access token that allows API calls on behalf of the page",
            "style": "query",
            "type": "string",
            "name": "access_token"
          },
          {
            "displayName": "An array of permissions that indicate the person's role with the Page, and therefore, what they are able to do with it.",
            "style": "query",
            "type": "string",
            "name": "perms"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/accounts"
      },
      {
        "path": "/:user-id/achievements",
        "displayName": "Get The games achievements that the user has received",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/achievements"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/achievements"
      },
      {
        "path": "/:user-id/achievements",
        "displayName": "GET The games achievements that the user has received",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/achievements"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/achievements"
      },
      {
        "path": "/:user-id/achievements",
        "displayName": "Post The games achievements that the user has received",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/achievements"
        },
        "httpMethod": "post",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The unique URL of the type of achievement that the person will receive",
            "style": "body",
            "type": "string",
            "name": "achievement",
            "required": true
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/achievements"
      },
      {
        "path": "/:user-id/achievements",
        "displayName": "delete The games achievements that the user has received",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/achievements"
        },
        "httpMethod": "delete",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The unique URL of the type of achievement you want to delete",
            "style": "query",
            "type": "string",
            "name": "achievement",
            "required": true
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/achievements"
      },
      {
        "path": "/:user-id/activities",
        "displayName": "/file/app/:app_id/",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/activities"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "A timestamp indicating when the interest was added to the person's profile",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/activities"
      },
      {
        "path": "/:user-id/albums",
        "displayName": "GET The photo albums this person has created",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/albums"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/albums"
      },
      {
        "path": "/:user-id/albums",
        "displayName": "Post The photo albums this person has created",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/albums"
        },
        "httpMethod": "Post",
        "curl": "curl -X",
        "params": [
          {
            "path": "The name given to the album",
            "style": "body",
            "type": "string",
            "name": "name",
            "required": true
          },
          {
            "path": "The description of the album, which will show up in news feed stories as the status message",
            "style": "body",
            "type": "string",
            "name": "message"
          },
          {
            "path": "Privacy settings for the album. If not supplied, this defaults to the privacy level granted to the app in the Login Dialog. This field cannot be used to set a more open privacy setting than the one granted.",
            "style": "body",
            "type": "object",
            "name": "privacy"
          },
          {
            "path": "The value of the privacy setting",
            "style": "body",
            "type": "enum",
            "name": "value"
          },
          {
            "path": "When value is CUSTOM, this is a comma-separated list of user IDs and friend list IDs that can see the post. This can also be ALL_FRIENDS or FRIENDS_OF_FRIENDS to include all members of those sets.",
            "style": "body",
            "type": "string",
            "name": "allow"
          },
          {
            "path": "When value is CUSTOM, this is a comma-separated list of user IDs and friend list IDs that cannot see the post",
            "style": "body",
            "type": "string",
            "name": "deny"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/albums"
      },
      {
        "path": "/:user-id/applications/developer",
        "displayName": "GET The Facebook apps that this person is a developer of",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/applications/developer"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/applications/developer"
      },
      {
        "path": "/:user-id/apprequests",
        "displayName": "GET The requests received by this person from the app making the API call",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/apprequests"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/apprequests"
      },
      {
        "path": "/:user-id/apprequests",
        "displayName": "Post The requests received by this person from the app making the API call",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/apprequests"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "A UTF-8 string which describes the request",
            "style": "body",
            "type": "string",
            "name": "message",
            "required": true
          },
          {
            "displayName": "Additional data a developer may pass for tracking. This will be stored as part of the request objects created. The maximum length is 255 characters.",
            "style": "body",
            "type": "string",
            "name": "data"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/apprequests"
      },
      {
        "path": "/:user-id/books",
        "displayName": "GET The liked books listed on someone's profile under Books > Likes",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/books"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "A timestamp indicating when the book was added to the person's profile.",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/books"
      },
      {
        "path": "/:user-id/events",
        "displayName": "GET The /:user-id/events edge returns the events this person is attending",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/events"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/events"
      },
      {
        "path": "/:user-id/family",
        "displayName": "GET This person's family relationships",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/family"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The text description of the relationship between the current user and this person",
            "style": "query",
            "type": "string",
            "name": "relationship"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/family"
      },
      {
        "path": "/:user-id/feed",
        "displayName": "GET The feed of posts (including status updates) and links published by this person, or by others on this person's profile",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/feed"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "Restrict the list of posts to only those with location attached",
            "style": "query",
            "type": "enum",
            "name": "with"
          },
          {
            "displayName": "Retrieve only posts that match a particular stream filter",
            "style": "query",
            "type": "string",
            "name": "filter"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/feed"
      },
      {
        "path": "/:user-id/feed",
        "displayName": "GET The feed of posts (including status updates) and links published by this person, or by others on this person's profile",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/feed"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The main body of the post, otherwise called the status message. Either link, place, or message must be supplied.",
            "style": "body",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "The URL of a link to attach to the post. Either link, place, or message must be supplied. Additional fields associated with link are shown below.",
            "style": "body",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "Determines the preview image associated with the link",
            "style": "body",
            "type": "string",
            "name": "picture"
          },
          {
            "displayName": "Overwrites the title of the link preview",
            "style": "body",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "Overwrites the caption under the title in the link preview",
            "style": "body",
            "type": "string",
            "name": "caption"
          },
          {
            "displayName": "Overwrites the description in the link preview",
            "style": "body",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "The action links attached to the post. Action links are any other links shown below the feed story beside Like and Comment.",
            "style": "body",
            "type": "object",
            "name": "actions"
          },
          {
            "displayName": "The name or label of the action link",
            "style": "body",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "The URL of the action link itself",
            "style": "body",
            "type": "string",
            "name": "link"
          },
          {
            "displayName": "Page ID of a location associated with this post. Either link, place, or message must be supplied.",
            "style": "body",
            "type": "string",
            "name": "place"
          },
          {
            "displayName": "Comma-separated list of user IDs of people tagged in this post. You cannot specify this field without also specifying a place.",
            "style": "body",
            "type": "cvs",
            "name": "tags"
          },
          {
            "displayName": "Determines the privacy settings of the post. If not supplied, this defaults to the privacy level granted to the app in the Login Dialog. This field cannot be used to set a more open privacy setting than the one granted.",
            "style": "body",
            "type": "object",
            "name": "privacy"
          },
          {
            "displayName": "The value of the privacy setting",
            "style": "body",
            "type": "enum",
            "name": "value"
          },
          {
            "displayName": "When value is CUSTOM, this is a comma-separated list of user IDs and friend list IDs that can see the post. This can also be ALL_FRIENDS or FRIENDS_OF_FRIENDS to include all members of those sets.",
            "style": "body",
            "type": "string",
            "name": "allow"
          },
          {
            "displayName": "When value is CUSTOM, this is a comma-separated list of user IDs and friend list IDs that cannot see the post.",
            "style": "body",
            "type": "string",
            "name": "deny"
          },
          {
            "displayName": "Facebook ID for an existing picture in the person's photo albums to use as the thumbnail image. They must be the owner of the photo, and the photo cannot be part of a message attachment.",
            "style": "body",
            "type": "string",
            "name": "object_attachment"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/feed"
      },
      {
        "path": "/:user-id/friendlists",
        "displayName": "A person's 'friend lists' - these are groupings of friends such as (Acquaintances) or (Close Friends), or any others that may have been created. They do not refer to the list of friends that a person has, which is accessed instead through the /:user-id/friends edge",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/friendlists"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/friendlists"
      },
      {
        "path": "/:user-id/friends",
        "displayName": "GET A person's friends",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/friends"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "An object containing summary info about this edge",
            "style": "query",
            "type": "object",
            "name": "summary"
          },
          {
            "displayName": "The total number of friends that this person has on Facebook",
            "style": "query",
            "type": "integer",
            "name": "total_count"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/friends"
      },
      {
        "path": "/:user-id/games",
        "displayName": "GET The list of games someone has added to the Games > Likes section of their Facebook profile",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/games"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/games"
      },
      {
        "path": "/:user-id/groups",
        "displayName": "GET The Facebook groups that a person is a member of",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/groups"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "Shown if this person is an admin of the group",
            "style": "query",
            "type": "boolean",
            "name": "administrator"
          },
          {
            "displayName": "This group's place in the list of bookmarks on this person's Facebook homepage",
            "style": "query",
            "type": "integer",
            "name": "bookmark_order"
          },
          {
            "displayName": "A count of the number of unread posts in that group",
            "style": "query",
            "type": "integer",
            "name": "unread"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/groups"
      },
      {
        "path": "/:user-id/home",
        "displayName": "GET The posts that a person sees in their Facebook News Feed",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/home"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "Use location to retrieve only posts with a location attached",
            "style": "query",
            "type": "enum",
            "name": "with"
          },
          {
            "displayName": "Retrieve only posts that match a particular stream filter. Valid filters to be used here can be retrieved using the FQL stream_filter table.",
            "style": "query",
            "type": "string",
            "name": "filter"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/home"
      },
      {
        "path": "/:user-id/ids_for_business",
        "displayName": "If you're a business that has more than one app and you want to do cross-app promotions, you can use this endpoint to map user IDs from one app to another. This edge returns the list of IDs that this user has in any of those other apps.",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/ids_for_business"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The ID that identifies the request user in this particular app",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The app to which the ID is scoped",
            "style": "query",
            "type": "App",
            "name": "app"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/ids_for_business"
      },
      {
        "path": "/:user-id/inbox",
        "displayName": "GET A person's Facebook Messages inbox",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/inbox"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/inbox"
      },
      {
        "path": "/:user-id/interests",
        "displayName": "GET The interests listed on someone's profile under Likes > Interests",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/interests"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "A timestamp indicating when the interest was added to the person's profile.",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/interests"
      },
      {
        "path": "/:user-id/invitable_friends",
        "displayName": "GET A list of friends that can be invited to install a Facebook game",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/invitable_friends"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "An invite token which can be passed to the Request Dialog in order to invite this friend to the Game, and for no other purpose. This ID should not be stored more than 24 hours as it is likely to change often and cannot be used to identify the friend otherwise.",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The friend's full name",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "The friend's profile picture",
            "style": "query",
            "type": "object",
            "name": "picture"
          },
          {
            "displayName": "Indicates whether the profile photo is the default 'silhouette' picture, or has been replaced",
            "style": "query",
            "type": "boolean",
            "name": "is_silhouette"
          },
          {
            "displayName": "The URL of the profile photo",
            "style": "query",
            "type": "string",
            "name": "url"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/invitable_friends"
      },
      {
        "path": "/:user-id/likes",
        "displayName": "GET The Facebook Pages that this person has 'liked",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/likes"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "A timestamp indicating when the page was liked by this person",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/likes"
      },
      {
        "path": "/:user-id/movies",
        "displayName": "GET The liked movies listed on someone's profile under Movies > Likes.",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/movies"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "A timestamp indicating when the movie was added to the person's profile.",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/movies"
      },
      {
        "path": "/:user-id/music",
        "displayName": "GET The liked music artists listed on someone's profile under Music > Likes.",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/music"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "A timestamp indicating when the liked object was added to the person's profile",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/music"
      },
      {
        "path": "/:user-id/notifications",
        "displayName": "GET The unread Facebook notifications that a person has",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/notifications"
        },
        "httpMethod": "GET",
        "curl": "curl -X ",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/notifications"
      },
      {
        "path": "/:user-id/notifications",
        "displayName": "Post The unread Facebook notifications that a person has",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/notifications"
        },
        "httpMethod": "POST",
        "curl": "curl -X ",
        "params": [
          {
            "displayName": "The relative path that someone clicking on the notification will be directed to. This is will be appended to the app's canvas URL.",
            "style": "body",
            "type": "string",
            "name": "href"
          },
          {
            "displayName": "The message text of the notification. This can be formatted according to special text templating. Maximum of 180 characters.",
            "style": "body",
            "type": "string",
            "name": "template"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/notifications"
      },
      {
        "path": "/:user-id/outbox",
        "displayName": "GET A person's Facebook Messages outbox",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/outbox"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/outbox"
      },
      {
        "path": "/:user-id/payment_transactions",
        "displayName": "GET The Facebook Payments orders this person placed with an app",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/payment_transactions"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/payment_transactions"
      },
      {
        "path": "/:user-id/permissions",
        "displayName": "GET The permissions that the app has requested from the user, and whether they were granted or declined.",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/permissions"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The name of the permission",
            "style": "query",
            "type": "string",
            "name": "permission"
          },
          {
            "displayName": "Indicates whether the permission is granted, or if it was declined by the user",
            "style": "query",
            "type": "enum",
            "name": "status"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/permissions"
      },
      {
        "path": "/:user-id/permissions",
        "displayName": "There are two things you can do with deleting on this edge. The first is to remove a particular permission and therefore the apps ability to use it",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/permissions"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/permissions"
      },
      {
        "path": "/:user-id/photos",
        "displayName": "shows all photos this person is tagged in",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/photos"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/photos"
      },
      {
        "path": "/:user-id/photos",
        "displayName": "Capture a photo via file upload as multipart/form-data then use the source parameter",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/photos"
        },
        "httpMethod": "Post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The photo, encoded as form data. Either this or url field is required, but both should not be used together",
            "style": "body",
            "type": "multipart/form-data",
            "name": "source"
          },
          {
            "displayName": "The URL of a photo that is already uploaded to the internet. Either this or source is required, but both should not be used together",
            "style": "body",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "The description of the photo, used as the accompanying status message in any feed story.",
            "style": "body",
            "type": "string",
            "name": "message"
          },
          {
            "displayName": "Page ID of a place associated with the Photo",
            "style": "body",
            "type": "string",
            "name": "place"
          },
          {
            "displayName": "If set to true, this will suppress the feed story that is automatically generated on a person's profile when they upload a photo using your app.",
            "style": "body",
            "type": "boolean",
            "name": "no_story"
          },
          {
            "displayName": "Determines the privacy settings of the photo. If not supplied, this defaults to the privacy level granted to the app in the Login Dialog. This field cannot be used to set a more open privacy setting than the one granted.",
            "style": "body",
            "type": "object",
            "name": "privacy"
          },
          {
            "displayName": "The value of the privacy setting",
            "style": "body",
            "type": "enum",
            "name": "value"
          },
          {
            "displayName": "When value is CUSTOM, this is a comma-separated list of user IDs and friend list IDs that can see the photo. This can also be ALL_FRIENDS or FRIENDS_OF_FRIENDS to include all members of those sets.",
            "style": "body",
            "type": "string",
            "name": "allow"
          },
          {
            "displayName": "When value is CUSTOM, this is a comma-separated list of user IDs and friend list IDs that cannot see the photo.",
            "style": "body",
            "type": "string",
            "name": "deny"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/photos"
      },
      {
        "path": "/:user-id/picture",
        "displayName": "GET This person's profile picture",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/picture"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The picture edge is a special case, as when requested, it will by default return the picture itself and not a JSON response. To return a JSON response, you need to set redirect=false as a request attribute. This is how to return the fields below.",
            "style": "query",
            "type": "boolean",
            "name": "redirect"
          },
          {
            "displayName": "You use this to get a pre-specified size of picture",
            "style": "query",
            "type": "enum",
            "name": "type"
          },
          {
            "displayName": "Restrict the picture height to this size in pixels",
            "style": "query",
            "type": "integer",
            "name": "height"
          },
          {
            "displayName": "Restrict the picture width to this size in pixels. When height and width are both used, the image will be scaled as close to the dimensions as possible and then cropped down.",
            "style": "query",
            "type": "integer",
            "name": "width"
          },
          {
            "displayName": "The URL of the profile photo",
            "style": "query",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "Indicates whether the profile photo is the default 'silhouette' picture, or has been replaced.",
            "style": "query",
            "type": "boolean",
            "name": "is_silhouette"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/picture"
      },
      {
        "path": "/:user-id/pokes",
        "displayName": "GET The Facebook Pokes that a person has received and hasn't responded to.",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/pokes"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The person who sent the poke",
            "style": "query",
            "type": "User",
            "name": "from"
          },
          {
            "displayName": "The person who received the poke - this is always the person whose access token is being used.",
            "style": "query",
            "type": "string",
            "name": "to"
          },
          {
            "displayName": "When the poke was sent",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/pokes"
      },
      {
        "path": "/:user-id/scores",
        "displayName": "GET The scores this person has received from Facebook Games that they've played.",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/scores"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The person associated with the scores",
            "style": "query",
            "type": "User",
            "name": "user"
          },
          {
            "displayName": "The actual score",
            "style": "query",
            "type": "integer",
            "name": "score"
          },
          {
            "displayName": "The app in which the score was achieved",
            "style": "query",
            "type": "App",
            "name": "application"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/scores"
      },
      {
        "path": "/:user-id/scores",
        "displayName": "Post The scores this person has received from Facebook Games that they've played",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/scores"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The score that you want to set for this person",
            "style": "body",
            "type": "integer",
            "name": "score"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/scores"
      },
      {
        "path": "/:user-id/scores",
        "displayName": "You can delete the score this person has received from your app only",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/scores"
        },
        "httpMethod": "delete",
        "curl": "curl -X",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/scores"
      },
      {
        "path": "/:user-id/taggable_friends",
        "displayName": "GET A list of friends that can be tagged or mentioned in stories published to Facebook",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/taggable_friends"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "A tagging token which can only be used in order to tag this friend, and for no other purpose. This token should not be considered a stable ID, and cannot be used to identify the friend outside the context of tagging them in stories.",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The friend's name",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "The friend's profile photo",
            "style": "query",
            "type": "object",
            "name": "picture"
          },
          {
            "displayName": "The URL of the profile photo",
            "style": "query",
            "type": "string",
            "name": "url"
          },
          {
            "displayName": "Indicates whether the profile photo is the default 'silhouette' picture, or has been replaced.",
            "style": "query",
            "type": "boolean",
            "name": "is_silhouette"
          },
          {
            "displayName": "Picture height in pixels. height and width are only returned when specified as modifiers.",
            "style": "query",
            "type": "integer",
            "name": "height"
          },
          {
            "displayName": "Picture width in pixels",
            "style": "query",
            "type": "integer",
            "name": "width"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/taggable_friends"
      },
      {
        "path": "/:user-id/tagged_places",
        "displayName": "GET A list of tags of this person at a place in a photo, video, post, status or link",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/tagged_places"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/tagged_places"
      },
      {
        "path": "/:user-id/television",
        "displayName": "GET The liked TV shows listed on someone's profile under TV Shows > Likes",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/television"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "A timestamp indicating when the TV show was added to the person's profile",
            "style": "body",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/television"
      },
      {
        "path": "/:user-id/videos",
        "displayName": "shows all videos this person is tagged in.",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/videos"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/videos"
      },
      {
        "path": "/:user-id/videos",
        "displayName": "Post shows all videos this person is tagged in",
        "doc": {
          "url": "https://graph.facebook.com/{user-id}/videos"
        },
        "httpMethod": "post",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The video, encoded as form data",
            "style": "body",
            "type": "multipart/form-data",
            "name": "source",
            "required": true
          },
          {
            "displayName": "The description of the video, used as the accompanying status message in any feed story",
            "style": "body",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "The title of the video",
            "style": "body",
            "type": "string",
            "name": "Title"
          },
          {
            "displayName": "Binary image file of thumbnail to be used when the video is stopped",
            "style": "body",
            "type": "string",
            "name": "thumb"
          },
          {
            "displayName": "Determines the privacy settings of the video. If not supplied, this defaults to the privacy level granted to the app in the Login Dialog. This field cannot be used to set a more open privacy setting than the one granted.",
            "style": "body",
            "type": "object",
            "name": "privacy"
          },
          {
            "displayName": "The value of the privacy setting",
            "style": "body",
            "type": "enum",
            "name": "value"
          },
          {
            "displayName": "When value is CUSTOM, this is a comma-separated list of user IDs and friend list IDs that can see the video. This can also be ALL_FRIENDS or FRIENDS_OF_FRIENDS to include all members of those sets.",
            "style": "body",
            "type": "string",
            "name": "allow"
          },
          {
            "displayName": "When value is CUSTOM, this is a comma-separated list of user IDs and friend list IDs that cannot see the video.",
            "style": "body",
            "type": "string",
            "name": "deny"
          },
          {
            "name": ":user-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:user-id/videos"
      },
      {
        "path": "/:video-id",
        "displayName": "GET An individual video on Facebook",
        "doc": {
          "url": "https://graph.facebook.com/{video-id}"
        },
        "httpMethod": "GET",
        "curl": "curl -X",
        "params": [
          {
            "displayName": "The video ID",
            "style": "query",
            "type": "string",
            "name": "id"
          },
          {
            "displayName": "The time the video was initially published",
            "style": "query",
            "type": "datetime",
            "name": "created_time"
          },
          {
            "displayName": "The description of the video",
            "style": "query",
            "type": "string",
            "name": "description"
          },
          {
            "displayName": "The HTML element that may be embedded in a Web page to play the video.",
            "style": "query",
            "type": "string",
            "name": "embed_html"
          },
          {
            "displayName": "The different formats of the video",
            "style": "query",
            "type": "list<VideoFormat>",
            "name": "format"
          },
          {
            "displayName": "HTML to embed the video in this format",
            "style": "query",
            "type": "string",
            "name": "embed_html"
          },
          {
            "displayName": "The filter applied to this video format",
            "style": "query",
            "type": "string",
            "name": "filter"
          },
          {
            "displayName": "The height of the video in this format",
            "style": "query",
            "type": "integer",
            "name": "height"
          },
          {
            "displayName": "The thumbnail for the video in this format",
            "style": "query",
            "type": "string",
            "name": "picture"
          },
          {
            "displayName": "The width of the video in this format",
            "style": "query",
            "type": "integer",
            "name": "width"
          },
          {
            "displayName": "The profile that created the video",
            "style": "query",
            "type": "Profile",
            "name": "from"
          },
          {
            "displayName": "The icon that Facebook displays when videos are published to the feed.",
            "style": "query",
            "type": "string",
            "name": "icon"
          },
          {
            "displayName": "The video title or caption",
            "style": "query",
            "type": "string",
            "name": "name"
          },
          {
            "displayName": "The URL for the thumbnail picture of the video",
            "style": "query",
            "type": "string",
            "name": "picture"
          },
          {
            "displayName": "A URL to the raw, playable video file",
            "style": "query",
            "type": "string",
            "name": "source"
          },
          {
            "displayName": "The last time the video or its caption was updated",
            "style": "query",
            "type": "datetime",
            "name": "updated_time"
          },
          {
            "name": ":video-id",
            "style": "url",
            "type": "string",
            "value": "",
            "required": true
          }
        ],
        "url": "https://graph.facebook.com/:video-id"
      }
    ]
  }
}